{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ba7bc29b-8b1a-46b8-88d0-bba4a6661afb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7c8781d5-df6d-463e-ac84-21713b9428e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11671b25-f24c-4c6e-856c-2753faaf8f94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93a0d35d-4c84-4034-b93d-55e1cbcf8a7a"
                }
              }
            ]
          },
          {
            "id": "848c57ca-4a72-4386-bb74-a9f3ca0f33aa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "270cf7c2-1c24-41f6-91df-393ca3ed040d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "640c4a93-e5f0-49b8-84e4-41a4d254b2f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "10887e59-0755-468e-92fe-8a3efac949d5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "caa82fd1-545f-4aff-b2b9-66c017fc290e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82f28e92-755f-411a-a9fa-2f3c8f075941",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "983ac092-1827-400a-9163-73b34116fc97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85dcb750-3ba6-440d-912a-c72ee6e02f8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8525c093-c3ec-416b-9fe2-9f1d3a9fe6cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96a1fb5c-ff6d-42d4-b576-a2ea7f99cbc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c031ac1a-f6da-44c8-8cfd-d30a760f533c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfc849c5-4a5e-4738-9681-145e62fc2e69"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63763c7-07ee-4a26-b5b4-d38937355e48",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "21c6915c-fe96-44e1-901a-a919c67e7c7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54508da2-c3b6-4a22-8656-a07defdaf04c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc2e0f11-b2fb-4396-8250-c529b1c74b37"
            }
          }
        ]
      },
      {
        "id": "9ff5cf55-eeaf-4a6a-8f64-737892a27a00",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7bf0b963-9648-4579-ab5f-9a8b41a23265",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8254712-94ba-4d82-8d57-7eab2bef8b4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1766099d-c0e3-4dd2-a936-ed72592dc4ca",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd3516-0fe0-4512-a958-bd4d4d126743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a0697b1-c327-4f60-b09d-83254fe8bac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6c11f5-b1fd-4c49-9082-c6eb43954fe6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896ca50a-830e-4efd-90b9-39c50ad0a7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b68be7d-66ae-41e8-86e7-4c2a0866db3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb38b334-46f3-4bac-aee8-6f562b26529d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7876e7e-94e3-42de-9091-ab05e919111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97734824-204d-4089-ad92-c7285010fb82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72de6a3e-1b06-417b-973e-e680d5945322",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f818021f-c8d1-466c-a1fc-3b6faf5e3360",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71006e6a-c96c-4ef5-b562-856ef438a402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6099556-758d-4b75-bb7a-48a3a7fd5bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7a5f28-0127-4f7c-88f8-8901f11fdf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ce4e11-8ce4-492c-ad2d-e5f2b203c429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694fc164-99a0-40af-ab14-28ae70bb5634",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d4d74-3853-4575-9817-0def15e9ceb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28a0316f-c962-4e7e-a82b-4b1ddba18d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a71a3f5-2860-4a5c-ad68-e5a655cdd945",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8f4938ad-407e-4413-8428-b16629673257"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad484e5f-1c87-4ff1-8a18-57a33bf68c18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a28072f5-5111-450b-aa09-cea1e07fbacf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b6e49db-682e-4304-ad70-d329c7cbb291",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "459dbf67-f3ba-4584-9cd7-e9cb32324b0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7660fdf-b540-4083-8608-8e1136ba8287",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8b3b3b19-662e-4d6c-b3d8-57825166b989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69a79a79-d104-49cf-bcc9-3ffbf65a34a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8480774-80f4-43e4-a4f1-f95d9f0c150b"
            }
          }
        ]
      },
      {
        "id": "5ed72bd0-112e-4b6c-805b-f9c278e9451a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd4264be-c5b0-4eb9-9388-6a729071748d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80982990-2d50-49a1-a4b0-ce1a944467ac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce1adef4-699f-4a76-8a35-641a3c703b44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562ce0bb-76c7-483a-8397-87ecbb589fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d23d7eb-6d4e-447c-bbac-d797c0104baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e2484-1c59-45a4-9a12-7833849ec379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f203cf-1e76-4103-bcde-cd10a58f4d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002e3236-bba8-4916-85d1-ae5c2fec0e76",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06446a7-202c-4541-9143-99f8a2e1bf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fb95bb-92f6-4973-bcd0-e883f0ab873a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3689a019-99a1-41c2-9534-4898c2753e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a925d61-83b7-41cb-a462-378772b7922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20e75b3-1b89-4ffa-bbd8-c35627af1528",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a4cdbf-a5b5-4457-9e15-24242d79df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11314148-64a6-44fb-b198-3ec9942c30a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb9489-b68b-4dde-bac1-dda3ccc47b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a311d3a-9ed6-4a56-a8b5-6f378aefce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98828b03-98e6-4e01-8318-a71fbf2fe5ca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b481b5-c0ef-40a0-980d-d306bfed4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b258292-23a4-4d31-ae92-011a7aa2cfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d3ec95-a7bb-494a-b01e-f2bf9fd3a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7d16c14-8be3-4e66-9ab4-794a7f94f4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb1b63-84fb-453a-ae1c-2c2692243a81",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd972e6-4bcd-4f68-b332-dd09210af49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab6eb34-cab9-4bb9-b188-2fa71bee22de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d1198c-8b12-45cf-8196-7a86e893d1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407b0cc9-7579-4ad9-85da-8dd0848ead0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302434f1-360d-4619-adcf-5c93c0456699",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a8feb-3aea-4980-bda4-36173f578f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422e504a-6334-431d-8567-b3e16e264ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c8e9ab-6b62-4ec4-9fe8-de224bd2f10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69a3fe72-5c5e-4a3a-9b57-66ecf924287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcfa78f-df99-4cee-87a3-ecae651770f1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab7187-7462-4e28-a912-e2025fd01ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d20af22-08ca-4cc5-b740-7a95cf5e30e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643fb49-a3e5-41ec-b095-87ea3f23bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ccafdb-f9b6-40bc-ad5f-630dba8d256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b146085a-7b5b-40a9-8b1f-a36efbb21026",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12ceae4-eca8-4f0a-bccc-1d6778b31290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71621434-1a33-472d-8658-42b97b43822b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4a30c8-baf7-495e-bc30-e3cb77d8ac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e78ba12-cfbe-46c4-bd24-bb4af9e2b59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd9cc9f-6782-41e3-b464-7843644d9a95",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a57557-8c24-4a97-8069-1d17bdbcf00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291e27ad-fd17-4a80-b4a6-b251cb37e0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a2a13-466b-45bc-a6c0-9d144e074493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78bb904-d5d1-4b32-88f8-a72d6a0b6b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1e936-eabf-4978-af48-7c64f0c896ff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d195b9-6b7b-41a0-a943-ceba482dd734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d3d5e3-2b28-4edc-8cb8-c44958fdcda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d16caf-a65a-49fb-b1cb-4fbb35a794a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78442438-29b6-47b7-9f04-1057fbac89cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd0fa5-a03e-408a-b053-b38bc19d20b2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea8753-f3da-4e57-af68-3f42531e869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668692f7-1f40-4f16-aacc-08ab6c2ade49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538c385c-5918-4b37-8590-b614d4526672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee19714d-fccf-416a-a4c0-0af581be41de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91063d35-7e67-4c13-b32b-dbb4bede27a3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0290b6b-6935-45cd-994c-d921650184f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bed949-a77c-4747-b3b9-e161d0f48e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e0b4d8-d240-4c05-969a-5d21c545c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed170b4-0b4c-407a-9bd1-2edb6014c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93787822-cefc-4276-a33b-bfc12d46cd06",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991f3296-6325-40e7-b682-d943b4f8d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de059a42-2024-4e16-9e1f-2236ba84e433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac2d54c-9829-4353-b75e-0166a4c69d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb167c5f-3dfc-4f8d-82c5-7668395852d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132b02de-e677-4848-bc64-c043eae873a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386e2ae7-5ee7-40f5-a5b8-a544bcc4c4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cd47a1-120d-42a1-b534-fd3d85a843c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd85d823-353f-4f74-a6b0-fc41ba78bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475002e4-11ea-49d3-94b0-36a75ab98029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c4788-97bb-43ff-a0e4-6f8748ba54f3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7448e9-1f41-4e45-9e39-fcff055d86c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f62c84d-e809-4366-b4a1-ad2898e0ffca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f45917-276b-486b-864c-927b1c72bf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "657c5f21-aaa3-4804-8852-f206432de663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7a7441-af9f-4f2d-a160-6c226ddf8986",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6fff7-4f09-46d4-8955-14d18847961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c23135-d825-467e-bddc-800e334c38bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b57c19c-eee2-4c66-9c31-904a15e089ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08e6d258-e60b-45d5-b488-995d7c980747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a848964-f0a5-4119-be7d-8ec80a6090c6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c02ea6-ae44-4399-8011-478e15102345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d40f936-34bb-43f2-8c68-9333b3062e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0bedc0-af68-4746-a5c7-be377a4061ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c15f738-77a2-4811-8b13-67ed23cade8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1c54d-77f3-4711-9b02-1d7f8fd16281",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268bf208-bf49-4192-9fb0-7fd118b132f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4f1df3-d2a2-4e6e-898d-0c874feccd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3925aec3-9515-4772-a215-0c20fb4e177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad6d720-e3f0-4d33-88e7-cc97504bb37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44c044b-19f7-4ed1-b674-4efebf3a4f8e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba63a16-650b-459b-b7ab-973164706d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c64e27-dcc4-47e1-9b40-9ebd4652a3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea1696f-4b33-4eef-a3ea-99c638ce4750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31064313-7e92-4cb5-98b3-d5ceb107aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b022f-6609-40ae-a696-8353bf36215b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff8b688-900d-4e19-9ecb-e0bb49ef51d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2835d36b-8797-40e2-9cd4-3c974a373ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e896ab-45b7-439d-8ed9-846866a4f884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc1e1ad-ea13-4a7c-9e4e-bd3ca7e872b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453ff503-8c90-4e5c-a4f0-d44ea82ffbd1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2f1de-fae4-461e-8b7a-d1d7aab3da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bc6ad7-7dba-4e39-8087-16eda17b59e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb0145e-1fea-471b-bb79-7334d6f7cd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c576f6e-ee07-43c0-8e80-7a52d974242f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fd9fec-6c8c-46d4-a249-f83975eeade1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c0cd3e-5858-425b-bb00-733d31e344bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3b0776-12d2-411b-9aa7-57f9d4bf12ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32970d7-e334-4f76-88fd-6bbd5fff0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1a43f5-36d8-45e4-9c16-d08d4df2560f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2067aea-b34c-4d95-ae74-3d6d10768bdd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34933f9b-be08-431b-bfe2-2ebe9b9642a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d06c9c5-877c-45e5-8938-be18f34f5ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a20f357-f36e-4779-866b-d00475f42420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91b02c23-2ded-4003-aad6-e572505554df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d5346f-a418-4578-9f8a-da1828e39807",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f4d314-c7a4-47c3-9522-718b56b947e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc33afb-4a64-4ee3-90e3-ad43e08c5a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f346677-fc0f-4ef0-b4da-d4beda876ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e15e21-6236-4fcd-886a-916bfb57acd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193fbf43-4fed-4795-aa86-62baab010f89",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ff6570-6077-4122-ad73-35797f80f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022deebf-7ce6-440a-a3cd-d8f89ea2a07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0c2311-2a5a-4ff0-ae34-190bf7ad863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf921ca-398f-43a4-8cba-78787442838d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5f4cbc-8543-486e-a65d-46a0ac8d411e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f06a3f-1686-4827-82ad-f87e2e2fe025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9395d8-aa54-4632-a4fa-f909c1588537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b62b33a-8445-4767-9f4a-c2b367d9bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c25875a-06e7-491d-a723-525600ed63a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258eebcc-5a98-4fa3-911b-3e00ef766138",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d1dc96-c601-4f96-be0a-5c47fd2bf7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37e6723-522e-4453-937e-3107af893d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345778a7-0f6d-43d7-8081-074f6751c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4d8711-8acc-4b71-ad76-9fc2be640f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534b7389-d587-4a4a-9dc7-e7245d1b4564",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2788665c-88d9-4044-a17e-fd775c451c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8d2c25-7627-43ae-b06f-d0a0dc5ff967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fda091c-f086-4db7-b623-93fe0dc80c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a70c6ae-0d59-4ccd-a2f0-59de340d7710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c476101b-60fb-4000-9207-b5a64557fc50",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a471cb-ff54-459e-a075-1adbb0ece4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcb7bb6-a076-4e27-8dcf-f1dd8785b2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61efe2f2-6d3e-45d1-a503-1b34c528a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41f3c39f-5e9e-4af0-a75c-2e7ba31799d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc99e264-9472-41d0-85c7-d5c65ac5681b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe2cb2-7caa-472f-bfe7-6922433b8281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2eb5ad5-c80f-4093-8e1c-29d84c40d2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da969a30-8af8-4d44-baa0-5d6cc2c9df37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e39b22-e58d-440c-9d0b-962c101c9e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fc80f3-2e92-4c9d-bb8c-e898380543ee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5988b3-6e9f-4ac0-98ea-2f12f56e0e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32da688-95d4-4b71-8120-9ae345705f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7104c161-8908-402c-b5a1-c1a6d45b8a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2744c5eb-a23b-4e15-845c-12ae7db12de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6b11d1-36bb-472b-8c5a-afd709054c1b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a9766-3d78-4a72-a291-7a62151e4641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b73cfff-816c-4517-b0c3-7e4ae54a6733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9308e356-5c67-439b-b4ba-ce9846ba4269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfddc4df-57d3-4b79-b56a-7b985be85d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7beb1a7-da9b-40ef-9f9d-e71369232245",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f24316-f875-43a0-967c-ad2b453b4591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df6f07-fff6-4fd7-a9e7-30b654a314d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8198458f-be65-432a-b7a4-142a10384487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3e364-39dd-4cac-ae4c-153f85d721c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b084956-a4f5-4a6c-9c78-6cb4e51d54be",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c3828-0261-4ff9-8d3e-8d67df970b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea06331-2a68-4a12-a6d5-7b0121401493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c8bda8-b413-4d69-ad2f-3e66ff1a82f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dd752e-447b-4a5d-aa01-b000abe3ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b9ef3f-af35-43f5-9bb9-3b213432a4fe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cf757b-59d0-4d6d-ab55-2cc0e4d92c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae13eac-6386-4de3-82df-83d3ea7f44be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dfcff6-1324-4c19-8784-f28e1d4be20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "03df215e-0c32-47f0-8f3c-304c4f781d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ce3cc4-5c9b-4108-85ab-7e639ef63e7e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c48190-1a6e-4d7a-b523-7a89d64ab435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "584a453b-c7cc-41fb-a4de-2d4768c45ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b886039-7192-4534-84de-3a326fc8776e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eafd7439-63d1-4062-90b4-ca38387c02e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8503e28-d712-4d15-afc5-e7f567ab5a01",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340b2bf-be5e-4e19-bf79-7247fe7e514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4b59d2-dbcc-451e-b382-a77b94f50fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07260ca-2f59-4825-8c79-57689cf1cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca62e244-cd26-4de3-9e50-5332badc51da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78dd856-87a8-4e1f-b976-f6758eaa215e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad20cdc-b229-41c5-b387-441301266783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8bd473-84c6-49a0-8f3b-299ecdb0b520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2319f88-b949-462b-8fad-1bc12ef7744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96302dbf-474b-4541-90c3-a00a92701813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1697b02c-817c-441a-b4a5-9698e33463c4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbbd204-0198-4e99-8e2c-5f6aa000518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1548b3-641a-4bec-a0ad-0587d9809918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb2b984-0ed5-47a5-b9da-57b9fb1f39b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0c0812-eb82-48bd-9de2-7b57faf91b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94099c2-783b-436c-9879-16089cb960e1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a35c96-54b4-488a-992d-aeea8f75200f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090a65a4-2e3e-4fca-9c4a-446e90cad644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc36f613-a272-447a-9c34-707143d3512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0da6c0-32da-4925-bcb6-04ac6590b1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befb592a-a974-400f-bdae-9850143418e2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974b1f2f-bde3-45a1-9b3e-5624ef3cf1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3156a88d-71a1-44b6-a819-83a763981494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e1bd96-049a-445c-87fc-fd0aa3f8c037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dad5e7-bfd1-44ae-88ae-5b65b169601a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95217b4e-2a0e-4c95-a313-2faecaa4472f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b84802-8e72-49f5-9496-1423fbb39fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763f9773-3324-4e59-8221-83b621a59041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fddf86-b6a1-4cde-9aec-714a6abb1180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c98ed754-02a2-43f2-80d4-f1661fb1db62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc844c-4328-43e5-aa61-506ed5c1a132",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd50edf-7fb9-469e-94c4-38186a320295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664b753a-faa4-4969-a9d3-b51d6fdf9d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8805e857-f26f-4bc2-8b92-574615ddd5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da2babfa-c2c5-4c2c-bfd1-1233e78f97eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1e452-1d4c-43db-b5a5-b9bcbfc6310d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009ca629-9498-44e6-b2f8-0ba48ce22613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048fbfc8-55be-44cc-aeea-967c2f70393f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb431f20-9c37-4637-acf8-81fe1bd04ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68dbbee-f73b-47a3-9565-19817d96de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef78bc8-3dc7-4cb7-a906-f8bf2d9d2c43",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074b0dd2-eea2-43dc-a62d-7ac766235024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a021e0be-ef57-4455-91c4-6cb74e90d081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d84a5cd-ab41-4ff2-b9c4-2071b2559f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29725747-b912-4cf0-8791-be2ca4deea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9797336-72e3-4ed8-9b29-ee13398de8ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df71817-e477-4a76-95a2-9d11c51e294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c2b844-13fa-4e02-baaa-3b6f80e3ee22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae663c6-3d30-461e-bacc-2bd185e418e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2451c45-c148-4404-a260-7d52ef807365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596228ac-966b-44b4-90cf-e550de68b0af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e437fbf5-ae80-46ed-b9c7-c958356fa364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33548aa-ff33-4ed3-99f2-f3e7adc316b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd8ee4-e59d-49f7-8730-92410b7fbc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbef6f89-3606-4d3b-ab98-6971e4f64f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e0a7a5-5a5d-46f9-9066-6d9902533206",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba728df-6e40-4b46-befb-d50ac066f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bdb719-6467-4dcb-829e-b2abcca3b92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb294ef3-bc24-4d60-bdc9-b617fc358ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed8ef8d-915d-4262-bbbe-84134c60c6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bce559-559e-4ffc-a1c5-a3d960259b94",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09921c0-32ef-4db2-a79f-d5fa7d01a2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f290b4-1e44-4182-8f32-65d2fdd4bd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5846315b-0ad7-4815-a8b0-1118664e73b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7adb945c-aac1-4208-b6fe-c7d3dcdbc1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d40f4c5-0b13-422c-9cf2-c3310e975be2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c269bd-4d38-4331-8ed6-93fed91fd9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdce67e7-3441-451c-9243-eba7660ce776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8953c4b-dd98-4bad-a29c-03a195a0abd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edacd029-d30d-4998-b125-5af17351e0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9839e9-0b13-4ec5-b611-d6b1c9009688",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ffaa29-8da3-4e20-8004-8106a9d99340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72724f5c-233f-4c73-9d51-f11cd3078cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de63062-c559-41bd-9b7b-fbac96feeb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a5f19a-f1a6-4d7e-a1e7-7411bc22561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d37c0a-63bd-4d98-8ba2-b0fbe60dade6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef8b826-02cb-4601-b940-5f43b82cdb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d419c262-6430-4cfb-a2f3-2bc69fb4ac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27977fe1-5584-43cb-ba91-c30d3a263bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9d9517-44cf-4b49-bc32-1e10f2a08734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc8295a-f8b6-4805-9e34-cca873c4ff15",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc839c6b-59cd-409d-960a-fad4e0cf79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8035351e-6317-4929-9bc9-9d2cdf550f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e7857d-757a-4bfd-bcaa-bed784501481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bac95ce-87fc-456c-be82-47a1104a5067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28489d83-bafb-4869-bff0-bca7d134d830",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6776e9b-dbc1-4e65-884b-5b07f731b133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8648beba-fbcf-4aa0-8aa2-cbb8d5f2f42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73bb5e5-c142-4b77-8750-2a4d26315a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c76b1ee-21e2-4b3d-8e35-7fb1566f024a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac53c1d-5a43-4fed-babd-0c783ff0d957",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6c1789-be60-47cd-8010-3d46a86fb122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b704da6d-b7cb-44c3-825f-c674106b1011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a6fdb1-5e60-4027-855d-453911c780aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25801fa9-d159-468a-bb96-72683ab92ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c7306d-ab44-4fa2-bcf5-e89eea9d7fd5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbf4f3-2f34-41f9-ad03-34ec3720c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3633e27f-6c08-4f60-8058-542b97f0ed5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac9a7d2-fca8-4614-ba15-0fbdc5a949dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0148c077-796e-4380-8bfc-24dcd81cab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe2b9d-47d1-41e8-93f3-87bc4e40e879",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb477b8e-8d17-46c2-9a2f-8347b358790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7026cb61-5128-4a1a-8a61-349ba609d5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88efc250-429d-4f97-b733-8cf84cc7e189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4006b7e3-ed02-40f3-8858-093e8889c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34bd510-4ef8-4f00-8a9b-fadfe4c12c7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a1e4d-e211-48f1-83dd-16428972381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a11b861-0953-4eca-9282-f86b30c3b413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2f9234-2157-4178-8abe-e7571adc5b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "460fe3e7-d9a1-4f2d-93dd-fba322d571f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739606a0-a71f-4b3c-bda9-4e309ac62e8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1a4d1-9493-45ec-a33d-0527dd2b504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b3a694-90db-48d3-8a89-dde56f79b8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf27329a-b1da-4c2b-85aa-b42b94ed1ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea310c98-fc7c-4023-8019-4879481e4790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faf5d81-9ea0-4be0-861b-6d8b35180c1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e48bde-cd22-4e56-a214-3993398cbe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d981095-c496-48e9-830b-ca2c6cdb555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09661abe-1412-4622-a8ad-3b1e196b0dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9275ea79-3511-4270-a781-6bc0ef24dee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303df690-5a6c-4220-af68-89222979411e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ff81f-3fb3-47ef-a4bd-ec1e6712e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46cbd80-3d7a-498a-a5f5-3a69d27d8668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbe1aff-7111-4261-b05b-75d39c3f18f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "91861f6a-d005-46af-8ade-46bb987b759a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc968968-e223-4719-9c1c-d9c08155fbd1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a75fa1-8486-4ada-8a53-4a35778c9736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a92d68a-dab7-46ab-a073-f301fe4ba325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3195820-ab8d-4c8d-a052-6a7a2ca56365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f44fe14-17cc-48b7-8b40-56aa2a84a133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1d2be1-c9ab-43f5-ba93-645c46709b33",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3c8c39-b967-4926-9328-f08f5a4f9a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6615ffd6-0974-41a1-9ad3-4146d577746e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bd47b0-96a3-4485-a4a5-4b8e8e5025e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64aa2762-0960-4f74-af1c-31dc84ee6eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594cd6f5-2bb7-482e-bd94-f7214bd3afee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd28ccbc-aa23-477d-b8fc-a67c3fede2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a51ad3-7f95-4dce-b028-a9a730fbdcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24151694-655d-483c-8f43-2a57360cb3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ece7213-bba6-49a3-afd0-0ec02b250394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3c9482-6253-4f30-9523-b4fc4af5ee37",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a07c9fc-cb4d-45fd-86e2-65a694558ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f07a67-fc5a-4155-a27d-a60e054d9ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8e3c45-dd04-4fdc-8c02-15abe23ed14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d358fc6c-2c3f-43d2-9fb5-eb6ad7b8b638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1875a7bc-9e86-49c6-a830-e897b243c52b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d5c128-92c1-45b8-b096-228b40bc4000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f0b044-e512-4486-b42d-ce693d8a9d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3deca-e2aa-4277-95f9-50a4b0ada583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51a7744a-58c1-48c6-bbe8-798f75462ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cd2e88-cf7d-4684-8dbb-852b93adc7f6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f06401e-1128-4cd6-a14d-61e5f433704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cacdf0-65f8-4ca3-ad7e-c65faf1afd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590c39c6-0473-4adc-a3a1-99d90000b26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4469cdd9-5d3e-4972-9c9b-4bab87f0e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6731a0ff-8f9d-405d-baab-a3cef684cebe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d44112-932c-498d-8a10-bd45cb061a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f13e6b-73c8-4a80-8b7f-079369f3cfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9072a2cd-353e-42b0-876a-4d52fd66aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3d9f98-94a1-4147-bc88-65d02c5115e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079abaf-e584-447e-88f3-5e24590f8265",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0300554d-86c3-4bd8-a372-ea62fae90992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba043a6-22ec-4830-99e6-d57749795a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95818c43-56d0-4654-a054-8f8c2eba3337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99054c70-f1b5-4a5b-8906-f56a8591b7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42360493-cd30-411c-bdcf-509ea2f35cfc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104040bc-c25d-4482-83ad-9f07dc206adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae13f5b9-d5da-4a90-80bc-4f16594713d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460e9ac0-604b-42f9-a9f4-c5d58a92d190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b59476-18db-444e-a8d1-ef5460c63ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87759356-9e98-4a02-a9ff-ddb1a56be80b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31a58cd-69e8-4ee0-9301-caa429aa9f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59377bd-4503-40a0-9ff6-677dbba7449a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d8df1-c492-47dd-a012-3cf325bf93c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e88b3d4-08bc-4bdc-8403-a534de71c4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e80ddb-e302-4c26-961c-3ccf55ecef85",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ad30f7-bedf-48bf-abf5-00703a2d3e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38167ade-f106-47f9-bbbe-e01172de63e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c381e0f-486c-4a59-b07e-1396653434e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99dc7c4f-506a-4146-b469-437db5bbc2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a65ced5-210d-4d74-ae36-50b45eb1ab81",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbc6bfa-1868-4397-baac-dc05f0bfa53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b868291-7dc9-467c-97e4-cd17f0df7190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3166962-6b66-4ada-80cf-6ff99060ac9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc98b38-21bc-4870-b7d7-5d49a86545d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172ae6c4-4125-42e6-8d4f-e250fc7692cb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f0da4b-06ac-4de4-b5ce-3b09758a994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0513c06b-db0e-4856-9b7d-4174d5e900ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97a2b6f-523f-41bb-a98d-a3731fde0053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfc434d-7024-4266-b0c5-97a685b3f899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf7318e-d635-4d66-9ffd-c8e44d40a870",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d0037-11e7-4025-ab40-96ecd7ed2635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45c7166-1aa8-4115-aff4-b33118a6157b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bb5132-bcec-43ff-91fc-26938f213bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddea1a24-c7fd-45e9-b8cf-33389709690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7bbac6-1094-4dce-b03f-3dd69dc072f1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443b3bf0-b3f9-4122-8945-b93d500b664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5939ad-5e31-4707-8978-890f3d67891a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffb7b54-6d31-43b5-b288-ee82d3fe7f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f11112e2-ffc2-4c1e-9442-564bd997ec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e7b7ba-68a0-4c9e-aa48-f63b78d69fbf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15641da4-033c-4754-adda-566ce2b07796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8956c123-ddc2-4fd7-aaf7-c2dc3977610b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94c6e4f-f576-4b92-a18c-d91996aecbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dee2437-181a-4078-b001-fc121f0fb890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e8b53-aa85-48f5-b16a-a621920ea4a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e1d56-360f-43da-b084-030735b3bb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f533c8f7-c66b-473e-a326-93e4c0c9fb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a1ce4-e8c5-4810-b372-c02119a88062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8fd43a-fbdd-4011-a041-73e58f362299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245bd5d5-14f4-4e88-913c-17d6b4843941",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f16c7c-3660-45e5-ba9e-4635a128d54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e7100d-aafc-488e-917f-17bba3a9f000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7205c68c-aa21-40e2-a559-5db7ee8c2442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5d104c-9728-45a0-afeb-126c4eaa0654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e365d3-e5cb-4c7d-8e4a-e93fe218a12f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38066434-1b06-4b09-86e4-92f194207e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d231a826-6d28-43d0-9e4e-288efca1a72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a02be-8a57-4d76-8008-54fdeeeadec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5754b8-581b-459d-a99f-47a3439a264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7185d34a-08bc-43e3-914e-5ab220df43d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c70c3d8-eed6-417e-b3e9-b5d8339ca64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb8b1f2-2bbd-401e-8512-3767f5abe7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20648e6d-c0f1-4443-addd-5420f516b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa57cc8-fb45-4fc6-ad08-525543b7f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecfef56-1a49-4240-8e35-42a19d33e09a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933db971-50fd-4a6c-ae91-cff7da9a28ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab58d86-984c-408d-b53f-e0cf4f00c826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500983ea-95bd-4aad-b3f0-29ea170f972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5781ab-073e-472c-b476-d51304cb5815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fe8650-6f7a-494b-bc3a-ffd37807a87b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eec52f-4a82-41b1-befb-4d0ed75440d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a74aad-056d-4e67-9351-8e2da797f83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23d1624-4383-4344-8f37-b5b1f047fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba983df-5765-49a9-9286-a489df6d799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dd18ea-9a9a-4638-be37-1d48d2d1c617",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76b0599-cf6b-4655-826e-aa3008b050b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf3945d-f89e-45d0-acfc-07583056b60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f110239f-03e3-41f0-9059-96eda913c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37b11e7-6658-41b7-8ad4-61e756835257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43142df5-e52f-43c9-a17a-96fafc31d356",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52949d32-f51b-49a6-bcf2-fd85e73d8caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f75017-8ea8-4afe-8aa3-59dca073b63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c78b30a-a7cf-4c20-8683-836c169e5826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42ff1435-62c8-44a0-84fb-b59bf67ecbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcd33c1-be2b-468e-8a08-2680cc57eb71",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d62d23c-1053-45ac-acc8-01030dfb9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df5f806-d6ab-4da6-86da-8269730ff4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8266dc3f-bb10-4a76-be77-f69f8d3d8a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbeea1e9-44ed-45ab-b5b2-9171a7b83617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d403ea-5be5-41dd-8136-cb531727eaf2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c49b219-8bad-4a7f-ba2d-75d22af9638f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b758c93a-1842-43b3-9b56-eba87b2f4fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cba4253-7cec-4731-ae07-bde1f7e71d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc59c1e-0be6-4508-b3bd-fec126a5d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0be7f73-abaf-43b6-8966-4a866e25a7fe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3ef5dc-950a-449b-addc-cc88ff0d9f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bcef03-3a5f-496e-a694-8eab11d84bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c34bcc-d5de-4117-accd-8226a7b83e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7667c3a6-df74-4b92-9b72-33778da80332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47e6375-dac9-4ef2-b536-6e957dc85dad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b00764-87dd-40a3-a581-bdbc77e189f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065c120f-8ab6-444e-bd03-227a398bf2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b13f48-ebe8-4e03-8192-a599ccf9a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3edc90e1-9ea0-4390-8004-e8c8a2509dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd43c60-4e2a-4aa6-950d-fe1f3aaa01c6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7ef180-99d5-4cf7-b181-af65fc5c084f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9af08d2-6869-4920-99c0-dd4283f9e32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0f2e9e-7137-471a-b6dd-1f2187892d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb3a388-4a2d-4078-9680-bba2165878a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511fd010-5361-496a-ae32-b75fc08fed56",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ab5eb3-4796-41c2-8faa-c0ba55439f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4865d42e-c7ae-4bbe-a657-9ca0e4135509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203f4418-ca5d-4af2-b4f8-d0fc208cc73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a90abd04-26b0-4145-bdbc-e19b371963c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed52a280-afc8-45cc-9852-5e6d36d71f78",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc78032-395b-4670-8fd9-a0d22d6fb429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3809110c-7872-4a0e-b7ea-1da6dec91642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa6aed5-8a56-4bfe-a873-b3d53e33da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d39529-19fb-471e-8624-430fa3a3f3bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01c9ea61-8396-4f0c-a653-084b6ab6c42e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87468639-0c5d-4c43-8e36-359b971c7ac6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2759107c-d93b-464f-8cb6-19df9b7e386a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e691465-2662-4497-b1ac-3f4b112df8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ba68b2-5086-4b89-84c2-26b7e69a8c18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fde64939-ecaf-4491-a3b2-6530c688db72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e2f66d-3f87-4033-bf10-255fcbab1d1d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6438baa5-185f-462a-b721-d25e67fa1d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a68ff9-3d05-4d64-bcca-9a153bfa0ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5209437-17f3-4cec-aebf-24ac1c574264",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c68681-5b9b-41a3-acbc-5def9084b08f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06fd35e4-5a6a-45af-b9ca-ded47416bd08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b7de857-f44f-44bc-aa6c-7220472bd25d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d989e6d7-05dc-4c35-a097-feef3e710ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be6d8995-3622-4f28-a63c-2eb65f5ce268"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e07dd8d5-bc9a-4820-b51c-5d67c57d2142",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8088bc4a-9786-433f-9732-9dce0dba9a2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f61bf88-2134-4deb-8c45-17695d96d505",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cdbe20b-ec0c-4104-8bf2-5d355ef082a5"
                }
              }
            ]
          },
          {
            "id": "34d5d164-bbb3-4b9c-9998-fd399a53b587",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb4e5992-7c04-45ae-aeed-ce6022bbad73",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f1bf85-f26d-4e20-80fc-dd324ed67a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76e2e4af-a31d-4f59-9a89-74eed991c3dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47dd7d7-d431-41ac-9676-665bfb99e75b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd5c9e80-285f-4e28-b5dc-5c4de3177223"
                    }
                  }
                ]
              },
              {
                "id": "e1ed1191-83d9-44ee-aa81-76550cbfe4b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1880e6b6-b93e-44b2-929e-53fd02164dae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ba5449e-6bd5-4e83-b99b-2fe0a505edb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "692d2a76-5c7a-4de6-944d-46fbb3513301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a3659f7-60c0-406c-8886-92cd5b01fc4d"
                    }
                  }
                ]
              },
              {
                "id": "6be04b29-41eb-4574-b869-1d41182a4a29",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99293872-7136-4925-99d4-0241bcfa7828",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f07b83d4-9ad9-47c3-b576-6a4b016cb8e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3706760-9b93-44f7-b586-fb935493c393",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea495caf-3cf0-45ea-abbb-24e3ac23a7c8"
                    }
                  }
                ]
              },
              {
                "id": "7091ec07-4b89-4561-a3a1-ba54a8f4f893",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a4c2ee-bc21-46f3-ac4d-4aaf0fbba0a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7a8ac1c-c78c-4897-b423-1fd17e581e98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e01c3f0-b451-4275-93d8-f0dcdd84eb2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ed10c7f-e758-4488-a2e4-34f7e3f99fa3"
                    }
                  }
                ]
              },
              {
                "id": "6dbc3df7-8759-4f3b-bd1b-2fb02adaf8d9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28289a20-aa88-45df-977a-3acb4c708bd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04a33e73-cc5a-4aa8-8dbb-a09f3dc03c20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "844386d9-8ccb-469b-81e7-e8db699fbbb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee08383c-8b1f-465a-b3a2-348e71f4ecb3"
                    }
                  }
                ]
              },
              {
                "id": "0eb0abac-bd34-4179-9dc6-54e5bbea9b38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e052f483-340a-4c45-a3b4-ac79c8710be4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1634ccb3-dbc1-49f9-8a9d-9d226c29bce7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d2d13f6-21ab-4c67-85d5-3bc12590b269",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24d0db91-b376-4622-aad1-34816a09649c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ce3adff-8d17-4fa6-9bde-519b77f72ee1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12ef7a67-eb0c-40e0-aa07-702351e1f0a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ff6274a-b68a-4d8b-b453-cf52bcfbda0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca0b7263-2aff-4ebc-baea-84d4fad8d9ee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e50ec5b-b4b8-46a5-971c-2e92ccfa37a7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d7a16c37-c294-4231-9a61-46148f921430"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c42be96-b676-4363-b8f5-931176130d01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97ed2e5c-0f63-4fc1-9def-d0ec78267b41"
            }
          }
        ]
      },
      {
        "id": "2137754a-a923-4c24-98bf-58ed99699833",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f9e0742c-58dd-477b-acc1-1a55618af1d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3122f53c-d622-4449-8a1b-e2f1a54ecb07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0506e55c-db57-4f20-82ac-689dd25197fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea2763c-745d-4bff-88ca-d47a631787d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14e164a-b33e-467a-a47c-b3e2e95d8860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbdc0f7-2f94-4ed5-b12a-b713ba08e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8620c2f6-8a0c-41d6-b97a-c4e08f110093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2462336b-bc6a-43ff-b284-2450ffc692b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a094fc26-5e04-44ed-af58-919cd57f94ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625e65e5-4c7c-49fe-98fb-1b8665c509f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e898d8-91e4-4785-8b13-7996c26986b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70804a27-6da1-4939-b160-d28ecb679bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bf9a66-e4ad-4210-99bf-04f541c3d42d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8dfd03-b453-4151-bae3-4ea4850cafcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212544a3-7455-4f68-b612-3f0821977bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdc870d-d38c-4bb5-911f-5bc6258a1767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6716552f-f58b-448c-8aa6-592953e7eecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02aa31f-88f4-4d2a-b216-ba8c56b97264",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a0a0f-f308-468e-bbf0-aae5c4a3d1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6b77d7-823c-4dbe-8784-417571687eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc12591-1bdd-414c-b5f6-317642b32d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a528560d-1791-4e1a-8de7-5e7b0b010666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51770486-64dc-4497-bcf3-db6a5fb2f12c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f518bc-e756-4899-b367-081e496b56d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402742ed-2055-40d9-ac42-b4bbf970ade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cd545a-d971-454f-83e7-81fc44de9e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6ed371-71ac-44c4-91b4-7b603651d46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a0091d-b606-4ad2-b598-0bbd65af8bfa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ed827-3034-499a-919a-07cff2bfb240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a21e276-2823-4a65-a7c8-d4744bb692ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7136d890-73a8-4fe3-a99d-37cec34a8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c54b4067-11c1-463e-8e1e-724aa36298a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5fa512-5185-4261-9d3c-67565f311e98",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89397cb6-82f6-4a8e-b585-992315e4d9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd774847-deb5-43dd-86e0-5bf75cc92756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b406e-4cc4-4cd4-91ec-4fe9d1d8b668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d770b955-37e1-433c-a3c2-fe77330cd7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0a8731-06d7-4eb8-ae78-1fafa34e84dd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd377f47-a62c-45e0-ab30-38e13574df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcb4e44-6b7c-47a2-8037-ecd902e1786c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc51227c-c08d-40e2-8706-283a8c219b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42725037-7c98-4af8-8420-86e5a948e2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699e950b-ae6d-4f5c-9ae7-6fefe1ba812c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90702c8c-5e74-44e4-b5f6-9eb9ba256c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3900df64-50e4-4460-b299-7ed120d2799c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051108f8-0b2c-40c3-8ee9-49c23e611acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02aed8bf-63b2-4319-80be-4812ab0fc5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2889cba7-b16c-449b-a9fe-a6f61e4ccd0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47da77ce-3053-4dd2-b76f-9b7ae9a2f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628f95c0-9b47-4cfa-8e17-4a1d5bf48412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983396ec-b623-4b54-95b3-fbf4fcd36109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0c4b09-7cc8-4275-965a-8201e1b5257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4129b29-c4c8-43b3-bcc8-32bd523c43d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c42333-1e54-40e8-a9e2-5dc58b2df744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056e01ea-7ba6-403a-b18f-88ec1f6d3adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75254f87-dfab-4d79-9ad5-95ebac5ae885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "528429c2-ed11-41a9-85cd-2e2fc9cd40da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8aa402-3781-4a14-96a0-5cf4c4d607fe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f87c3e-158f-4661-9dd5-a9f501a71f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa46f9-fca2-4538-9194-299fbdbabba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac10fbb-4b4f-427b-b9c4-9cb0f2210d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "526aa69b-8780-4179-b17d-ec65a0d07327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d453ea49-18e7-48bb-a79b-2d13f809c9cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398cfcf3-b039-44e6-929b-1735c0f3a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2f3ce1-3dbc-4a64-a5a9-a86ec4183bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10e27cc-e751-404c-8097-69db0d92d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b8254f-b3d8-443b-953e-ebdba7775825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25ad422-45db-4962-b6f0-399f86956bb3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb2ad8-deef-4dbd-a80d-5cde22f0f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9e66b5-cabd-4ed7-b17d-348d2b8f0d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3cf640-c5ea-45cb-b10f-b8735821910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ee1f56-60cb-49c2-bdfa-bb27d6248810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305318c5-320a-4bc9-bbe4-5610efeb6225",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a51488-9f13-4c99-9800-6d34b074d725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a2ac3f-0f12-4869-bfc0-9f08c4cda5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88de44b0-b503-47de-9566-231340f38a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d87ef2c-4702-4299-b7dd-974709eb2493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f844a4f-e067-4bbc-adec-8368f6fe5257",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991729b4-c815-482b-90dd-dc27e14e0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da44c6bb-82f0-4a7f-a748-d0c9e5e69562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb5bb02-48b6-4e96-ae35-7a1e0e1de607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb978af-f6a2-40e8-804e-562231a1a159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a75a7cd-5456-41f8-96b1-328b2d1e7f38",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a866a10a-f2ed-4c31-9091-10f65530e93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee80a36-9a80-43e9-8339-80e2cefe1c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8078ca03-9c0c-4f7c-bc86-10df64385eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5ae7cc-b7e8-4485-ba79-a941772c9cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fd89d1-889b-4f27-bb40-9c4306775b22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0039c9-2720-4c8b-8b49-caf6fc93b029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559be492-bbf1-4da4-aa54-42e0f18d4bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98faa95-1584-4c08-b0cd-453b6b5dbb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "051c5d6f-be46-4280-9a99-67103fd91d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe866bc5-76fb-4c14-ae1b-2c3f1db4e8e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce487f-3997-4303-baa4-a482035f2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355e0079-fc99-4a9b-b89c-dbafdbe35691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c17d9b-8618-4184-a3c8-75e8d4580f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ee845a-4f3f-4ee6-aaec-a7c8c7720356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b40c5-ee14-49cc-9188-1449d131e861",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da147414-18f4-4bc4-9255-176427f20ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc9924f-893c-4416-87c0-2a295d95b61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13644c0a-5cc4-4d7b-a654-42074fa53c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1a99c6-3602-4d40-a026-bd9cfe45cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e892e9-c72f-42f6-a077-991f7dcf8da4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345e6344-d5e3-4a6d-9954-87d79eb2b334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1be8d69-8645-4450-9b9e-bba428551564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c2ba8-751d-4e3e-ac96-ff0686e048fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa0c259-9d18-46a3-939d-f7bb9e124a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59444ce5-faf6-4512-978e-fd75d5349724",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2920fea-0aaa-4218-933f-480bd6050f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c88330-a128-4ca1-8962-0888b3885df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69256651-92cb-49ab-8803-d0c22209362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "835afde5-1cca-4021-bd3c-cadee2c86777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1135c4a0-6685-4668-b49f-6f8a995dbf1c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2c753d-5399-481b-a95f-a856b9f052e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda70ac5-c086-4acb-ac81-58bbbc741fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04f0aa0-a3ef-4d01-8764-3dbb0da88819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df1529d-d3e2-4d6a-838b-46e4c0dd6e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba4f906-af3d-42ec-9dfe-699f91839fc7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23251ecd-4e11-4dfa-a61b-6bac0ed1e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69944060-06ab-46f8-ada9-6946fdafcca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e63cd8-a844-4742-9662-293657dd861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f846d2-bebd-487a-a7e7-4be1412e67c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf6e172-e29e-44b3-ad1a-0f6fb198bc7f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f966932-2a81-49a3-99cf-ee4e77639a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635b4210-bb72-4e4a-a9bc-00c670a5ed92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b1bf4e-b49a-4035-b566-ec3c11f06c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd476a0-8954-49a8-a0cf-5ec3ca4cb661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1281357d-d061-442d-9701-145ed82e5799",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37a9259-6280-4382-90ce-2fb3bc9971df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e262d3-5019-4543-a44c-72f6a48f2ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a11598-2126-4645-8df1-0573db768821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d57a8d2-0a21-4985-8c6b-f5a2a52d27e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db4bb0d-2e07-4039-81db-77986c735dc7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e2a465-707f-4e7d-8550-8ef96db2d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e39d16-10d7-46b8-ae0e-d1370d75161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95edf7b1-0534-4df3-a311-b8232d5b358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "724700e5-60f8-491f-849a-d82b211e1b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3678717e-218a-4f34-a731-d89d1ac9966f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6695df0f-64e8-4bbb-b195-d43548a6cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54edc9b-883d-4cf5-8df0-60127ad9177b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd1b30e-6d52-43e9-8009-9d37d925f1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c07f26ca-a1ee-4180-9451-cc2887de18ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e314d5-463b-44f8-920e-666a897ca1f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bca803-7d97-49db-9d8d-45852c0a6278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb2cade-8187-408c-a611-1af26d7faf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876dbfce-eee7-442e-97e5-20cac10a1892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320f32c4-4ec5-44bf-90a0-01c1d1390ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8265b7-6c64-4b92-a842-6a1333de0cd6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592598ec-ab0b-4cc0-8676-9feccb069276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d017135d-3c19-4796-a62b-fe8c1fdf1808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8503a369-142b-4cf4-96c5-f46b62399985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f543660b-2ce9-459e-9830-c61b4ab79278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e2f672-8ef0-467d-be23-605a824ffd8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a9768b-99a6-43db-9186-58cbfbac1745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bf3a97-2f70-4e0f-ba8c-2f986c628abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdee0af2-2d2f-480e-832e-9c7652755ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33910b9-447a-41cb-ba84-93ad79b88e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3a8bd9-e8f2-4f63-8e42-0d54b40bff4a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76568eac-19e2-478f-a7c7-49ba045d3aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfd48a9-0651-4db7-80e1-c1fa367961ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd13ce4-bd2f-49dd-874c-e411290618e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5b6814-b32f-4402-b92f-11283522aedf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65ac4729-7e46-4fe3-aafe-3b52993d25b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95198775-47b3-4e00-8e0f-3ee9ed8df820",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148b88ab-be26-4522-b089-0a685ee0b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "080a15e9-74d8-456d-9c2a-d93d44336846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bd203c-9a52-4987-8a03-efc0b74dcbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c6dccd9-0e4f-45dd-a3fc-477b726f701f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef5d546-4420-46ce-85fe-e6144fed5346",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0905da7-f2d2-43e2-8ed6-0f6f03cd06e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bec3994c-c355-4101-86c3-6cfb39ce0003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1e09a8-76ef-4c06-8cd1-3dae3d7764fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a332951c-a550-4a7e-953f-4fe5c7ac42aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f150371-c7c3-4531-b851-bc567ba094a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "479a11df-6ce1-42cc-af2b-6f54d534e996"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c252fd3-6803-4a15-b543-0142e25e43d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6663a0a8-b0bd-4c01-88fc-1cae0b4981ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4753cab3-8011-4e2b-ae1d-3ff4499d1dfe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfb9b548-3812-49bc-8a21-f8c41aff7a79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d997c858-dad8-4767-8945-eb6ad8001bc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34f62505-b4d4-460a-a7e8-15f0154f33b8"
            }
          }
        ]
      },
      {
        "id": "6abc1e21-d0eb-4179-b5b1-1060ad5c87a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "72c2ce94-dfa1-4fd0-9291-7e3a8c945dbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "242e2258-0ad2-44a3-aa45-3ff56756c79c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8ab7ed9-0a19-4abd-b2a9-405a04f73efd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd4d88d-5806-4fcd-b458-36132901c704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098b689d-1143-43f6-b7f0-b7661f1c54d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb92cbd3-eaa1-420b-98bc-bf19713811e4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca16df57-55c0-4cf4-aa63-5a59e874ec1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b13c5b6-a4f9-47a3-ac75-0fa1d3d5bd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084659bd-5029-42fb-b228-ed1d494387b3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae924d00-f354-4457-a296-bcbd305a41dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d11877-490e-42b0-9835-5bfc1c83212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2604b434-bb70-45d4-b507-9621b2448b6c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca82eb-8e93-467e-8e74-56a3550e0cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83846bde-7ba4-41d0-ae72-9ac196c70584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30471e03-614d-4b26-a631-12d757568eac",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cb7283-e7c3-4f04-b6ed-c2e10c751b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d24260-7638-4713-ae03-dcdb8244bafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828dffc-2710-467b-80c3-56038c7f2cc6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcb8e10-60b4-41db-8b5d-2dc02392cfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd12feab-ad85-4e97-b8b4-d27220813328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963284b5-3afb-43bd-a07f-99c66546804b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44803953-8dd7-48bf-b100-a5c5c856bb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd81cef-0682-4aa9-9f88-68ae23fc8f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b9a67c-7f64-4b45-ad86-4d98e1223ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1ca0b4-162d-4c6b-9e8b-0080733f7634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f284cb-374d-4c30-8c07-d7479d6559bc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5809ddb-11e7-43cb-a330-800be5a0feea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439944e8-5953-4c53-bda9-cb5e34a21750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff8fca3-dd33-48cc-80b6-3379e19ada2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488b7bfd-e1c4-46da-8c5d-5bdfec908b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaaef06-c391-4ad7-8b66-f7986b3ca530",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4df77a-ffb9-4ecb-9bf1-383b9cba92f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2485c72-b2a8-470a-b2af-a5c7e43a1069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b0f150-3e67-4667-9c8c-900389638ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da91ec9-f57a-4e0c-b2b4-805e5352ef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2027865-977e-4c7d-ba55-3866a5ee88af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056cfb22-f9da-4d65-a472-64073ca8d73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561abaab-7d68-4698-acc0-f0d3c92b65c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3890dc-797d-4221-8077-1139b39dbe75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46624ae8-eab2-4dae-a6b4-1ed9a53c3bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9087be-24ed-4738-91d8-1e82cdd71518",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e9b7d-05bf-4a69-9b4b-69259a582353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6bf7c3-7553-4571-bbde-64e030907b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1e4ced-e62b-4a87-9384-67adffe2bb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b010e103-feb3-439a-a285-ebbd03033d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6030032-9839-4510-b5a9-5bac92c3e791",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6138e6d9-95fa-46e3-a218-6372eb8d2d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef62178e-d962-4810-9657-8bfc3fcb8678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be15491b-95f5-43bb-9eeb-fa10c1fd59ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895252ab-94e5-45d5-8730-b1309a945af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6e661-bd37-4d64-9bfb-39a73eefe156",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2a65e-45de-445f-8200-7a9867ed1622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd3d83a-2e9e-4324-aa8f-a8e265c38805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f69125f-a6ab-4c2b-bdfb-ff77d7b01e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9d109a-e489-4a64-b364-41ec2737ef72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ade63d5-0fea-4c5f-8d41-36a4c9903cbb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d9dd38-4770-4a65-af9e-15e369531074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1cec3d-608d-4274-9b08-c770a29e10e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b57745-dbc5-45b7-ab7f-5c6275b8db62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea29f54b-9dd4-4bad-8352-20673e7f54fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce7282b-a148-4f92-a0a3-f9613289f191",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b05682-a4ad-460f-83d8-d57a896977c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82fc8d7e-daa9-4e73-8bcd-59b8135a41b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd68577-2c7b-4e83-98d6-d04d92b860d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfd590b-90bc-4e06-812c-4a4530840c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9920a0ee-210f-4d50-b162-7656e44a2ccc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e9c63-b7e5-4fb5-b2f6-2a8e3e3f4dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf18c0a2-3c50-43a1-8379-b0b1875973f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347b6d40-3f51-4ff7-9903-6312bb94eae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f34c44-4b7e-41cc-bbdb-be6ed0a49fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc2a113-da45-4a79-a112-710047654e7e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adacb70-5658-4a62-a98b-6edb4fb6fa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e005fd1a-a69f-4975-a880-75e3c811f0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6abfec-5b7a-4b73-9448-d09cbdc3530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4297c8-1047-47af-ae41-5789df273012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0eed1c-2c53-4861-b356-e415c9ed3f07",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f4860-263f-47ba-bd47-d7ab2e957d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d32b7b7-5d45-4a13-89e7-2121f62e0f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347cfa95-7c9f-44ca-b7c7-06718650e9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a13f2c9-0dff-457b-aba7-2ef645592461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7e4cfd-94c5-48a6-9692-674989eae9ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d427f0-6f44-4b82-835c-f449225121fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc75304d-24b7-432d-86fa-2407669d107b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce58b30c-ca85-411c-bf0e-36dc8e8cd8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28bb8c5-89aa-4417-9804-5d69b125f0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a4f73d-3cbb-4bed-9e48-35dd8711b177",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1c0930-41a5-45a1-8b77-90c5b595c5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb08367-b683-40bf-8368-666498f38f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64abbe77-cbb3-4f9b-8fb2-b5bd05496849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaf06ac-7916-4b8a-8446-34bf6d1b346f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f439ff-3201-4ca3-87a0-9afed9a85753",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736fa25d-de19-44c1-b00f-a0fa8fd6d32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf53edbd-0294-4f75-9d30-5910463e16db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f28e13-bc62-4f14-a91e-65004134f728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48529f3b-9d48-4f30-870c-7bf895f32c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55a1259-d1cd-4115-9a91-6f9b3b4b696a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa39878d-5b9c-4d08-a445-42463ca3c863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ac80fa-c4d4-4da3-809c-55fe6d590cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a69f006-a696-43a2-ae32-2d0eecd4b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad0b386-200d-4962-943a-93737d45cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c932c161-330f-451a-9cc5-48ace99f3fb7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ef4257-1440-4f3a-8f06-81c2a1cb6c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a74d029-8275-4500-80ae-5717b9b073d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28e2d47-3e84-4499-a439-80d472ed98f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2406c20c-1e0f-4fff-90a7-f98eccb997fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6dc473-94df-4e4d-8749-a9cd1e003553",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cfe539-bbca-4d68-a7fd-55ffce5c2a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e39664-c013-4c39-80ef-2baf80e1fcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7969d730-0818-4de0-b541-f7f3a0d8d6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b04c2f7-8434-4059-9f57-58461de3672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a2384-f7ca-4de1-a04f-da0dd661ab42",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea40bfec-817c-4607-9857-9be2b8d7567f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80323d6d-7ff6-433d-bc7c-4a3a7167365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7570a968-a115-43f0-98cb-2a1a80e1673d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dcb406-b263-4dc1-afb3-50aeef05308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8009cd2e-b4c0-4705-bfc9-4fd39f1e4015",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e88b8e3-cee9-4856-8112-23bf27ee70a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa350e73-698a-4c50-b13a-f835da0d8351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c1ee07-4fe4-4cf3-b416-7bc0a989dce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501f00f1-340c-437a-89e1-df2559ad9741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88377713-2a93-4e25-91bc-c7f6e885389f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82abe46-f406-42b2-9c1d-23954ab3162f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea338907-00ac-4cd2-9d5c-6c6fbd13560a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0511904f-8012-4ef5-97e1-598320f566c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fb5e6b-e4a9-4d9f-9a8f-086924c56447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54d5e9f-96fd-4001-a3fd-9ab405a89e7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb12f42a-b181-4e6c-961b-f56ddb350273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193d2986-4f78-4b6a-906e-5c40a9018df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a524bb0-cf87-46ed-b2aa-bacf68b75966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc88aacd-ed32-4f20-a570-2255792fd621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ec0cc9-0f14-4fbe-aaf0-8c7a2abc57af",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65f41cb-2805-4b2c-a9ec-7a4fd59452df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa5282c-6264-462e-9332-977c57225011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8394b912-f0d0-4a27-8948-f42ba3ffa41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adaa1d4-49e5-4af1-8451-f1a78da2d3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bd4a27-00aa-49cc-8520-d73edfb63ff6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b4470-849c-4df0-9144-c5f7ab3f8a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be4057b-f8d4-4b71-b798-00ab23792f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080a720a-8874-4534-904f-8493addc63b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e1beec-1125-414b-a660-3f7cb2b3b4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6330bbc2-3f93-46c0-89cd-401d1bfa0bab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb836fb-e6d2-4789-9119-de1d646a68f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b8b613-6e43-4bad-90bb-b5547827e5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb06a81-fbff-4da6-be50-230961af24a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b52ee-63f4-4cb6-ba2a-13555db932f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e305e98e-5a0a-4558-af13-da5344f5ca21",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680d1557-8012-4107-8b21-73c720d6d239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1861fec8-5daf-46c4-8761-7ceef2e630ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e83615a-248e-4f48-81b4-3a92a2518e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9b6897-362d-45c7-a549-bb5218452382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e3224-7378-43cf-9831-14f0ab761dee",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2129a6-75f8-4d78-bf7d-f3a62b5ba443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3223f644-e856-4384-b0d2-008779827272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb330072-d242-4f30-aa7a-06ffcbebabc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bcd4b1-2237-492e-a502-fc3a06f5b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b95d3bc-0690-4525-ad49-87272151e925",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a86dd9-01a6-4c96-ac09-bb31e4aadaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa556bbc-2b3a-40d8-be93-44dd8aace5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e4796-8568-4496-bb34-b2694cce2154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7dffa4-b01c-4a94-a820-9b1e631a53d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c409e2d-fd8e-48c6-b2ea-b6ec29809b96",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c25d31d-e482-4fff-8d1f-bec793e761b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d8463c-08f0-41b8-af94-1ac3cee85a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503305e0-86bd-46f4-8e1e-d2f8291e9d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac84f509-4eb7-466d-adeb-c4995415cdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb7ef8-60b7-4c8e-9028-8499ac2aebe0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269f8536-3099-48bb-9ed4-dc0823137b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1a025d-d150-4002-b1cf-d342361f6b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb37d4c-dd49-4f32-8898-062c7e44ae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeed73c8-cc47-4d29-a0ec-1462ca7739b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457153ab-e11c-420d-8984-7c5448ca5000",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76093935-1cf1-4d33-b2f4-079bc686790b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122776d4-e107-4617-99f5-1705d1a4e69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795cd75-86c2-4920-86ed-b581a4c9a8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db48dd6-3c59-453a-a9e9-e1005f626ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c69011-a948-4b5c-9af0-22590a70c564",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38720047-c64b-4cc8-ae44-4beb550e3cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c66ddae-1f31-46ee-ae64-d4e98146ee2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ade06a-20db-4538-ada6-74844c765274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662ed9fc-2746-48c6-b5dd-3fe168336a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec3ec63-5d1a-4ab7-a1a2-5c204a289a1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001c93cc-356b-47b6-968d-206955cfbefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e1cc5d-bfc3-41e6-8b5d-0c3407dac89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e05e6-3b08-453a-b88f-e4094ff084f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4351b21-ec75-49af-a9a7-11fcc5eef86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9d62bd-732c-4004-80bb-c97cb3212703",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88652379-164d-4ba6-8295-e601750c1cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a5cd28-ba29-4220-8def-4819c42c6eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb75871-7025-4eba-860b-6676bf751be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a918309e-ea1a-43a4-a546-99ae5b980ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cea951-6e26-467f-af15-2eb50a4718e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021bdb7-5047-4a35-b6dd-b6dbb7ff5159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8b5f5d-4470-4cc1-b722-f947092c4060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0f9e0-6d6e-4004-a693-7a42407e6d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100d1ee4-5fb2-4a63-9f33-a82ae5711516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02148d97-7867-4661-b37e-753b99e9fd0f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2861ce-ae50-48ae-a2ff-15f82ef04959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6eb8f1-d554-4bbe-9792-6b46f40e372e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610bef01-a44e-4603-80b9-e1f37d1961dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5458007b-5e4b-4b69-92b2-157a83b06335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03ee75-cf1f-4163-889c-4886278359c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe05742-d029-4c22-a7c5-7acc7f7ee1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcee0fe6-2de7-4c83-8c81-16a8feec5144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca98801-d0b7-43f9-89bb-494b713b4962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355b10e9-8b77-4200-8d07-2489b72d0f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f09287-9498-4b94-b6fa-e7949506c4b5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1550f6cd-7d86-4c5a-8e29-a5ff980d50ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793bf1c5-91d7-4bcf-9d22-da571374d9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8a9dc-9695-4630-ad7e-bc41a4515ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42173179-a56a-4722-8247-b997180cef13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ace0ae3-160a-4a55-8205-b3e3c069394b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3d1427-0c7f-4fef-864c-bfdcf677769f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce773dc-dcba-42d4-89a6-1800d70ac578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2f461-8084-419e-8347-3d3358f58841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c49268-00e3-47c7-a06a-6221d8a8db7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7804d9da-ed28-4a9c-8751-33093442ea09",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc27a5a9-0762-4f1d-aa70-92eee60b49b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2ab38f-b7f3-4bad-8cdb-1dd908bc1b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b8ed5-15dd-4e0d-bcd3-6e136341745d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6387b68-9643-4d50-bbf0-5dfd13ff5649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c444026f-c1c4-489e-ba76-a6ea08e6774f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a450cc-2ce4-445a-a93b-875d38b6d63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4915c28d-1c39-4d80-b7ca-f62f36f86c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd883f13-442c-472e-9751-47779c8f6774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae295f83-0e3a-42e7-92cb-e42a4a062e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7336e85-eb38-4498-9b94-efa3cf666f42",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3336d7-ec89-4672-8db0-e3ef2ef83706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6c987d-3f29-498f-a481-d406c5ef363f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1923757-a3a0-449f-a1f8-d73decb83021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe0acd2-1978-47fd-b0ef-9c39a968d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4899732f-0e4c-423b-af10-bab3791f2983",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbbf705-2256-4dc9-8183-663821e576a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35f3cb-7a82-4edf-8c63-f6273e6d174e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da341229-5978-428f-bd1e-46550d850bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7191b04a-b2c4-4218-b8e7-ef74743dff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be395fb6-5dd2-4fee-a4d1-a682e54295af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181ac103-799f-4911-93dc-001524faeddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95596d69-60c8-47e3-b7ea-abae49e68776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa342c-4c3e-4739-89e3-ff8d5d4525bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4299d553-edb1-442e-9339-dee07385e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aab4fa-cbf5-46ca-8905-84c901be519a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15cc59f-200d-4419-a786-abc069ba3031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5dc278-04c0-425e-943f-a928ee91eebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa008af3-f60e-4a26-8fb3-e2c1ade1a3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9706aeef-0263-483c-819e-517cd90a8336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecc2fbe-eeb7-466d-acf5-4867b7fd365f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea73f59-6079-415f-aab2-c15ef4221ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b03ef52-22f9-4ad1-98a1-6ba3b09e390c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd9b84-d440-4aa7-b358-b431316168bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef4d804-f126-4c30-b93a-35fcbf1d738f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe0b4e6-ec88-4f68-bc55-05e78c3224b2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c458370-d4b4-4ba4-9d72-5828ffad37c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c347662-fc43-4f4f-8640-ef4171b937f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe52e98-2026-44aa-a463-29489be2111a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f64a7f-c474-4b1d-9953-705c039f0538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4a3fbc-9971-4945-883a-ec0abfc3d54a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d7b2bf-eda7-4ed3-8339-3d1c2d88358c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dede00d3-7c3c-467b-b539-f1cc05757a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf014d-67b1-4041-99c9-884b429b5305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88004040-d132-479c-bd7c-e3ca2274f3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c8fbdd-cfb7-452b-9c85-f4c4bb64319e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a314409-4d90-4949-8408-e85028299754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3e95b-e029-4f52-a12d-ffef796f6a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4b87a8-8176-4faf-b211-e55fbd0b6073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131fe746-c097-406b-9601-f7358787cd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809a16c1-f548-494e-8ed8-54c7669b2724",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444be41d-8f35-4bf4-b429-a33445f0adb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f34e34-be8c-4727-8d45-ae74e5a1d307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f24e3ac-806e-40f2-8f56-49a8025a69be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed03e23-cfe8-4e0e-8311-fc15abbd84a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523b509-5623-44bb-8340-1dd6c096414c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea79cf4-5a49-4d00-a4e8-217386197474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385aca84-5101-428a-911c-696dff9e1cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9c220f-a15b-4d33-96bc-db46edf47e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b009eafe-ca2a-44fb-b312-00671b3fd873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c92eb61-700e-4065-8d49-42095b7d93ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aad005-b8fb-4516-b107-6595f3791640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20762ef1-14c9-4736-813b-28e99751ec95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0e2e8-00d0-4083-bd51-0a4f5f19e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9eff4b-f5b0-4ede-bd15-990d79445c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e348668-3201-4ab4-af5a-26d317a64e4a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8045f9be-e028-4d06-8002-9e5519e5d3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce64a23b-6f0a-4806-a819-4e2a5281d87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4018d2d-3ebe-4535-a282-a21b90cc0a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a76b077-92d8-4c3f-bfc3-12fa81654921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4e1a7c-0506-404b-9752-048c133b3610",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afc1965-6a95-4cb7-b9af-857a34d7eb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5889c48a-1a30-4634-b8e6-6edb26a5c6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bd5817-e0b8-4a43-bbb4-815bd96f9a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0383b19-278b-48b3-832f-da07f380da86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d987c8-5328-4dfa-97be-567326d4f085",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80b5668-6a52-4d82-a80b-62b98d1432ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f2ef8b-a5fd-448b-b6fd-0b3740fc5117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26753eb0-1603-4b32-a4e4-ce1b41c769bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f8f7a3-b412-419f-b7b9-f4e4b41d51ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd716966-db98-46b9-a823-1ef3c4d3d27f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9d81a2-0efe-4d67-932a-b265d7e38478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ffb19b-8d6c-4f62-ab13-a336dd528c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8e820a-4395-461c-8367-4fcfe1719090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795c31c9-466d-47ed-89ec-8af6c5ad91ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db34e2c-fa48-46ab-a63a-48ff4fbfcd12",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2753a7a-8c64-41b3-ba84-86fcbe3a9505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9712c1dc-b57a-488e-867c-9ec5c749442d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ededd3b3-57f8-4d81-9826-a0ac31c96485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa1dfc8-3e35-4cbc-8ba0-e5b64769607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc340fe-8f8c-4ea1-b94a-41a1ed03e489",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fc1d03-7b73-4704-8b5c-0c67351af38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80224a1-2899-4873-8574-ca83d3f2cfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69232fdf-4182-46a3-be11-ab70e5c441cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e178669-cc65-4e0f-a781-70a31c0a71a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020bd25a-211c-4f48-a902-45a682066994",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c4d635-4931-4690-b90b-7de560216819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7a2ef4-8e4f-4c6d-a146-7cf7f029bf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1b695d-3731-441c-ba90-77bb912e2476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330558cd-5caf-46ff-84ad-ff090f185476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a932d6-4942-4a60-ae52-8920f4a134ac",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34ef5f0-0533-4d45-bba2-67c6aab8e98b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b596025-85be-40d1-8ecf-a14bfc1ec241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6aff10-9178-4320-8bdd-781a76312818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1377eba7-3f4a-4666-86f6-1e857e1aed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35a112-8581-45f9-8f37-9eaf10c9b100",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d012d9-d476-415a-8cab-fb33fecbcd5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec29650-01dc-4e7b-bf9f-32f8336f4f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1acf40-a8e8-414c-aec1-6c30a572da6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5919d95d-630a-418b-9b21-6bf4dea47313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa632e0f-2911-4129-9482-92fdb9d1a440",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6033f057-96e5-4b97-aca2-36504233e817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a179692a-bbc5-4183-b1f5-19a7dcc331b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd8ab09-429e-497d-b541-5b054685ec41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e255eb3a-94f4-48e2-95e6-50155f8a4cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3172fd-58cd-4220-8308-c41a85ec2cfb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237195c1-c621-44ae-835a-e4761cd40d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f208b2e-f816-4f9e-adbf-b16a2d2c63b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ded2f16-41a5-43ad-84ad-f8242252e0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e63143-054e-4c29-88b1-64eef6b45d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b697fbec-2a93-43ab-b295-83a950cefcf6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99d3312-0c09-406a-8711-43d7f15ea451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d48799-5ae1-48ed-a422-854e35e60f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de964619-7735-4dae-9220-9618f4639d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ec5111-0e8a-455d-b5a2-45c32c7e979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c7002f-f799-4545-81f6-300f9e76f0df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598353cf-3864-4276-bf6d-70f0b5d65514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6696cd-c6d3-4659-b7c8-eb495942e06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227c5cdf-2887-44be-bf4f-3d90390bfea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee9f97f-e5bc-4529-a2bb-62ba6fa4aadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72dc1f4-7f70-4b5d-9f8b-f361b45d3f75",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29382f06-fb77-4dab-a18f-2be4f6b6202b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95fa75c8-f967-447d-8115-98c7bed9f477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6327cf7-9892-4166-a516-858e16fd57b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ca66f4-e1a0-4755-b28c-cfc9095a3232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355e0d27-1f53-402d-94af-ce469f90ceb5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89966924-ae58-437c-8ba3-81c25bf6c0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c082f3ca-d405-4354-a13d-e55c606081a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3604eda-95b7-4e14-afdd-cec8ddffc034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a2463-a6ae-47dc-b102-0b94ba55c511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1ee43f-76a6-4028-8594-d3d677a58c16",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881377cb-058a-4975-a12a-8346e7f7c72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc910407-c681-4092-8668-0b6bcebcc9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e55f905-680e-431c-8388-90a8b90aa77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e67937-f0af-40c7-a0fe-cdcd06286f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8420c8-31bd-40f4-a2cf-d6081996e0f0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988d6862-8356-4d76-90fa-e7afa4f40386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0950272-24bd-4a6b-a977-4ff192b607e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ab98af-7ebc-4372-b4d3-4e6de548e624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1b3302-63d0-44ab-9ede-0bf894d22c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ec27ce-0ae8-4577-a978-cea7931f0673",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b2229-0e48-4466-84a2-d36e454b87c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b765bb-7486-44cb-b734-ac42d506fdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91220231-f314-4135-930b-df5f039db8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f7a399-445e-4f47-aa46-65109021f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2285ace0-ddff-468e-9fdb-4fe71727e0fc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e9dd20-8c54-499b-bb73-2ef19afa7207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9052fd2-effb-4b57-b77e-3d17b39d2114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed948e20-2e63-4c94-90e2-6f97a4060ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9456b8-c522-45c3-82f5-fc2faa0f7118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0577de-6877-4650-b78f-e981757c47b9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854ca13-544c-467c-b11d-38e8ad925909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ae0339-3daa-4252-b7cf-25d09c3b50c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed54269-25bc-4359-8ccd-6d25c6164330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b30a1e3-c459-44bc-aaf9-d5e9cc8bd3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2558af8-f158-4884-8fe6-fc8ef12724a5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fbb04b-09d9-47d3-87c7-9d56918e51a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f103ee3-95ff-4a68-ba68-f9a419aa8009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d547545a-831f-4f81-8f69-6fb7357d9af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3746a232-da5f-4113-929c-a1958e647028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac2f025-ec4d-444e-bb8e-e6c04c1e8605",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b05866-d570-4af5-b545-abfa6a7553c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ee1591-8084-45d9-9c37-ad04950a8d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8446a2-5ee5-4ea5-bc18-b8e8abf6c475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cff8395-2813-4cee-8925-e8ebad62e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5291e9b3-65f0-4eed-9a30-59baecfeb4cd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c597d49-a160-4bab-b2f7-50c998f21681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271e11eb-d920-412a-83dc-e93dd9a32abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350b3d13-2faa-4933-ba96-2a30f9a3987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdecf8f-725e-4b31-a14d-dc2b50226085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed33f67-0bf3-4d85-8746-34a18ebd05aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11e4b8-1d6b-428b-8775-de9acffb754b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b14f6f3-256b-40c1-a256-28823e1a276a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99286f2a-9653-4c7d-b970-4e91cf51e6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d427d54-8aa6-4af6-b273-6b84b31df993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae5aed6-f4c9-480b-9d16-7eb8e5f51c74",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd3c8ca-6838-4f16-af66-33eeda35ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fedf9c-e7ed-4b27-915a-762b334d5d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad56612-a306-45ac-974d-b4bbb03562e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066fb72d-f2ea-494f-b810-f6a5621adad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b81e3e-2c69-487e-934e-c7526920fdf5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c74bcf1-c05d-4031-812b-25cc0a924b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d0bd19-900c-4516-a382-5d34055a208b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f075b386-26a8-4064-b2a2-eb8bf4fbbbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a75156f-bff5-430d-aaac-da473f78706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68aeda-e6de-412c-ad76-a7f4cbd222f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dd92a6-192a-4e91-b8cc-8333c6f3f69e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0950b45-8fab-4cc9-b80f-9f671b454600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab50b244-06a2-4ce9-bc18-1ebc2626957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b68fd1-d9ca-4f38-983e-e7d45f622609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dc70b2-ebe6-4b93-b55f-0a1fed06ba53",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d631d9-edef-4376-9270-65293a1df4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab32b4f-338c-4f61-8229-b395e9675c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e15da3c-ea35-4424-8115-816fea05d684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffd41f3-334a-4736-8049-f37d0fb6ea38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72ce9d0-cdcf-49a1-bf6c-19d51a53312d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ba8017-7d85-4402-964e-9a1ab54d7f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbabca8a-bac6-4cd8-a9a0-f57acfe2363f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e36e9c-e82f-4afc-ab92-259dfc4e94a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d46e87-b3aa-4bb4-b291-13bf64891f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10776d84-a1c7-4bf2-b60d-cc289015c809",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0e25c1-0bf7-4a6e-bef8-a474e010dc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534517ab-b783-47af-9c36-a8b2379b2e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa29360-fdf7-47b0-9371-799aed22aaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4b975e-ad4d-40ae-aa7b-f33fb36badba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab29e5b-c29a-4627-8351-9f75d8fcf670",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3472db-b927-40f9-9393-fff0705e55f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e072e134-32aa-4e8f-8616-6a6fd382aa24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39407b21-de28-4f9b-bae0-c2bade35a245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f288a052-0e5f-43b4-af69-b2944de2b530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4103be-1c0e-415e-ac70-f2e666358526",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc84a99f-d3bf-4711-9b86-ab389cac3be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b347116a-ecd3-453a-9cf8-7478ce1449a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c8bf30-03db-43ad-a50c-33c15b3ca4cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1dd864-3540-4f54-bcb7-225c87623cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692ab64f-fb62-47ed-abce-c480fafc8669",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dbfacb-8ffa-44de-b67c-d00650bf6142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207bc000-693a-4f1e-a417-ce47d3f2f32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78faf10-54f2-49cc-9602-45dddb3c9f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb2ef11-1dcf-4dd1-9c0c-ba77acfa0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f01dba-bb0d-4fc1-83cc-27c4d48ebbef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadb6fd7-fbcb-440e-bc2f-890f894bd398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5f8710-f748-40f2-a676-33ae941d11c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedbb041-f8d5-46f5-951a-358ff7eb3203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a56fc27-2190-438e-ab67-bb807289d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eaf230-0ef1-46f1-8f5b-36cac74ee024",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e5c1df-7874-4d7c-94fc-d7a79da70de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5e1685-2337-4d39-a33d-0432913d1efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25490fdf-b619-4f62-b1a1-55c058bb5cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0000d95-68bd-46fc-b5ce-cbaf84f7e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6373d8-02a9-48b9-a7e8-ba71f0a99040",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658eb71d-faf2-4a4a-a0a1-b3d032f7860d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3f4b2f-8197-41b4-80cf-434b66b2142f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bd20c6-1d5b-42ce-bec7-4ae7b7f76750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e385cd1-75fa-46d7-8243-bdd8cc1b56a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b1719d-6e1a-427a-9b10-cbc0f0ff39b8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148bc33-f139-4a0d-99be-072556d6fa4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469df2ef-afdd-4e45-b5a8-41ca60c8ce1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c7a6f-2005-42c3-b920-b5b030eaa9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fd2649-c578-4467-b85a-268caaa8caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bc97a3-7223-4796-a928-2973d83dc0fe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802ef5ea-1127-4f0b-99a3-f8d40fc5a866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e884f2-4906-43f4-8127-df0c611688cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea86796-cbe2-4e65-be6f-edc0b9cd40dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b46424f-3641-49ae-bf69-1a42676ece18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb75aeec-b7de-4202-ab2c-54e4ea7b8ad9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f139b45e-165a-4b80-ac55-4765283402e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f17be7-b183-488b-9343-ffd17211db33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565c223f-a2b4-45cb-8254-8900830baad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd68877-d961-4bd4-ae31-cde1a993ed50"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced01df1-20c8-4574-abbf-dc77ee35a250",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37e4c57c-d975-4a2a-b59d-a25e483655db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa5ef732-8a7f-4eb1-9ee7-79c161e7c0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "169a76b9-68cf-440f-9471-a806aeba335b"
                    }
                  }
                ]
              },
              {
                "id": "cb4f8279-2f98-4193-840f-1c1c115fcec5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9355105f-8ff0-4cd6-bad3-e1c5cae8db5a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e84e4aa-98d2-4352-9ddb-8bcb27432941",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "55bc1876-adc0-44c3-9664-1e093b6df0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f4a1a-46fc-4ebb-beb3-a37b0055e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5f529a0-63c6-4245-95d8-37c44593cf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43638f5-6833-42ae-9c8b-4709a46d7730",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109740e9-69f3-4345-949c-e117e9465859",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "310abe12-ef60-4e99-a7f5-44d3a723bb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86d43b9-70ac-4a06-b1c2-f67964d6c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bcaccc6-1a59-4d24-995c-f6a3eea76770"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f1c2273-8988-4590-b9d7-a9a474114e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a563e643-d15e-4291-89f4-06f58be7576d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92aa03eb-5adf-465c-85f0-8ecc6177fc61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b6cfeeb-58ed-45cf-ae4e-c93610933070"
                    }
                  }
                ]
              },
              {
                "id": "0f6036f5-e4d0-48cd-81f1-c3649bacc618",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dbc854d2-392f-4ba7-b4ef-735b3f6739ee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac4d034-be6f-41b5-9517-698dd3fd1f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a83901f-03d4-4937-8b7d-4743b49d9768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ac49a1-90e0-4344-a9ec-fb07ad92e099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28780fa9-792a-4603-bd3d-984e726728bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3036edff-5482-4115-b08a-c663660fd656",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12e241ea-2ddf-40ca-a156-63ac528a4e71",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1ecb6dc-72a3-4adf-a685-06ca9283f262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7835007-4dc4-42c7-aa47-f8e14f4e829c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ad4a37-4c69-46bb-a375-7515c24e85de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac4910ed-1c29-4a71-9b87-22205a45559f"
                    }
                  }
                ]
              },
              {
                "id": "3cf4c729-6683-4828-8153-735b7164a103",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ff6ce11-fe99-4e7d-830a-a36316fe63a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f4cdfbf-235d-4d25-8f94-bbb8054aee38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d891cbdd-8b95-436e-af5a-4f57448eacef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6a2bfff-f08f-42a0-8147-572bc82fb052"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26d364f8-7c17-4ca0-abdd-e8dfd8656034",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ef84963d-8877-4a39-8510-423b22122960"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7145a98-3302-43da-b471-dcff508e09c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f334937d-eb87-4c67-aff5-e18dbbd87eaf"
            }
          }
        ]
      },
      {
        "id": "8aa4a930-eed1-4127-819e-7a23dae043eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8b20e12-9627-415f-be99-29d7868c4902",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3d60855-6a87-4743-bce6-49c1b80d7c40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e62179-8181-4923-bc7d-7c241b18d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b8910b34-ded1-4b25-8bc5-24fd4b052bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcb7e35-bc82-41fb-b859-613073455a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4524c3a-2d38-4178-88c1-7ee800219033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581eb30e-dfed-46f6-bade-e23326a21a3f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b48aaf2-bac3-47a2-9935-3fed4baebd63",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1c5d92f-bc38-4894-aa8c-6a2efd7caf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c9ec29-6d91-4bdd-8796-3e7a857fe70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bd4d4e2-cd46-4028-99cb-079fd2818e32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9807a087-9697-494d-9de0-dcc2bb4478c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e5af6b3-a4ea-439b-a3f2-afb7a7cd6a0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0cb11ae-e9ad-4a0e-b88c-aae88220284f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adbd7d98-f1f7-4bda-b264-320c1cd50f13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caa1fe82-92bd-4425-96d1-46d1be4db9e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d764eea5-53f6-44ec-bd27-edaac66ad7d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4f07a1d-2191-41f2-8e2e-204071c3d310",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c535326-d4bb-4f25-850a-9f20392e52a4"
            }
          }
        ]
      },
      {
        "id": "ee70e6b5-70f0-466c-ab47-d1fc11efc364",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "09cdb857-89f2-44a0-b923-c16af2b1e2d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38a368fa-933c-4eb1-94ce-031f50986b29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a2f7dc7-b18a-49ed-9bc7-ef2ea39dbc85",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6adca66-e696-42f5-9a1d-e3130622ee62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f33166-14bd-4385-b56a-c72081cf4ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca12bec-b3cb-4258-8ae3-7433dc6a6d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b5dfb59-bf37-4e7f-af97-10093c622553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e14255c-f7e1-42cf-9ed8-4ec88e7cc980",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7680518e-3624-41ea-ade5-4e968807cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8e6494-d7de-440e-b927-30494e05997d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3842360-18cc-4db1-9bd6-4e325c4ce974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c359319-ff2f-4bb7-b7bf-bbb099f4f5df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8650244-924e-471c-993e-7dd6153e5317",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aff9d4a-016e-4721-b1f2-e0c5f73c3bda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f27d1cc3-3663-4101-9e66-84bf972a3833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ce94ae4-7cd8-45ca-98cb-9de78060cb9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab8f10d5-a967-4376-8257-a291cb714b89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64fc8bcd-7e2a-40ae-829a-82aa1fff4e26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3962542-1c66-46fa-bc18-cf3dbef2498c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a31d4cb-a2b2-4ef1-895e-f7d569b2caea"
            }
          }
        ]
      },
      {
        "id": "c3204b0a-9909-43f6-b6ef-e7b46afc45d6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0913b49e-21e9-4622-b126-e0d39f68acef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee8e1829-2986-46b2-810e-580c8e6ec335",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "896a6066-ffda-432e-9b09-c15861c4d0a3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b15b51c-bf90-45a2-8424-62a4e6a47b61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129a2dc8-4e31-4b07-bfd2-9861143dc009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d5742-29b3-4c36-96aa-2beb0387998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e197f5fa-3d4a-4deb-91b7-17420e286f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a76d98-2d4e-4c69-b9a7-0e7361ad0a66",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd434f51-aea6-4fc4-bb5c-fca7cfcf4a6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "846025e6-a8f1-43bb-ad10-ad87cd3c5e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc07a31-82c3-4d63-a117-6177e6c2ca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07003c3e-c3c8-474f-a7e1-7ab308349ed3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23c6dd50-df38-43ce-b1d5-f1d901c86a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87034cf4-20e6-41ad-829a-894ede07b0ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd49d307-c490-4583-ac06-55993f44011b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1c8e964-2c1d-4e28-8d13-65ce0d8c58a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e30d5af1-2fd0-4ed9-930a-4e4104bc0732",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17553962-b421-425d-a903-85f0352d7368"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe79d977-7ed5-492d-8aa1-1b6e9093cd5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a10261c-af20-4905-92f5-a8b4ffe40158"
            }
          }
        ]
      },
      {
        "id": "bbd368a9-9ab0-4e05-ac3b-4a996a7348ab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb12abde-96b0-4e5c-8547-89036e042a71",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b1d9073-91d2-4661-ae81-b049de0cb26d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3c92c962-c0eb-48a7-831c-864fc74806c8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9947a147-c317-404b-80c4-1278a753d4bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02b5b47d-ac2f-41ac-af99-1f36bad071a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.07692307692308,
      "responseMin": 7,
      "responseMax": 272,
      "responseSd": 30.452008998931525,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683851783325,
      "completed": 1683851814536
    },
    "executions": [
      {
        "id": "7c8781d5-df6d-463e-ac84-21713b9428e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dd3fcd93-0435-42ce-93ba-b0e0c162da91",
          "httpRequestId": "b1ab0283-0dd0-40aa-b028-46d5f109ba77"
        },
        "item": {
          "id": "7c8781d5-df6d-463e-ac84-21713b9428e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3649d604-3022-42c6-ba8e-d177ec809523",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "848c57ca-4a72-4386-bb74-a9f3ca0f33aa",
        "cursor": {
          "ref": "2be5d485-9ed8-49eb-982c-ab323312c13b",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d3eeaa2-3949-4b06-b6a0-65025dfb58b8"
        },
        "item": {
          "id": "848c57ca-4a72-4386-bb74-a9f3ca0f33aa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dd754a8b-2b33-4202-90e2-5d4a047b4d1e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "82f28e92-755f-411a-a9fa-2f3c8f075941",
        "cursor": {
          "ref": "9bfa8e73-04e0-4356-97f9-309b429e2187",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8aa7f3a7-1eb9-4337-b7ab-ae5965d241ab"
        },
        "item": {
          "id": "82f28e92-755f-411a-a9fa-2f3c8f075941",
          "name": "did_json"
        },
        "response": {
          "id": "ff53a5dd-9930-4c7c-9723-29a2a3de33e9",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1766099d-c0e3-4dd2-a936-ed72592dc4ca",
        "cursor": {
          "ref": "f775b7b3-7de3-45ed-a735-f73d20a1aea4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "098ed1c3-3dd3-4113-b383-45ec10a3aeaf"
        },
        "item": {
          "id": "1766099d-c0e3-4dd2-a936-ed72592dc4ca",
          "name": "did:invalid"
        },
        "response": {
          "id": "104583f2-f760-4bca-ad6a-533f675cbc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1766099d-c0e3-4dd2-a936-ed72592dc4ca",
        "cursor": {
          "ref": "f775b7b3-7de3-45ed-a735-f73d20a1aea4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "098ed1c3-3dd3-4113-b383-45ec10a3aeaf"
        },
        "item": {
          "id": "1766099d-c0e3-4dd2-a936-ed72592dc4ca",
          "name": "did:invalid"
        },
        "response": {
          "id": "104583f2-f760-4bca-ad6a-533f675cbc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6c11f5-b1fd-4c49-9082-c6eb43954fe6",
        "cursor": {
          "ref": "ecf222bf-b020-45b7-88a4-1b76adcff935",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47e5d5ef-7490-48c7-8e59-dfb134e6ea4e"
        },
        "item": {
          "id": "3f6c11f5-b1fd-4c49-9082-c6eb43954fe6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c1670ef1-32cd-440b-9174-17fc001f7900",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb38b334-46f3-4bac-aee8-6f562b26529d",
        "cursor": {
          "ref": "9458d202-f3a2-47c7-b8cb-17bab450d815",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e98af308-aa3b-4218-8d2a-2a288c4d145a"
        },
        "item": {
          "id": "cb38b334-46f3-4bac-aee8-6f562b26529d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ede2c5c-885d-4550-b79c-54a112398fab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f818021f-c8d1-466c-a1fc-3b6faf5e3360",
        "cursor": {
          "ref": "525f24a7-4684-4388-9979-af23acd6a86f",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "18cfa241-cbac-415b-a7e9-840af9d91730"
        },
        "item": {
          "id": "f818021f-c8d1-466c-a1fc-3b6faf5e3360",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c49ca05-53a7-4a8d-aa10-c3279447e255",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694fc164-99a0-40af-ab14-28ae70bb5634",
        "cursor": {
          "ref": "5092c265-2ee3-4afc-a04e-c1b626068932",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "086e5381-e22a-4eb4-bdf5-f1e1b1f15bea"
        },
        "item": {
          "id": "694fc164-99a0-40af-ab14-28ae70bb5634",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e5da26d-e2af-47c9-9ba4-b9c4be1f948e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694fc164-99a0-40af-ab14-28ae70bb5634",
        "cursor": {
          "ref": "5092c265-2ee3-4afc-a04e-c1b626068932",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "086e5381-e22a-4eb4-bdf5-f1e1b1f15bea"
        },
        "item": {
          "id": "694fc164-99a0-40af-ab14-28ae70bb5634",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e5da26d-e2af-47c9-9ba4-b9c4be1f948e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28072f5-5111-450b-aa09-cea1e07fbacf",
        "cursor": {
          "ref": "7753903b-3d85-4ad9-a024-7a0ee632bcfa",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70774e5a-5a8f-4ce8-9730-a15833e304c7"
        },
        "item": {
          "id": "a28072f5-5111-450b-aa09-cea1e07fbacf",
          "name": "identifiers"
        },
        "response": {
          "id": "4a1b1e39-fc3a-4398-83d4-9766bd50dbdc",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1adef4-699f-4a76-8a35-641a3c703b44",
        "cursor": {
          "ref": "93b4f8d7-8caa-4398-9da7-19113ac535df",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "38fde6c5-8cea-4098-ba6d-f16481acda3c"
        },
        "item": {
          "id": "ce1adef4-699f-4a76-8a35-641a3c703b44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f18645c-a2da-4fec-ba7e-ca014cd46759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1adef4-699f-4a76-8a35-641a3c703b44",
        "cursor": {
          "ref": "93b4f8d7-8caa-4398-9da7-19113ac535df",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "38fde6c5-8cea-4098-ba6d-f16481acda3c"
        },
        "item": {
          "id": "ce1adef4-699f-4a76-8a35-641a3c703b44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f18645c-a2da-4fec-ba7e-ca014cd46759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002e3236-bba8-4916-85d1-ae5c2fec0e76",
        "cursor": {
          "ref": "add2c24e-8b56-40ca-88c3-2f952b2e6059",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6d35387-05e6-4608-ab3f-6dac5079657f"
        },
        "item": {
          "id": "002e3236-bba8-4916-85d1-ae5c2fec0e76",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8cf92ac2-1861-4c6d-ae9a-bd1ccc036a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20e75b3-1b89-4ffa-bbd8-c35627af1528",
        "cursor": {
          "ref": "6e5d10df-362c-4bd3-a7ae-534f7a8f7a5d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "630893bf-3af2-4a35-bf3b-a35e12fb4a42"
        },
        "item": {
          "id": "f20e75b3-1b89-4ffa-bbd8-c35627af1528",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d2247975-8d48-410f-a9b1-a331b6f6b5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98828b03-98e6-4e01-8318-a71fbf2fe5ca",
        "cursor": {
          "ref": "11f3c06b-2087-4bd9-85f9-330da235d18f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "49cea993-1d40-4852-88fd-a1f094d203f1"
        },
        "item": {
          "id": "98828b03-98e6-4e01-8318-a71fbf2fe5ca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "08cc21fd-8a01-476d-aaf4-9d5c85c7157e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb1b63-84fb-453a-ae1c-2c2692243a81",
        "cursor": {
          "ref": "f5534401-94de-43e6-88e3-2211128e809b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5dad6fbb-6273-4aa1-8165-92746445d8b6"
        },
        "item": {
          "id": "51fb1b63-84fb-453a-ae1c-2c2692243a81",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8e814d7-abbe-4360-9651-ad6a85422bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302434f1-360d-4619-adcf-5c93c0456699",
        "cursor": {
          "ref": "9136e1d9-00fd-4e5a-ac61-151ecee32e2c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "66c760a4-36f6-4e8b-9441-af3e4f83e09a"
        },
        "item": {
          "id": "302434f1-360d-4619-adcf-5c93c0456699",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d8eb228b-56b5-429f-ba4f-3c604ab3a113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcfa78f-df99-4cee-87a3-ecae651770f1",
        "cursor": {
          "ref": "73791828-4063-485a-a245-bbfbd123ccc9",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "970150b4-23a9-450a-b52d-df1916243d8c"
        },
        "item": {
          "id": "0dcfa78f-df99-4cee-87a3-ecae651770f1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "74f4b624-4a41-4219-915c-abe5dcbe7ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b146085a-7b5b-40a9-8b1f-a36efbb21026",
        "cursor": {
          "ref": "1c0e3b5f-d824-41c9-8b44-fe7a7c547e58",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0aea03b9-e990-4d76-ab2d-6046fb568124"
        },
        "item": {
          "id": "b146085a-7b5b-40a9-8b1f-a36efbb21026",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "987c5a7b-a50f-4c59-bc66-54c09b666123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd9cc9f-6782-41e3-b464-7843644d9a95",
        "cursor": {
          "ref": "60d6d2d9-846f-463c-bfd3-bde53be005ef",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2d1385dc-e682-4ba8-909f-643cbd78b34a"
        },
        "item": {
          "id": "5bd9cc9f-6782-41e3-b464-7843644d9a95",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96998c22-9091-45ff-98c9-2864450fc2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1e936-eabf-4978-af48-7c64f0c896ff",
        "cursor": {
          "ref": "ee468c75-361d-4c4f-a9c6-5bc72d9886ff",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "528d1518-72a2-4258-ad9a-30531ab3e942"
        },
        "item": {
          "id": "21d1e936-eabf-4978-af48-7c64f0c896ff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a621daf-2f6b-41f5-8c6d-8dd97b91836b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd0fa5-a03e-408a-b053-b38bc19d20b2",
        "cursor": {
          "ref": "8d953d8b-fd65-4f40-b567-af6d9c91f615",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89405361-2e4f-4e99-904b-83743313427a"
        },
        "item": {
          "id": "b6bd0fa5-a03e-408a-b053-b38bc19d20b2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a82699e2-f354-4558-bec1-7cfa9d0a830c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91063d35-7e67-4c13-b32b-dbb4bede27a3",
        "cursor": {
          "ref": "3d960ffa-3718-4dbe-9f01-ce8be6dfe783",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3e4fd24a-df04-44a2-956e-e47a5638d95b"
        },
        "item": {
          "id": "91063d35-7e67-4c13-b32b-dbb4bede27a3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f391504-90c4-47cd-a894-d7c3793c15d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93787822-cefc-4276-a33b-bfc12d46cd06",
        "cursor": {
          "ref": "66d4e995-4d79-4fd0-ac45-2b90477242d6",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be3e4225-1798-4d9a-87a9-66afa0246e68"
        },
        "item": {
          "id": "93787822-cefc-4276-a33b-bfc12d46cd06",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "57f443b0-e0d4-4421-bd28-0b4859f59464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132b02de-e677-4848-bc64-c043eae873a6",
        "cursor": {
          "ref": "11cfe18b-ffd2-4ac5-81d0-0049483eff20",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c87ee53-b4ec-4fc3-bbdb-7a9a5dec491f"
        },
        "item": {
          "id": "132b02de-e677-4848-bc64-c043eae873a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "feb67cc9-9062-4831-aeb9-5fc849b4dd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c4788-97bb-43ff-a0e4-6f8748ba54f3",
        "cursor": {
          "ref": "f081adaf-f25b-4894-8e9c-5ee0f996a16b",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "43110ff6-2c54-4735-b3fb-c4b62f0ac353"
        },
        "item": {
          "id": "bf1c4788-97bb-43ff-a0e4-6f8748ba54f3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7319a96f-e618-44fa-bf69-eadab8256bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7a7441-af9f-4f2d-a160-6c226ddf8986",
        "cursor": {
          "ref": "af0b6b97-8dd2-4037-b982-e63227523a51",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "61066355-d1fa-4c42-89a4-14492dd663da"
        },
        "item": {
          "id": "af7a7441-af9f-4f2d-a160-6c226ddf8986",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "05dd3150-a727-471f-bf0a-a63e1575b755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a848964-f0a5-4119-be7d-8ec80a6090c6",
        "cursor": {
          "ref": "10254676-03bf-45dd-90a1-85772812a1d7",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "181b7184-0597-45b7-b1d9-c745d03bac79"
        },
        "item": {
          "id": "5a848964-f0a5-4119-be7d-8ec80a6090c6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "78978e82-8d3f-4a55-8419-190583b867a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1c54d-77f3-4711-9b02-1d7f8fd16281",
        "cursor": {
          "ref": "88bfabfd-5f01-4726-85b2-6bcf7767b7b9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "15c0cedd-51bb-478e-83fe-7f6f1c3a27db"
        },
        "item": {
          "id": "69f1c54d-77f3-4711-9b02-1d7f8fd16281",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bc369e81-e194-4671-b4b1-cc879e99cfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44c044b-19f7-4ed1-b674-4efebf3a4f8e",
        "cursor": {
          "ref": "657dd4e8-e32b-4e6f-bb95-8c184409c3c5",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "30bf6671-fecd-409c-b7ee-7a807f15dc35"
        },
        "item": {
          "id": "d44c044b-19f7-4ed1-b674-4efebf3a4f8e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a30244c-f953-49fe-891f-4486a5bff064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b022f-6609-40ae-a696-8353bf36215b",
        "cursor": {
          "ref": "092558f9-d2bb-4887-ab99-030340bda840",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16cbab50-23d7-4edb-a547-b9fd59e53fe9"
        },
        "item": {
          "id": "7c2b022f-6609-40ae-a696-8353bf36215b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f67f3463-7df4-40cc-a03d-af207793cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453ff503-8c90-4e5c-a4f0-d44ea82ffbd1",
        "cursor": {
          "ref": "7674a4e2-d087-41fd-89a9-108112b579f3",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fe26e476-ee96-4897-88cb-a0c905463d26"
        },
        "item": {
          "id": "453ff503-8c90-4e5c-a4f0-d44ea82ffbd1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8436d1ac-05b3-483c-a853-85c948c99388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fd9fec-6c8c-46d4-a249-f83975eeade1",
        "cursor": {
          "ref": "9a435c5a-7a7c-467e-94c7-6362a3b47c09",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f721b122-7ff5-4ec8-9809-7a3c6dfbecb3"
        },
        "item": {
          "id": "18fd9fec-6c8c-46d4-a249-f83975eeade1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bd2ff381-cb93-4074-b2de-84013f8ad7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2067aea-b34c-4d95-ae74-3d6d10768bdd",
        "cursor": {
          "ref": "af340555-649f-41c6-bd70-c878a60cabea",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ecfe91e6-0498-4a1b-b62d-ba0f5a9e6617"
        },
        "item": {
          "id": "e2067aea-b34c-4d95-ae74-3d6d10768bdd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7e71b1b8-637a-4820-9ff8-ee5186a1d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d5346f-a418-4578-9f8a-da1828e39807",
        "cursor": {
          "ref": "34903323-b0fc-4695-8563-aa559f27da13",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "28fbe939-166a-4d31-a606-5564590398ce"
        },
        "item": {
          "id": "f7d5346f-a418-4578-9f8a-da1828e39807",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f74b576a-5b81-4f0b-af17-de6a67bf8197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193fbf43-4fed-4795-aa86-62baab010f89",
        "cursor": {
          "ref": "9bf75f5c-d9c9-4ddf-8f1e-b910c87d397c",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b566497-e7fe-4b9f-84af-8819ae713425"
        },
        "item": {
          "id": "193fbf43-4fed-4795-aa86-62baab010f89",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c55d8731-fa47-4615-bcf7-9329c2ce9b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5f4cbc-8543-486e-a65d-46a0ac8d411e",
        "cursor": {
          "ref": "7e689fa6-a6c0-4aab-9348-cd17a95b0138",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a715e790-7376-4fce-bff4-5ab9e6618e64"
        },
        "item": {
          "id": "0d5f4cbc-8543-486e-a65d-46a0ac8d411e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "220864f6-4611-4f13-bb69-1c7acdf1bd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258eebcc-5a98-4fa3-911b-3e00ef766138",
        "cursor": {
          "ref": "f739bf74-6539-4529-8dfd-ad809a2022e7",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ec1da24-e500-49c4-bc18-c6872fb8a45f"
        },
        "item": {
          "id": "258eebcc-5a98-4fa3-911b-3e00ef766138",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9358a1ea-e41b-478d-8bea-b0b03eb8a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534b7389-d587-4a4a-9dc7-e7245d1b4564",
        "cursor": {
          "ref": "fc8ad0d7-342e-4f99-be06-1d0e7f218636",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c1d8b529-0c7c-4159-a228-36d82a29a353"
        },
        "item": {
          "id": "534b7389-d587-4a4a-9dc7-e7245d1b4564",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "83d0e33e-50c3-4138-8d58-4c2b26514109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c476101b-60fb-4000-9207-b5a64557fc50",
        "cursor": {
          "ref": "abb7fb63-86b8-416b-81a0-e3a6bb6bc816",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "920f9efd-94e9-43be-b8b2-646925df2ea4"
        },
        "item": {
          "id": "c476101b-60fb-4000-9207-b5a64557fc50",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e744ff3d-806f-4e65-9fed-81f8f813c3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc99e264-9472-41d0-85c7-d5c65ac5681b",
        "cursor": {
          "ref": "6460a324-c8ed-40fe-b235-e1ed88fea4ce",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1cde5dc-f74d-49d7-a5fe-637189ad7dbf"
        },
        "item": {
          "id": "dc99e264-9472-41d0-85c7-d5c65ac5681b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "84e7a96f-23c9-4602-b4b0-e48e8fd8578c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fc80f3-2e92-4c9d-bb8c-e898380543ee",
        "cursor": {
          "ref": "02581b43-5583-41ef-9943-6ee94774d9f6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fbbedeac-0676-4c09-a620-f4f38cf0d844"
        },
        "item": {
          "id": "e4fc80f3-2e92-4c9d-bb8c-e898380543ee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9e4c0903-3157-437a-99a7-84946a9eca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6b11d1-36bb-472b-8c5a-afd709054c1b",
        "cursor": {
          "ref": "9ac28b81-224a-4bcb-adad-f8d41c9e53b0",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "33cff7e6-246c-4bca-97db-706dea55c0f4"
        },
        "item": {
          "id": "4f6b11d1-36bb-472b-8c5a-afd709054c1b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "38e6a7cc-33e2-481b-be5c-b17c4f042f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7beb1a7-da9b-40ef-9f9d-e71369232245",
        "cursor": {
          "ref": "4f1f4f26-3026-4f53-a3cf-0310450dd86a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5ad18e0c-be60-47b0-ba7c-27046de9f454"
        },
        "item": {
          "id": "e7beb1a7-da9b-40ef-9f9d-e71369232245",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4eb9204-6f48-4719-a3fb-24495ba9502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b084956-a4f5-4a6c-9c78-6cb4e51d54be",
        "cursor": {
          "ref": "fcab3f17-afef-489b-b0c5-855c6d7415c7",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7df50a5a-76ab-4664-b8d7-31bc3b2c6f9e"
        },
        "item": {
          "id": "9b084956-a4f5-4a6c-9c78-6cb4e51d54be",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "86b6b085-ff89-4867-80cf-b743c932a96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b9ef3f-af35-43f5-9bb9-3b213432a4fe",
        "cursor": {
          "ref": "35e94a87-ac6a-4b5e-b37f-7935d00b20e2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bbfd0845-26d4-4aa7-b3fa-21127623ba39"
        },
        "item": {
          "id": "c0b9ef3f-af35-43f5-9bb9-3b213432a4fe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "587e96ee-3ca1-458d-abc2-83c27738406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ce3cc4-5c9b-4108-85ab-7e639ef63e7e",
        "cursor": {
          "ref": "b2db5ff9-3030-4635-8326-a67f000af0d5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa2438de-c53d-4b74-ab92-6e61d97f6888"
        },
        "item": {
          "id": "93ce3cc4-5c9b-4108-85ab-7e639ef63e7e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e4825b1f-557a-45e7-bdef-acf9abafd5c2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8503e28-d712-4d15-afc5-e7f567ab5a01",
        "cursor": {
          "ref": "a5d4e959-a08a-4ad8-baed-6929a018ce9c",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2fac47a7-166c-4b5d-9cab-92bdb352c2b2"
        },
        "item": {
          "id": "d8503e28-d712-4d15-afc5-e7f567ab5a01",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc9d5903-0803-4d3d-a7b6-30d0fc12a960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78dd856-87a8-4e1f-b976-f6758eaa215e",
        "cursor": {
          "ref": "47d8ca4c-8480-4788-91de-92bf3bafec00",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "35d6243d-536b-4d12-a816-125c2ecc9654"
        },
        "item": {
          "id": "b78dd856-87a8-4e1f-b976-f6758eaa215e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ac3c5c86-f89a-4388-b23b-db9093aff425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1697b02c-817c-441a-b4a5-9698e33463c4",
        "cursor": {
          "ref": "cfd8d4fa-5297-4f91-a784-21644c2740d6",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "82ca38f2-9096-4af5-9c3c-f35b744f14d8"
        },
        "item": {
          "id": "1697b02c-817c-441a-b4a5-9698e33463c4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "499b62b3-4990-4f89-a3d0-1c82b574171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94099c2-783b-436c-9879-16089cb960e1",
        "cursor": {
          "ref": "16913b10-1bb3-4d09-a87c-029f833fbe0c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fcdbff59-11d2-4601-9964-7991c0d3a1bd"
        },
        "item": {
          "id": "b94099c2-783b-436c-9879-16089cb960e1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be7711c3-315e-402a-8fbd-296c22924ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befb592a-a974-400f-bdae-9850143418e2",
        "cursor": {
          "ref": "68303146-c12e-4b5f-9983-7a8ac457f804",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "70b8992c-4c2a-4d5c-8298-4e7690d808ba"
        },
        "item": {
          "id": "befb592a-a974-400f-bdae-9850143418e2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2c7e0d35-754b-4f50-a03c-f45704ce2068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95217b4e-2a0e-4c95-a313-2faecaa4472f",
        "cursor": {
          "ref": "2d28b23a-febc-4077-b26f-f012cddaa971",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8dea2f2c-1661-499f-8edc-bb03edaea01b"
        },
        "item": {
          "id": "95217b4e-2a0e-4c95-a313-2faecaa4472f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37e03cce-253c-454b-8db1-099c72916a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc844c-4328-43e5-aa61-506ed5c1a132",
        "cursor": {
          "ref": "669f6d30-f2fe-414f-a4fe-b638aad2261d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4f6dbe24-c76a-484b-8f3d-f53b739fed90"
        },
        "item": {
          "id": "05cc844c-4328-43e5-aa61-506ed5c1a132",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dd766151-f7be-4921-a619-e1676a3f634e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1e452-1d4c-43db-b5a5-b9bcbfc6310d",
        "cursor": {
          "ref": "edf693c0-6d3f-43d8-b2f0-ccc2bfed06b4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32958416-4675-4758-8555-8b89a5027796"
        },
        "item": {
          "id": "4bc1e452-1d4c-43db-b5a5-b9bcbfc6310d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b8ac9f36-69c2-4e26-b137-3e8b467f137b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef78bc8-3dc7-4cb7-a906-f8bf2d9d2c43",
        "cursor": {
          "ref": "b191bc52-e7b9-437e-b3f3-4efad489ac6e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1e8a51ee-8b67-42c3-b694-c5541c3bd981"
        },
        "item": {
          "id": "1ef78bc8-3dc7-4cb7-a906-f8bf2d9d2c43",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5d6d1b14-38a6-48ab-80a5-435adae8e6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9797336-72e3-4ed8-9b29-ee13398de8ec",
        "cursor": {
          "ref": "e8338a2c-508b-42c1-91c0-0d079e621975",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "abe65da8-5c3d-451b-9620-331c8437928f"
        },
        "item": {
          "id": "c9797336-72e3-4ed8-9b29-ee13398de8ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "33eefc13-1d41-40af-b6db-0afb1f4e72f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596228ac-966b-44b4-90cf-e550de68b0af",
        "cursor": {
          "ref": "ce452ef0-7bff-4cf5-a299-0d3e055a5bb8",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c7afabe1-4297-40e8-88c6-a1912c7e97a6"
        },
        "item": {
          "id": "596228ac-966b-44b4-90cf-e550de68b0af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "543fc540-a604-4696-9e7f-86ba3714bb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e0a7a5-5a5d-46f9-9066-6d9902533206",
        "cursor": {
          "ref": "2db39fa3-7e81-43f3-aee1-f7a02b6de7ab",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2ba34881-22c4-4053-b361-0505b186cde4"
        },
        "item": {
          "id": "48e0a7a5-5a5d-46f9-9066-6d9902533206",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3032810a-4ccf-45f9-a116-84ee21596926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bce559-559e-4ffc-a1c5-a3d960259b94",
        "cursor": {
          "ref": "814c051f-762a-4c99-ac43-7efa0d457b73",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b523939c-d5ff-43e9-809a-963717dbaae9"
        },
        "item": {
          "id": "83bce559-559e-4ffc-a1c5-a3d960259b94",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d3b57d38-030b-4f20-a3bf-dd328615e6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d40f4c5-0b13-422c-9cf2-c3310e975be2",
        "cursor": {
          "ref": "28a5795c-f628-4edf-b9fe-49b2f51f3e36",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "800f29ca-6546-4d20-9e2c-9dfbee71200e"
        },
        "item": {
          "id": "4d40f4c5-0b13-422c-9cf2-c3310e975be2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9bed694f-b45e-424a-8721-d4ab19142328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9839e9-0b13-4ec5-b611-d6b1c9009688",
        "cursor": {
          "ref": "fff7bb35-07e8-454c-b852-0ef5500fd694",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "66560052-1a98-4227-80cb-c7eedb850d2d"
        },
        "item": {
          "id": "aa9839e9-0b13-4ec5-b611-d6b1c9009688",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f049bbb2-e869-420f-943d-a6a86009c3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d37c0a-63bd-4d98-8ba2-b0fbe60dade6",
        "cursor": {
          "ref": "c04614fe-611a-4658-aa29-ceeed64f6096",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3b79fae6-af26-488b-a75d-60706e1188a1"
        },
        "item": {
          "id": "f4d37c0a-63bd-4d98-8ba2-b0fbe60dade6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3ed66429-ab19-41a7-b099-97adf588a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc8295a-f8b6-4805-9e34-cca873c4ff15",
        "cursor": {
          "ref": "bcb1d5a9-4424-4252-afe9-5d34b5801b80",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6cdf0726-148d-49e8-a60f-afca5dcd9435"
        },
        "item": {
          "id": "bcc8295a-f8b6-4805-9e34-cca873c4ff15",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5238ffc1-c60e-4a59-97eb-878688631acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28489d83-bafb-4869-bff0-bca7d134d830",
        "cursor": {
          "ref": "96f20cb5-ba59-40a9-8343-e18a14a34102",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1ed4cb40-fe3b-413d-b0e1-c8bb8e04a907"
        },
        "item": {
          "id": "28489d83-bafb-4869-bff0-bca7d134d830",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "91d9c173-e93b-4453-81e8-ed187a5c6cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac53c1d-5a43-4fed-babd-0c783ff0d957",
        "cursor": {
          "ref": "95aa16bd-31a4-43d5-a505-263bf0737887",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5753725a-22fc-4490-a9b6-c9876eba1b8c"
        },
        "item": {
          "id": "1ac53c1d-5a43-4fed-babd-0c783ff0d957",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29debc96-532a-4875-be92-8a474ff061be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c7306d-ab44-4fa2-bcf5-e89eea9d7fd5",
        "cursor": {
          "ref": "45e45552-5301-4c61-a105-52d3664376b8",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1d4e62a7-79c1-4bdb-b70a-5c5f39d9c5c8"
        },
        "item": {
          "id": "e7c7306d-ab44-4fa2-bcf5-e89eea9d7fd5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "05822b86-5b26-4526-b78b-a5574e18acf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe2b9d-47d1-41e8-93f3-87bc4e40e879",
        "cursor": {
          "ref": "0ffb4d10-3e5e-4cdf-ada7-75dc89fa1c15",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "71dee9d2-8118-48c2-80a1-5fa2a46c906d"
        },
        "item": {
          "id": "2bfe2b9d-47d1-41e8-93f3-87bc4e40e879",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c3358375-bbcd-4aac-ab8d-d0ea03bba4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34bd510-4ef8-4f00-8a9b-fadfe4c12c7d",
        "cursor": {
          "ref": "981cc29a-5140-4f06-85fc-24afa39ff90a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c5a192e-ca69-44dc-a82e-cb26f59633fc"
        },
        "item": {
          "id": "f34bd510-4ef8-4f00-8a9b-fadfe4c12c7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "512b0d45-2e80-473b-8d7c-82683c2e26d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739606a0-a71f-4b3c-bda9-4e309ac62e8e",
        "cursor": {
          "ref": "e38239b8-32a6-49cc-a00f-ea51f71d68a4",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c7495c4f-da9b-435b-bc3b-b695a42a723a"
        },
        "item": {
          "id": "739606a0-a71f-4b3c-bda9-4e309ac62e8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17dda212-9845-43f1-b0f7-d1ba3963635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faf5d81-9ea0-4be0-861b-6d8b35180c1a",
        "cursor": {
          "ref": "d71a305f-152b-4d52-b191-6cfda527c55a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7a473bb9-2bac-46ec-aaa3-a63671ca5599"
        },
        "item": {
          "id": "3faf5d81-9ea0-4be0-861b-6d8b35180c1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "37c8cbe8-06b8-4a8d-873d-d9f756e10d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303df690-5a6c-4220-af68-89222979411e",
        "cursor": {
          "ref": "f70af9a8-eaac-44db-98cd-30a22beb60a8",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d1545e37-1061-43b7-ace4-97aa19e84974"
        },
        "item": {
          "id": "303df690-5a6c-4220-af68-89222979411e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "48f9fb30-f370-4d93-82ce-831909f4eea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc968968-e223-4719-9c1c-d9c08155fbd1",
        "cursor": {
          "ref": "fcf85c19-5e7b-415d-aeb5-58074d186e66",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "854b4f45-b3d5-4a12-9574-73d77e00b0b0"
        },
        "item": {
          "id": "cc968968-e223-4719-9c1c-d9c08155fbd1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "56e6784a-6a99-43f6-a70e-c5ae6c42448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1d2be1-c9ab-43f5-ba93-645c46709b33",
        "cursor": {
          "ref": "43a41db3-9afa-474c-9814-86617388a4f5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "249a6063-e103-4102-8411-69789253087b"
        },
        "item": {
          "id": "ce1d2be1-c9ab-43f5-ba93-645c46709b33",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4aab085-7c15-46ce-b6af-a29b644fdb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594cd6f5-2bb7-482e-bd94-f7214bd3afee",
        "cursor": {
          "ref": "994b69ac-3b78-48df-bd1a-9673e2c87ab0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6b053568-7206-499a-a837-9218b1eb38f0"
        },
        "item": {
          "id": "594cd6f5-2bb7-482e-bd94-f7214bd3afee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3dd912c1-d767-4256-9c6f-992e6810b6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c9482-6253-4f30-9523-b4fc4af5ee37",
        "cursor": {
          "ref": "01bab437-27ae-4e84-b860-99abe8a19afd",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f269b29e-67eb-48f5-89fa-092e42549f2c"
        },
        "item": {
          "id": "5b3c9482-6253-4f30-9523-b4fc4af5ee37",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0b34b1d8-1fde-4fdc-970a-9e9bf6f4ca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1875a7bc-9e86-49c6-a830-e897b243c52b",
        "cursor": {
          "ref": "d46ccd40-9c33-45c6-8bf2-bc80a59f7723",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c4bba51f-dc9e-44d2-92a2-e6773462c306"
        },
        "item": {
          "id": "1875a7bc-9e86-49c6-a830-e897b243c52b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bc9d539a-5864-4d7c-b83a-ffb4d269d213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cd2e88-cf7d-4684-8dbb-852b93adc7f6",
        "cursor": {
          "ref": "88928072-0703-42c7-a2d3-eb4a16b764f7",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "96eb6e7f-fffa-46d7-9792-a22940e9e492"
        },
        "item": {
          "id": "49cd2e88-cf7d-4684-8dbb-852b93adc7f6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58bc33c4-fbe0-4ffd-bc42-e12454653eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6731a0ff-8f9d-405d-baab-a3cef684cebe",
        "cursor": {
          "ref": "64ca9354-a99e-410b-923e-40314a21da3c",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "67ba0f15-c227-4285-abd0-f71957d9949c"
        },
        "item": {
          "id": "6731a0ff-8f9d-405d-baab-a3cef684cebe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2a42f64-61c4-4bac-9544-5131d044e6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079abaf-e584-447e-88f3-5e24590f8265",
        "cursor": {
          "ref": "c0081c97-7e8f-47fd-b5cb-d054f2854ceb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4fe1b7f0-f8c2-4437-ae9f-7e92ce10b189"
        },
        "item": {
          "id": "b079abaf-e584-447e-88f3-5e24590f8265",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ea9d298-9a5b-4b57-b1f2-3a0820b78422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42360493-cd30-411c-bdcf-509ea2f35cfc",
        "cursor": {
          "ref": "c68e28c4-af68-47dd-b2c7-85a03f1f74c5",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1f177326-bbc7-48e4-ad18-c6dc10371bac"
        },
        "item": {
          "id": "42360493-cd30-411c-bdcf-509ea2f35cfc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ef9298bd-dbe7-4cea-9d2c-eaf85cb1997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87759356-9e98-4a02-a9ff-ddb1a56be80b",
        "cursor": {
          "ref": "1f95f4d6-3965-45ea-af8c-202d03561fe4",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51f7fb44-b9e4-4ce0-b1a1-32b881dbfe6f"
        },
        "item": {
          "id": "87759356-9e98-4a02-a9ff-ddb1a56be80b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "56f1321e-7c4b-4170-8b17-c9365b033a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e80ddb-e302-4c26-961c-3ccf55ecef85",
        "cursor": {
          "ref": "8b7854d5-d43d-4c90-9ab1-f6dfc1eaac65",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9032499-1399-4137-9884-d03956b75b08"
        },
        "item": {
          "id": "65e80ddb-e302-4c26-961c-3ccf55ecef85",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "00fd96b3-7f1a-4d5a-bae6-e548130fe720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a65ced5-210d-4d74-ae36-50b45eb1ab81",
        "cursor": {
          "ref": "d0be04b3-6e84-450a-b041-55276ebcaa8b",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2f6b5d81-ac8e-4f1f-9b65-f930abf8af09"
        },
        "item": {
          "id": "1a65ced5-210d-4d74-ae36-50b45eb1ab81",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ab0e0f51-e76d-46b8-b0fa-01fe9e7f6373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172ae6c4-4125-42e6-8d4f-e250fc7692cb",
        "cursor": {
          "ref": "c851c06c-fc0d-4f9b-be50-6578279b2d3d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9da0d01a-2922-4be9-8e20-5d2aada9b228"
        },
        "item": {
          "id": "172ae6c4-4125-42e6-8d4f-e250fc7692cb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0afabc71-f4e5-482a-888e-fef3d0f065dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf7318e-d635-4d66-9ffd-c8e44d40a870",
        "cursor": {
          "ref": "ef4a9540-d412-4040-aa9b-03433f888fea",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dcfd93a4-d18b-42f7-a88b-7188fc998b00"
        },
        "item": {
          "id": "9cf7318e-d635-4d66-9ffd-c8e44d40a870",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c1ab1e6-bdb9-4a9a-a8c8-d09baf2a5aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7bbac6-1094-4dce-b03f-3dd69dc072f1",
        "cursor": {
          "ref": "1b587200-797b-4376-ae18-e20c127b15da",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "240da3cd-1b33-48b5-bf02-190e5d94d49f"
        },
        "item": {
          "id": "5f7bbac6-1094-4dce-b03f-3dd69dc072f1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d880096-ad1b-4822-9dec-938a8d857677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e7b7ba-68a0-4c9e-aa48-f63b78d69fbf",
        "cursor": {
          "ref": "0112927b-acd0-4fc4-9895-e8ff03620f9c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f2bfcaf2-01ab-4567-9c26-27365c72a4c7"
        },
        "item": {
          "id": "29e7b7ba-68a0-4c9e-aa48-f63b78d69fbf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "654e83ac-191c-406a-890c-dcb6b9e02e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e8b53-aa85-48f5-b16a-a621920ea4a0",
        "cursor": {
          "ref": "1a2f6067-28da-4f93-93cf-e9f75238fa14",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7497c0a0-51bc-47a1-9022-b6c3f6306b46"
        },
        "item": {
          "id": "176e8b53-aa85-48f5-b16a-a621920ea4a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22e55b71-837d-4981-984d-bd78f2695124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245bd5d5-14f4-4e88-913c-17d6b4843941",
        "cursor": {
          "ref": "58a32e7e-7a23-4e1e-8314-7446b50a26f2",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7a93652-51e4-40cf-a3fb-449d30931528"
        },
        "item": {
          "id": "245bd5d5-14f4-4e88-913c-17d6b4843941",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0ea259a-5526-477b-98b0-e3c58f50b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e365d3-e5cb-4c7d-8e4a-e93fe218a12f",
        "cursor": {
          "ref": "6e5ab929-dd05-4931-995b-9979144ae7c1",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba57669f-b44a-463a-80a6-daef473f2735"
        },
        "item": {
          "id": "23e365d3-e5cb-4c7d-8e4a-e93fe218a12f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c332b7ca-e3a8-4056-82c4-1929adba5f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7185d34a-08bc-43e3-914e-5ab220df43d0",
        "cursor": {
          "ref": "0025ce27-29d6-4b2d-a21f-984bb0f6283d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a157100-edcc-4138-bf07-62c1713f6142"
        },
        "item": {
          "id": "7185d34a-08bc-43e3-914e-5ab220df43d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c8faedff-c5a6-453f-aa52-73965450b5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecfef56-1a49-4240-8e35-42a19d33e09a",
        "cursor": {
          "ref": "a37f1292-637c-4458-80b0-6229adf92951",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7a55880c-7a44-47f1-804f-f074b1a33700"
        },
        "item": {
          "id": "1ecfef56-1a49-4240-8e35-42a19d33e09a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5fadd44c-d7e1-4f5f-8b7d-f75487bc03f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fe8650-6f7a-494b-bc3a-ffd37807a87b",
        "cursor": {
          "ref": "5b4d9dca-a527-4fab-9320-a2d3da8e0c2a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "593af547-3b81-4e08-9648-db11a9bc0de6"
        },
        "item": {
          "id": "31fe8650-6f7a-494b-bc3a-ffd37807a87b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8b815fcf-2a1d-4c4d-a8da-5bcdc26741c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd18ea-9a9a-4638-be37-1d48d2d1c617",
        "cursor": {
          "ref": "10e6b7b6-ab04-449a-a0d3-ee3c4e01b1a8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7ce348f9-4150-4dff-8d79-c1f9e6053e4d"
        },
        "item": {
          "id": "b2dd18ea-9a9a-4638-be37-1d48d2d1c617",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dda2a002-0053-4e90-91ab-d233ec29d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43142df5-e52f-43c9-a17a-96fafc31d356",
        "cursor": {
          "ref": "2577644a-f45f-430b-a94a-3fa06ffd7790",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "417292a1-5a2b-4798-8aed-851e6a1e155b"
        },
        "item": {
          "id": "43142df5-e52f-43c9-a17a-96fafc31d356",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "33ab4e40-7cd3-41df-985f-d4b974a296d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcd33c1-be2b-468e-8a08-2680cc57eb71",
        "cursor": {
          "ref": "ce4a398a-9d0a-4380-9f80-04593e263789",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "755329d8-a636-4089-a792-92e846c2989e"
        },
        "item": {
          "id": "1fcd33c1-be2b-468e-8a08-2680cc57eb71",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "47b779df-8424-438a-8ac5-e39570350a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d403ea-5be5-41dd-8136-cb531727eaf2",
        "cursor": {
          "ref": "a185f78b-af3a-479f-b372-c0daa67bd2b9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c1e3fff5-b04e-43a1-9a0e-18979e06df37"
        },
        "item": {
          "id": "b0d403ea-5be5-41dd-8136-cb531727eaf2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a17db307-ee0b-42b5-8a14-28083446c508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0be7f73-abaf-43b6-8966-4a866e25a7fe",
        "cursor": {
          "ref": "1133a357-2a80-40f1-b421-63f193515849",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "728d2736-95e1-4524-9607-a9397cce6269"
        },
        "item": {
          "id": "a0be7f73-abaf-43b6-8966-4a866e25a7fe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f02b4257-8b2c-46df-b426-22541f8d6021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47e6375-dac9-4ef2-b536-6e957dc85dad",
        "cursor": {
          "ref": "4c075223-a1ba-4142-aa54-80ac4a43b42f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4f0a0fbb-4ad5-4ee2-9706-268c2d25569a"
        },
        "item": {
          "id": "a47e6375-dac9-4ef2-b536-6e957dc85dad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "edcf666c-f008-41fb-a1f9-cbdf14fa48ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd43c60-4e2a-4aa6-950d-fe1f3aaa01c6",
        "cursor": {
          "ref": "a23d9b20-d851-4622-8a69-7c26336a17da",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3fb9c822-a688-4b75-9960-5ca82956f05f"
        },
        "item": {
          "id": "5fd43c60-4e2a-4aa6-950d-fe1f3aaa01c6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "118e2b8d-9334-4a90-9adf-fa66c83ca147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511fd010-5361-496a-ae32-b75fc08fed56",
        "cursor": {
          "ref": "3122f744-73ef-441f-8ad0-3f1565ca1f01",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bf12b6a8-1995-434f-86cd-1aea70bf282f"
        },
        "item": {
          "id": "511fd010-5361-496a-ae32-b75fc08fed56",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8b4bfac-f534-424f-9825-0b5e57acde46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed52a280-afc8-45cc-9852-5e6d36d71f78",
        "cursor": {
          "ref": "01902f8e-a317-49d6-87ee-22c8da7d3e03",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c9cab21d-8989-4697-9bd1-f21fbc15c7e2"
        },
        "item": {
          "id": "ed52a280-afc8-45cc-9852-5e6d36d71f78",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "858cf07d-3b0b-47ef-afe0-383434848f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87468639-0c5d-4c43-8e36-359b971c7ac6",
        "cursor": {
          "ref": "5117ebdd-9f40-429a-be5c-6f181f74791d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f16f81a2-7055-4190-bc1b-ef7bcb1e98f7"
        },
        "item": {
          "id": "87468639-0c5d-4c43-8e36-359b971c7ac6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2629e32c-82ff-4efd-b478-559bf812fac1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e2f66d-3f87-4033-bf10-255fcbab1d1d",
        "cursor": {
          "ref": "96c6c537-5a15-4014-b8be-9a1f7c3868e8",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39390de5-4dd4-4dfe-b932-4142f5dd9564"
        },
        "item": {
          "id": "d8e2f66d-3f87-4033-bf10-255fcbab1d1d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "66b43072-69a5-4c45-8118-46eb66464abc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 205,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e5992-7c04-45ae-aeed-ce6022bbad73",
        "cursor": {
          "ref": "db6aeb57-d5b2-4e9d-84b4-63e2535fb362",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d3b5bd8-c2c9-441e-a6a2-8d0d755dead2"
        },
        "item": {
          "id": "cb4e5992-7c04-45ae-aeed-ce6022bbad73",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8feeb3cc-6c73-4563-a8b4-7f4911c2e7b3",
          "status": "Created",
          "code": 201,
          "responseTime": 226,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ed1191-83d9-44ee-aa81-76550cbfe4b0",
        "cursor": {
          "ref": "0655d60c-5a88-424b-87a8-5a31b62fd1fd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5caf49e5-57f6-4cff-8988-8ab6068363c6"
        },
        "item": {
          "id": "e1ed1191-83d9-44ee-aa81-76550cbfe4b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bf45b67d-9884-4dbf-86ab-e2f61c34eebb",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be04b29-41eb-4574-b869-1d41182a4a29",
        "cursor": {
          "ref": "f1acbc44-8e5c-4f2a-95d7-27af9120674f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f6d8ada0-709c-4232-a488-82d01bae0bd7"
        },
        "item": {
          "id": "6be04b29-41eb-4574-b869-1d41182a4a29",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ccf9b428-51a2-4b28-b5c3-fd41c9a6b055",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091ec07-4b89-4561-a3a1-ba54a8f4f893",
        "cursor": {
          "ref": "4c22095d-04bd-4481-934e-381244d01ecd",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e17feed5-b406-4fb2-93d6-d73c69a9ed45"
        },
        "item": {
          "id": "7091ec07-4b89-4561-a3a1-ba54a8f4f893",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6381a3ef-cf7e-494b-aead-e5ff6cf5998f",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbc3df7-8759-4f3b-bd1b-2fb02adaf8d9",
        "cursor": {
          "ref": "2bb45340-6651-4d4f-accc-b55220891935",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "71d5032f-e00c-47e4-a76b-32f8eeace5d4"
        },
        "item": {
          "id": "6dbc3df7-8759-4f3b-bd1b-2fb02adaf8d9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b72f6f16-eeda-47e9-88c9-bd75a177ff3b",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb0abac-bd34-4179-9dc6-54e5bbea9b38",
        "cursor": {
          "ref": "ba1daa95-9c4d-4a69-aa3a-c4013a4f3f28",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed273891-7177-42c7-a6f3-3cfbb53f62cc"
        },
        "item": {
          "id": "0eb0abac-bd34-4179-9dc6-54e5bbea9b38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "24faa99d-407a-4252-acdb-077b72e77587",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0506e55c-db57-4f20-82ac-689dd25197fa",
        "cursor": {
          "ref": "00f500ff-c6f0-4229-b9cf-45e413b70b1e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "731a2650-5513-4173-bd72-6e6208f84852"
        },
        "item": {
          "id": "0506e55c-db57-4f20-82ac-689dd25197fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e40e9e86-35f7-4d58-be99-f74e7f958cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0506e55c-db57-4f20-82ac-689dd25197fa",
        "cursor": {
          "ref": "00f500ff-c6f0-4229-b9cf-45e413b70b1e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "731a2650-5513-4173-bd72-6e6208f84852"
        },
        "item": {
          "id": "0506e55c-db57-4f20-82ac-689dd25197fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e40e9e86-35f7-4d58-be99-f74e7f958cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2462336b-bc6a-43ff-b284-2450ffc692b2",
        "cursor": {
          "ref": "a6d0a9b2-27c9-459c-be7d-d5659fb0a3ff",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "78fe1861-c481-4fae-b9f4-aa1b20cbee67"
        },
        "item": {
          "id": "2462336b-bc6a-43ff-b284-2450ffc692b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b0891fef-f005-4e4d-965b-da5405a3c6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bf9a66-e4ad-4210-99bf-04f541c3d42d",
        "cursor": {
          "ref": "536d5a6b-e68f-466c-9edc-9664777dd759",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1d436bb2-5c01-400b-9281-1f1e3faced8b"
        },
        "item": {
          "id": "24bf9a66-e4ad-4210-99bf-04f541c3d42d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8083816d-15da-4be1-a44f-9901917dcffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02aa31f-88f4-4d2a-b216-ba8c56b97264",
        "cursor": {
          "ref": "72ad25dc-7f4b-4e99-9f38-75e917ed85c8",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f596873e-d702-4df7-acc6-5c83797a661d"
        },
        "item": {
          "id": "c02aa31f-88f4-4d2a-b216-ba8c56b97264",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "088694c3-1204-4124-b2f3-f7d3a36b3ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51770486-64dc-4497-bcf3-db6a5fb2f12c",
        "cursor": {
          "ref": "e87739e8-1668-4d30-8930-cf20081f887d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6947ff02-41c3-498f-8590-d05e4ccab726"
        },
        "item": {
          "id": "51770486-64dc-4497-bcf3-db6a5fb2f12c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bb623d1f-c442-46c6-8d48-ffaf0aa976cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a0091d-b606-4ad2-b598-0bbd65af8bfa",
        "cursor": {
          "ref": "7955fc75-e82e-4e42-8b43-96a71d05d7e7",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea7603d2-64ca-48dd-876d-c98b7d5a6db8"
        },
        "item": {
          "id": "54a0091d-b606-4ad2-b598-0bbd65af8bfa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b90d6902-2b98-4949-aabd-4daa32aa73a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5fa512-5185-4261-9d3c-67565f311e98",
        "cursor": {
          "ref": "6cf6dfd7-37f3-4099-9e27-c8acc00d38a1",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eeca2b72-9a47-4d61-95ea-9a079ab8c698"
        },
        "item": {
          "id": "4a5fa512-5185-4261-9d3c-67565f311e98",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "46093ddb-5044-475f-bc53-5e4636e539ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0a8731-06d7-4eb8-ae78-1fafa34e84dd",
        "cursor": {
          "ref": "992cc279-f7f4-4b87-a5ea-5713e931813e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ecd0b74-2784-405e-82e6-a7e8b15803b6"
        },
        "item": {
          "id": "1d0a8731-06d7-4eb8-ae78-1fafa34e84dd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f3dbc841-0292-409b-8a2f-e8635abdb9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699e950b-ae6d-4f5c-9ae7-6fefe1ba812c",
        "cursor": {
          "ref": "e0acce28-1392-412b-be8f-c504c1c38961",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "030d1ce8-99da-4638-a165-b35d27a754e3"
        },
        "item": {
          "id": "699e950b-ae6d-4f5c-9ae7-6fefe1ba812c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "851a4822-2f34-4fdb-a263-c65d62340250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2889cba7-b16c-449b-a9fe-a6f61e4ccd0a",
        "cursor": {
          "ref": "02eb3ec3-acdc-454a-82f6-978b359754f3",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "024a3b58-48da-4c0a-a537-82f1c02b407f"
        },
        "item": {
          "id": "2889cba7-b16c-449b-a9fe-a6f61e4ccd0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0332c29d-a78b-4ff4-94e6-c6b0114b4bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4129b29-c4c8-43b3-bcc8-32bd523c43d4",
        "cursor": {
          "ref": "f1732732-7a08-44c4-9f3a-61a429b6e2f8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80d8d8fd-21bb-401d-b2dd-14ee667ab307"
        },
        "item": {
          "id": "f4129b29-c4c8-43b3-bcc8-32bd523c43d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d85265d6-d5ab-4015-a786-ec02143aa04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8aa402-3781-4a14-96a0-5cf4c4d607fe",
        "cursor": {
          "ref": "f394363c-6cf9-49b1-8154-c51c4a686523",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "be0e2821-5ce0-4ff7-b8df-078bd3bb2c82"
        },
        "item": {
          "id": "ee8aa402-3781-4a14-96a0-5cf4c4d607fe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f0cd645-c3ad-4386-91d5-f4d178180ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d453ea49-18e7-48bb-a79b-2d13f809c9cc",
        "cursor": {
          "ref": "64884004-ea87-4975-9a9f-4a5b83afe2e1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ce938344-e1bb-4c5f-bb75-b1d623d01ad1"
        },
        "item": {
          "id": "d453ea49-18e7-48bb-a79b-2d13f809c9cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "000494e6-419d-4f76-a6aa-3b0373d1f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25ad422-45db-4962-b6f0-399f86956bb3",
        "cursor": {
          "ref": "5df4fe64-22c0-4b51-b9ff-9e9c5ae1c79d",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "67910f7b-8f7e-480a-8c53-157454b5cf83"
        },
        "item": {
          "id": "b25ad422-45db-4962-b6f0-399f86956bb3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3cc69f4e-3b08-49a3-a65f-d041b63dd237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305318c5-320a-4bc9-bbe4-5610efeb6225",
        "cursor": {
          "ref": "c1b70dfc-6717-4826-9b56-79bb5f6d3169",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45f86c37-ddd4-4959-baf8-7e3e1f3ee554"
        },
        "item": {
          "id": "305318c5-320a-4bc9-bbe4-5610efeb6225",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8aa7ff05-b42e-4d51-80ed-27b982d9e266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f844a4f-e067-4bbc-adec-8368f6fe5257",
        "cursor": {
          "ref": "5508dd95-900c-46e9-97a7-ff03038ac370",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2bd49175-83c4-455e-a0d9-f80e4798bd71"
        },
        "item": {
          "id": "0f844a4f-e067-4bbc-adec-8368f6fe5257",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f85dd64d-ca7b-4173-bc40-220d18cda82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a75a7cd-5456-41f8-96b1-328b2d1e7f38",
        "cursor": {
          "ref": "7bfa6db8-f17b-4dd2-9423-f4787832fdad",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1639a06-9ca8-44fd-ac08-66f444758c43"
        },
        "item": {
          "id": "9a75a7cd-5456-41f8-96b1-328b2d1e7f38",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ad1ef265-29ba-456a-b5f3-f28812e8c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fd89d1-889b-4f27-bb40-9c4306775b22",
        "cursor": {
          "ref": "390bb178-525b-4981-9cc3-99d803e639e1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6fdff384-2228-4e24-b553-77c58784586c"
        },
        "item": {
          "id": "49fd89d1-889b-4f27-bb40-9c4306775b22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "15345433-e5a3-4d8c-a307-a7b636d14695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe866bc5-76fb-4c14-ae1b-2c3f1db4e8e1",
        "cursor": {
          "ref": "14963515-ea82-4d9d-80bd-567f3f959520",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8de22043-5979-4427-ab68-56f73c812d84"
        },
        "item": {
          "id": "fe866bc5-76fb-4c14-ae1b-2c3f1db4e8e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf259b64-7e51-4890-af0f-a50d88084ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b40c5-ee14-49cc-9188-1449d131e861",
        "cursor": {
          "ref": "d46bf4ea-d72f-4086-ba24-9231c9a31575",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ce1e8b37-114a-4ce6-81ce-3e2707c9d855"
        },
        "item": {
          "id": "ef2b40c5-ee14-49cc-9188-1449d131e861",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "37e7440c-6cbc-4330-ba04-0ca44eaed231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e892e9-c72f-42f6-a077-991f7dcf8da4",
        "cursor": {
          "ref": "399ffd42-4f29-4a21-b3b0-3d22e440f56f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d18f1b8c-cb4c-454b-8962-876728633cf8"
        },
        "item": {
          "id": "e8e892e9-c72f-42f6-a077-991f7dcf8da4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "568ddbc6-0c03-4b09-9a31-14374085e33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59444ce5-faf6-4512-978e-fd75d5349724",
        "cursor": {
          "ref": "7909f233-ee0a-45cd-b75c-23b73717e254",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "582662f5-2108-4ef3-b665-3b68d7d68e70"
        },
        "item": {
          "id": "59444ce5-faf6-4512-978e-fd75d5349724",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f0d4dc06-7a75-4816-8ed2-34ca57ebf571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1135c4a0-6685-4668-b49f-6f8a995dbf1c",
        "cursor": {
          "ref": "8f3c959a-8fab-4208-b00a-c6088985020a",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b0c42cd7-4341-483b-a3cb-7e013f5d3d9a"
        },
        "item": {
          "id": "1135c4a0-6685-4668-b49f-6f8a995dbf1c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e854fa43-f2e2-474c-9b09-9b0cdb8dc58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba4f906-af3d-42ec-9dfe-699f91839fc7",
        "cursor": {
          "ref": "590bb666-0e5e-440e-b0d3-39f4f1caea95",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c41bd9ab-8cec-4d9e-9792-cf59afb56677"
        },
        "item": {
          "id": "4ba4f906-af3d-42ec-9dfe-699f91839fc7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44303a23-1c72-4363-a431-a1a8b3ab6081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf6e172-e29e-44b3-ad1a-0f6fb198bc7f",
        "cursor": {
          "ref": "4422f7c9-b722-4b49-8ab6-ef96b15ca2a8",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "385265d9-0f7b-4821-ac10-8898470f0071"
        },
        "item": {
          "id": "ddf6e172-e29e-44b3-ad1a-0f6fb198bc7f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c07361c-99c0-4a72-8167-810435e93762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1281357d-d061-442d-9701-145ed82e5799",
        "cursor": {
          "ref": "9d187eee-284d-4a0b-9530-804f34d6bde6",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6e589dee-a4f6-4533-b62f-d694a2419054"
        },
        "item": {
          "id": "1281357d-d061-442d-9701-145ed82e5799",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8f85e213-0e28-4f38-8182-afd10be9c164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db4bb0d-2e07-4039-81db-77986c735dc7",
        "cursor": {
          "ref": "cd494054-db37-4cd6-b859-3be45238ff25",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b176633b-1ffb-4b94-ac08-a32c1c286add"
        },
        "item": {
          "id": "0db4bb0d-2e07-4039-81db-77986c735dc7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0db7a2f-4a4c-47cf-a2be-dc92360f015c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3678717e-218a-4f34-a731-d89d1ac9966f",
        "cursor": {
          "ref": "335813ea-5491-43fb-821e-4285cc7133cb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8654784e-9bdc-4afe-9b34-51d8a1f2e6fa"
        },
        "item": {
          "id": "3678717e-218a-4f34-a731-d89d1ac9966f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b7fdfbe-f902-47d4-ad12-896f214054be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e314d5-463b-44f8-920e-666a897ca1f2",
        "cursor": {
          "ref": "c0cf500d-22ef-43ae-a3c6-a3483ce433dc",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "029ea5db-1198-4854-a49d-375f7e20606a"
        },
        "item": {
          "id": "96e314d5-463b-44f8-920e-666a897ca1f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "308b1cad-2201-4de7-abc4-ec55744247ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8265b7-6c64-4b92-a842-6a1333de0cd6",
        "cursor": {
          "ref": "909347f7-e254-44c8-9670-4de60151758c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "61014b9d-4c41-4ea6-80f1-ecc4eba04f80"
        },
        "item": {
          "id": "7d8265b7-6c64-4b92-a842-6a1333de0cd6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "493b83fb-9140-44dc-b5ed-0606ce6add9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e2f672-8ef0-467d-be23-605a824ffd8d",
        "cursor": {
          "ref": "6d9ebd76-0b12-459a-a2b1-cb5338625556",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c3dc7484-9047-4541-872e-d3c5ecf8baf5"
        },
        "item": {
          "id": "d9e2f672-8ef0-467d-be23-605a824ffd8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8f8ecf4-e4c2-488b-a601-d131f9b9efc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3a8bd9-e8f2-4f63-8e42-0d54b40bff4a",
        "cursor": {
          "ref": "fb37e4b6-6707-427c-82d5-d3915ff2bcad",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "720c68f6-8e9b-42c1-9e34-fdef3b85e1b0"
        },
        "item": {
          "id": "6c3a8bd9-e8f2-4f63-8e42-0d54b40bff4a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9d15bba3-ba22-44b0-ab20-b8bca621020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95198775-47b3-4e00-8e0f-3ee9ed8df820",
        "cursor": {
          "ref": "c598a0b5-1f7e-431e-9afc-2b7154032272",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd1b32a9-112a-4c4d-a72a-1b397052ce67"
        },
        "item": {
          "id": "95198775-47b3-4e00-8e0f-3ee9ed8df820",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "13cdee30-f64e-4c5e-aa16-09c5cc029288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef5d546-4420-46ce-85fe-e6144fed5346",
        "cursor": {
          "ref": "1fae3a11-713f-4244-aff4-7c565fd256d2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "549d9d72-78e7-49ca-ae0e-be057ecfceda"
        },
        "item": {
          "id": "aef5d546-4420-46ce-85fe-e6144fed5346",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "136cd4d2-bf61-4327-a42a-4059d635ce4d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab7ed9-0a19-4abd-b2a9-405a04f73efd",
        "cursor": {
          "ref": "324f3925-bcb2-45dc-ad04-5f9add0e584a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61f2463a-eddc-4a7e-b8ac-a791e4774456"
        },
        "item": {
          "id": "f8ab7ed9-0a19-4abd-b2a9-405a04f73efd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb2e1b94-071b-42e0-9ace-b863b71d6bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab7ed9-0a19-4abd-b2a9-405a04f73efd",
        "cursor": {
          "ref": "324f3925-bcb2-45dc-ad04-5f9add0e584a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61f2463a-eddc-4a7e-b8ac-a791e4774456"
        },
        "item": {
          "id": "f8ab7ed9-0a19-4abd-b2a9-405a04f73efd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb2e1b94-071b-42e0-9ace-b863b71d6bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb92cbd3-eaa1-420b-98bc-bf19713811e4",
        "cursor": {
          "ref": "ee500d1d-60c8-4735-8e30-c29f72d670d1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "846e4eec-37d4-4918-9315-780128726fb5"
        },
        "item": {
          "id": "cb92cbd3-eaa1-420b-98bc-bf19713811e4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "18f220d8-ce0d-46ff-af4c-19a7e1481eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084659bd-5029-42fb-b228-ed1d494387b3",
        "cursor": {
          "ref": "db6be822-0546-4c6a-98b1-1c7ea6207af1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "68b58ee2-38fc-4da5-a3db-a2db8710cb22"
        },
        "item": {
          "id": "084659bd-5029-42fb-b228-ed1d494387b3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3c45b7c6-4611-4e1a-a369-4e4b9b5902dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2604b434-bb70-45d4-b507-9621b2448b6c",
        "cursor": {
          "ref": "fd1b071c-950f-4cdc-a65c-28aed2777a0a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dd7e982d-7cdf-450a-9a8d-a823a09153e6"
        },
        "item": {
          "id": "2604b434-bb70-45d4-b507-9621b2448b6c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4946ef4-ec89-4a11-9975-25554325d652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30471e03-614d-4b26-a631-12d757568eac",
        "cursor": {
          "ref": "1b789795-a0ae-4396-a5e3-29dd3e597c2c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f193af02-5362-44f1-ad33-8304db016d19"
        },
        "item": {
          "id": "30471e03-614d-4b26-a631-12d757568eac",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e5d87a95-23b9-4538-b5ca-98cfefb761fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828dffc-2710-467b-80c3-56038c7f2cc6",
        "cursor": {
          "ref": "069034a4-040c-4041-b150-61ee9c6deac5",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e108950d-9ee0-4f6e-9112-eeaad9d61a03"
        },
        "item": {
          "id": "e828dffc-2710-467b-80c3-56038c7f2cc6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eb9c1196-120c-4da9-9bc4-2fca6c17f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963284b5-3afb-43bd-a07f-99c66546804b",
        "cursor": {
          "ref": "7d7b19e1-cae4-41e2-91bf-7dedcec18d0e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "68db507e-a4e6-47c6-9272-02d7bec7207a"
        },
        "item": {
          "id": "963284b5-3afb-43bd-a07f-99c66546804b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e98c9ac-8d54-4cc6-8eaa-f591211ed9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f284cb-374d-4c30-8c07-d7479d6559bc",
        "cursor": {
          "ref": "cf22a87c-be41-41e3-a4d2-21fa4ddb468c",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7d3e9b84-a6b3-42b7-b440-a8ac2eeb9580"
        },
        "item": {
          "id": "f3f284cb-374d-4c30-8c07-d7479d6559bc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "69cd05b9-707e-403b-92c6-ce3863da4084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaaef06-c391-4ad7-8b66-f7986b3ca530",
        "cursor": {
          "ref": "0199892c-e672-4bec-88f0-1875f2ae0482",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48edfe58-4dcc-4e52-8f8e-4adc0d880ca0"
        },
        "item": {
          "id": "5aaaef06-c391-4ad7-8b66-f7986b3ca530",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "57329153-8f34-46ac-ab55-2870c6ede7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2027865-977e-4c7d-ba55-3866a5ee88af",
        "cursor": {
          "ref": "6ef040a5-686d-492d-8558-eb83a45fd71f",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1c6fe68a-d3c0-4846-8b8d-a422e35658fd"
        },
        "item": {
          "id": "e2027865-977e-4c7d-ba55-3866a5ee88af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b2cd9eb-0881-4cc3-8c90-99008ca41529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9087be-24ed-4738-91d8-1e82cdd71518",
        "cursor": {
          "ref": "41b25cd8-6dbc-45c6-af15-2ce2392e1995",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0924434d-01a7-41f8-81b4-38ab63ff46a1"
        },
        "item": {
          "id": "aa9087be-24ed-4738-91d8-1e82cdd71518",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d7f20d9-6402-4407-82ab-62e4afc709af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6030032-9839-4510-b5a9-5bac92c3e791",
        "cursor": {
          "ref": "6773e1ba-6378-48da-86fb-49c0cc1a9882",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "79069192-a663-482e-94d9-109512bfbf88"
        },
        "item": {
          "id": "f6030032-9839-4510-b5a9-5bac92c3e791",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31ff94a4-cd09-49ae-94e6-9a1a585eb1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6e661-bd37-4d64-9bfb-39a73eefe156",
        "cursor": {
          "ref": "59562a67-a832-4441-930b-3a1c470be245",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10728028-a0c4-4de4-b478-a46773c867b2"
        },
        "item": {
          "id": "2ff6e661-bd37-4d64-9bfb-39a73eefe156",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a7bc116-631b-4e75-befe-f809ad7a54c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ade63d5-0fea-4c5f-8d41-36a4c9903cbb",
        "cursor": {
          "ref": "fc66be32-f39b-4671-8c02-ad7169b282bd",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8c4e0724-f991-4eb7-b53e-c80a05e3bb74"
        },
        "item": {
          "id": "1ade63d5-0fea-4c5f-8d41-36a4c9903cbb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "772564d7-72cc-4f10-bc00-dae434bfa627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce7282b-a148-4f92-a0a3-f9613289f191",
        "cursor": {
          "ref": "101f28e1-49cb-4e2e-a411-4e32ca29b541",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e2ebdec1-bac9-4927-b58e-b309a63309d9"
        },
        "item": {
          "id": "fce7282b-a148-4f92-a0a3-f9613289f191",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fe6131f5-1333-47cb-823d-3eac3f744dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9920a0ee-210f-4d50-b162-7656e44a2ccc",
        "cursor": {
          "ref": "d56513f7-d7d5-4406-a41c-f7caf89c9a42",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "40c74cbc-5646-437b-886b-32c1696e91c7"
        },
        "item": {
          "id": "9920a0ee-210f-4d50-b162-7656e44a2ccc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1cd21ede-ad90-4cea-8403-bd41a4a86323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2a113-da45-4a79-a112-710047654e7e",
        "cursor": {
          "ref": "90fcbb08-1398-4079-950b-ef127c363e6e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d456465e-3a24-4c08-9b31-0db725ae8a0f"
        },
        "item": {
          "id": "1cc2a113-da45-4a79-a112-710047654e7e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "17180851-6e60-4072-bf17-384ae28b7908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0eed1c-2c53-4861-b356-e415c9ed3f07",
        "cursor": {
          "ref": "049a932e-399a-4fc9-8deb-df52ccb7a62b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a413e48-c3c6-4f95-832d-400d8afac000"
        },
        "item": {
          "id": "4f0eed1c-2c53-4861-b356-e415c9ed3f07",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b3a1685-a871-4c8a-ad8f-907b749abb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7e4cfd-94c5-48a6-9692-674989eae9ed",
        "cursor": {
          "ref": "69fd2200-fa3b-4e63-93e9-86d7a13d85c3",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "24739575-6944-46c7-b10a-9c4338233b4d"
        },
        "item": {
          "id": "1c7e4cfd-94c5-48a6-9692-674989eae9ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cdc0acd6-c4d6-48b0-8623-274664e114cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a4f73d-3cbb-4bed-9e48-35dd8711b177",
        "cursor": {
          "ref": "8d1624cb-ceb9-411a-aa1b-5ef228713a8d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "343e7eb1-591d-4645-ac11-86aba403321f"
        },
        "item": {
          "id": "98a4f73d-3cbb-4bed-9e48-35dd8711b177",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1d2106fb-1aa5-47f3-ad46-6fd1c8720425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f439ff-3201-4ca3-87a0-9afed9a85753",
        "cursor": {
          "ref": "d0c49f32-4877-4236-9085-35f41f9fbc54",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a509cca6-1e3d-4911-a120-d43ec82faeda"
        },
        "item": {
          "id": "23f439ff-3201-4ca3-87a0-9afed9a85753",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a7eab607-410d-4adc-ae41-13e2f581005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a1259-d1cd-4115-9a91-6f9b3b4b696a",
        "cursor": {
          "ref": "eb343041-c0c6-40cf-aaf8-1f0d9ca01f26",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b6f18ea-7bbc-4ffe-b201-b08288d3b726"
        },
        "item": {
          "id": "f55a1259-d1cd-4115-9a91-6f9b3b4b696a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f74d5255-4f5a-4f51-8f0c-1bbc07ef5222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c932c161-330f-451a-9cc5-48ace99f3fb7",
        "cursor": {
          "ref": "7f983f27-bf97-4701-b2cb-b73780a98e7c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05031ecd-af40-40cb-919b-2f6178f78992"
        },
        "item": {
          "id": "c932c161-330f-451a-9cc5-48ace99f3fb7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9807617f-d130-4e22-b98f-7540a5c67b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6dc473-94df-4e4d-8749-a9cd1e003553",
        "cursor": {
          "ref": "921e27f2-12b7-4a66-8573-f3090e517a01",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3f5b2510-57d1-408c-8693-f2a7727125bf"
        },
        "item": {
          "id": "0b6dc473-94df-4e4d-8749-a9cd1e003553",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a99971ff-bbb5-4402-8fe2-f1b54f611472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a2384-f7ca-4de1-a04f-da0dd661ab42",
        "cursor": {
          "ref": "c559e59b-875f-43dd-9c09-5dbae7a7569b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "86f0ccba-a688-4672-9f02-7f8af9fd9b86"
        },
        "item": {
          "id": "0e9a2384-f7ca-4de1-a04f-da0dd661ab42",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "36226e5c-6abd-454f-bf88-0f008ca1cbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8009cd2e-b4c0-4705-bfc9-4fd39f1e4015",
        "cursor": {
          "ref": "0c020c26-e056-403a-abfe-b62f48cc8a3d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d30efefe-be81-45ff-9fbf-a82f3bd39c56"
        },
        "item": {
          "id": "8009cd2e-b4c0-4705-bfc9-4fd39f1e4015",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c4370d20-e06b-4ffd-bba9-f4bab7358dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88377713-2a93-4e25-91bc-c7f6e885389f",
        "cursor": {
          "ref": "cc742887-739e-4d0b-b067-468167d19cf3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2b154c60-983e-4eab-a4ee-c2da5b006da6"
        },
        "item": {
          "id": "88377713-2a93-4e25-91bc-c7f6e885389f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "61164683-e8d3-4599-a190-af81a7256f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54d5e9f-96fd-4001-a3fd-9ab405a89e7a",
        "cursor": {
          "ref": "f43974b7-ac40-46e2-85cc-062dd8013109",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2afd9f4e-eef7-4fec-bcb9-f79bb60b178f"
        },
        "item": {
          "id": "f54d5e9f-96fd-4001-a3fd-9ab405a89e7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f174a372-0249-4d99-b511-3d88e305e4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ec0cc9-0f14-4fbe-aaf0-8c7a2abc57af",
        "cursor": {
          "ref": "1e5ac75f-4e9e-44fe-a118-8875527dd891",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6ac6d3f2-3a8c-4207-9367-21e774b13820"
        },
        "item": {
          "id": "19ec0cc9-0f14-4fbe-aaf0-8c7a2abc57af",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "045aca4a-3621-4c82-b177-cc0e9b7ab2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd4a27-00aa-49cc-8520-d73edfb63ff6",
        "cursor": {
          "ref": "529d21fd-bb67-448c-a844-f331c81a974c",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "476ca62c-c9b7-4dd2-b5ec-ed58c989856e"
        },
        "item": {
          "id": "b2bd4a27-00aa-49cc-8520-d73edfb63ff6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2dda1680-ebf4-4d5f-ab05-c5dc5dcaf5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6330bbc2-3f93-46c0-89cd-401d1bfa0bab",
        "cursor": {
          "ref": "47ea701f-9732-4ea9-a5ba-d8a756eeeea7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "126b6e2b-ccb1-4ac9-a538-e82a63f028ae"
        },
        "item": {
          "id": "6330bbc2-3f93-46c0-89cd-401d1bfa0bab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7beedf7b-b5db-4d66-b2bc-6883f27a3c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e305e98e-5a0a-4558-af13-da5344f5ca21",
        "cursor": {
          "ref": "8a00b1cb-9b29-4c55-b9b4-895ac8c71619",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bb95f2ef-1bd1-4d3f-80e2-a6bbad2821c9"
        },
        "item": {
          "id": "e305e98e-5a0a-4558-af13-da5344f5ca21",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bc6ba1fc-d9a1-4f0f-ba6e-638c79ceed01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e3224-7378-43cf-9831-14f0ab761dee",
        "cursor": {
          "ref": "9af7ba38-8a74-45ea-ba4c-e5f5e252dc39",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "52c77803-f784-4b78-8eb7-136c8350f810"
        },
        "item": {
          "id": "3f0e3224-7378-43cf-9831-14f0ab761dee",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e6b8222e-4440-49aa-9d86-f9653b31cf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b95d3bc-0690-4525-ad49-87272151e925",
        "cursor": {
          "ref": "fa9ed8fe-8505-4a18-ade8-222efee956ea",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3d0a395b-1824-4a77-ae68-01a39e3d5804"
        },
        "item": {
          "id": "2b95d3bc-0690-4525-ad49-87272151e925",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4a0cdb8a-b201-4d27-b082-7c6de3bedcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c409e2d-fd8e-48c6-b2ea-b6ec29809b96",
        "cursor": {
          "ref": "20d31928-e99d-4ccf-a0a6-5256ecf8a672",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f4ca162d-b383-4a35-9ac6-ba09159aa5de"
        },
        "item": {
          "id": "9c409e2d-fd8e-48c6-b2ea-b6ec29809b96",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "44ca4dac-4e98-4501-85a6-a0792f8bd46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb7ef8-60b7-4c8e-9028-8499ac2aebe0",
        "cursor": {
          "ref": "7cca42b8-58e6-4dcb-801e-a98a19d8cc3e",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "364c7755-65ca-45f2-86f6-82ae73376992"
        },
        "item": {
          "id": "aefb7ef8-60b7-4c8e-9028-8499ac2aebe0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b40889f0-6601-4a3f-a9e4-fcd6a5b514ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457153ab-e11c-420d-8984-7c5448ca5000",
        "cursor": {
          "ref": "321ae68e-0cbe-4e6c-9645-b5ed37330578",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f50afbab-3fe6-42b3-99ef-d332be61a5e3"
        },
        "item": {
          "id": "457153ab-e11c-420d-8984-7c5448ca5000",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "009e37ba-aaf5-4ff2-8596-a0d2bf19b700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c69011-a948-4b5c-9af0-22590a70c564",
        "cursor": {
          "ref": "dde4bd54-20e7-4599-92d3-0ffab9b36cff",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f157c17f-b447-4264-a88a-acc0fe88648e"
        },
        "item": {
          "id": "21c69011-a948-4b5c-9af0-22590a70c564",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "da22afdd-73ca-4cd4-8045-5f23a45a784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec3ec63-5d1a-4ab7-a1a2-5c204a289a1f",
        "cursor": {
          "ref": "c59c9254-f55b-4d18-816f-920c48d9b9cb",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "23c177da-3dfc-4403-84e8-3c31e15cec27"
        },
        "item": {
          "id": "5ec3ec63-5d1a-4ab7-a1a2-5c204a289a1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c560e675-9c82-43cd-bc6f-7fe3e8164afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9d62bd-732c-4004-80bb-c97cb3212703",
        "cursor": {
          "ref": "2dec9981-4a57-4777-92a2-12f42da1bf02",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d7b1baff-4a28-416b-994a-3f0e9c2b1096"
        },
        "item": {
          "id": "7f9d62bd-732c-4004-80bb-c97cb3212703",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b08994f8-8353-41c1-bf18-186556a20012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cea951-6e26-467f-af15-2eb50a4718e1",
        "cursor": {
          "ref": "b67ff865-91bf-4fe2-872e-7697536fbc4f",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87619de0-5531-4f36-908b-0a218805aaab"
        },
        "item": {
          "id": "f4cea951-6e26-467f-af15-2eb50a4718e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7976e21-a651-40f9-8eb2-a61bc0b1e3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02148d97-7867-4661-b37e-753b99e9fd0f",
        "cursor": {
          "ref": "99d20d4d-0b2a-4c22-a3e3-158646c2cc9c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3208f1fa-70e8-4b3f-b09f-198ffbaa5e96"
        },
        "item": {
          "id": "02148d97-7867-4661-b37e-753b99e9fd0f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19bcd1a0-6ac0-4fd3-9745-8e7c49e98a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03ee75-cf1f-4163-889c-4886278359c1",
        "cursor": {
          "ref": "0f8d0e06-17e7-49e1-b238-627a027d1b31",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3bd61a88-cfa5-43a0-a705-59fc6ceca72c"
        },
        "item": {
          "id": "8f03ee75-cf1f-4163-889c-4886278359c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "46169068-d0d7-458c-9c22-286c07dd66dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f09287-9498-4b94-b6fa-e7949506c4b5",
        "cursor": {
          "ref": "e7a7ec56-3b27-468c-bb61-39dcc64a3e4f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a7d8d35-0a72-4434-b3b5-0676d307ae55"
        },
        "item": {
          "id": "87f09287-9498-4b94-b6fa-e7949506c4b5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cdcd9764-08d4-42cd-9463-ebf947a58043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ace0ae3-160a-4a55-8205-b3e3c069394b",
        "cursor": {
          "ref": "85973624-81a3-4343-aed3-4f4b77c4e392",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be6595ae-8fea-446f-a705-3da97bb61246"
        },
        "item": {
          "id": "4ace0ae3-160a-4a55-8205-b3e3c069394b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b369e995-2d1d-4b6a-b862-7a38b0eb977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7804d9da-ed28-4a9c-8751-33093442ea09",
        "cursor": {
          "ref": "b0f4eb81-2dc8-4fcd-b7fd-c4be83005998",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b759dd8-91d7-447b-875f-aabc11a7897a"
        },
        "item": {
          "id": "7804d9da-ed28-4a9c-8751-33093442ea09",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b9bd843a-94c7-400c-815c-3579b6d360a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c444026f-c1c4-489e-ba76-a6ea08e6774f",
        "cursor": {
          "ref": "5697031a-4c3f-4629-8919-aeefc6179573",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6acbe833-bfe1-491c-9755-0d689306217c"
        },
        "item": {
          "id": "c444026f-c1c4-489e-ba76-a6ea08e6774f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "77a08e02-3624-489d-96d9-7336a0918115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7336e85-eb38-4498-9b94-efa3cf666f42",
        "cursor": {
          "ref": "1edc89de-6365-4ac0-b399-0e2bbbaa1c6f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "36f72668-875b-4334-a064-865ebcddc18f"
        },
        "item": {
          "id": "f7336e85-eb38-4498-9b94-efa3cf666f42",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "41480d60-2b64-4fa6-aee1-2f6ec5bacc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4899732f-0e4c-423b-af10-bab3791f2983",
        "cursor": {
          "ref": "c39f1ec4-9ecd-4e52-87b1-bdd20a4d94e3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "63dc6a5f-3e4e-48ff-bc9f-c26d48498d64"
        },
        "item": {
          "id": "4899732f-0e4c-423b-af10-bab3791f2983",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fc920ffc-4c57-4634-bd52-41d31c7980bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be395fb6-5dd2-4fee-a4d1-a682e54295af",
        "cursor": {
          "ref": "52fbc56b-6da9-4726-af09-54d7a862c57d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5503aa0-b0c9-454f-af82-c1bfa56c89ef"
        },
        "item": {
          "id": "be395fb6-5dd2-4fee-a4d1-a682e54295af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f43fecc8-2571-46d7-8170-fa7056380765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aab4fa-cbf5-46ca-8905-84c901be519a",
        "cursor": {
          "ref": "ac6c38c6-47bc-491a-ae7a-2b80d22f4fe7",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f949fd2f-69b5-4290-b60f-92ef2acdae54"
        },
        "item": {
          "id": "d1aab4fa-cbf5-46ca-8905-84c901be519a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad0da02d-c890-4b2b-9b1d-059a82a029d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecc2fbe-eeb7-466d-acf5-4867b7fd365f",
        "cursor": {
          "ref": "9b62a25c-85e6-4adc-8227-9cb235b6bc84",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7f5214e-6de0-497c-ad50-df21213535bc"
        },
        "item": {
          "id": "1ecc2fbe-eeb7-466d-acf5-4867b7fd365f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "784e1c60-6e1b-48d1-be0c-597a48a0ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe0b4e6-ec88-4f68-bc55-05e78c3224b2",
        "cursor": {
          "ref": "6ecf9fcb-5dfc-42ad-a87f-3e639f051608",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6b8a644b-da27-47dc-80ec-c2d4c1c83957"
        },
        "item": {
          "id": "7fe0b4e6-ec88-4f68-bc55-05e78c3224b2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0c61ece7-9726-4605-960c-f53316707510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4a3fbc-9971-4945-883a-ec0abfc3d54a",
        "cursor": {
          "ref": "73e22994-4367-4627-aea4-ad359fbe6ac7",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6b9cec1b-b099-4c00-a4ef-f73cd98feb42"
        },
        "item": {
          "id": "df4a3fbc-9971-4945-883a-ec0abfc3d54a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bb5f5257-7382-4f07-838c-73946f6549c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8fbdd-cfb7-452b-9c85-f4c4bb64319e",
        "cursor": {
          "ref": "4b09bf65-56f4-4fb3-82eb-b598dd5ae190",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f7699b95-4599-40da-b22f-83479aaa7542"
        },
        "item": {
          "id": "b9c8fbdd-cfb7-452b-9c85-f4c4bb64319e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "116cc34e-7c8b-4a69-9b0a-5cc729b54d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809a16c1-f548-494e-8ed8-54c7669b2724",
        "cursor": {
          "ref": "ef6aa696-3340-48b8-9943-c42c6cb31261",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79db5fce-22af-4e0d-8c7e-573ed60d5899"
        },
        "item": {
          "id": "809a16c1-f548-494e-8ed8-54c7669b2724",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fda4220d-6dd3-41ff-b63f-23b4b225cb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523b509-5623-44bb-8340-1dd6c096414c",
        "cursor": {
          "ref": "c281865b-5085-4f99-a7f8-7cf9917b6cf1",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "63f647ce-9be4-414f-a557-80d3323c2aeb"
        },
        "item": {
          "id": "2523b509-5623-44bb-8340-1dd6c096414c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f19075b7-4fda-4795-a3d6-c52cea54cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c92eb61-700e-4065-8d49-42095b7d93ea",
        "cursor": {
          "ref": "91963d8d-e258-403e-b2f8-5cfbb25d29b9",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e6e5f414-6529-4044-8b59-7b00b5ad6d76"
        },
        "item": {
          "id": "5c92eb61-700e-4065-8d49-42095b7d93ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "deba839a-ea99-4d03-9de5-4adf90485b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e348668-3201-4ab4-af5a-26d317a64e4a",
        "cursor": {
          "ref": "de3e4825-f0be-4bf6-9d64-fcf8ad0d1dd3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7d0ee0d0-079e-43e7-af74-71b6cbbe505f"
        },
        "item": {
          "id": "9e348668-3201-4ab4-af5a-26d317a64e4a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05264512-73fd-4279-9971-04051baf7db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4e1a7c-0506-404b-9752-048c133b3610",
        "cursor": {
          "ref": "aca30545-f0b1-4e79-af73-2e945e8eced6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ed09bc5c-1720-4ea9-ab06-ebc457f7b4f4"
        },
        "item": {
          "id": "7b4e1a7c-0506-404b-9752-048c133b3610",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "821a3c84-5e90-449c-9f7f-bdc537b5b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d987c8-5328-4dfa-97be-567326d4f085",
        "cursor": {
          "ref": "a0cfd965-b9fc-4409-ba35-ac9089aba531",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b773404-3869-4ecc-bed2-cf873b8a3bd3"
        },
        "item": {
          "id": "b9d987c8-5328-4dfa-97be-567326d4f085",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f29554f-9579-48cf-b793-0c096c3c4461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd716966-db98-46b9-a823-1ef3c4d3d27f",
        "cursor": {
          "ref": "ddca857d-b63d-43bf-9141-ad76a04ac2ae",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "352bf4ec-3cbd-45fe-a5ad-d9f6c143051b"
        },
        "item": {
          "id": "bd716966-db98-46b9-a823-1ef3c4d3d27f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5f3c4366-d8a0-414c-ae62-e81728fa9dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db34e2c-fa48-46ab-a63a-48ff4fbfcd12",
        "cursor": {
          "ref": "da119ca0-691c-489b-a772-9fffeee75f85",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c5f19cb3-ba45-4f11-8670-9c0e53d3cc74"
        },
        "item": {
          "id": "5db34e2c-fa48-46ab-a63a-48ff4fbfcd12",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "59c35aca-beed-4a66-974e-ce3c25ef0693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc340fe-8f8c-4ea1-b94a-41a1ed03e489",
        "cursor": {
          "ref": "a12991b7-b7a1-4c56-94d0-7b455f1d47d1",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1ba2f4f6-ff52-4f65-98af-cad1a812f468"
        },
        "item": {
          "id": "ebc340fe-8f8c-4ea1-b94a-41a1ed03e489",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a215db18-fe0c-41b7-bfcc-ac2e0e8199b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020bd25a-211c-4f48-a902-45a682066994",
        "cursor": {
          "ref": "04a65f94-5471-4393-8f3a-c0884d03820c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6c846b96-bf6c-41c6-848b-735aa619ca62"
        },
        "item": {
          "id": "020bd25a-211c-4f48-a902-45a682066994",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e685628f-d53c-45d4-8c13-fc92e8c09b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a932d6-4942-4a60-ae52-8920f4a134ac",
        "cursor": {
          "ref": "f44dc73d-fcf0-4991-af5a-8599f31910d8",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f1fa5228-f333-458a-9fef-d80d80dc472b"
        },
        "item": {
          "id": "a8a932d6-4942-4a60-ae52-8920f4a134ac",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c6ac2f2-ff91-4d06-8347-55ce68ad6187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35a112-8581-45f9-8f37-9eaf10c9b100",
        "cursor": {
          "ref": "369a0cb7-2868-4df8-a73f-68885d1cdd20",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "929db16d-6c4d-42fa-adda-1ecd86c5abdc"
        },
        "item": {
          "id": "2a35a112-8581-45f9-8f37-9eaf10c9b100",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1dae0ce4-160e-4d64-83e8-f9cb30124136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa632e0f-2911-4129-9482-92fdb9d1a440",
        "cursor": {
          "ref": "3cd5e752-b070-435a-b173-d9cbcd53f4df",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "afddb58c-0960-4e0f-93c5-7719bec82775"
        },
        "item": {
          "id": "fa632e0f-2911-4129-9482-92fdb9d1a440",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e1bcbf74-46d4-487d-8f87-c5abc45f3206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3172fd-58cd-4220-8308-c41a85ec2cfb",
        "cursor": {
          "ref": "e41f5165-71da-4cb9-ab83-a5e46aa87a85",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ffbb083e-0a26-49d7-a8f9-2778a5948d47"
        },
        "item": {
          "id": "8f3172fd-58cd-4220-8308-c41a85ec2cfb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41b28557-063d-45d7-a7a9-5a7bab6d772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b697fbec-2a93-43ab-b295-83a950cefcf6",
        "cursor": {
          "ref": "65543864-d830-4a4b-bf46-711b9e49b4ea",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "51ad9049-5d3b-4cd0-81fb-0e0eb3264949"
        },
        "item": {
          "id": "b697fbec-2a93-43ab-b295-83a950cefcf6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0a8ce0d8-cbee-4968-b8fe-441d80a98cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c7002f-f799-4545-81f6-300f9e76f0df",
        "cursor": {
          "ref": "c61b92d7-a154-4efd-8f6e-7a53cac20876",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7146c28b-2930-4cd8-9550-1b0ceec7d286"
        },
        "item": {
          "id": "36c7002f-f799-4545-81f6-300f9e76f0df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "20286741-420c-4f87-a96d-bbf6d174e258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72dc1f4-7f70-4b5d-9f8b-f361b45d3f75",
        "cursor": {
          "ref": "cbf2d04b-f0c1-4bc0-a5fc-38d1614d8b63",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5d6da739-603e-45c4-81d9-4185eff48470"
        },
        "item": {
          "id": "c72dc1f4-7f70-4b5d-9f8b-f361b45d3f75",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e104dc70-c774-4c9c-a3c3-81493ffb08bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355e0d27-1f53-402d-94af-ce469f90ceb5",
        "cursor": {
          "ref": "ae5211be-c8fd-4672-a9e4-80118b52a4cc",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "907b6672-f1cb-436f-8c15-1b3e50e539ac"
        },
        "item": {
          "id": "355e0d27-1f53-402d-94af-ce469f90ceb5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f6321513-f030-457b-bc5e-0c2fd0f05ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1ee43f-76a6-4028-8594-d3d677a58c16",
        "cursor": {
          "ref": "b7e538a5-59f6-4eca-954f-3a0ff8c6243e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aa6bf177-7c91-49d7-93ae-fcdae7120ef9"
        },
        "item": {
          "id": "fe1ee43f-76a6-4028-8594-d3d677a58c16",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a4da3d60-7dda-47b3-9225-a5f8ef1b33d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8420c8-31bd-40f4-a2cf-d6081996e0f0",
        "cursor": {
          "ref": "86311245-fb64-4d58-8187-ac49afd4a509",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0559a056-28ce-4043-8916-c0d5dbd4978e"
        },
        "item": {
          "id": "9e8420c8-31bd-40f4-a2cf-d6081996e0f0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "070d0f35-7eaa-442c-9ef4-4ca16c78e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ec27ce-0ae8-4577-a978-cea7931f0673",
        "cursor": {
          "ref": "97b5b9df-fbf4-476f-8e6f-fd8ad13dcc62",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1ddf5b8-f515-44fe-8355-4b1136c19285"
        },
        "item": {
          "id": "11ec27ce-0ae8-4577-a978-cea7931f0673",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b17a4f7-1a33-4661-93a6-d8d6bb7aa618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2285ace0-ddff-468e-9fdb-4fe71727e0fc",
        "cursor": {
          "ref": "b335ad6d-6c54-4f06-95af-ac77c7c8da72",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b833c092-a89b-488f-bc93-569b34bc35a3"
        },
        "item": {
          "id": "2285ace0-ddff-468e-9fdb-4fe71727e0fc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e57019ba-283d-42d2-8f26-b40b1961d6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0577de-6877-4650-b78f-e981757c47b9",
        "cursor": {
          "ref": "68560af7-a072-47a9-aff1-354db4fd41a3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1e2881a4-9e04-4bd7-b7b5-32eb3b296857"
        },
        "item": {
          "id": "4d0577de-6877-4650-b78f-e981757c47b9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7acbbb39-7630-4ae9-a8a9-eb148b630c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2558af8-f158-4884-8fe6-fc8ef12724a5",
        "cursor": {
          "ref": "1ed4e1cb-9832-43c2-b02e-b9c07649ac95",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "be901bda-b835-47f0-b70b-9832673c4f3f"
        },
        "item": {
          "id": "d2558af8-f158-4884-8fe6-fc8ef12724a5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f9ec9887-6bd3-4e97-b717-656badd99563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac2f025-ec4d-444e-bb8e-e6c04c1e8605",
        "cursor": {
          "ref": "c6659c51-3a84-4bb8-b0f6-cea7638ebbbc",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1d97e915-70c7-4790-9e6f-c13234f6f0e1"
        },
        "item": {
          "id": "fac2f025-ec4d-444e-bb8e-e6c04c1e8605",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "03ef6a39-2a0b-4f05-8411-2e825a53b371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5291e9b3-65f0-4eed-9a30-59baecfeb4cd",
        "cursor": {
          "ref": "1ac738ea-25f9-4c68-9335-77a3b2838a0c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "95447d66-49af-4613-ad04-92c3add4b57b"
        },
        "item": {
          "id": "5291e9b3-65f0-4eed-9a30-59baecfeb4cd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7694e401-ac6d-451f-a462-b74438aaae03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed33f67-0bf3-4d85-8746-34a18ebd05aa",
        "cursor": {
          "ref": "2af487f1-518e-4da4-aa23-c8780bffdb1b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6f160c66-fcd0-4d4a-8114-4e5d46c71b56"
        },
        "item": {
          "id": "6ed33f67-0bf3-4d85-8746-34a18ebd05aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5262a3b6-0f7a-4add-9ca6-8d9b1278ec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae5aed6-f4c9-480b-9d16-7eb8e5f51c74",
        "cursor": {
          "ref": "fca0eed0-6ee8-4b8a-80b7-795991401dc2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb51af39-2930-4bed-a526-7e98592879a0"
        },
        "item": {
          "id": "fae5aed6-f4c9-480b-9d16-7eb8e5f51c74",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e79e28c4-ed56-4578-a328-7b1a8a3d3e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b81e3e-2c69-487e-934e-c7526920fdf5",
        "cursor": {
          "ref": "7c5bb12e-d2dc-4f84-b30a-f2ad354196e6",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "998a834a-c86c-4b22-bfa6-483411beb586"
        },
        "item": {
          "id": "27b81e3e-2c69-487e-934e-c7526920fdf5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1b028eb2-4eff-4307-8c4b-026a9be5d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68aeda-e6de-412c-ad76-a7f4cbd222f5",
        "cursor": {
          "ref": "6e87cc89-f29b-4c26-adf1-981abf99a90f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba770b59-72fe-46de-96e0-5656dfb422ed"
        },
        "item": {
          "id": "fc68aeda-e6de-412c-ad76-a7f4cbd222f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7daafed4-8727-4d75-a871-b5d5c7e3c631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dc70b2-ebe6-4b93-b55f-0a1fed06ba53",
        "cursor": {
          "ref": "b4b767d8-dd63-4b78-976e-902089d95176",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a3509e86-8188-4987-b9de-96fec5378230"
        },
        "item": {
          "id": "31dc70b2-ebe6-4b93-b55f-0a1fed06ba53",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e40736cb-3015-4b17-bddd-5228eed2b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72ce9d0-cdcf-49a1-bf6c-19d51a53312d",
        "cursor": {
          "ref": "5fb1ee34-42e6-406f-a00e-d5b03d091373",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a4a2be05-6606-4bde-8b0b-9eab56e57a47"
        },
        "item": {
          "id": "f72ce9d0-cdcf-49a1-bf6c-19d51a53312d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a5e53ddc-a2ee-4d3d-9f96-9608b28a309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10776d84-a1c7-4bf2-b60d-cc289015c809",
        "cursor": {
          "ref": "ca12f973-f063-41b1-81e0-5ecda3973cfa",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "971914e5-9b72-4fbf-98e9-da61b431f0e5"
        },
        "item": {
          "id": "10776d84-a1c7-4bf2-b60d-cc289015c809",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7e3f7fb-e7c8-49a6-9a55-f3d49c8b4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab29e5b-c29a-4627-8351-9f75d8fcf670",
        "cursor": {
          "ref": "7fdaeddc-c2c6-4be8-a2a0-a46d60947493",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "031acc46-458e-4dc1-87be-e10e8e9dcd5c"
        },
        "item": {
          "id": "5ab29e5b-c29a-4627-8351-9f75d8fcf670",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9dd17766-d966-4315-888d-f42925582eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4103be-1c0e-415e-ac70-f2e666358526",
        "cursor": {
          "ref": "e55b6d78-05f8-4f78-8f07-393dc607fde9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f30e899-9f84-481e-8dc3-71efda1d90ec"
        },
        "item": {
          "id": "6a4103be-1c0e-415e-ac70-f2e666358526",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85898fdf-61ec-4a13-ac4a-4c49289d0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692ab64f-fb62-47ed-abce-c480fafc8669",
        "cursor": {
          "ref": "e849ef69-1490-4c96-8320-f1d075f50362",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a1c1aee-bb72-4dc3-9868-fc9eb8589c9e"
        },
        "item": {
          "id": "692ab64f-fb62-47ed-abce-c480fafc8669",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a2c7d5c-0d31-4dda-bfc7-937948b1106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f01dba-bb0d-4fc1-83cc-27c4d48ebbef",
        "cursor": {
          "ref": "7660bd5a-7fcc-4f3d-80ca-e46cb25234c5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9aaef6d5-de00-4905-a799-bf0f137ccb4d"
        },
        "item": {
          "id": "c5f01dba-bb0d-4fc1-83cc-27c4d48ebbef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f33bb2c2-347e-4e8f-9581-8860d577160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eaf230-0ef1-46f1-8f5b-36cac74ee024",
        "cursor": {
          "ref": "c8792815-5a0b-45bf-b4da-85e8ed14e5b8",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0d8bbf6f-80ff-4a3f-a7bd-4a7916546723"
        },
        "item": {
          "id": "93eaf230-0ef1-46f1-8f5b-36cac74ee024",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c8d1c0b5-a4cb-462f-93c3-339fc2b1c574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6373d8-02a9-48b9-a7e8-ba71f0a99040",
        "cursor": {
          "ref": "3caee8c7-0370-4263-b770-5575373cd38f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "39cb7c4f-0a50-4c74-8ddd-a143ac8c0846"
        },
        "item": {
          "id": "3f6373d8-02a9-48b9-a7e8-ba71f0a99040",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c07d55c5-f6c7-4e10-a87c-f4ac7cc076aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b1719d-6e1a-427a-9b10-cbc0f0ff39b8",
        "cursor": {
          "ref": "9702f456-08ac-482d-8daf-ed266f7ebb24",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c80f6a3-4b33-491d-93ef-adf9b2f2f266"
        },
        "item": {
          "id": "83b1719d-6e1a-427a-9b10-cbc0f0ff39b8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c9cfe82-2e0f-4b99-88c9-5e3ad5409f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bc97a3-7223-4796-a928-2973d83dc0fe",
        "cursor": {
          "ref": "25de73c2-1046-4050-a424-ee5f642ecd55",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8ec5e3c7-8c0e-40dc-b491-a554a65e8d4e"
        },
        "item": {
          "id": "55bc97a3-7223-4796-a928-2973d83dc0fe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "53e5ce18-57f2-46a7-baf3-bee73385792a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb75aeec-b7de-4202-ab2c-54e4ea7b8ad9",
        "cursor": {
          "ref": "260e0650-6436-4d6d-8c4d-d3adec3f746d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "42eb5d83-6960-420d-b0cb-6d00dc89502b"
        },
        "item": {
          "id": "fb75aeec-b7de-4202-ab2c-54e4ea7b8ad9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c1c06af-1c71-403d-b49b-6e5e13db4c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9355105f-8ff0-4cd6-bad3-e1c5cae8db5a",
        "cursor": {
          "ref": "97ae0a22-88c0-4ff0-bc02-70675ef59bf0",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d4a7b8b7-03fa-4ba1-a84f-df63f52e5883"
        },
        "item": {
          "id": "9355105f-8ff0-4cd6-bad3-e1c5cae8db5a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5198b319-d34b-4867-a3b1-3c4d5e06f7d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43638f5-6833-42ae-9c8b-4709a46d7730",
        "cursor": {
          "ref": "d8f9b2b2-b7bb-493a-bacf-a6f7c5a76fba",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a012ec33-3048-4a0a-81a1-132d748f3fe0"
        },
        "item": {
          "id": "c43638f5-6833-42ae-9c8b-4709a46d7730",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "96fe19f9-6fb3-48c5-8610-4d1be343e434",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc854d2-392f-4ba7-b4ef-735b3f6739ee",
        "cursor": {
          "ref": "49124a42-13a0-445d-bb9e-81160be98ce7",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5faca32d-9337-47ff-bca8-04343a21e99f"
        },
        "item": {
          "id": "dbc854d2-392f-4ba7-b4ef-735b3f6739ee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e92efe0a-a45e-4634-b8c6-3cc603248565",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e241ea-2ddf-40ca-a156-63ac528a4e71",
        "cursor": {
          "ref": "c43cba30-c5b6-4515-a55e-e5ad830dd319",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f6e88de1-d792-4de2-9d88-834ed7bb561e"
        },
        "item": {
          "id": "12e241ea-2ddf-40ca-a156-63ac528a4e71",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7a5e3c2b-5bae-438c-8b61-01fa9e974745",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf4c729-6683-4828-8153-735b7164a103",
        "cursor": {
          "ref": "be0848b0-2939-423d-ba11-5fca7fe32245",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d84c70ad-9672-49e7-ad21-1f17fbd99dbc"
        },
        "item": {
          "id": "3cf4c729-6683-4828-8153-735b7164a103",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd8617d6-c766-49f1-9074-9d6998c74103",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
        "cursor": {
          "ref": "8c29fe8c-64e0-44dd-ac29-5d2eff419bfb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1cd8813b-0aad-4ba1-aa85-0582880db1a5"
        },
        "item": {
          "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25125ec1-1f00-43af-9b26-76985201546d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
        "cursor": {
          "ref": "8c29fe8c-64e0-44dd-ac29-5d2eff419bfb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1cd8813b-0aad-4ba1-aa85-0582880db1a5"
        },
        "item": {
          "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25125ec1-1f00-43af-9b26-76985201546d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
        "cursor": {
          "ref": "8c29fe8c-64e0-44dd-ac29-5d2eff419bfb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1cd8813b-0aad-4ba1-aa85-0582880db1a5"
        },
        "item": {
          "id": "ca0d9eec-7c7c-450e-ab79-51fe0a3f6f44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25125ec1-1f00-43af-9b26-76985201546d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581eb30e-dfed-46f6-bade-e23326a21a3f",
        "cursor": {
          "ref": "9c79ef4f-70d4-4c8a-b909-00dbeacc27d8",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ebd599dc-2a62-4c18-8358-909a64757d7e"
        },
        "item": {
          "id": "581eb30e-dfed-46f6-bade-e23326a21a3f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a3912648-8c45-43a7-8147-e0cea69f2ad1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2f7dc7-b18a-49ed-9bc7-ef2ea39dbc85",
        "cursor": {
          "ref": "ccd48dc6-8904-4ccf-990c-2993598ced8a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d65384ab-ed5f-403c-a83d-7c443ba192a7"
        },
        "item": {
          "id": "9a2f7dc7-b18a-49ed-9bc7-ef2ea39dbc85",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5ec8280-029c-405e-b01e-fe25a4821838",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2f7dc7-b18a-49ed-9bc7-ef2ea39dbc85",
        "cursor": {
          "ref": "ccd48dc6-8904-4ccf-990c-2993598ced8a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d65384ab-ed5f-403c-a83d-7c443ba192a7"
        },
        "item": {
          "id": "9a2f7dc7-b18a-49ed-9bc7-ef2ea39dbc85",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5ec8280-029c-405e-b01e-fe25a4821838",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e14255c-f7e1-42cf-9ed8-4ec88e7cc980",
        "cursor": {
          "ref": "bf477a04-ae82-4f39-b8cc-9ef484a6a1f8",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "44490ae0-cce0-404c-9794-ad27e32ee90c"
        },
        "item": {
          "id": "1e14255c-f7e1-42cf-9ed8-4ec88e7cc980",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f4415fbf-74e4-4f01-a8bf-e8849b8c49b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a6066-ffda-432e-9b09-c15861c4d0a3",
        "cursor": {
          "ref": "3b493ebb-245e-4a7f-8c81-fa5f1c4d3114",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f8766401-293f-4c68-855c-bae3f099ce9b"
        },
        "item": {
          "id": "896a6066-ffda-432e-9b09-c15861c4d0a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e32b48d8-35ee-4f05-99aa-200dd19ad6d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a6066-ffda-432e-9b09-c15861c4d0a3",
        "cursor": {
          "ref": "3b493ebb-245e-4a7f-8c81-fa5f1c4d3114",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f8766401-293f-4c68-855c-bae3f099ce9b"
        },
        "item": {
          "id": "896a6066-ffda-432e-9b09-c15861c4d0a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e32b48d8-35ee-4f05-99aa-200dd19ad6d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a76d98-2d4e-4c69-b9a7-0e7361ad0a66",
        "cursor": {
          "ref": "3aaf0c31-4c42-4101-91c7-5205825630fc",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ae6063e2-d0ec-44b4-8178-170ae5e47dd0"
        },
        "item": {
          "id": "96a76d98-2d4e-4c69-b9a7-0e7361ad0a66",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bc4c25d5-a800-4e97-9556-26fc7e9dc2ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}