{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2cf1c051-0f68-496c-96fb-bab825588332",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b401d05d-e47e-4ad9-80e5-1df1e2d46692",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d56e98e5-d33c-462d-872b-930f02603fca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "540d8b9c-fbb5-463d-9826-ba207b644021"
                }
              }
            ]
          },
          {
            "id": "8a62ad49-aef5-48fe-b596-89a51f72d6bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45e6b958-b69a-4712-bac8-54642f06f10b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1ace07b-023e-4773-b6e1-a17847a34c9f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "42ae5cae-5aab-44ac-894d-dcf692311b1e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2861283-ff44-4188-820c-a1e7d5c6bb8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8dbf2610-16bd-477a-9efd-2afb8fe97c60",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2c6345-71fc-4c3c-ac55-0f41234873a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d459601-772b-46ad-9087-758e31a59aef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56fc7221-23eb-4842-908e-10d8c4600358",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99167090-821f-440d-9fea-177d3b7d0c6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75f392fc-9e23-4b18-a7cd-ce873bcc3fa8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50d83a39-6670-40b4-bb92-d811bfcaa2e1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b3df681-466a-41ca-9e12-56956d0685da",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b497dd72-3719-4bf0-b321-547e032740e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e258fcc-6879-4af8-9c47-d3db9b125571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aacf72b0-343e-4bec-9c46-7b56faf70e68"
            }
          }
        ]
      },
      {
        "id": "bbaa3c75-9b1c-497b-900b-33a0a6e80747",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9fc62689-c904-41a9-82d9-92bb37f3b866",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27cd4f16-49fc-42db-b17a-e7dab8111056",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5144e52e-bbac-4553-98e0-484d6e1ca029",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f374b8c5-8166-409b-a42e-0553b7fb0aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4c5acab-9a04-464d-b3ef-7b7d68cf8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e912a-bb49-474b-ad15-0d7c0fb8687e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73c388-19c8-4a57-92e4-02cba32884fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45643154-5a26-4d6b-bbd9-81ae0e281364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe016a-c1a1-430b-952d-b3f42f83122c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3e2474-cf65-4003-9f63-a5cc6991f026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25f36923-4dab-4bcf-a36f-e3b32825b180"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b863f14b-4ef7-4a20-bc45-7968ab24ba16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c9ae230-58e0-43a5-8844-882e63744a74",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea542de3-08c3-48a8-9f60-57ca39e1e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6535736d-a06e-468c-b212-e35d4ea5ac23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5a4896-15eb-4fb0-9074-f235fc224992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7866224-d71d-481a-8ab1-9a77d0b44b14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ca2430a-69d6-4f17-bada-deb6f715cb8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41a2fa65-d6bc-4a46-accd-cfac50bf7a13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fa88c60-e042-463c-a286-153363e25e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b26888c-a28d-42aa-9487-3634c700f9f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4adf07d4-6d50-484c-a4cd-dfb5ad81a4f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "94a02dfa-5ca5-4dd6-a2c6-2a0373f4f685"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c291fc8e-50ae-416d-95c7-fda056802662",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33d846f3-5b29-4f8e-9f07-c7f24917a33f"
            }
          }
        ]
      },
      {
        "id": "9a8b03ab-ed44-4a21-b497-b6096bdfa73d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9ef03d8c-680d-491c-9a71-e537570c93d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60dd7968-2fa3-408b-a1e3-197e3bb77011",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "da5a00a4-d40c-4b22-af9c-32fa628dcea3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68c9b8-163f-4913-94fa-33c8d0dda29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788e1238-46fb-4da7-b74e-6b8da090e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c8f60-9602-48a4-ae25-eb054b35f439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036f9ad9-13c9-42c8-8174-8635b29ac8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf914ad-baf3-4093-bdba-f35cf398fb05",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a004161f-87d9-4d29-a796-bb1c92bbb952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ed99d7-e78e-4852-90c2-e2710e0e4468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6b9667-c4b8-4108-bc3b-d115ad69cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0fceaed-4b97-4e00-af96-a9ad1337f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183cbfd6-4106-49fc-ad98-5169405fde81",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d88414-58d0-4e4d-9c11-91c22f3c28db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cd2b28-bfce-41e7-9157-5644d18b24f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa61d5-3e77-4df7-bf6f-a63e47106c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b71f600-2dab-45d9-9a55-e3500514ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683d2190-90ad-4491-94c6-a63d3da550c2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd65c6b-ad7c-4cb0-b49b-3780eceef5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa015b9-4b5a-4022-9507-6d741a170273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd765de9-4ac2-4ad3-bf8a-57f9ad090918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47a16da-f550-4651-9d2e-98e6ddcbb9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f544decc-cf51-44fc-991e-df94080518b7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d0a13f-3405-495a-8417-808b57cf9c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff49a6bb-b2df-42e6-9d1a-2aaf63bc299f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697debf1-0d2d-4432-b411-df7f7a984549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7db58f88-9c22-4b77-b67e-b107c242eb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55386c0-fd94-4b1c-a333-00acc97dd967",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42398add-33db-48ab-aade-55a225fac2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e404da3-ee73-4852-88f7-b8b60f6b2d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eb491d-8299-48a0-8f52-0c487deb9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab875344-69e2-4f82-b05e-d195c2e585b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d15822e-81a5-455a-9b4c-cfe75a87d4cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c63898-97ea-4d8c-9a37-c0963f12697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716e8f70-0f5e-4e0e-8337-1fb86e5a0cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5352d6bf-c868-4cb9-975d-022d5a9727c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc7f4caa-67a6-4409-bae1-7666213b3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e01df6-a94b-4fc8-aa98-b754282686b4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749fa2bd-f2e0-42f0-adda-57bafd01cb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4e0430-4009-402e-8579-ad772850b4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eef200-b8b6-44a8-bedc-908cbb8743d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ba1c25e-a2aa-4c84-acc6-6663a194acfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03de2d8f-935f-42b7-92b1-0543b2725930",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d895497-da08-4a31-a1fb-01888d43e5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56ab0ee-19c1-45d0-800c-bea98e3cabc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0c958f-04ee-45c4-aa6c-e7eb16a95101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dc7be79-40c8-4893-93c5-72e3ed7dd508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed761c6b-bc9d-41b0-814d-32da51034ca7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80461b65-521e-4185-b8d7-ccb4370c1dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346be16b-4f03-4eb4-ba89-e7a17f79e52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986d259-c8fd-4d0d-9d3f-dd8ca0a89423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b381549a-506c-4361-b3eb-f0a431368f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c4b608-38c9-44ac-b778-c15d50bc52bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2215c9a-fca9-4397-b8fb-216fecc12987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edde944-43b6-447c-8904-0a9329938d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190cec9f-c106-4b1d-9e3d-098d180b4655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea80372b-7156-4c5d-937d-95dc6be98fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba94f8e-cf28-446d-964f-1e03cb1ad4cf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7f0386-bdba-45b5-bdec-ea542a31ce41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53d538d-7f6a-4d3d-bfa2-a89513a673f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f904e852-8aca-4059-a8cb-f81863026a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e9d637-70d7-49b8-a460-1cf974f25c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a3207d-5cde-4578-9303-6daf38d2f513",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1009a0d-e22e-49e2-b0df-a60673f78a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375d3629-2a09-43d3-b596-52db747de3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a6ccf3-ca4c-492d-8270-f16b2fbc6393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "062776e3-ed3f-4c2a-a79a-45b24b93685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c9c235-c695-4d76-93b9-45822b9d01f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81082c2-15f6-4441-a1c3-9407fa314c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cabc74-67c7-4764-9652-e42bc4c8d99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f17e577-5005-452a-ad0f-6e74f4704a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a0ba3da-bab3-4923-9d9a-873e8a3f12e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a772a6-3410-4bc0-9438-d2290706b968",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2422f34c-f954-4d64-a76b-b12fdb03e9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31706816-6d80-46b2-8150-5fd2c2ba1bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24bfe3d-8c33-4c57-ac5c-c22c64e41a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08f204ff-49b0-46ab-add1-9a1793ff979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883ff33-73e0-4de8-88a2-8b2996c40b50",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1736a1ca-ed2a-440f-836d-e59720de11ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2990a7dd-2aba-4f9c-880e-7c4141750f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a64f8b-dd8d-4508-acff-3a80eea6719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b6d265f-611c-428c-a7dc-78a10894dba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd60bc8-9bb9-4b39-9453-f305c8db30f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b8af1-ebf6-47d9-b20f-13d02e1fc9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9a523e-36e0-42c3-9c7c-a31e0855c94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac4cb4-50f2-418b-bf46-01dbca6c2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "496a2722-f157-4c21-ab45-06f763cc7b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae0c83-bd0d-4148-9679-bae726a4c5b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd0088a-be7b-45eb-97ed-85590edcbe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28a7c2a-e5f9-496d-949f-ea1df95b200e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c6947a-98a0-4018-ae31-15835d85bfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d477c3be-a13d-467a-891f-c6abb179cab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0337b5-a7c0-4e00-b77d-5e87292ae4f9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef30956-a91f-42fb-a188-d9c46606c94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5623768-2a64-4a65-bc79-291a7e661351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55b740f-86a2-4291-8976-d920e0940721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c288c123-19fe-4a1f-b1c4-afd1289c1443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef4e1a2-320c-4446-bf3f-9cb10c723b71",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05910f9-b7bd-402d-97cb-bd52264f21d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eaf2fa-acae-4dc3-bee0-435520bc534e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe386c2-4d03-4938-b821-58f3315575ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e360badb-7fda-46bf-bbf4-de8335d65a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612ec531-685d-4056-9a13-650dd719a145",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae8e2fe-3719-4ea3-ad21-1c325e5e4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75dfc4e-454e-4e59-8d3c-6809662eadef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abeed6c-9f8f-4b0e-917f-d9e6051697d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab93cb31-5e45-4d12-b00c-308e9b1d1390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57580356-3e57-4c5b-b0b0-5306fd05e42a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028c0ed0-0ba8-47d4-9ffd-83da4324d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f99b08-3c4e-4b19-941e-9e78d01f51fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51c7ece-ece3-4281-b705-64a0822eedaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d54346ff-588e-4bdd-a117-1eaddd1b0895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d1ef69-6eb6-4c43-bdd7-bfc5698c7042",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ac661d-e306-49f0-ac66-1c935ca2fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d908cff-cf54-4410-bf8c-b4048e55ea99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc5258-5656-4e74-ac6b-224f76fba7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "891b61bf-9b0c-4bdc-87bd-181620caf147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56be2dc2-bbd9-4d95-8b1e-92bba033f225",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914e450f-5168-460e-aea2-453e2099b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb8c981-fdca-448d-8f64-4a1a86424f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa979ad-bcc8-4f65-9268-ab264c8d181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "101c7091-7ab3-44d0-a7e4-10359fe7a052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e88987-c006-42f7-951b-bf78fde099bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4111b03a-3c63-4b0d-936b-9eedaf39a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fbd922-16c1-4a0c-ad5a-1d646525fabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215170ae-6e11-48ea-b32d-61ddb0d4d921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf952aed-6224-40b5-9630-3a775e6f6904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e5f8db-03a6-499e-b140-f40a215eb125",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a529c86-7951-476f-a69a-85e6fb9d5c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56455390-0060-4119-a1f9-58249642230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025f71b4-fac6-4453-9a5d-9324b4114eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63819375-e7d2-4961-bcf9-d96dcf0f6a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39558caf-39a8-434c-b878-3cd101747516",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44435522-f35e-4cbc-a420-7204b53f515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa14d4a6-259a-48f4-a793-bf5820d03be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c875b67-d226-4f8d-8a25-31bc5d85fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "448cd141-1fb7-4960-9dad-3562781ac07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db5b9d8-82ec-4f1b-a696-f135c95f1457",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6045868b-7629-44be-af0f-92053bc1bfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6bacca-8b2a-4eea-bf62-0a3f09ff82d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be3e695-8c0a-4bac-a3c0-1c08fb5e9444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d02ac3db-049b-4057-a01a-f6e4d332157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9349f10-c6c6-43fd-bfc3-0ce0395954fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf91719-8200-4779-862e-59ce60d46177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ba636-c0b2-4cbd-b70c-8832f2fa1e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137ed6c6-369d-4046-b4c4-ffa5f0a9d888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7006bd54-26c6-4b22-bd62-6bcfccf21477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51811c49-79f0-479c-9b30-ee07e4310fdc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82044f4-59a4-48c1-8117-a39aa7510d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dc7d0d-a676-4e93-b119-80d491048e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab67c4e-0b28-455b-87d1-88e90c55cffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "624839d3-7d87-44bb-b419-849638d3ab19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91292aac-1e65-47cf-8924-053492544c96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef84aa-618f-443f-8811-d1b5bea8bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec1d8a0-4a8a-4d6f-9d83-86080e770a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b75425-fa5c-4ca6-b0a9-457b427eb3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e53cc5-c161-494f-93d7-b994ba2cc548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63736d6-923e-4f2a-9b88-845172d59e32",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ea8dcf-6ec5-4b24-945b-6ceb9a064afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddada7aa-13bf-4901-8dc2-84ac10993c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b63ae5c-fa50-4d70-ba2d-e0627a2cd2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2811f54b-34ab-4cce-a843-7ff8df805fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45d370b-cea4-40db-81a3-63bec3b180a1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61aae1a-25d3-44a2-8087-249599cf637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec4aedd-225f-4f26-acf3-3cc4f369a41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8982f076-793b-49a0-bc35-76c21edf0b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "789493b5-abf6-4836-812b-99f4c967dd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28404993-7936-4cf8-9243-09b10f123ef4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244cf03-4520-47e5-9d9b-b9411fd84cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9773e8e6-8f21-4c54-8798-7b64184a9fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca3275-c9bf-4352-ac82-805c42d34fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2192f8d1-6214-4c1f-80a9-b3bfd14d13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52fbd92-2e80-4f55-9583-a61f4c969b34",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68383f9-e8f9-4978-a9a6-577a12d2c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7675b41-49e6-425c-b704-8a367fce85ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aaeb8c-f14c-45da-a93a-3ba4b2212426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c000394d-5a07-4c98-b5e2-0ea8d7dcca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbc6a55-3251-4187-a507-fa3256c92f63",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20ed4f-7ea0-4a81-bb0d-590c65ecea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab6fb1c2-f61f-45cd-9d37-4cf4ba94fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fe7293-1106-4ee9-9a6d-57223d9451ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e323e96-7c69-42b7-8f1e-de1b5b1055c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86abeb53-c3d6-4739-be21-f4eb3f633286",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e668cc-58d7-43d5-b0af-1e3555219917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be01286-c919-480f-8d7b-040642dfb2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf35f466-9fa5-4337-99e6-869b4d9464d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0581229e-d144-49b9-abd6-b57ec4862b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6dcce4-f157-42a9-bc2e-9e131ad32d7b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dcef22-ebf3-4d3a-8843-d782a1f3f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f02aab-c346-4f6c-a049-91e510adacee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e25ed07-3125-46b9-933c-b6d568470659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7f070d-12c4-4495-a052-3814eb6cb854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730762e6-a652-4307-be48-4342c15cfa80",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49750bc0-5230-4a6f-9212-4c2cab702ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21db906-2f38-4509-a6b6-d9b5262251d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac7331-f88c-4919-bbea-4cb3459d0232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "907c119c-0960-4d8e-8dd4-0d4ee34a3ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fc5e44-054d-4d55-a5c9-e5c2791676e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b31de3-e80f-4cbe-8eb2-1536cb77da4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53c6b4a-b6c7-4932-a884-e932eae0c7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7ba981-7fc6-494a-abaf-0d8b8afa2ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d30f88-e57c-483b-ae80-7fe2b5801256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55437dbb-d9e4-41b6-8d2f-666833bb4262",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74fc2a9-9e27-48a6-b910-cc5115d0cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f7d1c3-789d-4c1b-9849-d50167ce61dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ead8c7a-70c3-4b5f-add5-a81e9d7b8a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c2a688-96e9-4156-8311-d7cae181cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e947424-2698-4590-af1d-94a4adf819e7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe4e776-3de2-4a92-ba95-9001ee7fde71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b6a36f-11b5-4d31-a83e-18cdd46b2edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcab216-5f07-4b5e-8a66-554dce211772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc190c9-f1f2-41c0-acbc-acbbd1ab9797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c4001-c49b-404e-9efd-6835630d51e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426b2b6-5b20-40d2-9740-211ab51e23e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf9140d-9f8b-420e-913d-187404f09ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a032f154-be20-40d4-bf69-1592ec87cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a37730-02de-4070-9c6f-30ce77e5b37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40659f-5a57-4cb6-8c79-e82304a34c16",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfa9698-3291-4929-b5e5-8a2911aa64fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78ea172-4d58-4bc4-9b37-e81731caf210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69683fd7-8d5a-4975-9436-f6898c9fbcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d021c1b5-0478-4920-b8c8-ac405955b28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f31d0e4-8a8e-4d8b-ba08-6777da38ac2c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2f1f1d-ab70-4ccd-b766-4de675f355f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7307c78-c957-4d95-b0ac-bb179610babc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f008539f-117c-4ee6-99e0-a920d8dfdcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b019fc-b537-46ec-84a8-677fde1f38cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26669737-e7b9-459b-b5ea-1f4c799b1d41",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386594fb-8715-408a-8d74-171a35aef178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f94643-0cd4-4f21-8a08-0c75f755949f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10f7432-a514-4f03-8c6f-0cfb7f53e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a82fc03-c65e-42e1-9a52-2753f6034b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d458f3-d2c4-4447-891b-5fe8c3ae88d4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0f88b-5b2e-437e-9719-ae352134567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c716d5-ccb0-4403-83fd-9b0408cc5d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56537e4-79a5-45b9-a240-d7c3c0fb5304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6edd4c7-12e4-4bca-91af-249fc8b99f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe852d50-e4b0-4c7f-ae7d-fdeebbb167bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9b5441-ecf1-4bde-b582-363af8237ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0621417-86c3-4b50-aa45-6dde50fd0a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a28aa8-2410-4b0e-8813-e7a76dfa9d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7dfdcf-e209-444a-b84c-f10f691abaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539369bf-64dd-49a1-925d-7eb4d0170e18",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6b224-89b9-4847-806e-40c667cc8d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fbe4e7-ed53-49cd-8d9d-9f41e2f4c6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8160dcb3-598f-48ac-93bf-60a63e47793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee94c62-78cd-4b9f-b1fd-3ae9972149f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c06872-94eb-44dc-a6b7-9671e57a622a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8911a038-f958-439e-b6fe-6e222cf468cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0ec696-2f8d-43b5-94e9-057143d57f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f1e34-0cdc-42a8-84be-4725689f9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f83eb02-e1e7-4183-9463-4a6581926fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab8ea58-66f6-4dc1-9331-897aff5c1acc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438dda5-2013-4030-b4ed-b2765c768cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81749834-eece-48a6-b964-2dd22e824724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc400e8-e432-4e8b-bbb7-85b2fb3348a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd1f04a-55a5-4d00-bef3-e5beff205715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19af78e7-c42f-4124-a519-0d8a9adcbc05",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723fc01c-7e59-439c-9631-445162b66fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c9c82b-01e3-46bb-a5c0-2e6a0fb6e12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a749f1-1ba0-43c7-8114-3b4dcd5376d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f45cc4-ae1a-4acc-8776-4e3df31b9856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0865a2-c5d7-42a9-ac72-20f4401d081f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924d95a0-597d-4ddd-985f-8764a038a5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783450bb-63c9-4ab4-ab13-4f3813cfcd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e53b61-f350-4619-b9c9-4308d833bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdbe50c-ea0e-42a1-b9e5-b5f93290d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b42149-5846-47a9-b2ef-b51f3ec6e9a9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24780939-b213-4593-b89b-a79a2affc3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b5ee10-a75e-48f2-b450-10b0b35cc622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa4bdb9-d437-4f68-8c31-3ff52b27b0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2918ae6-f43e-4597-8716-fbabfe1a5159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d0f93-ed07-435d-a632-99b89bfc1616",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b642fc67-2b7a-47bb-8310-472deec39d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ddc488-651d-460d-b3a1-0161bdea4d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118aac9-5120-495c-a482-c4c85a145895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32fd8dd-811c-4ef8-928e-3c2f5e8a6c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69b7db8-bc58-4f51-a8eb-47e5eac760b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ddc37-9c08-4934-ad27-a76c603b3fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865ed6a1-1572-45cf-ab80-399287bde3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4178b0d-9578-4f17-b2ab-cc484b5c5dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "26e866b8-7117-4550-92ff-407fe48e1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc54a328-3a9c-4cba-a481-b46de51fdf99",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f040d-c62c-4ad9-ad51-3d12a875fc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7828fc7b-dfe1-4368-b40c-e1c4c4838692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0feb77-faeb-4c9d-9da4-459b485180f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "129359f9-14bf-42e2-8dad-b8f67cef6038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a7c587-cc9f-484d-a5a3-03f83bd6cfc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30ba05-709a-43cd-8908-8d75b382eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e79135-15a5-4ab8-b47a-022607ef77c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de20676-2509-4ab3-8ec2-5d142854cd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b84615-70b2-4a03-83fe-eeb1f0c47e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc123d8-a006-47bc-bd79-6faea76c8042",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b33ae5d-beae-4e36-bb50-d55e4f6035b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2bc91f-2387-4ad9-8e66-31c392b6903a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c55cb-a2a0-42f5-9619-a2aab64c3f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d7c3a3-eae9-47b8-9442-237e610e4676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8bf31a-4aa0-416f-b6ff-c569fa81eebf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b60d66-8b15-4449-aa14-f74fe80c95bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae1899b-99a4-48c1-9f07-1b099c3cac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827f0bb9-2c31-4950-8b27-f9bcd8d421b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2f729d-6a1d-4972-9aae-0d7237c5a78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa09ef6-3cfe-432c-8070-32700fd4ef11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f49b92a-8c90-47f7-83db-ab361d63987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894aba0e-ee4b-4e5d-a6cd-f10b34392e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abd6f2f-700c-484b-8c6c-274e7afeda74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a66e614e-fe10-485d-8b27-655e497f790c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a14046-c7d6-46dd-9714-73f154059079",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4870542f-f2f8-4a94-a0ef-8824b6c3f853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d7846b-1248-444a-bbcd-870d14121f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e4cf20-fd4f-4147-88fe-d5b0e1bd115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d85ffe-2228-4bcb-97fa-e2422a87735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ba216c-469c-4fd6-b9e7-2e413849c6a9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4097c6a5-d9fd-4724-98ab-7b3971ce05fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329d9f99-910b-41bb-ad85-f1527bd20584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5583d08-f5bd-49d7-94ee-21d2f7072811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3a5953-64ef-4058-baef-fbe6dc61cb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff79d33-3978-4f56-9c10-49666a0aecfc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4c4bb7-6c76-4c43-94d9-5f890438c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37471ca9-c308-47e9-8298-fb4b4074a8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fdd375-a83e-4f71-9bbf-373488f9d975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c931e08d-4e3a-449e-8b2b-385f7ef7cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd6f02e-27fb-4e46-908a-681205d6b5e8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a71144a-c542-4ae9-b7ef-40d7a465be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6741c7a-c961-466d-ba28-307ca99740b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd706a14-8a5c-455e-9cea-4b0d5c2389dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf5ea0c-4999-4652-b9db-ab8add3be252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1ac798-f869-42ba-a214-d0dd0cc6159b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754f9ac8-1e69-4907-994a-eca6835aff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b029be-432e-43ee-8c80-5c385e10b491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebb8cb6-faca-4535-982e-55e55d80f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "467bbba0-2db1-4b09-889c-022d5e727f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04929967-640e-4267-b824-c3d543b84cbe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d891c-b349-4143-992e-4f9f7299100e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebaecea-8ef5-47cc-8326-8ebc7da8304c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724b969a-1b37-4216-a3a6-c3afb1a555db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1ec94a-77fe-47f7-bdc9-31598b94a100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83cf620-e435-4f66-b109-1570fc48bffc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14460579-7b27-4bd9-940b-d8aa6a0b2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9be78b3-dc9c-4859-8468-927dccd86013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b738d7c-945e-485e-ade7-9cd96dd2237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5f9fba-b778-4af4-bd49-2499c3316303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2be476b-4ca4-4cca-abe7-ab42e8e50b99",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a5e50a-d618-4000-906d-37c2f303d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18986729-370a-45b1-9e77-acc00eef1236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba4731a-e776-45fc-8e5d-6834325d86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8b861e-d6cf-4bf4-9b0e-221959d4b110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b6582f-f1e5-4924-856d-a56d863d9db6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b9d45a-82a0-4e87-b937-600a580618ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede7bac3-1d5f-4441-aa9a-0214377a6c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce176695-444c-4154-a3f4-16b9e69fe245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa51fef8-b3b4-4cb8-8255-9b076cbf932e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3474ac-c901-4333-a54d-1b4b220235d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3756978a-6378-4855-aac5-9c8a697201b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a70e9f8-6d47-45b5-aaa0-d04e270bd26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35014555-f06d-4463-afd0-01e22ef1dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb9a2d5-177c-4a24-97b9-2ef91d455456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887f198e-0465-483d-9c6c-d9b0f7464d1d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2f645-f7d0-43d7-814f-98d8d93fe6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b416d63c-37e7-4950-a87e-cbdfc3618e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b017f6-b1e0-410c-a199-1cf393647699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1254ab30-d370-4206-b5a8-70d58fe24fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5856b181-5207-4d09-a5cf-04aec9706026",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc4581c-18ef-450a-99fe-e772b3a943c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e7ed83-e9f5-4904-8cdd-eadccb1233b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2b7d0a-ff0d-4cf0-bf96-257771bc0418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6f8773-275d-4251-bb13-c8cc7d1e9bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d154496-ed70-45b8-846e-397bbe227900",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54582d7-eae2-4afe-ad7e-16298d5b7d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6c992f-cb7e-492c-9af3-0b2799639c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482d2676-f7ce-4fc3-80b6-42340e126252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29dc1db7-4ac2-4749-b439-158171d5be7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f4b09e-090a-4574-849d-d68db9d1323d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd68c74d-7daa-40a5-a075-dfbdd8411fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bb2a54-327f-4805-8575-5b95a844bb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5daae5-aeb4-46a6-b253-36c074e0a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca7b388-706e-49d6-a6bf-e5ab28746b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69863c34-47cb-4d07-8cc1-d762c8d6251f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d25aca-8ba1-4bea-be55-f30014f23116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4def668e-bba2-472f-bda0-2d180a2ab9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8f2e3a-57ac-4a9c-96d1-c841bea98bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a464aaad-9a3e-4749-95c5-ffaf450a8a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814387c-ce90-4d32-a3b1-cb010ba513da",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f449a44-301b-4494-8c16-f9365be7d989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f42e2b-0f01-4406-af1c-a1a52f8bfc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a123a7d9-59d3-41ae-9518-68b7a23022e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c49297-2885-4e9c-bf0e-352e9b4bd46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73de80e6-23c7-47ba-b251-90440877e916",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860a6bf4-7c4f-4adb-bb2d-7e1211a3074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87947bd7-178f-4362-800c-39a45addfaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0e5b9-3b1e-4987-a5fb-98eee474e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb06ce6-49d9-47b0-b2ec-3db58b0155e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbed8e-8f5f-4837-aa13-e9ba59b42093",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f22280-71ad-48a8-ab90-677e7e553e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a60dcd8-b0c3-48cc-982c-8872dfddcfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d4b3f1-8c01-4143-86e5-d03b93091553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "094e6337-6863-4b9d-b756-951b94c20e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3680d16a-77cc-4ec3-8b61-a0ba48ba422d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b08c43-86c4-4d6a-a1c1-5a358adda603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475db3b3-9aa5-4ab3-af4f-2081ced692ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e21dadd-0ddf-473d-b39f-f05a058eb382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a20192cb-9b7f-47c3-b0ef-c0232141f038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e165ad-8ffb-4662-bddc-5a6047b475c9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56733b69-7ae6-400a-bc2e-77d859673591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4fd848-a2c5-41c2-82b1-b87663999865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409d709c-d627-4f42-8b0a-06d9130bd30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d18dccd-a54d-49cd-8640-e1a8b2cd3b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9210cc-175c-40c3-af5a-4de8138d4d1c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529ab490-34d5-43dc-b9d3-f7db6dedfef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b93d1c-3edf-418c-90da-e54c408df682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903110c6-5a49-4ad2-b77b-91d10e1cb4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b565a7a-ae84-4a58-85a3-9e262e7afc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d8d58c-7e05-42dc-bdb8-d0f6b641058d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcda57e-17bf-41f3-8b61-a9718f9cf2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cae8678-f892-4309-9d47-773a2fa78313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d9d37-2893-4bf2-a338-0d55985b9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06bcdc41-fdb9-43d8-8598-39e218ddbf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf4d9c3-4ffc-4511-b56d-c097cf16d5dd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a069c4-5de7-496a-88b5-5d0b4631da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4d5758-e6d9-4feb-805c-b1d34d8c1fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a940f55-15d7-47e2-a17b-f9f7e9db43fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "039d57f9-9f4e-4113-a9e3-9942a32c7ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440cedc5-6217-48e4-a088-9190ae210455",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97854382-b393-4a4b-a827-13e4e8cbcd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5827e84f-5286-4c7b-88f9-baa413b823f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085df67-1a91-4dab-9269-ac7b1fe26bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9a629c-e6d5-4944-8f41-b9debcbabd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b98f76-92ae-4ef7-bceb-ff221a70cc2f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de123e0-4f9a-4a5d-94ab-2f6b432ba7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef3aae0-8c4d-4359-82ee-c5712a85d4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615a4d7a-94d1-4673-a54a-4750fb8c9858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5eba63e-9f28-4725-a9ec-f50a97537584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e819d598-b6c0-41c6-975f-3a4c6162979e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980d9b0-4e78-4211-8475-7cbf26b4ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8319a233-4d13-48d7-bbfe-795e02308c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45406ebc-9b85-4667-9bc7-cb06ab02c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc4906b-1875-4f68-8fd8-0a611e56094b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cded82-e9f9-4d7a-9bc5-ed6f3ce04389",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faaf9cf-60a7-4de4-ada1-94c2c8db33a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3c2724-ac75-4898-8600-33b5012b72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2064618-e41b-4694-a5f4-3e6124a68c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40d3e157-7d9a-403a-811f-bde8244c00b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934e58b0-7eaa-40d7-9467-86e2e9ab1c5b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a2ca4b-a029-44c8-901e-9a2b63f63a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942e0e47-cd3e-40d0-8e15-27168c871af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e166645-13e7-4789-8db1-bee1f5e75d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "081f2f5e-948a-400f-afbe-6dae86e58aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1d718a-32ec-49fb-b804-23e65d8a41d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d84060c-3e8e-4bc5-8d7c-85c6b12d0510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cfbbc0-bf10-4f6f-b77f-4ea902505aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63d9687-8719-4539-9037-a211eba83dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d09677-a2cb-4663-9c12-1310dcc668e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea76fc7-f491-4e28-b6be-afb9270a1504",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55438965-7a5f-4770-98d4-10b310987459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1724f41-aea1-4601-831c-0b694d8a32ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a7e255-f4cf-4112-ba7a-ab4324fbf771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d11a87-ee13-4e1e-a09d-90cf0dec6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646e2fcc-5449-4896-8134-82014890e6b7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a869d-7384-4247-9b50-073591366fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "345a5a7b-2e1f-4ae9-ad74-0eb97443b3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614b2450-28e9-453e-840f-eabc48559dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42ebb4b4-fbae-48ca-8758-1e56fe87d57f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb17ad5e-0b83-47c8-9310-62ae55d1889e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf11285-8bf5-4a4f-add5-a6ca28c14f56",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85ddb5-833b-4dea-83f3-e48b1688d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b48cb4-c326-45a5-b2bf-656526347c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d0db4-5cfc-4576-b3d4-6a1e563e7978",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e3d10a-9240-41b5-bdaf-0e566a56a2ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a61f5d0-bc22-4b04-b440-f42ffc850bc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20ee2339-96c3-4e68-a47c-e3d6224a76ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb18e6ff-be10-46c5-a16c-f661b9e18913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2c01bf8-d0a2-4942-898f-28dcb4438207"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e63183a5-9bb5-4482-8429-2dab31122c13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "645bb1b7-cbbf-465a-883d-214e043065ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef490a9e-41c1-4e03-8d7d-f4d7e69b44d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac50d0bc-faa4-4e8b-844d-51c9b4955195"
                }
              }
            ]
          },
          {
            "id": "22ab09f8-b60e-4541-978f-14e2cdb163e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94781381-b62b-4abf-884a-0c5072d04c18",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "791985b5-0c95-439f-9edb-d0a82ecf24c3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e50685d-e637-4f7b-8eeb-e04cf1783fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cd2c1dd-9ca8-4af4-b925-50fbb3198c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62593f9-ad6d-4904-bf58-61aa1bcf33dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b949450-8612-4405-b2d8-b5b5a50ba11c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17714275-ef9e-4b16-bda4-2d49f0549443",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d35d3fe-df50-4d3e-8b05-b9666e5d2b25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1237052-f540-4339-bf3e-745fe926124f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2432c6b0-da4f-4b0f-a38d-b896a493e41f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "378f7fb9-0c60-4b1e-a8e7-2655f233cef5"
                    }
                  }
                ]
              },
              {
                "id": "4eeb4e9e-8955-46f2-a273-487213b906be",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3d4e3e-57c0-4c4f-9f5a-cd96cbd554fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdd47b48-4cff-4cbd-8eb8-dfebd134ccda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4db83e7-1339-49a1-a34f-e4e29ce8fe64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74da7fd9-40df-4fd9-8a92-75382b479ebf"
                    }
                  }
                ]
              },
              {
                "id": "9664d0fe-c515-4cde-9921-784596c10fed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a096face-3e24-4293-aedc-547a91fb1cf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10629ebd-eb65-48d8-942b-d987120d7007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f8f94e-3d0c-459e-af1a-2e704d984031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37c4da3e-3beb-4a3c-9421-6b72b261dcd6"
                    }
                  }
                ]
              },
              {
                "id": "3ebed403-3c6a-4b89-934c-5686dbb169f3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b905f6a6-6f4a-4aef-9c31-9aa55966e05b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06c8b4b0-d94b-4301-ad1d-9d800984390b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9acb684d-c4c0-4f22-bfd1-e97f65b3f4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c4da3b66-bd51-404f-a050-07ded72fc240"
                    }
                  }
                ]
              },
              {
                "id": "4a864961-abaf-434f-a540-e9e4efce3f8f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa6e5e43-0b99-4881-9713-4171a40822d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5af434f-66b8-416e-8e81-78a4e5607d5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0c61223-77f7-427b-873d-f306c6e07fda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a21a6bb-5e2b-449c-83a6-ca3b39530aae"
                    }
                  }
                ]
              },
              {
                "id": "c9b90a61-07be-450a-b829-67e7abb8871b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ae5bcf5-dec6-40d8-8d1d-0ee6d3eb790e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0d02d32-1e8d-48e9-9de3-fe09f75f372f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68547f9d-b5d8-4153-b423-312d836e4420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c465c51-ac17-4df6-b193-5b6c0e294e6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71431691-759b-47ac-a572-fdca7bbfca93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8a01e7c-ee21-40f1-9601-ad805dc6aad9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15cd6b39-d2de-4baa-86a8-f731dbe385cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fc7704d-0ba7-43b4-8d40-d9041af3d982"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "561f8fd2-79fe-4e57-ac27-9912c279679a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "510a1480-2b48-45df-ab47-58f1f5fb43ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8735503-c002-4677-9453-11d8e527b7e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd9fad2f-0f96-4502-866d-7f14f023cb3b"
            }
          }
        ]
      },
      {
        "id": "86e6e156-ad6c-497a-9c4c-262adb45dff7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a946a43-9f45-42fd-88a2-99f573c84107",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f5a4695-9732-49b1-a33d-56e3c0743d9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20333565-a50e-4333-8bd0-3a018e65d4ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e63978-8341-48ed-b714-5a678e4d6140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0e9185-abb6-47e9-be0f-a6fdd8bd622c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaac725-bcc0-4a94-be24-5c9cb06e3317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdbf49d-62e7-4913-95c6-824bb4056d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027abebe-d96f-4b18-855f-dca79232cb71",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a45826c-c2c5-434a-a171-4c1e9e7019a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba483daa-f5aa-46e8-a9c1-67935a8c5dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eefdfe1-fb0a-4142-9958-af374c405b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a14c58-61ef-4da9-8177-0905759762ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901d0422-7049-43c2-b88e-a6d0bcebf6ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d39f957-3814-4d21-8245-dec53ac1834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb3eb1c-1557-4223-a638-5fb6b40c8d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428dff0a-d321-40aa-b2dc-b2778c21bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03676fae-0032-4c11-9b36-86a4a474a8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c68b55d-3f0b-4dbb-adfd-6d0d6a5a4d06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2ef96-4cb3-4ae9-b68f-6fb76e370e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1f5b56-f5e2-4cf0-b96b-2de0d7b0ab68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e03066-86b7-4fb1-b501-8ff527848b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46345b73-f0d7-4572-9a07-505410dffa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b01cfd-010d-43ca-ab32-c402803be117",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a685eb9c-f126-4b63-be8d-252743f0fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b93c893-1242-423d-ab0a-340f200433fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2adb43-52e5-4d0b-bfa0-6f7b956996d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2baf3bc9-72c3-4cda-bcb8-6dc70370030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a78462-51f3-4579-92a9-d03939679abf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c4433f-ec90-48f4-ae57-05bb0be67111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab11d68-8106-4fb3-8fe2-f4379eb8aaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44ac302-e3fb-461b-a488-a26281aac005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f78e337d-94f9-4a21-9d7a-4b067cd54064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5540f65-fe05-487f-85f6-7c5fe5fab038",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f40f7-5e36-49e1-8197-2a64c65fb7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6d9041-221e-4adc-b3b8-07f778051e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588de2d8-2360-4f8d-ba85-2d459f50afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d6bf70-bc4b-4314-be7f-1ff5cf544408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ece5d0-3a78-41fc-8e69-02232e6c8650",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5f49ed-2d99-45bb-9de5-4209be3ed3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd736386-c02c-42ff-8186-380590026869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2febe7e5-213d-4a62-b6a3-26e54d81bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c53836d-c66b-430a-90c6-466d784ae483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d19b48-4c8b-439d-864f-37242e65b0b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a319d5da-a62c-47f1-a8fe-6253f0307062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c01ceb-19c2-43ee-ac14-45ab42621fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cbc46f-71b1-4e75-aa60-e4c10c66fca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dd9b27-5d72-4b7e-bd18-a0930e74b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1bebf7-e735-4043-8e58-026d24cfa8bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fe9aa4-2c45-4389-9958-6f10a2e6151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4acd11-5ba6-4112-bf79-4f92e8444e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b922be-00ac-4d7c-9c2e-fc14b9c219c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c32fd5-43f0-4cd1-8b32-3c4d83e23a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087ba409-504b-4c9e-a5f2-7aa45877bf57",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e5197-b90b-4324-b893-597d17b131f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b9b8ab-62f2-49f8-aee1-d8b665869023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e4169-150a-4f92-9400-9ec0df6ee9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4d0774-76cb-455a-b297-72145ac5a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b83f25-a9a9-4b9f-9c4d-ce662baeb3e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f52ead-d19b-4cac-b1f6-0da5844f5041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f6e87d-2ded-44fb-a154-24f31096b9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a69ebac-5324-4f63-9a51-3538b3efbe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "045a8a66-1591-4c7a-b003-bcdac0f2b9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f35095-3581-445d-b3a0-b20ededb1eeb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78d8bbf-34e9-43d2-968b-b00d2fa5418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a50fdb-c7a4-4ab8-a9ba-270581b762d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1ce895-c3fa-4b48-a1c9-f6f6c52a0983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5273e5fb-713f-4a88-9ba2-1a65c221aa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591f5f5-9edc-4ac9-aed5-37132946176e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bb4e39-204c-41e2-9a8e-bdb2d0be238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365399df-be40-4d54-9de6-aa369d7baf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9b1a86-9ee5-4765-9cbc-a811cf378862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed1e75b-a683-46c8-b484-05825302f0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e2c84-1c68-47e9-b432-3395657d2e7e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ac3c4-4bfd-43f4-a8d8-45b1043eb488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba58f37-beb3-4e40-b10c-6e66c21769fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e63be79-e740-4844-9530-34fdcb86114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f42512-65bf-4a79-ac9b-d481c1000814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f8a103-c3dd-4f3a-88a2-a51e7a6b530f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09d261-1083-4586-b5b1-5dd4fda73a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea9d3e8-ac4c-4ddc-b228-3f8b7ee80c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0273df-2e22-417a-a014-9ecc9b1bb10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af71dc8c-5dd9-40f4-8a6d-aee42e3da486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf6969-a3ff-45d2-8d32-915f57aab690",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76384e69-77f8-4320-9c24-d7f6a476e3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90de2de6-db6b-4b39-b5e8-b80a755120b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25af881-5040-4714-951d-7a44211d72bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "81560b2b-958b-4e94-991d-c498b0a61813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab124803-09e2-48e4-90ba-176167722cfb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d6cfcf-9827-414c-a79b-5bd40fb46ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699f211-8ad3-4b0a-9bef-5534aed9f7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0035a8-8faf-4870-941a-8f53095e5e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5ea7de-47fb-4960-a7bb-179909c9f25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc869f5-c5d9-46b7-8785-b6e1cca60877",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08846453-66d1-4073-a350-912046e63711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb714c73-3e7d-48ff-b2af-69fdcdd578a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d3b6a0-7d71-4666-913e-4f8f863d0f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6477c571-e7b5-41e7-bd2e-ccc7d1fb7d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3faefc1-6d6c-47bb-aecb-ea8fedb725af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f0dc39-dc67-4113-b345-12c0e6618828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb83f608-a7af-4fe6-8f9c-d891d9eb50d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96e8337-abe5-48fc-b20d-82c90567053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ba5f3d-f812-4a2f-8440-99370f002f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0199df7-fdfc-4b42-9f97-61af2a215206",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60d8da6-b4d6-4863-b12c-f0b492424602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62798439-0c97-47dd-aea2-c6d8126037ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869ac907-6aa1-43d7-93e6-4e70f937a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef5f5c0-321d-421d-b2ef-8b926ad4da8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75dda48-4493-438b-b0ba-bc27cbf2b0a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fa19ca-ad37-45cd-95bd-0679422c86b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e50a1b7-9ed9-47d2-bd87-4904a24e5bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b613d3-7a7a-4700-aee9-d34336f37bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e72b602-d540-4773-8b2a-e9f90e92363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa29f80c-c00c-4a65-9032-e1f7711e5acb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160d678-8161-4f82-a73d-f7a727653791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cf2871-fbc7-4460-b2f2-66b79d52a90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d015b4d3-52d1-4448-9838-055342710558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afb4cc7-5fb2-49c9-bcb1-f90847f98030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81abaf10-3403-44fd-bd43-9ecc67af9233",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadcb0e3-b6b6-4ac5-9200-a256593a5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2892f350-d84e-4898-a7dd-06d12d0b6e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a42680-5dea-466c-878a-86c2cc94e2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52759d5-c95f-4b51-9d47-53cefec35b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce6f4c-c425-4d70-a04f-0b20a7d0ff9e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22c810c-90df-43fc-ac37-bb5f4d2427f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d58464-95e0-4590-987f-1c04820ad72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45dbe36-35aa-4361-8a01-fa39e6ade2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c91bb9-0a3a-47d4-aa27-bbd8ee32d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f26bca-dfdf-455b-91be-c6d9cdcca029",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ef5eb5-31c5-4508-a943-f5fce7124c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb848bdd-e07e-420b-8899-3438745a5556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a22a135-6bc4-4836-a7c2-b1307dc0d7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f272d5-1d89-4560-83f4-c2b7ba552e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6277ab18-baa0-4210-8188-be40b5296c58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21740802-081c-4bb2-9e21-1b92a95cf3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bed6a2-1e30-445a-8a7b-77f7b62d3be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01485112-b374-4c56-972f-09eae23ac458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2762ae1e-70d9-40a6-bdfc-fba5f9771d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb67c72-cbe8-4845-9384-6543a5b18096",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd262eed-3a1d-4578-83d3-af27d041b36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b38c4-313d-4e75-b90a-dda4e82ff9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9442dead-5765-4bf9-a876-620a1f6f34bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884e5743-8be9-406d-a3fd-7d4a8002df9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16180a57-fd50-45c4-b5fb-f0531affb688",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53231859-9810-4de6-840e-a356602f3e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f14635a-76b6-4734-bbeb-5576a49b9311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b689abcc-cb95-413d-984b-53393f379113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd17263d-569b-4e00-9d05-79914c74de96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4215c9f4-f7e1-4b87-8884-957966d8bc87",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa37146-3acf-4ad8-8347-cff511613b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707aa73b-c53c-42f4-9917-1e6bab1ddc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b567a9b-015a-4436-b6f4-94e6dfc59930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08cac0c4-a43d-4fc9-b0d9-f294bba4c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8abbb7-8c11-4d79-8361-2e8fe0e42fd0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fccff7d-1c0f-44c4-8217-e6ba59b290c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87e9ae5-bada-4576-8bbe-12cd6ed32925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2779196f-69ca-40ec-8feb-05a765ed912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81c5442-8039-45fd-bdd9-26ff8b8862a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a47a46f-845e-4566-a67a-72fd56e80fd8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587fcdd5-1866-4b3a-aa2f-96fa25da1b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1393c895-609e-4b81-93dc-8982bffc61da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad59995a-4df0-4578-96ee-df837b4945cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "449b7aab-2fcf-4e89-8e4a-60b69e50e073"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0edc6bd4-5ab0-4074-9652-8e3699db9971",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa4a12d1-59db-4323-8801-434d7f8324d7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02e093e-1ab7-4e9f-8f4a-2793a5d5c74f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6320f1e6-afc2-4d80-b0c6-b8caf2063401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102d42e2-5c2e-4efa-9b4b-14fc91ba5497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1d4d4ea-ab26-4fb4-9d8d-1bafb0588053"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6823b8c6-0470-4e9e-8426-264075deebc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ca8bee-766b-44ee-a660-297f2156d087"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87a1838f-233a-4671-ad9f-9a6f681e1560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ac72a7b-4f39-4fb9-906b-a6365debac18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85693fbd-a964-4e43-8b07-39b4a145f366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38805aa5-a75c-418a-b1f6-15737b5a5116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "121cd0a8-4c64-4bc8-9b57-b17d6a454e0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2fe5e0b-8a4f-402a-82f6-4f76af2cb41d"
            }
          }
        ]
      },
      {
        "id": "6a9e1ca5-ab45-4495-8792-f720aba2c666",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bc8bf248-73c8-4f3b-bee8-bf7f4e23c8d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70d9c6d3-b007-4aa9-a838-37ad98682eb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "102a7954-169e-49f9-8b56-c1d64d0006b8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835efd2-3126-46d2-9bb0-8e3ddab45e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1ec674-f894-4092-8a27-ae78215c78f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c587b0-1151-4eb6-b272-3787fd5c52b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de4e97c-819b-4cc8-89cf-86c7e425bc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da245ce5-0fdf-45a3-a558-4db4ffc1726a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadb27e9-0790-4f1f-819d-8f159f1d41de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30418df3-6c40-4d45-9311-7b86f7d5d4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aa66c8-da08-4d85-a27d-f79dd540828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c79c69-70ad-46f3-9377-9899dfbb70c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628c1277-9b76-4ec8-9287-bd87efe52e12",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450208d3-b744-4818-9300-3f45a5ba8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9d4da1-67a1-4126-8346-467074a4f4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18807f87-afea-4d61-8261-af8bdee4b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f924d8-2ec8-47ec-979b-47f4f0f7f9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab037a-8725-4839-8c06-98da49419fc4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e938cba0-0781-446f-ba75-8a549275a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aef0e9-e434-49ba-8f0b-4e9e96e7d207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40915f35-d628-4877-99cd-12cfde2660b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2a585a-878d-4bce-b08e-c62cdc3d4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245e90c2-c871-4efc-8ea7-adfae99fe91e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf2b8ec-a5ca-46b5-a9de-b4dd3dc7b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1200f384-9170-403b-b230-5a2b90873a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc104f7b-9eeb-4b38-bcf6-e042362569cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be254d72-5828-4869-8686-2afc6ef517f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee8c927-94f9-4e8f-a5b7-d62bd355fa1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3639196e-bee7-4c30-942d-326652d50adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115b2ca4-146e-48c4-8cea-255f4d309288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e6bf61-40b5-4e6d-9159-1ea8c70ae5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a8b9b3-056a-4754-bdb0-03b136acf4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756824ca-9da1-4d67-aa6a-a2b3e56e4bb8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5c43cb-b1b5-4009-8ff8-97cf403aca05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3b5b2c-8ef8-46da-8552-734bd9cff4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f1f984-dcc8-4097-b378-d39e38b8a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "051182d3-d5d3-4fec-8b1c-354f6c78827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb34906-94ce-4671-8172-a31e346cfced",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446c19e1-4be7-4ce0-aef0-2948fc65f327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5bebba-39e7-4b07-8076-9df70fd6a3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae6f221-0d46-466c-8ac3-7b74301dd317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2236689-fa1c-43ea-b233-6c2e1a875776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99fe6d0-28c9-4ce4-90c7-b9e4bd6c1f8c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dbe54f-07af-434c-ba8c-e296c6fd247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8bb954-b535-4e48-ba05-cb66094a2b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbde93b-6414-4a7d-b719-71323e3744e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40929490-09b7-4926-bea8-260e90ac8bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce72033-00c6-46ce-94d7-6bd32b87a259",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae85cc3-fbde-41fd-8c17-6d92cc7c52ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd5ddc0-fb65-4c29-82bb-99e31320b096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745f840a-626e-4324-8ca6-25d0e2e19294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a366d48-6c5d-47cf-909f-67cb2cc5dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e7bc9e-d375-4bc1-8bd5-70cfe6e69f1b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fee2ebc-f542-40aa-a9cb-8a8edf098a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281e784a-9f38-46f9-8167-700251f43d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f0c0a0-c660-4afd-8952-33679ea95e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d99a0c-2619-4719-83e0-cb8abe38a3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a2c384-5432-457a-a6ae-c5ee1dfbe6bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c22becc-a5fb-41d9-a5e9-7517df34cea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ffc9bf-38ab-4fd2-9ba8-1703dc7daad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c98282-5f4c-40ed-af0b-57298ed82ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "595daa19-dd56-4a9c-beec-995a2cee1d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c6d76-27e9-4f7c-afb4-f7f19dc7269e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c75ef3-e264-44cd-bedc-3694b248b470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73540338-23ea-45fb-83e6-6f06af3eb4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0661a01-8bad-4910-b1f4-20f5ec290470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce712fbc-c7d7-4735-ba81-cca06de3d424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77df7779-c60b-41de-9be9-58121671c0d4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e369a14-b259-43e9-bb4d-4b437a7a37b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae188a99-30ad-40b9-8e25-96d7ae5498ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108f8dad-64bc-459c-baf6-f5f5952627ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "245755af-477d-4b2c-8363-59e61b53845d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0038abd4-f2a7-455f-8970-ceb6c67da938",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac91783c-942a-432a-b7e0-13e4955f9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596ed202-0ff4-4c6d-9b78-5e3be824b328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711e00f-95a0-4ffc-9cc7-18389d4dd38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05911fba-09cd-404d-be1b-0050fe89bc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e840cde-ae04-4ce8-92f6-596bf70bdbb3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2085cebd-8b10-43dc-acea-529c11da9aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa7f712-2fe6-45c3-bb55-1ba33f0ce70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61575eb2-556e-45e2-826d-b0ae42393a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a4c0e6-dac9-4850-832e-0c0eb7700da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cb21fc-4b8d-49fc-b8af-d4ae18620a46",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19689cd8-72dc-45b7-9856-15b3dcd1246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e295113-5392-4381-a808-99a5f56675ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571d2a0-f589-4039-9de9-df71a350076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1f5eb9-978f-4af1-a09b-686acf99c54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c319638a-ac5c-491d-8131-e9d736b9d7dc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71695e9-3334-4cea-9702-880855992a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6382a0ae-8560-4783-b4ec-9f21c81bccee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789edb67-09dd-4cab-8e72-5e1c66539e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93eef2a-d0a6-4e0a-87c7-307f95f93e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058b465c-2bd8-4f1e-b500-f1c2742d5cd0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753d9924-1359-4e87-a9d4-35ccbf185e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895ffa90-3bc6-4865-9a86-69dae4b387fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8429b430-c8de-4c57-835c-5e7165e01261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ebd500-f472-4e62-acf5-dc376b70c076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b749ce75-b2b8-415d-9300-ecc76f55b029",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bc16ec-b2b6-4630-bb24-c314ed418b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf4b8d-b208-490b-ab25-21f728f1c024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191b669c-8614-451b-a71a-d75b1e2790cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16da2c0-89a8-4d89-93b3-14d2abcc3382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7afc63e-e30b-4f6a-b7ae-854028f44e0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895d9869-7e58-4097-b1f9-b92720335b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af1d502-fbc0-4ebe-8e71-40b198b760a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43311024-a8f3-471c-8bf3-32bdb1641d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e512745-7fce-416a-b14b-4b078c6f0e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbf6fc3-0d20-43c4-956d-fa51ded071f5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a776de-72f6-4737-882f-83fce257dfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730fc3cf-2723-4c4f-9736-c99fda973ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75893242-e483-4110-ba90-e97393deb62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd18384f-b9ec-4c15-986c-fb1c2e795e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bdc813-9d36-4fc4-8ee3-7b2213253935",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b7e84-aa98-49cb-9642-addd91dc0a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fe9f91-a665-40b2-bc19-ccc5e9daa4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636c1431-89b0-42d4-8987-58b15199dced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13bb580d-a4cb-446e-a75c-a19a690075ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71fe97-1657-4a76-b7b7-0ef1b07962dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be848432-064f-44af-89f2-2ef3f8997677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8ac76e-9343-410e-996d-8378c35ddc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467042ff-79c8-4bc3-8430-2f6b224c7fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ab0c85-097f-4750-be7c-1ade64519da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dba11e-43d2-4b1b-ae22-fe03705b294b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57dd29c-9e22-4ad1-9a3f-29fb18a2fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fe0f48-c25b-40e2-9ed6-ff63401110d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f973c7b9-53f3-4010-afcc-db333f71150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aba8867-6f23-4fd5-9f1e-b8126aa8e8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd542ca-117b-442a-afec-eca0f5d73931",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edd07d4-3d00-4f1e-8359-d58ab54299d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8779cb7f-7c8a-4d81-97c3-250ffb9a3828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395e5d20-b332-4ec4-951e-6d8d3325dab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74ac8785-203e-469e-b026-4f757726f7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde60ae5-a3d7-4d12-98fb-d0aff976ccd6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537bad6c-0afc-4b64-a232-a38b6f804644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cede79-9a60-4611-ad7b-e1c5abcd6098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aebdec-91d2-4095-bcdd-71c0008d3ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8d33f2-9585-472b-87e1-da3930a3c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e0fe74-8d52-44af-a35a-f4f1a23c4388",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de79e04-7428-4eac-80f5-fdf21b2fd6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb29bd59-96b4-4468-9198-91b0baebadfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38624b85-ab40-4783-8148-990a21e6b78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0f44ce-829d-4fd6-a905-07842ccb127b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20cc1f4-cba9-4271-becc-8346250fa822",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39c2ae9-022b-4ba5-b9e8-11824022731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aaf133-6c78-4164-91d2-7992f5e569f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d89fef-8b36-4ecd-ae2f-4ecfad9a6484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca8bade-ac50-40d2-92be-4afc66341458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f62579b-66c8-4b32-9d00-1d67eff0bfe5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6bc25e-7b18-488f-82a6-810157b9f198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45d1ca2-3d94-493c-9845-9abe3e8c6a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e3339-ff5e-4f61-947b-4741344338ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a95481-23af-4cc4-a80e-f8e8ebb363d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729e1b6c-5434-4dc1-9028-caf5a0ac22d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7db331c-4cfb-4e63-a4f3-7660fb01da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc14ad0a-dc7a-452e-bd29-cf24b5675df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f5b56e-aca4-49dd-b31d-707adc416c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20be7999-dfcb-4389-b10a-b8418825fa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e8e09b-9177-4e04-a9b1-1f1c499910ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a7527c-4763-4ec9-b303-1756b55554a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e190364b-48d2-4933-817c-fa6e78950b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a462d03e-2c48-44a0-b812-16d8f2b46f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd28b28f-ba56-4e4c-aeca-239e1a37518b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758a4b4c-5783-4055-b8f9-3849752f74bf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1242c7-ba0f-410f-8fc3-f78c8d380924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d9e717-065e-40f0-8e0d-f3cbb2b79fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb7fc1b-f08c-446b-b206-04b0d8422bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb44c8e6-81b2-4202-bd4c-71b002ffbce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56670a85-700e-431e-a999-13e452f62341",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33447aa-45b4-4898-993b-3081fccf0342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fa61c2-05b7-41cc-aba5-43364f2c8ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6edfa60-2072-48e2-af70-eb2ed2bb068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a4f3f8-e3b1-4c3a-a22c-1e595df283e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a33fbd-6717-4149-b70f-6810f668cb2b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6bab68-268c-41a3-a104-cc042ecb1994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eff312-c00b-41fb-9241-4228712b8d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06f40c1-14e8-4226-9d38-86e48e3f635b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04855a6b-84db-40d9-b3a7-0f281ad405f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caa0402-f52e-4cc5-819f-24e128d25163",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b85d8-ffdb-41a0-8d46-6fccbdd28e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff00715d-5292-427d-b32b-104d6f427ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59679369-162b-493d-bfd9-c559bb7495e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cefb2e7-3544-452a-9fc5-0b4906fa2afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a7cbf-6e5d-4c96-a496-3c9d4ec5eab7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2e8ab8-4154-4b01-a8b3-789e56f45647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf73b827-497b-413c-a594-63ecead3c3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8712e07-137e-4263-9b68-9c1f5351711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a902ad-8eec-444b-8044-357f35dd3c88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50973f83-14fa-4421-823a-0f1f49c75720",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10468c36-400e-4a98-84c0-113a36ae84db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff78e2-4403-47f5-ab2f-bedc6fe46fbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "353b9c52-c4a6-4d0f-990b-f9fd7745cb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf89c98-29c9-4f02-ab08-bd4e4c61f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47da32e5-29ff-48c6-a3bf-6d609d87af83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2986c54-419d-437b-a8e8-2dde65f14fd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ede7e3-eb9b-4365-91ec-fe5a80bf9f22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a87aa4bb-be3b-4d7a-a4bb-731b7d5634d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c6a6e06-83aa-4787-8703-3aeb4a328f05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7922e58a-abb6-48f1-b08b-4ebbed5e609e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "025cd740-2ba5-4f2d-94d1-133dc78098ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eccfd27d-6e36-4e11-85fc-01301f0cf0d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "203844f1-ed05-4646-a16f-e665a925187e"
            }
          }
        ]
      },
      {
        "id": "aa769cdf-dedf-4344-b4c6-93caa79c0873",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a24ef4bb-1b0d-4fbb-822f-f7f61dd5e673",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fef207de-f11b-4c1b-ac18-c0b081ea647e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1df775a5-810a-4897-8a3a-b4b63b595ab6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec2dbb-975c-4357-afec-947d78e84534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc628a0-acc5-4628-921d-05529a5b7731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda08013-ba2e-46ed-8bd3-12c8b4a4eedd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915f888a-5b9a-402f-8621-9bfb84cf5d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9998fac9-b0d8-4cc5-bc7d-63e1b5df3ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c898a3-23a8-41e8-97b8-78d443515f7e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c4e44f-baa4-4c34-a8a6-ad4c9cbd6ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4d7a3d-3599-4cb8-a44f-c77957443fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8062d9fe-de03-47fc-b21e-63b7b3a5b760",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88246c49-b148-4a6c-8ef3-03b272fb3222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9406f2a-52cb-406e-be65-a8a514c5faae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e6da53-5c3b-4def-aca7-35b3392c641f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c05aaf-2d90-42ac-98b9-dac3f4e07e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5294e1f-3df0-41ff-a72d-dbbe97b42c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92600da9-c2d1-40a4-8498-14427c6b9831",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390d453b-2c88-44df-a311-e399db997c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9757115-2d80-44b4-81c2-87a10ac3fd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd19944-533a-4fe7-adfc-29195eb17692",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad1d7c3-e4f1-45cc-aab6-c096a2a48e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617bd5d3-d8db-4e37-b098-42231d2b7c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92975a9-323c-4114-939b-c68daead348e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5af6e1f-024f-454c-a4f8-f6035b358e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c1337-bbe1-47d5-9480-a6f856d57f52",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae5e157-ad37-4689-a494-cbdc6468a697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112a0fc0-8480-4038-8b39-625971dae144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72290ea2-602d-4db1-a19a-6ae299b37c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a9dc62-652c-4cc2-9c4b-328d12638f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b158c2-b2f8-452e-9be5-ce278fea1ec4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc492c0-b1f4-49dd-b3f7-b61a3edbfac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cb0c5f-cfa5-4763-8e35-c2816a4423a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344bea19-22e0-4d25-8a6b-14619789ee5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f55d7f6-1446-408e-8f72-cfb822018dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1051a9b-cc96-4c0e-ac29-1b64610b0f2f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5818aebf-4d93-480e-a03f-13940814a264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e70086c-ab93-4233-b8ea-a9aab66b289b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ebe3ba-6dd3-4590-9977-9e67ebc793a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b89f05-023b-4df5-bd55-1808d3a285f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cc4e15-a70c-42f9-af30-7b88fa010ad5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f9dfd7-b8f0-456c-9ff2-1105ada6a808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e2cd22-b506-4aa6-840d-6af6a814576e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a1ca72-80ee-492e-9aeb-2e79d7075e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21c267e-ef8f-41a1-b7a5-81c8188b6d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d0d3ea-6e2c-4514-b446-9df0a9009465",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3cacf7-153a-443c-836e-2ab8af3f95c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608dc7c7-cbd1-48d0-aef8-89132a263f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75316543-e656-4cc0-97e2-9c834b6ee83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6db0ab4-c44a-47ff-adc2-332632887579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5173f88-7323-4151-b7b2-0bf6ba02df8a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a313091-a1d3-479c-940a-cfa848a83f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e84592-7829-4434-bb3f-3e0ca74b3f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd4bbba-21ed-402a-9bea-c0a464f45aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a248ab-87a2-4c77-9afc-852038137a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98212c5d-f60e-47d3-a291-edbd43ffdae2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea9b8ac-1138-415b-a738-b358a5c6ded9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a6de32-e5d2-4cb8-b4c1-9b72bd98fa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fad1766-11b9-4559-a8cf-08e17ad3b036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f21751-00b7-4f8e-aa22-e79ef47db255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cfef83-6a5c-4527-8eec-797e1fac9af1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f01cd7d-9fae-4cc1-b6cc-45fb03999796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616010fd-da3c-4581-85cc-0e104a6568a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055a8ad2-25dd-480a-9808-8af8e5ee25d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928f729-5a06-45ac-81f6-4fc14cdfa4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb7e8ee-9a9c-4c98-8422-b2c29a5c3726",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e460df52-59a7-4019-b9bf-33f618d633fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c543749-3f54-4acb-83b0-ff731b8b003b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4fa266-3a78-4328-baab-a8bcaedf3bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e729cc-3645-4694-a052-97826693c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c41dc57-9caa-4343-9d9d-9edab738a338",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8dd446-4210-444d-bba9-63e1480d7007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a34b51-9fb0-4b96-a6be-452250f83c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45489125-a178-4a74-8002-0e7fe8860a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad95d92-3c2a-408d-b4cc-8f5cdc5f651c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aaa272-7ca5-4214-aba6-83093e1b592d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e6f844-20b5-4b42-806e-5f7a34b23361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145808bf-757a-4014-8b46-34735d1faf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d4698-d654-4938-8f02-28a5575f1e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c1f781-2ed2-4120-91c2-dc19fb6a6fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f19a0-ef3f-4d01-acf7-1b8f587bd03c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe0164-991f-4b78-a03a-c63fbd12a557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eeac4ba-6b74-4bef-978c-9d3aeb7f2298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974513a5-8052-4231-9573-d3be095fbc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2851cd-8ab8-4e39-934d-4f8f7ccd4614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f20bf0c-a923-4170-8961-b6071fd40a58",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe4e68d-bf37-45fb-bc2c-06cc02d0c604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd679343-7250-4d89-baa5-bad2145c187f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b43175-6c32-4fef-9f55-de6ede270eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92274a-c7df-4b23-bb2e-d888d200d4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf59bbe-ef2e-45a9-afef-de3c03104972",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c84e1-ded9-41d8-a291-43b8c73fa4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5439114f-3716-49f7-b725-1f37654c97e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec6c91-9704-42c2-9033-fad51871459c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac4b108-3b22-4de1-a72b-b2f354da782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34324826-5173-48e1-9210-361690f0d348",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10900d85-3b11-4c13-81b6-a488200b165c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a524da-72b4-4bde-8d1a-92656de733ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e51ff7-2918-4f1f-96c8-201cc1fad3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38276bd-556b-4e9d-858f-cd0025a73768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191dd11f-21d9-4eb6-9ac9-1b99dc540e47",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91e778-c198-4419-91fe-cf14e0388e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350fea10-c19a-4dee-ac15-090ba0085345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6706ad-d2a6-44b7-866d-54ba1c35377d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f1a487-6b79-4d71-9751-e196a39a2816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d38b8ce-727f-4ae9-aaa7-8248638817df",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32447ee-7ee5-4832-a1d3-4c4b1bf1d4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ceebbd-742f-43ec-a444-69d1f3cac886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb31872-c632-44fa-b2c4-490482b5e233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc2de5-f0e2-4398-b485-a0dd30172c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add91ff1-fa67-4575-b6a4-61db7ce8c795",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa479978-4065-4a68-aaa1-6fe3accfc3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9c6aba-b081-4e24-a7a1-dc8f89e899b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abdaee9-37a0-49c0-80b4-4db27a62609f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d01c07-56a1-4c85-b8cb-56fb189fc502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39769336-ce83-4b2c-952b-c088065fd553",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6796558a-43ed-4685-a3bc-b01017daa5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c3b32a-3948-47bd-81a5-fe41e55a0582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a1e90-38d1-4614-9949-1469020d8523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc906c10-5d4a-4c8a-b7cd-d8534df132c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54474631-bd5f-458f-a709-0d73b195acd4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec49c672-0c81-449c-89a2-eeda52fd0f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5a1ff8-092d-48a7-9782-4a6a3dc9ef03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acd7b13-fd3e-4b29-9464-0e1d51b65516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e4568b-7785-47c6-a67c-81fb3dc71fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034af661-595b-46e2-8144-20c7fe299e7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccea5bc9-356c-4a94-aa38-0450e59ede90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ee6b17-de6d-4531-87f5-6f90233198bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fde4a3-d4ac-4109-a3ec-e84bdfbe1b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a35b346-1085-466c-8bd9-dd3b12e2c4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa3312-4460-4120-a1d8-39c1abb9fb45",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0ad96c-07ef-4329-85cd-f4fbe9595a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e643cf5d-ea1f-43fd-b23b-14c786c8ff91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd145f4-c854-44d9-aecb-a239ac8b5a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de204b1-4e94-41a7-aaef-84f4e691fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9828e07-d206-4839-9e69-b99b5f658d25",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87564efb-20a1-4b8a-9188-675aa1417657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0919597d-cf3d-4c8f-b3b3-0dd600c3d09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73842a7-c6a5-4897-a00d-5f3b8af8a008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9714cd-b9da-4e06-b790-24ba4be93e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962b0197-5b15-44a1-8f4c-4ca52bd89f6f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f9b63-622c-4680-9dca-10f886f30d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343df79b-7a27-4767-b047-e2caffd46994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90c5060-0134-4957-884d-76a32a9379e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f63221-2f58-4554-a1ab-34f6284b1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24e9d3-20b2-4bd9-96b8-cc0849e138d6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d43b33-351e-4eab-87c1-8238ac1cd3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0dd734-275d-43be-9213-49fb8d3d4413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167bac62-1bc4-4974-8c43-74c94950f067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c5f400-c379-450c-90e4-c8e73c9fbb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359a5704-fad0-4f76-83c3-016ea3e53465",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c983029-986f-4fa8-982f-63c3867d0976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58c59c1-660d-487c-97ba-6bff22435a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93c8edc-8bc1-4328-a439-46e52091fc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294329f2-caf6-4120-aae8-8be8a2a64b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f19dcf3-1f70-449a-9564-b5ee8878ecc6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e681744-24d5-4be6-8f64-25caf3498578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d4b08b-852e-466e-ae2b-0cf1dd1e25d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b015695f-a3c0-481b-b844-ef2e0ee491f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f608cdbd-9e40-4260-9ac0-69f88bc66dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5906c8f-00db-463e-9bf2-8ca6bbed4fae",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748d9ccd-28c9-4f0c-924f-eea2a4d500dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2d6d2a-8ce8-44cf-a237-1ad75c4581d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e56e70-9da6-403d-80c7-5146974e3e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc594460-cce0-4ae1-8212-ee98d0dff14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3ba721-fc78-4169-8e54-43345b72258a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e4b808-c959-430f-af83-9e948e830bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d979a7-2d27-4f90-8c87-bbfa9e9f00d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f49c89a-8a2d-4eac-ab34-fbdbf8d99f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5ae712-f04d-4fc3-83f2-d6a4c4b558c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd38b8-c59a-4c59-abc7-36f6476def15",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a4fa6-080f-4f33-b2a2-22f483c35262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea203b17-3914-44a7-9867-b5aed8d0cba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401d4f66-bf37-4f7c-8e7e-6a5f0cb95291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07877603-66fd-44d8-a5f4-fc78eedb95a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d976bbe-3704-4188-952e-50e60a71b670",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894bc433-e089-4f6b-b2df-451dffa691a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6651a81e-878e-4246-97a7-fcd418e3b402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a2190f-9a0f-4afe-8faf-e3f6fe26c543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557564e7-95d8-4c4e-b43e-9d01e520cd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bd050a-8c7c-471f-9cb2-2adde77eec36",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6b1013-17a8-4f7d-8fe1-2545a69bc5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30353a2-b415-44b8-8643-a9e11557c1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fc3db2-b03b-4427-b877-7cd4b5bc7039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15ceab6-c483-44fa-a114-0872ee985e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30257810-54dc-4ceb-94d1-036a543f4b8a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed42cb0-d6dd-4a46-b6ca-88fc8e64923b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296b8b1d-d033-4fdd-9919-4e259ab82451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab79d5f-7c06-4c44-9440-20fd9e454548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9fe18b-5dfa-4ae4-8aeb-440ed0ae3139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40caed01-b064-4ea5-bba5-3306c01175f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7726417-92d7-4fd4-b29e-b822d2c35aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2627ee0-8eaf-4f33-8fb2-a9ff744ec0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2abcfcb-468e-4586-9170-bb6fd719e37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0584ff56-b844-44f2-be0e-bb85e5d0e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddcb5a2-f54f-4667-8d92-286c62010b1e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2d00f-7851-4eee-b856-3008c3ab745b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1a7825-8411-4542-ade4-f602d00ea2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afcfa2a-2711-4ebd-96c0-a411c397f58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259f98f8-edce-49e9-b7d0-f0d1eaa0f237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a2930b-0e87-4153-bebd-e469b39a7687",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f9dd9-ea08-4aa2-a152-6985a5117034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560b69b2-36ed-4e84-a524-a382321205b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f1e4eb-4b4a-464c-9191-8c103647f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd44e49-5479-4fe6-aa4f-fb74291ff74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83b3879-e290-45c0-9dac-3c44c14c2608",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be81bc52-bbd3-4969-99aa-f94d838aef0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49ccff4-310f-4072-a99c-5e253e6683aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d941aafe-9df7-45f1-b7d4-45f972a45749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3c2cfe-ff92-4ab0-9b0f-703fa0020352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb8ac98-9904-466e-b381-cedfa4805a17",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d28575-dcbd-456c-abe8-8eefda9f345d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e7bb85-e60d-4cb3-909b-8ab4907ec672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02da1f3-3191-4e31-af2d-ec555a9a6a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111c5cf4-462a-4d1c-99a7-c998af64949f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d984c5-a7dc-471a-8b5e-c0d0601edc49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d0a20-c512-44ce-976b-95a343db9792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c595318-e60b-4c4f-8aef-2de2d5f58dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c21ee3a-cfb8-4a6e-a572-97bb761aeb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12104441-9cd7-4e91-a40c-7f307db49a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af4de7d-5de4-4c35-8a82-f7edb648af03",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb240e1-d994-4b22-b037-638651271e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74999b9-addd-4b54-9b72-72472c00d2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0a588-87d4-446e-8359-984b2e7115dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65416f5-542b-43e9-b63a-430edecf9a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2754f204-03e5-4312-8e9f-c6996b35608d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63ef057-93ab-45c6-be16-205561348dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a0fc71-7d07-4e42-a0b1-8f7e1cdd7bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe082fd-1454-4d65-a7d5-f9a8f0499575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dea669-5de8-4ae5-8977-a2bcd78df312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa5d4c4-886b-4279-bdf4-347f5b45f068",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff68019-212e-4e5e-950f-ffad521a41fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c3df24-02a3-4089-8bc6-57b60a54d4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9bf31d-b0a5-44ed-a9db-bf23ff540c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac780c4-e994-4ab5-b868-d0a5e6e393d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a0382c-f028-4967-8247-76d1ef1cfd34",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec2b89d-e30e-4491-8973-14749188fd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a023872f-678d-456c-9511-135dba15fd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b0882a-ca58-45c7-9435-25fad202ea05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03a52b2-4cb3-4aea-acf8-3f02f8e98356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3849fbc4-42c0-4303-a61a-d8d8b862e111",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434f7aed-9ea5-4243-bebf-47de9c109f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ad10cf-0c28-45b6-ac11-b1d06b5b3177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2b60a9-3f61-4723-830c-653ef8ab41d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6daf7c-ae49-4adb-8837-8d993147407e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540a6047-7865-4802-bffd-f88f395685dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d65a94-0150-417a-b87a-549fc1ffe80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5f32ce-c00a-42f2-9063-092e8f93b799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93589a4-2240-4b34-b10e-c975afff0d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b1094a-2236-45e5-a0f3-313628318eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12253567-0117-47df-a6e0-cff7325be5cd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dad4614-840e-483b-888b-57e3e72386b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb92be5-b284-4998-8907-99f32d6c1c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cab241-ac34-4209-8da3-511c8591fc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b44aeb-e0eb-4ad2-98d9-e23f1371a163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ecdb7-1ec4-4507-8a72-60ef85b70af6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af33144f-0bd8-4a22-b6c5-0e36d268d313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02c3115-5ce9-43c8-9668-94e5d05a94e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34105d0-ea0c-423f-afe7-bc6eac3cac42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fb8e9d-3c46-4d01-9b66-a15aed166b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00058d24-8813-476e-a834-16d1f8755bbb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3806ce9-9c25-4d1d-b9c2-5cb3258d8a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72709e20-279b-41f2-b3c9-7997285af6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3072a3-0bf4-4ec5-991d-56871f52d3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f507d44-3b32-444f-8100-4f8c5bea5daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d00c18-6f9d-4930-ad2b-51bd8c3543e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3b09fa-1e54-4406-a8f2-a6fe7a32accf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0a7da0-c20f-473b-b688-0b6ac338d661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08040c-c2d2-4096-a58e-3a5a636fc8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1726d5-9f70-4797-a25f-1cfd0baa5caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180965d1-c053-4809-a3af-90a44567590b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5140a9e0-753f-418c-aa5d-c084b54c87b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bfe2b1-6875-4180-9529-5ef8a5265de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531a9e30-99e5-4404-8602-45bd123f350a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888e0a53-5200-4b0d-9b99-52c6497e2b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b516b3-fae6-4bb6-9f29-2ff3de95992f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c09a1a8-6f2d-42b9-b1a3-fa9f7cd6520b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0082efa3-0cfc-429e-854a-d0b0856443f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732d5843-dbc0-4901-9c90-1e333d181e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c1c5df-4fa6-4435-8869-ec3491a9ee4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22adf057-a601-46a1-b513-476e3cfaf00e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cee068e-cc46-4c87-b304-64b75a78127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304cb74e-9950-4cf6-924d-a6d9eae8ab29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5094df83-889e-425e-b0e3-7108704e5644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd16e7c1-74df-41dc-9bd4-5de80ab36dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca84cd3-cb89-4940-af2d-a402a0a84ad1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b3663a-a8cd-4324-bf60-1f7d48c7c5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164dfc83-0409-435e-a1fd-49ca855c8a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b1687-96d1-4e4d-8cc8-7d615d994210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7ff394-60e2-4bce-893a-fb195afc642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a82c0-0156-46fe-9a1f-9722be57a573",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebfd24b-14bd-40d0-9dc7-05e0912a50dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f188fd91-b645-47db-bb61-10fe49ebd68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa697a8a-7078-44c7-a23b-481c8a5ce08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f18c1ad-f78d-4e6d-95f1-4d52cb0c95f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc9d2c5-65f1-459d-8161-109697b1e2ce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12b7784-551b-4981-bc5e-b5026d24ac4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8663850-f980-4bec-87ed-47ef485ec5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b6fe07-f6ca-46c2-9bd9-7c2f012debfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177694cb-b7ff-4154-a432-b6f640032f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d442f5f-af9e-47c2-84d5-4434978a06de",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77d2876-de7c-4373-97ec-89e4da554b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182a8ee7-50ce-49e0-b187-5edc977bc7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75c7b46-4be5-45a2-96e6-fe75fc07189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a9df0e-b360-4c2d-b965-dd8e0164749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838bb33-2638-454a-8dd7-3b9c8457dc26",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1305b-dcc9-4396-9e06-5c0d6fff2de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3457e7e0-442c-499f-b055-44dc49e4caa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de94054-e709-4379-8f65-56ab0165e803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6913fa7b-fd46-4e73-8938-f46f655a91b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefcea45-3076-406f-aafd-db407881656b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795113c5-32b4-4f46-adae-22534c4ad2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d93e869-ae62-48f1-b707-e7440915690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6843d5-0f1a-49ea-a5da-99c2a0354b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c497dabc-d7f8-491e-9c03-c0c40a2f6b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca92099d-0ce5-4318-bc33-31d43b3f5c2e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a18ccd9-59f3-4b4a-a504-bbe3b7f6dd74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528fadec-4245-4800-b0f0-e0a33491df30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bce847-5a99-4e68-ab7b-05639fb1e0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31d97cd-d405-4633-a161-58a94689d84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b7f0f6-909e-4cfc-a3f5-1928008a15d2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530f5ff2-40b1-473c-bf8c-1249295aee41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd02254a-b417-4d85-b93d-71db6f60bde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340b8e94-e952-478b-a3eb-d086b9c4c054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee786de-f0f9-4fa9-b41f-1aaf7c57ec76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7907e5f-7b92-48fa-89af-4681d7039763",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d9e19e-064c-466e-81a1-b22d10a06549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259ff112-2613-4ae4-9162-1e41ec6ceae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d3826-7d43-4cf3-b66e-d12b5b134593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fefad85-cef8-4b3f-aa1e-c138ada308fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9a843a-863a-496c-8ad7-bf7b19fb02a1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2086b123-c91e-494b-8b32-be1b05707574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee619c6-6516-4366-95a7-d277b1c7cfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a6a7f7-fed9-4cd5-b070-ea6fae25f694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d907cd-3396-4380-8b35-a0aa11beeb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2184177d-bd24-4afc-b148-a0d71576aaf8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117b1820-ce89-4723-888e-6923e8530c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0844a2-44e0-4d80-a7b3-25c565af1d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a8e396-80dd-47ec-9a69-e88974e10359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a700d201-49e4-429e-aa1b-6b96e5288587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d847223a-8fc3-4aaf-8ac1-5aa3ac315f7e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fecc82-270b-40ec-b243-5ab7f3e68770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b36eca78-4fbf-45cd-b459-fd2098e9da61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8834d-c717-415d-a0f1-ddeaa60d6a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcacd7c-36ca-42bc-ade1-851a5f167b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c20ec4-5233-4179-b382-b52cae3905ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b270b-d971-48a2-9c06-3520d5595dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4dc70c-4ca3-4c51-afbe-4afa7e2af0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2159d13f-3a98-4b69-a02a-aa66f89d18c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a182c1-da3c-4422-a772-38b27b85022b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d34ce1-357c-4b50-bdbc-b836231ac631",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5729f-ba86-4d5c-b720-bef833b58231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271e2e6c-5fa5-47d7-a55b-326a492f9099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de84c0-b6ba-4805-a9ad-c7403202c033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9903515f-cf2e-417d-862b-e7ed084ed1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c354cc21-78ae-4d94-b253-a445e989917d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d5137-f8b3-4528-a6f0-0869be1f0552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d981df-77ea-45e5-aeea-6183617474c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aaba45-05f2-431f-a620-f675a6f685e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e7db5e-1559-4622-aa77-1e6b3ac8571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6605a6a5-8152-4248-90a4-4f9167905cd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502e3ec7-3a9f-440c-a4c6-f3273b69189a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caae1568-3d81-437e-8659-003a76cba92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f39879-ee5e-489f-b9de-a660f3ad7c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fff6f3-1c20-4d09-81e9-373c58efb909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc5dd8-8490-466a-9ea3-1d452fee0eb4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff2c50-6abb-4422-b5ed-b38f606fb7c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42acce1-e7b4-4f1c-9a1a-abfd549ad814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd47ea5b-5c2f-422b-a227-25b5f3b700df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef723a0-2e8d-429a-bdce-457e33f5fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41aa4de-8178-4027-8c10-e4e4dde1baf7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3f796d-b41b-4569-add1-b0a515dd2fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16097407-bb29-43a8-a0ef-52eaff6b18ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca3b34-250f-4e83-a8d5-8e0c03079722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e45e1b-d10c-4b0b-9bdf-6598b64d4d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f140b4-d66b-480f-87a4-21d1c5c1b77d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45440ecc-94ab-4602-98d0-2a10e34ab596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638d5f40-bcfb-482d-b804-c9556f815100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44899381-dbaa-41e3-8014-201b61af2a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e65b569-ce3c-467c-a528-47a6ba6643a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8030020d-5d7f-4756-9e20-c668dd37b0c7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4797c88-04f5-4fec-b2e7-e33d90f90333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3126a6-5a23-466b-9fb1-d3662259100c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d381706a-7c00-4379-aebd-feedeeba5dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec392795-2e72-4ad7-81b2-e51c4d7ff3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5da738-6aa0-4144-8174-3f51d6086e8e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6217c78-caac-44c1-abdd-31ddce1576b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3dee3c-2d69-486f-801b-d6ad41a20629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7187e123-3af7-4680-823f-d42e57973ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8ca5da-7a61-4f7a-8384-fd94acf0b750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf357cdb-2a6f-4eec-8762-190512367d37",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd5b89-dd3a-457b-b4fa-aecb08cc2fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c8ccde7-2f56-4c7b-ad08-1720a4579a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881de3ff-e6a9-43b4-90a3-bfa0ceb3a585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e9eaac-89ab-4565-9082-635ac7b04e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa0d752-782a-426b-8e12-ba4637955cf6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b44201b-4130-46ba-9715-7e808819becf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff0cf32-4c18-457e-89ae-72624fd67b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c844696-d253-4023-bc1f-8a130139d08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee565cd-a86a-443f-987f-0ab82682ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bde9442-21a8-40c5-88e3-84483cec614b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfd295c-4f5c-44e6-866d-6b5e154c03b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71956bdc-d8a3-494f-bdbc-3f28046d1e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac127f08-4a9a-4d8a-a053-7b9080f580c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6ba941-c61c-4f42-820f-3e8d867097d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbacd01-6e4f-4e29-bf2b-e9eba708a571",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d544e35c-3710-46f4-b009-3a27697dc1ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7ea1bc-32d3-4439-a36e-6c6b881940f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf6e83e-2a51-4e6d-842b-a49de6b6bda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396dea5d-5745-405f-8141-68e8eb6319be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a8173-3c53-42c6-92d4-d954dcec8899",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c2c9ed-4853-4c25-b5ee-6a8da2a281f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a04b7ad-da8f-4496-9b70-9210d40e08bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a794f020-be16-4ba2-a718-5db66ca81594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac61093c-3265-4228-bcc9-c00ab54783c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baefb9f8-f19c-40fb-8dce-0e79187a777d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55e97fa-9241-4c0a-be2f-a7005e12ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0bf10b-a755-45e0-9f65-581857bceaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4538ec7-aca8-490f-bc2d-552df00e128d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b510b85-b32e-4f28-9a41-6d16a9ff5e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a63d34d-8eba-40e3-a83a-f69ce626919f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbb0970-2a05-40ad-b7a8-f16e77d81659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f0374f-78f3-4db3-891b-01f7ee0e6c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28880f9b-e4ff-404a-86e3-a9630d692a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78860720-86f6-411b-a887-bc9ba18c4b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ad675-5bd9-4ce8-bf31-4811f981bbf0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d6e1f1-177c-449d-9c27-a7fd9c92e77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0050bf43-fb06-4540-83ff-8f9e2c2d2269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d87ee74-92d9-4b06-890e-876a744ae437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9732456-e97e-43cd-ba1b-04cf756c0d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf960b-7fa0-45ee-986a-a079a9fcf52a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cbbb0d-aeb6-40f5-86c5-ea42554c840b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f422290f-a166-497e-9891-b0e1f4803e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191b7ca-aaf5-444c-b3c4-21766e572bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8767417-9bd8-4298-b72b-018385c3a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c7f8f4-482d-4b92-838e-61de94ac0db6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c10207f-a57d-4ae4-85fc-dd71f9f84251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6c9509-c56b-4a96-9a7d-395aa65859f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668c1562-777f-432a-900b-2d836020c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b48241d-ca39-459f-b6fc-d4d224ab36fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7209e5-7abf-4c26-861d-4075d0541794",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce88e62d-f533-4bdc-a542-e92a43cc9fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671ee9ac-833e-4150-982c-4e0339595f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be58cc6-7e66-4924-b628-2ca18091ce0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c33c0ae-c62f-4a70-9fe9-97f3d575699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533522bb-2472-456e-8deb-5469e52e97d9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c98c91-376e-4a32-b0d6-2ecfa56f86c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6ba43e-3238-455c-81d1-aa59a2271510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f9a70-359c-47b3-88a0-18fb1278d4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c093c3-3cf2-4857-be36-47089bfb86dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8f3bc9-feea-45d5-8591-bdf21545d7a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825bbcf4-09f2-46ea-b56a-371e6ca6f725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb722bc5-6534-4258-9442-2ad8aca40f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5d1fe-0c3f-4816-aa63-2e84f868d2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc00c41-571e-49aa-96eb-373993014042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfe76f2-4770-4b14-a7c7-f7a65213fe7b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595b73b-3060-4070-9e1b-a084e2e3fb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e9bed1-6846-4548-978b-82a971b97fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ce6ace-b7e2-4726-b7af-4d5279b05a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3d3570-d450-45a5-b7ad-989da1c4e980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2509fe67-b5b3-468a-9f42-fe3faf3a5421",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d1ae34-4826-496c-9867-aba9e3af1979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b081ce4e-b199-4fcf-81ce-08e3e0773260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a58edc2-ed86-44b2-97e0-80207f53bdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3aa598c-6e49-4225-be82-9a6f5d1e46b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef9e06-d5c3-418f-ab96-4859d40b64f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6634d1-712c-4129-b568-f9102a16a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11958e1-170a-4e26-bc29-1d2186500ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880bd682-fd74-492c-99d7-649bc6374606",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f203576-b710-4b9e-bea1-722373bcb7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85ced84-3cc8-4e10-a014-fa931ff765e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9ef4e0-a4ea-4a7f-9a32-3f168a04ac04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcd0f94-2593-45dc-a9cf-66f6139f72f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bf8e23-c921-4b9d-ac88-8b0bf17a5440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31037d30-f37a-491e-8bfa-8061b7d5b663"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acc41f44-2691-4af0-a09c-133cbd050ccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5734b069-9c95-4540-8560-2398243ce34e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "404ea8bb-937f-4659-9ae1-5f13970abe39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ed17cb8-3157-4ceb-a320-9439c08e6401"
                    }
                  }
                ]
              },
              {
                "id": "e90e3526-ea2c-409a-b3b6-f6b531877e75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab8e1cc5-2da5-4666-96e1-72a99f3a5c1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf5c65f-cb01-4eb5-9ecb-768796625259",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "604f4219-4392-49b4-b617-33e51c4ff1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df833dd2-afc0-4d41-888c-e8ac312f5835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2881110-9efb-46dc-bc03-15b01cf51b7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "520387da-709e-41bb-8a41-b34c5d805ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efcde0d4-1a2a-4cbc-8b18-8a571bad9d7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c17816fb-5f66-49da-8964-2461aa925c53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fafe5ca-999a-461a-9fbf-fee49d46c292"
                    }
                  }
                ]
              },
              {
                "id": "bd179f26-64a3-40b5-abea-e9fb6c6b047a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "86857449-4a9b-46f4-a915-cca51de83b9e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ad517-fd0b-44fb-83e4-da562a3b45b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c82d1aac-044a-4776-aa08-3bbd55e439d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea89c09-0d84-445a-ace9-8cf11e5c072e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e74c49-1e1f-4c23-a2ce-0b92cf4d0ce5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb5a30cb-8a27-4aa0-bc20-12e414860633",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d2ec2f9-849b-4c6a-a73a-eb8c48fc352c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8ac775-4d07-4132-962e-8267a8939738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03ae4559-0c0b-4e46-8ef4-c2ddf06da5a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9aefa6a-f1a5-4b16-b2e0-301d2934a0fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edcc9f76-8ade-455e-9249-1b8fe2696d55"
                    }
                  }
                ]
              },
              {
                "id": "d2110936-d771-44c7-ad0c-a5e84aa59ac5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cec1aa5-1429-4fe8-a866-841239f09986",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0bf8cbd7-7422-4ac3-9943-4be57395ea51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f68fbaa5-d893-4c0f-89ee-2b0fd0d40ad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a5278c5-b8fb-4b1f-8b74-9c7805db1b91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f1de497-8073-46ad-a206-a31c4dda999a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5a0236e5-1e13-4cf0-8d65-6c58b4f633d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54004baf-859d-44a6-a3d8-eaa13a305386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07219f59-5b88-4d4d-b434-d536a0c54416"
            }
          }
        ]
      },
      {
        "id": "6360e0a3-0b4f-4464-846e-356eb3ac5e0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a5a91ad4-4ffb-4461-a3e9-ac727147d793",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c758d81-9b6e-408e-9b0b-db5777104098",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1afbbb6a-e538-4d3c-8437-4eae06cca5cd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33248081-f2f6-4d4c-a5f9-63d5909f5457",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5c096428-8124-4dff-9caf-2796a1b95c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af66069c-7161-40d0-bdad-aecb2b5bce0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9db3911d-9d97-4051-b563-85ab461629d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f6d4ba-fc13-461b-b713-a5ff92abecf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a0cf31f-2865-48d5-b802-a8399ac636ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f14a63-d875-4199-8548-81a7aa18c8ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7cddfd3-0cd4-421e-9f17-2db7774809af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03e4c668-5680-4934-adb2-41339d8f65de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1b3affd4-1d4c-4c2e-bf77-b9db044c7be9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d5eb661-ac72-4e16-8184-19296dac0f53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2798ea9-c998-4539-820d-3350f1d6e472"
            }
          }
        ]
      },
      {
        "id": "b98d4900-9936-4de0-bf92-2e6f84c23bd6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bfdfc82e-b61c-4990-89e4-6f8e29f22fd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1af51cdf-dccf-4eb7-94b9-ecec8d05fe64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7447a88f-5ec4-41b0-96ab-90ffd1f97adf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21bf2bb-9880-470e-9a87-15fbfab91da5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b43621da-7044-42b3-8ee5-aaa21834bbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b808181-c19c-409c-8cb7-84c0a2dd233e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab53cbf-3e91-425a-be5f-13d0fccba4ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d1797f-cd09-44d9-9f80-768f3172c267",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56097852-dd52-43ad-bebc-ec6e2e30ae3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25dd6a2f-0b81-4f0d-8599-ef157eaa7494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ac190b4-44d0-4297-a980-f3e50c42b9dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63cf77c0-f6f5-4fe6-a13f-575a2cf783f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c93cbbc3-9d95-4c40-a488-a220ed394a76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fe34198-ca1e-46e7-9506-81a4a3b999c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5458ace-1aa4-4493-abba-b1b84873b855"
            }
          }
        ]
      },
      {
        "id": "1776e98d-e19a-43ce-be92-0417a92f450e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "08393e5e-dceb-4adb-acf1-f8fe27737ed0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b02ac4b-e129-4cae-8530-b34d97127b22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46de2cfd-93bc-4308-af2d-caac0a85e24c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8216452f-469a-4a85-85b4-aca4fc9a66ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c4f7d2-00d2-44fd-b8aa-a736daa09381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faec0d25-aa7c-4577-a2e4-a604f4ccfebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09a16c7a-13c9-4de5-afd4-eaa22c516e19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "346a4f93-15e8-4f6f-b4f6-d949ec6e2789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "738fd192-897d-4f7c-a1e0-e995f7f761f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8248216f-4fb4-4be8-b5d8-bec309766d33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63b88f1c-8d25-4cd2-bf56-b6fb734e0c2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08354c0b-ce9e-4c85-bdfe-ae068b976ca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe25ea13-c6a0-4d16-83e2-81eb96cfbcb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e33c90ca-2096-4277-b462-2d9782df49e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ec61b79-f7b6-4ca3-b516-d2c8b000fe72"
            }
          }
        ]
      },
      {
        "id": "9d7be318-25a8-4571-a1d5-a7725ebe688c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e7f8441-90e9-4516-89b4-b9ee5a87cbd9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47290970-ea15-421b-93a5-655bcd8e4573",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b6d4e383-38cb-485d-8edf-2cdafac7fc8f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ba066ac-2ef0-44ec-a0e5-b3e5a8c3cb3f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "259a2ce6-8ece-461b-ac7e-7bda8ef7f841",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 274.10526315789485,
      "responseMin": 10,
      "responseMax": 11974,
      "responseSd": 1354.764417718504,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699749424707,
      "completed": 1699749512258
    },
    "executions": [
      {
        "id": "b401d05d-e47e-4ad9-80e5-1df1e2d46692",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7e819b92-e9ad-402a-b707-e00054eaa560",
          "httpRequestId": "521e87ae-673f-48b1-b361-8907b99350b6"
        },
        "item": {
          "id": "b401d05d-e47e-4ad9-80e5-1df1e2d46692",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f5526edf-2b29-4e7c-b9d3-2d3d22a37567",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "8a62ad49-aef5-48fe-b596-89a51f72d6bc",
        "cursor": {
          "ref": "baa85fc6-361f-410f-845d-b741678dabf3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5f2d99ab-1c6c-4351-b2f9-54e630a50943"
        },
        "item": {
          "id": "8a62ad49-aef5-48fe-b596-89a51f72d6bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0c2f7fe6-75ad-49c1-9f6b-adb91864a1ac",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8dbf2610-16bd-477a-9efd-2afb8fe97c60",
        "cursor": {
          "ref": "c393979f-fdba-4450-89b3-fadb472e0ad6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "be94cf88-e01b-4776-a2f9-1929556de715"
        },
        "item": {
          "id": "8dbf2610-16bd-477a-9efd-2afb8fe97c60",
          "name": "did_json"
        },
        "response": {
          "id": "388c2eaf-0c70-446d-8474-7b5936785cf6",
          "status": "OK",
          "code": 200,
          "responseTime": 1732,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5144e52e-bbac-4553-98e0-484d6e1ca029",
        "cursor": {
          "ref": "d325a72b-6cb7-4fb7-bd43-3d83df9f9764",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09d2a6b5-9332-4bd7-acbf-b7e39d8f81c8"
        },
        "item": {
          "id": "5144e52e-bbac-4553-98e0-484d6e1ca029",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3e19949-d833-4bf3-b2b3-1c12717a24d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5144e52e-bbac-4553-98e0-484d6e1ca029",
        "cursor": {
          "ref": "d325a72b-6cb7-4fb7-bd43-3d83df9f9764",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09d2a6b5-9332-4bd7-acbf-b7e39d8f81c8"
        },
        "item": {
          "id": "5144e52e-bbac-4553-98e0-484d6e1ca029",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3e19949-d833-4bf3-b2b3-1c12717a24d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e912a-bb49-474b-ad15-0d7c0fb8687e",
        "cursor": {
          "ref": "0771fae2-2db9-434a-bb3c-2a847e9ff88d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aa8d0caa-b71d-47b4-9437-b205abb4a18a"
        },
        "item": {
          "id": "ad5e912a-bb49-474b-ad15-0d7c0fb8687e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2645448c-5c05-4bc8-badf-2c12106c4d1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1692,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe016a-c1a1-430b-952d-b3f42f83122c",
        "cursor": {
          "ref": "535bda73-3a43-4497-a026-bbaeedbd73dc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1788391a-0e28-4d20-a79c-3e88ee1fbca5"
        },
        "item": {
          "id": "5dbe016a-c1a1-430b-952d-b3f42f83122c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "62367355-90ae-4757-9e1a-7e57d9dc7aab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9ae230-58e0-43a5-8844-882e63744a74",
        "cursor": {
          "ref": "714d907c-43fb-47a3-93cb-7b1952b95b87",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8cf42163-b6db-4fce-9e61-dd193673ef5a"
        },
        "item": {
          "id": "5c9ae230-58e0-43a5-8844-882e63744a74",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1e58057d-ed04-49dd-9f04-2e3d02633f02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a2fa65-d6bc-4a46-accd-cfac50bf7a13",
        "cursor": {
          "ref": "c95f334e-7ceb-4def-89d5-5379bff4c088",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4a4f437e-e8c6-4243-833d-6f3d78c05a01"
        },
        "item": {
          "id": "41a2fa65-d6bc-4a46-accd-cfac50bf7a13",
          "name": "identifiers"
        },
        "response": {
          "id": "a0e9326e-f44b-446e-b417-0f7999346c85",
          "status": "OK",
          "code": 200,
          "responseTime": 1282,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5a00a4-d40c-4b22-af9c-32fa628dcea3",
        "cursor": {
          "ref": "12ab52f6-b126-4d1a-ae4d-099decc15c77",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33fed533-1f1c-49a8-a966-4e9934eea3e7"
        },
        "item": {
          "id": "da5a00a4-d40c-4b22-af9c-32fa628dcea3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0f7b9a87-bc21-465f-8616-7e04f9b066a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf914ad-baf3-4093-bdba-f35cf398fb05",
        "cursor": {
          "ref": "a1558e9c-8ded-4742-b66d-79f49d03df2d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d41df3d7-226e-44c0-9a44-b41f52d70276"
        },
        "item": {
          "id": "bbf914ad-baf3-4093-bdba-f35cf398fb05",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "abeca75a-0d07-472c-805a-db89824f55cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183cbfd6-4106-49fc-ad98-5169405fde81",
        "cursor": {
          "ref": "47845d98-a830-424e-9365-8e1b1d7a3d5f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "13dc49a4-bb67-482a-b7e6-971ed6901b4c"
        },
        "item": {
          "id": "183cbfd6-4106-49fc-ad98-5169405fde81",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b1d5c9f6-5bd9-494c-9dda-556e81537cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683d2190-90ad-4491-94c6-a63d3da550c2",
        "cursor": {
          "ref": "0e746ec8-f3d4-4791-9fd2-ddf58cf068bc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "91e6b1da-94b8-492e-b6fd-1db16641051d"
        },
        "item": {
          "id": "683d2190-90ad-4491-94c6-a63d3da550c2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ca4869cb-569c-4e42-a6b6-d4616c0f65ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f544decc-cf51-44fc-991e-df94080518b7",
        "cursor": {
          "ref": "1a668665-cc59-402a-8b59-f797f18841a2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "753586a2-1dd4-44eb-9e45-1396af9bd0f3"
        },
        "item": {
          "id": "f544decc-cf51-44fc-991e-df94080518b7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8736f77a-be9c-433c-9ffd-192b731d8ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55386c0-fd94-4b1c-a333-00acc97dd967",
        "cursor": {
          "ref": "a0f4d9a3-e347-481a-a0a8-c296121c7ba4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f67eb39b-7fd5-41d7-9c51-e1101c6719a1"
        },
        "item": {
          "id": "f55386c0-fd94-4b1c-a333-00acc97dd967",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "471e459f-2bd4-4cfb-94a1-18619059c9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d15822e-81a5-455a-9b4c-cfe75a87d4cd",
        "cursor": {
          "ref": "5feca594-3368-40dd-88a0-1eb1e8456931",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f48a1a3-9de9-4fd6-a888-637054310d60"
        },
        "item": {
          "id": "8d15822e-81a5-455a-9b4c-cfe75a87d4cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ef53118b-0d47-43ee-9424-02b71d7c2fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e01df6-a94b-4fc8-aa98-b754282686b4",
        "cursor": {
          "ref": "50b2e502-8669-44e0-904a-3c92b8cfc989",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8bcae2f5-942b-4f9a-ada1-54c3d157a0e1"
        },
        "item": {
          "id": "94e01df6-a94b-4fc8-aa98-b754282686b4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24733df0-1ff0-4774-a5fc-0397cfbe3a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de2d8f-935f-42b7-92b1-0543b2725930",
        "cursor": {
          "ref": "47d0891b-f475-4337-9ee2-0de0d2a49597",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c159dbbf-cce8-4c68-bcaf-59bca875de74"
        },
        "item": {
          "id": "03de2d8f-935f-42b7-92b1-0543b2725930",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cb7a72fe-2015-4799-9b19-16a96a418fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed761c6b-bc9d-41b0-814d-32da51034ca7",
        "cursor": {
          "ref": "7f8a3d20-23de-40d1-b7f1-f99e1c739f24",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5afda8b7-1252-4734-833c-90262904a9ce"
        },
        "item": {
          "id": "ed761c6b-bc9d-41b0-814d-32da51034ca7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dbf55fa4-c902-4fb6-bb8b-1e486e3c98a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c4b608-38c9-44ac-b778-c15d50bc52bb",
        "cursor": {
          "ref": "8bce9b12-a83f-40ed-b5e6-9e9a48cfa07f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0dd317eb-88e6-4718-83d6-42c4d42f658a"
        },
        "item": {
          "id": "24c4b608-38c9-44ac-b778-c15d50bc52bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29150980-e291-4e04-afd5-7e6b93dc2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba94f8e-cf28-446d-964f-1e03cb1ad4cf",
        "cursor": {
          "ref": "6992f9b2-49d2-4d0f-9cb3-f5bddf414a44",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b9b0af3b-60bb-4081-8c44-dae97b982e6f"
        },
        "item": {
          "id": "4ba94f8e-cf28-446d-964f-1e03cb1ad4cf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1772db4d-4d54-4e07-8e20-bff5d0dd4f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a3207d-5cde-4578-9303-6daf38d2f513",
        "cursor": {
          "ref": "beb5b3a4-ddd2-4768-8575-3a66dd00f1d7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b2391e7-352b-4a38-ac18-b95b38425516"
        },
        "item": {
          "id": "13a3207d-5cde-4578-9303-6daf38d2f513",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7fd22939-d6e3-4d96-806f-8dcce9f61ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9c235-c695-4d76-93b9-45822b9d01f1",
        "cursor": {
          "ref": "30ee7e4d-9884-4304-8703-8adb547ecde7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad53942d-4a94-4c58-8cef-15b0251519ec"
        },
        "item": {
          "id": "92c9c235-c695-4d76-93b9-45822b9d01f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c3051bb-5dad-4bd9-9409-c5459edac67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a772a6-3410-4bc0-9438-d2290706b968",
        "cursor": {
          "ref": "e164b76c-3d90-4ff4-aafc-43d4945e44de",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a2e06026-025f-4e0e-bed2-a36b9345f0e0"
        },
        "item": {
          "id": "23a772a6-3410-4bc0-9438-d2290706b968",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6dc2c3b-4e13-4c6e-b682-9af3a6b389bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883ff33-73e0-4de8-88a2-8b2996c40b50",
        "cursor": {
          "ref": "47fcc2c7-d36e-49ff-acc3-70c3fd34ebbf",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7aab658-d78a-434a-9bc1-99f79cf83ca6"
        },
        "item": {
          "id": "c883ff33-73e0-4de8-88a2-8b2996c40b50",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2e88cbc8-c715-4b3b-8d2d-af6bf7376546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd60bc8-9bb9-4b39-9453-f305c8db30f2",
        "cursor": {
          "ref": "b51155c0-caf3-436b-b28a-343812e1c966",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b361d8c4-31bf-4c10-9cc5-d20499638d9a"
        },
        "item": {
          "id": "6bd60bc8-9bb9-4b39-9453-f305c8db30f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f1a162c6-f601-4cbf-8538-4990f6f6418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae0c83-bd0d-4148-9679-bae726a4c5b0",
        "cursor": {
          "ref": "c82a7866-3586-405e-b2e2-95ce18cd7ffa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "653123cf-18df-452c-b7ac-9d4c49ea49e8"
        },
        "item": {
          "id": "22ae0c83-bd0d-4148-9679-bae726a4c5b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ef355058-d1da-460a-94dc-47c13c7ee18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0337b5-a7c0-4e00-b77d-5e87292ae4f9",
        "cursor": {
          "ref": "bb1bb432-7cbb-4896-889d-e6495ded1ac5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "445521f5-f3be-406d-b40b-819a14934b17"
        },
        "item": {
          "id": "1f0337b5-a7c0-4e00-b77d-5e87292ae4f9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ed7cb6a6-e480-4f18-a901-9da159fdbdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef4e1a2-320c-4446-bf3f-9cb10c723b71",
        "cursor": {
          "ref": "4079cca4-e0eb-4a21-a080-1ebeb5106303",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3039b16d-4c78-4262-9fc7-5c2b992c2b38"
        },
        "item": {
          "id": "aef4e1a2-320c-4446-bf3f-9cb10c723b71",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f74ec295-bf05-44e3-8e98-7362c742d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612ec531-685d-4056-9a13-650dd719a145",
        "cursor": {
          "ref": "10c430cc-0f1b-45a7-8cd3-bae1447dc26a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "14255469-3802-4aec-8459-66cf1c074dc7"
        },
        "item": {
          "id": "612ec531-685d-4056-9a13-650dd719a145",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7360a6d4-9b20-494a-b8c2-13153f7ece3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57580356-3e57-4c5b-b0b0-5306fd05e42a",
        "cursor": {
          "ref": "14735bcc-1fef-41b7-98cf-3c1645aff299",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7e1c7441-db64-4c6f-b14b-96efb06ac7ed"
        },
        "item": {
          "id": "57580356-3e57-4c5b-b0b0-5306fd05e42a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0b965120-ed4c-4b86-8970-c4f80ad9a632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d1ef69-6eb6-4c43-bdd7-bfc5698c7042",
        "cursor": {
          "ref": "4c3ac4c9-61ba-4870-9b01-0eb15bf4b547",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1bc8c1c7-1df0-44e6-a542-59d0df4f3ba6"
        },
        "item": {
          "id": "55d1ef69-6eb6-4c43-bdd7-bfc5698c7042",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4ce86d4d-06a3-481c-82bd-986c72c70454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56be2dc2-bbd9-4d95-8b1e-92bba033f225",
        "cursor": {
          "ref": "c9e0cf84-317a-40e2-ba8c-41ab552b2395",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e043fe78-3898-4348-a603-55f1e6911996"
        },
        "item": {
          "id": "56be2dc2-bbd9-4d95-8b1e-92bba033f225",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6fa079ee-691b-42de-9744-f7447240515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e88987-c006-42f7-951b-bf78fde099bb",
        "cursor": {
          "ref": "f885135c-88b7-47f0-9db9-dd0496bd146d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23a205a6-28ae-4a27-929d-bb861413b06a"
        },
        "item": {
          "id": "22e88987-c006-42f7-951b-bf78fde099bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bd3a45e7-d8c8-457e-8a59-41737db461b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e5f8db-03a6-499e-b140-f40a215eb125",
        "cursor": {
          "ref": "587c4b36-2758-41c9-8593-7ee63bf8581d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe3f2adb-11dc-4b67-a292-0dd515f14809"
        },
        "item": {
          "id": "37e5f8db-03a6-499e-b140-f40a215eb125",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cefba8ae-1dce-4b0a-bdad-0cbdcb2e6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39558caf-39a8-434c-b878-3cd101747516",
        "cursor": {
          "ref": "f433c457-2157-4aaa-96be-840cbcdcd10a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a317c980-b834-464f-adad-f265ba922960"
        },
        "item": {
          "id": "39558caf-39a8-434c-b878-3cd101747516",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ee094b5-f491-4252-92d7-34e052304c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db5b9d8-82ec-4f1b-a696-f135c95f1457",
        "cursor": {
          "ref": "86579830-3097-44e0-8668-0015a6ea4ed3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "43a659b8-6771-421e-b8da-c84de0954668"
        },
        "item": {
          "id": "9db5b9d8-82ec-4f1b-a696-f135c95f1457",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2dac85e1-bae7-4443-87d2-d2bb51644660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9349f10-c6c6-43fd-bfc3-0ce0395954fc",
        "cursor": {
          "ref": "51768ee2-1b8c-476a-a1fb-c35e0f1fbbc1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f831e856-8743-4186-999a-8cd814b5fcee"
        },
        "item": {
          "id": "a9349f10-c6c6-43fd-bfc3-0ce0395954fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "11b5f054-2985-435d-98f0-2d6ff32adc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51811c49-79f0-479c-9b30-ee07e4310fdc",
        "cursor": {
          "ref": "e574213e-58b0-43b8-9263-608e41381873",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "361ddae3-c1ce-4152-ac88-3b0ee11b88fe"
        },
        "item": {
          "id": "51811c49-79f0-479c-9b30-ee07e4310fdc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa10fcea-7996-48fd-971b-608f4a9a0752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91292aac-1e65-47cf-8924-053492544c96",
        "cursor": {
          "ref": "8c4f9758-930a-4a4f-8671-208d78c74349",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0f8e2ac2-4945-46c3-a0d6-677c70162d43"
        },
        "item": {
          "id": "91292aac-1e65-47cf-8924-053492544c96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d1e4b098-7e5b-44c5-811c-32f205516b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63736d6-923e-4f2a-9b88-845172d59e32",
        "cursor": {
          "ref": "fca0b2fb-d438-4057-a1b1-d7a2206174e9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0aed23eb-f1e6-4651-b243-19e747a30698"
        },
        "item": {
          "id": "f63736d6-923e-4f2a-9b88-845172d59e32",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9ec4ccfb-1421-41dd-a450-b975b5db375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45d370b-cea4-40db-81a3-63bec3b180a1",
        "cursor": {
          "ref": "6a8f6adb-6f1a-44d8-85c0-591d0665b2bf",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c26e853d-c5a8-4f3b-a9a0-26bb00434b70"
        },
        "item": {
          "id": "e45d370b-cea4-40db-81a3-63bec3b180a1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a42b8ab6-f371-4ec4-a086-1072ae7f4e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28404993-7936-4cf8-9243-09b10f123ef4",
        "cursor": {
          "ref": "b620b29b-6864-4c4c-ab5f-0b102242dfb5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "38c20a5c-a6a2-425b-9a79-e226a6129fd4"
        },
        "item": {
          "id": "28404993-7936-4cf8-9243-09b10f123ef4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "60ebd794-9b37-4808-a975-c6aa3c8fba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52fbd92-2e80-4f55-9583-a61f4c969b34",
        "cursor": {
          "ref": "e7bfd0b7-fe3d-44d9-adf3-f825a2247f93",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "94da119e-4b93-430c-a060-a338e937e11d"
        },
        "item": {
          "id": "e52fbd92-2e80-4f55-9583-a61f4c969b34",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9f7a126-ba9c-49eb-af7d-495389839552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbc6a55-3251-4187-a507-fa3256c92f63",
        "cursor": {
          "ref": "a231fe72-66d9-4c56-a60e-7fa81034078a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "36d50d15-b08e-4416-831c-979a6dfe5a67"
        },
        "item": {
          "id": "5cbc6a55-3251-4187-a507-fa3256c92f63",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a150013-ae80-4ac7-8042-e104d5e11144",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1478,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86abeb53-c3d6-4739-be21-f4eb3f633286",
        "cursor": {
          "ref": "c699ec13-4f8b-42fb-a3aa-8d6eaf3da6b9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ba78c3ae-d675-470e-a38c-138fca2ce7b2"
        },
        "item": {
          "id": "86abeb53-c3d6-4739-be21-f4eb3f633286",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4be6b7d8-4105-4870-b8a2-f5747fe733d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6dcce4-f157-42a9-bc2e-9e131ad32d7b",
        "cursor": {
          "ref": "a42cc136-b9de-40d7-a611-6ba1f401b00e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2a2e3e2-e6f0-490b-870d-90a752a616d1"
        },
        "item": {
          "id": "fe6dcce4-f157-42a9-bc2e-9e131ad32d7b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4d422958-3cc2-4a0e-8cc9-093514dd359c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730762e6-a652-4307-be48-4342c15cfa80",
        "cursor": {
          "ref": "748e1a4c-daa8-4f9a-93c6-2987e3513a45",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cedc44cf-5349-4f0c-9115-bfd65d694f69"
        },
        "item": {
          "id": "730762e6-a652-4307-be48-4342c15cfa80",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2e0fdaeb-9f6a-40c5-b5b7-85d7768c1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fc5e44-054d-4d55-a5c9-e5c2791676e4",
        "cursor": {
          "ref": "15591a73-31d3-4ff6-851a-7213add73a2e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "97d39898-a751-402a-b969-e4af8d16eb48"
        },
        "item": {
          "id": "22fc5e44-054d-4d55-a5c9-e5c2791676e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7928d80d-7505-485d-99df-05b33737aa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55437dbb-d9e4-41b6-8d2f-666833bb4262",
        "cursor": {
          "ref": "8a058e07-e641-47bd-889a-2220aa4efa7e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9de3612d-6ad6-4fa7-b93d-f9a905c9b1b6"
        },
        "item": {
          "id": "55437dbb-d9e4-41b6-8d2f-666833bb4262",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69022662-4cd9-44f7-bd6a-52672b7878a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e947424-2698-4590-af1d-94a4adf819e7",
        "cursor": {
          "ref": "2c28046d-84ec-478d-9f69-1e9093975169",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eefd5075-68e5-4bb8-b55d-3c593d52dfc9"
        },
        "item": {
          "id": "1e947424-2698-4590-af1d-94a4adf819e7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50820351-9778-41b5-8a3b-65e2f7ab2973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c4001-c49b-404e-9efd-6835630d51e5",
        "cursor": {
          "ref": "5a9b469f-0601-4bd4-8094-1782691e0090",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b51c554a-0208-4dc1-aab2-7d4e199b490b"
        },
        "item": {
          "id": "d51c4001-c49b-404e-9efd-6835630d51e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d20a41eb-761a-406e-baad-2a969a436163",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1552,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40659f-5a57-4cb6-8c79-e82304a34c16",
        "cursor": {
          "ref": "f2ddefff-bdd5-40eb-a518-6d261055b2a2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "94a88ac1-10fc-4bd0-b27e-26af737d176c"
        },
        "item": {
          "id": "4c40659f-5a57-4cb6-8c79-e82304a34c16",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "129f3f2d-53f8-4dd6-9857-fd0511484869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f31d0e4-8a8e-4d8b-ba08-6777da38ac2c",
        "cursor": {
          "ref": "df0204b7-0565-4b45-8bb2-bbc2c0cd6802",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2fc9d7f6-0101-4782-ac0f-7f44bd397421"
        },
        "item": {
          "id": "6f31d0e4-8a8e-4d8b-ba08-6777da38ac2c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "64af31b9-4823-4ec6-9ebc-ad9f9e237885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26669737-e7b9-459b-b5ea-1f4c799b1d41",
        "cursor": {
          "ref": "41a08956-9047-49f9-b710-a8dbe06deb23",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8495a491-6b6a-4c26-a077-241c7444eb72"
        },
        "item": {
          "id": "26669737-e7b9-459b-b5ea-1f4c799b1d41",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0f58940b-06c9-49af-9279-f945ae02967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d458f3-d2c4-4447-891b-5fe8c3ae88d4",
        "cursor": {
          "ref": "3cde53b6-8a58-4e2b-a533-35db1d8b253d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a53b1b3-ebfb-49ae-aab0-4d5e1ce281b2"
        },
        "item": {
          "id": "d2d458f3-d2c4-4447-891b-5fe8c3ae88d4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92c048da-738f-4033-bc1d-48dae5d6dc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe852d50-e4b0-4c7f-ae7d-fdeebbb167bf",
        "cursor": {
          "ref": "79714456-3d5c-4b1e-9369-0a59a30fbb19",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8290e37f-c621-4aa2-aff4-f60df1e1400a"
        },
        "item": {
          "id": "fe852d50-e4b0-4c7f-ae7d-fdeebbb167bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59215ccd-cce2-4df8-8f91-fac38fe6ebff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539369bf-64dd-49a1-925d-7eb4d0170e18",
        "cursor": {
          "ref": "50db78ac-d255-42b1-9ed4-ac51a785fbbb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cee52f76-682b-4bd8-9781-f42c1c195931"
        },
        "item": {
          "id": "539369bf-64dd-49a1-925d-7eb4d0170e18",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8ee71238-fd52-488d-beea-6818efdcfbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c06872-94eb-44dc-a6b7-9671e57a622a",
        "cursor": {
          "ref": "b5d03775-e180-41bf-9043-474065b5515f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "28b46dd0-7e59-498e-88fa-e975f54548fd"
        },
        "item": {
          "id": "a2c06872-94eb-44dc-a6b7-9671e57a622a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "23d9ec0d-376c-485a-b3b0-b507d1af4269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab8ea58-66f6-4dc1-9331-897aff5c1acc",
        "cursor": {
          "ref": "ee3e52af-1779-490d-a2ab-118d502c9114",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f5cc63ff-81bf-44cf-90c3-a2aaf5340cdf"
        },
        "item": {
          "id": "8ab8ea58-66f6-4dc1-9331-897aff5c1acc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c52e15a7-e4f7-44de-87f2-fb29efeffc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19af78e7-c42f-4124-a519-0d8a9adcbc05",
        "cursor": {
          "ref": "669a5cb4-9870-4f2d-b3ca-8389896f1d7b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1a4005b1-6dce-467f-b59a-b5bf0beeb7b2"
        },
        "item": {
          "id": "19af78e7-c42f-4124-a519-0d8a9adcbc05",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9fa8f62-306e-44e8-9df9-345a1a53c98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0865a2-c5d7-42a9-ac72-20f4401d081f",
        "cursor": {
          "ref": "301787c4-0b57-4057-b288-dfb5909d4ec4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "47d69506-2eeb-473c-b992-dbcc990a2db8"
        },
        "item": {
          "id": "ac0865a2-c5d7-42a9-ac72-20f4401d081f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "974e74e2-e970-49b3-af8f-33c6148f28d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b42149-5846-47a9-b2ef-b51f3ec6e9a9",
        "cursor": {
          "ref": "417f1295-4658-4838-9f3e-5bfe5b385780",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e109bbce-08f6-414e-aa1e-ef3e3e3e566d"
        },
        "item": {
          "id": "08b42149-5846-47a9-b2ef-b51f3ec6e9a9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4ec620e5-c7cb-4b2f-aa10-c0b9f852dced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d0f93-ed07-435d-a632-99b89bfc1616",
        "cursor": {
          "ref": "8fa691c2-4a8c-4848-ac11-67075a5fb3c6",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d936580c-d2a9-4f7d-9cf9-ae4c6ed200a5"
        },
        "item": {
          "id": "7a7d0f93-ed07-435d-a632-99b89bfc1616",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "11e3ff1b-689a-483d-bb50-8c7e614d5e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69b7db8-bc58-4f51-a8eb-47e5eac760b8",
        "cursor": {
          "ref": "a1f0af51-f2ec-4ea9-9e45-c2ff0239cba6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7e11a7ca-5f8c-4d6f-af03-81cae7fd04f9"
        },
        "item": {
          "id": "c69b7db8-bc58-4f51-a8eb-47e5eac760b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7e942fcd-12aa-42ad-bb37-d9d4f88496ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc54a328-3a9c-4cba-a481-b46de51fdf99",
        "cursor": {
          "ref": "e1e3ff95-0f10-4eca-b0a1-3daa9f123ad3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c69c9f66-93a8-48b0-a736-927ab1e7a9bc"
        },
        "item": {
          "id": "bc54a328-3a9c-4cba-a481-b46de51fdf99",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "77dd3001-4657-49c0-a09f-7833dd520036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a7c587-cc9f-484d-a5a3-03f83bd6cfc3",
        "cursor": {
          "ref": "70988aa4-d867-40e5-bc3b-ce8fc5491d8f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "70aaabd4-a8f9-49a9-92a1-ea5fff2b2511"
        },
        "item": {
          "id": "a3a7c587-cc9f-484d-a5a3-03f83bd6cfc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "630f6e41-d05e-4040-becf-6c2e515c81af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc123d8-a006-47bc-bd79-6faea76c8042",
        "cursor": {
          "ref": "3857aaf5-7d21-40ef-8928-dec8f97e5957",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "123144b8-d21e-4eb6-bfa6-672d9d6fe8b6"
        },
        "item": {
          "id": "cdc123d8-a006-47bc-bd79-6faea76c8042",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cdd2f06b-c3c5-4a31-96a5-a806a5fab2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8bf31a-4aa0-416f-b6ff-c569fa81eebf",
        "cursor": {
          "ref": "539ab76a-5541-493e-8e0c-bc3954e80a88",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "85ed264d-eb52-4bd2-8f70-a7a72f275cb9"
        },
        "item": {
          "id": "7e8bf31a-4aa0-416f-b6ff-c569fa81eebf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "edef23d5-16d6-43dc-9573-cfe0531af445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa09ef6-3cfe-432c-8070-32700fd4ef11",
        "cursor": {
          "ref": "4fd93353-9e56-4be1-a6ca-53971515eaaf",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be781c0a-038d-4a14-8148-8f3dd3851687"
        },
        "item": {
          "id": "7aa09ef6-3cfe-432c-8070-32700fd4ef11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5c6f1eb0-49fc-4bee-a79b-e0cbec7f8a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a14046-c7d6-46dd-9714-73f154059079",
        "cursor": {
          "ref": "30b4a048-ea4f-476f-aa0e-acf4007d5bae",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91f36268-8962-4b32-bb14-d8564f1e17e2"
        },
        "item": {
          "id": "04a14046-c7d6-46dd-9714-73f154059079",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "75763fc7-0472-47ce-a02a-c6b61ec7f53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ba216c-469c-4fd6-b9e7-2e413849c6a9",
        "cursor": {
          "ref": "318367ec-79a5-4dad-badb-0a9fa3cf414c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f8ee7720-3d73-4a1d-81b9-dcd6447dd043"
        },
        "item": {
          "id": "40ba216c-469c-4fd6-b9e7-2e413849c6a9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9f229fef-e390-421f-af58-18c359df59cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff79d33-3978-4f56-9c10-49666a0aecfc",
        "cursor": {
          "ref": "1136fd06-6608-45cd-bc44-a0f8b294c3f6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1e77f552-f4ca-4bf8-9d19-2379247fceba"
        },
        "item": {
          "id": "bff79d33-3978-4f56-9c10-49666a0aecfc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "734f9f97-5e3b-41a2-87f0-80bb904d80a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd6f02e-27fb-4e46-908a-681205d6b5e8",
        "cursor": {
          "ref": "537539c9-c2d7-4047-aac5-f26968740c29",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4ead5e9e-2839-462b-a731-f864e2a762a2"
        },
        "item": {
          "id": "5bd6f02e-27fb-4e46-908a-681205d6b5e8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1c38195f-3c1f-4384-bb8c-6d01b27f1da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1ac798-f869-42ba-a214-d0dd0cc6159b",
        "cursor": {
          "ref": "3d9db7ea-ad0d-4753-ba9b-791cb01da0ac",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "025823e3-60b9-4286-b749-571c4a0e9590"
        },
        "item": {
          "id": "5e1ac798-f869-42ba-a214-d0dd0cc6159b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "98b565bb-7008-4ba2-aacb-c03c9a03dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04929967-640e-4267-b824-c3d543b84cbe",
        "cursor": {
          "ref": "45754d07-b304-408f-a0c6-3aa2be61e458",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c2efaeb7-f0b5-452e-9031-22d31fc9e983"
        },
        "item": {
          "id": "04929967-640e-4267-b824-c3d543b84cbe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "60e815d3-e605-447e-a170-c0c60333ae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83cf620-e435-4f66-b109-1570fc48bffc",
        "cursor": {
          "ref": "86cda536-336a-4979-b04a-2925b72c58e6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed05bc01-b512-4ee6-b123-7e7698cff6e4"
        },
        "item": {
          "id": "c83cf620-e435-4f66-b109-1570fc48bffc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bc77c046-68fd-43ce-b27a-820fed373c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2be476b-4ca4-4cca-abe7-ab42e8e50b99",
        "cursor": {
          "ref": "1d5df4d8-9b5e-4042-8738-89be08098580",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56b5c280-9cf2-46e9-bb85-0c33a77ee19e"
        },
        "item": {
          "id": "d2be476b-4ca4-4cca-abe7-ab42e8e50b99",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4c5c94f4-a3a6-4a07-a587-ae203fbce79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b6582f-f1e5-4924-856d-a56d863d9db6",
        "cursor": {
          "ref": "af8c7fe4-06a6-4ef9-8ea9-3482db2bd438",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1a41c5a4-785e-44fe-bfcc-f81afc76aad9"
        },
        "item": {
          "id": "10b6582f-f1e5-4924-856d-a56d863d9db6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "012d896c-5229-4517-b3dd-1545a68df750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3474ac-c901-4333-a54d-1b4b220235d6",
        "cursor": {
          "ref": "ef0b9d6f-4a37-42ed-999f-8ad72034b895",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4fe8ea99-90c9-44e2-9ae1-1b59398294c7"
        },
        "item": {
          "id": "cc3474ac-c901-4333-a54d-1b4b220235d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e63b9137-5c6d-4879-84f8-0b99bf7e6030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887f198e-0465-483d-9c6c-d9b0f7464d1d",
        "cursor": {
          "ref": "c5191bf6-19ad-4b54-824a-a2f4cab33f6f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9da5861e-89cb-44b3-b7ba-3cc4f34ff7cc"
        },
        "item": {
          "id": "887f198e-0465-483d-9c6c-d9b0f7464d1d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a950a3ba-b031-4428-90f8-a03ded9b051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5856b181-5207-4d09-a5cf-04aec9706026",
        "cursor": {
          "ref": "f2d00b74-1b24-40e7-b036-d777a69c4cd2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e812d0e2-4527-432c-8b46-451f6c591b69"
        },
        "item": {
          "id": "5856b181-5207-4d09-a5cf-04aec9706026",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e7b73e5-54e1-4fc9-8cc7-b5dfc66ca0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d154496-ed70-45b8-846e-397bbe227900",
        "cursor": {
          "ref": "5dadb224-84e7-4ffb-a0ff-5c3f2d741637",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7ec670a-8017-40f9-b2ff-62be53636132"
        },
        "item": {
          "id": "6d154496-ed70-45b8-846e-397bbe227900",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bc61920b-f6e6-4a02-9628-4067915edaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f4b09e-090a-4574-849d-d68db9d1323d",
        "cursor": {
          "ref": "cff1cf62-6bc1-4527-bb83-5020fba8281e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ec185858-c539-4b22-86d8-b8f8e6118c3a"
        },
        "item": {
          "id": "b4f4b09e-090a-4574-849d-d68db9d1323d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c2882da-ffb3-4956-b32f-28acc7c28aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69863c34-47cb-4d07-8cc1-d762c8d6251f",
        "cursor": {
          "ref": "4b8fdae9-67c4-42f8-9882-959b2e3651bc",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "415046a2-852d-42fd-b659-89bad34875b5"
        },
        "item": {
          "id": "69863c34-47cb-4d07-8cc1-d762c8d6251f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "28f570c2-b484-4a3e-bb81-a71070ba7739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814387c-ce90-4d32-a3b1-cb010ba513da",
        "cursor": {
          "ref": "19f49084-bc6c-482a-8df3-f3e93b6d17a8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e4e8b398-78d8-481e-aecd-8f8543fa1f1f"
        },
        "item": {
          "id": "a814387c-ce90-4d32-a3b1-cb010ba513da",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2012122a-f424-4aec-ba99-63664e303c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de80e6-23c7-47ba-b251-90440877e916",
        "cursor": {
          "ref": "63df3694-92c9-490a-bffe-9ef34cd90575",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5fe11971-3f27-45e1-84e7-819f01989e81"
        },
        "item": {
          "id": "73de80e6-23c7-47ba-b251-90440877e916",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "186edc29-0317-4b53-90fb-90e7551e760b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbed8e-8f5f-4837-aa13-e9ba59b42093",
        "cursor": {
          "ref": "39332bcd-b894-468f-9bec-ef448da4d3d6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "77a56703-399a-4278-8a98-765a2f60c68d"
        },
        "item": {
          "id": "9dfbed8e-8f5f-4837-aa13-e9ba59b42093",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b04d9ce9-7c48-4573-bc0d-b1211c066746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3680d16a-77cc-4ec3-8b61-a0ba48ba422d",
        "cursor": {
          "ref": "355c58ba-1944-4a8c-a51b-caa90b77cd56",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1a914d63-99ed-4c28-9950-8471da7f3c5a"
        },
        "item": {
          "id": "3680d16a-77cc-4ec3-8b61-a0ba48ba422d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "220e4e3e-31b1-4c12-af66-805c8bd65b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e165ad-8ffb-4662-bddc-5a6047b475c9",
        "cursor": {
          "ref": "746d7d69-7af6-4365-912e-df0e42d3e311",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "43452c93-f56e-4654-87e2-65a128c4154e"
        },
        "item": {
          "id": "18e165ad-8ffb-4662-bddc-5a6047b475c9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4fc30e7-de14-4da4-8583-206bc80afd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9210cc-175c-40c3-af5a-4de8138d4d1c",
        "cursor": {
          "ref": "34b1c301-32c4-41ff-b49b-fb203ece40cc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4484e20e-435c-4790-88a6-9ab52f857890"
        },
        "item": {
          "id": "2a9210cc-175c-40c3-af5a-4de8138d4d1c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5143e704-46ac-4785-b907-b6a995b25d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8d58c-7e05-42dc-bdb8-d0f6b641058d",
        "cursor": {
          "ref": "556639af-f377-4f6e-bc02-e5c94eb1d4b5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e2c5552-50b7-422c-95a6-f4e83b8128e4"
        },
        "item": {
          "id": "99d8d58c-7e05-42dc-bdb8-d0f6b641058d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71399dfd-360d-47e9-bc97-d1552f46c9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf4d9c3-4ffc-4511-b56d-c097cf16d5dd",
        "cursor": {
          "ref": "2f06f7df-d5ff-4147-b3bd-60cab6ccd1f6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d7c8a376-53ed-4ca0-b8a2-4c9e8eea030b"
        },
        "item": {
          "id": "8cf4d9c3-4ffc-4511-b56d-c097cf16d5dd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4474d51c-5a4b-4d46-816b-d15a1d23d76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440cedc5-6217-48e4-a088-9190ae210455",
        "cursor": {
          "ref": "c21f405e-f351-499c-b773-d523483bd1b3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a0f296b-a4a3-4f07-b7e6-d1589b38b91f"
        },
        "item": {
          "id": "440cedc5-6217-48e4-a088-9190ae210455",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "affba84b-15b8-4b84-9bfe-1e3ab2174c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b98f76-92ae-4ef7-bceb-ff221a70cc2f",
        "cursor": {
          "ref": "fb872889-4f5c-42a3-bb02-45d1b66141ad",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c48775d-4c39-4ad9-acbe-6fafb8254bac"
        },
        "item": {
          "id": "e8b98f76-92ae-4ef7-bceb-ff221a70cc2f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8aaf656-711f-4c07-baf4-f7db6b79d717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e819d598-b6c0-41c6-975f-3a4c6162979e",
        "cursor": {
          "ref": "5c91248e-f4e8-4b28-98ce-e219d2acfa3e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "73896f11-8f4a-4153-bb98-129fa6af86c2"
        },
        "item": {
          "id": "e819d598-b6c0-41c6-975f-3a4c6162979e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "656b2db8-e6ab-4b62-a078-1a9c09e18702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cded82-e9f9-4d7a-9bc5-ed6f3ce04389",
        "cursor": {
          "ref": "8d6c53fa-e26f-4060-97ff-02a47ec3fc86",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b6f45e43-bf50-478d-88ba-5e213c5a9aa1"
        },
        "item": {
          "id": "52cded82-e9f9-4d7a-9bc5-ed6f3ce04389",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "72343195-151c-4c88-bf75-cd4de587316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934e58b0-7eaa-40d7-9467-86e2e9ab1c5b",
        "cursor": {
          "ref": "ce7c6352-b9d3-44dc-b9d8-b03bad65821f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b7715a3d-62c9-4f0c-847c-ba48efd66cf8"
        },
        "item": {
          "id": "934e58b0-7eaa-40d7-9467-86e2e9ab1c5b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "49f4be55-6562-4865-8757-a29c3c9b36a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1d718a-32ec-49fb-b804-23e65d8a41d9",
        "cursor": {
          "ref": "92464977-22bb-4a6c-8deb-579abe0163f2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cb798d6e-3f56-42af-8eca-bdf300679c1a"
        },
        "item": {
          "id": "fd1d718a-32ec-49fb-b804-23e65d8a41d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7a9e88a6-acab-47c7-b24e-87242bfeb339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea76fc7-f491-4e28-b6be-afb9270a1504",
        "cursor": {
          "ref": "e169887d-fa8a-4638-9421-fbeee9dd6bef",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "640f5b6a-463a-419d-a17a-40dd54f87fc3"
        },
        "item": {
          "id": "4ea76fc7-f491-4e28-b6be-afb9270a1504",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a94fca4d-a875-4324-a811-9eaf5a11fa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646e2fcc-5449-4896-8134-82014890e6b7",
        "cursor": {
          "ref": "a1612136-5de9-42f0-8ab7-3dda95dc0fb4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "70720074-b645-4e29-b4a4-b876382d5a1b"
        },
        "item": {
          "id": "646e2fcc-5449-4896-8134-82014890e6b7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9ec71e8-9986-48ad-9a46-9d78360a7000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf11285-8bf5-4a4f-add5-a6ca28c14f56",
        "cursor": {
          "ref": "01541b64-5870-4055-a554-6ba7278ee9b4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "42a7ebb5-9275-4f75-8227-0567a3d13fd4"
        },
        "item": {
          "id": "5bf11285-8bf5-4a4f-add5-a6ca28c14f56",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1e0fa789-5215-4e64-954f-3f862106c94e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791985b5-0c95-439f-9edb-d0a82ecf24c3",
        "cursor": {
          "ref": "b75d777f-b92d-43d3-b2f4-081c5537ed3c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4159fc4-ce40-45b4-824d-bb5c7eb6b840"
        },
        "item": {
          "id": "791985b5-0c95-439f-9edb-d0a82ecf24c3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e8c2aa7e-5eeb-4c75-bfc5-c2655b90a5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "17714275-ef9e-4b16-bda4-2d49f0549443",
        "cursor": {
          "ref": "a9b40672-1420-4132-aa12-5189f51ad2a6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aa936d83-1719-4b7a-b344-a31ea5b0f822"
        },
        "item": {
          "id": "17714275-ef9e-4b16-bda4-2d49f0549443",
          "name": "credentials_issue"
        },
        "response": {
          "id": "40fd6454-1d98-4be4-b426-1108306b1d98",
          "status": "Created",
          "code": 201,
          "responseTime": 9077,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb4e9e-8955-46f2-a273-487213b906be",
        "cursor": {
          "ref": "17d843f1-ba5b-4378-bbb7-750c93320cfc",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f6e6cb84-a588-4f4d-bb65-30aacda598f2"
        },
        "item": {
          "id": "4eeb4e9e-8955-46f2-a273-487213b906be",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f26db418-b9df-4d04-a3ba-8623322cdefa",
          "status": "Created",
          "code": 201,
          "responseTime": 8903,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9664d0fe-c515-4cde-9921-784596c10fed",
        "cursor": {
          "ref": "19d6b54b-e530-4009-8782-6e8ae1e79410",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7b4f6a84-ca92-45cb-9ac2-c2b7265b5de9"
        },
        "item": {
          "id": "9664d0fe-c515-4cde-9921-784596c10fed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5347dd36-5f69-4eed-be3a-22778e81dfda",
          "status": "Created",
          "code": 201,
          "responseTime": 9530,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebed403-3c6a-4b89-934c-5686dbb169f3",
        "cursor": {
          "ref": "1e3e10c0-9c11-40e9-b90b-7be8e574a799",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c0460166-1b8c-46dd-acca-985485b21eff"
        },
        "item": {
          "id": "3ebed403-3c6a-4b89-934c-5686dbb169f3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "579fb7f5-e083-4e3e-a73e-6d1431137ec4",
          "status": "Created",
          "code": 201,
          "responseTime": 11389,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a864961-abaf-434f-a540-e9e4efce3f8f",
        "cursor": {
          "ref": "8df3205d-d9d8-4113-bae7-a1a1768ca4f3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c4155fb2-bfbb-4f0e-aab4-b2a4950a4229"
        },
        "item": {
          "id": "4a864961-abaf-434f-a540-e9e4efce3f8f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59d7080a-47d5-486f-bfd1-c9d7dad1c152",
          "status": "Created",
          "code": 201,
          "responseTime": 11974,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b90a61-07be-450a-b829-67e7abb8871b",
        "cursor": {
          "ref": "3c631f7c-7c8e-448e-86f6-bae2ef5938cc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "95d61819-5a10-4891-b9ba-8a39d29b1a15"
        },
        "item": {
          "id": "c9b90a61-07be-450a-b829-67e7abb8871b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d83179aa-e8b1-47d4-864c-d191362cce55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "20333565-a50e-4333-8bd0-3a018e65d4ff",
        "cursor": {
          "ref": "4366f2e7-c68b-4e11-8bcc-c8ae9281b373",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "38faacf4-5d3f-4aad-8e48-31dd44b7696a"
        },
        "item": {
          "id": "20333565-a50e-4333-8bd0-3a018e65d4ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "453996bd-9c1f-4551-a00b-d02b6ee4f67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027abebe-d96f-4b18-855f-dca79232cb71",
        "cursor": {
          "ref": "08441979-6267-4190-969e-b603f8139168",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a46714ab-3461-471c-8d25-8b8c0d0040f0"
        },
        "item": {
          "id": "027abebe-d96f-4b18-855f-dca79232cb71",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ec8b1941-0906-4cf0-8f62-449bee56d150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901d0422-7049-43c2-b88e-a6d0bcebf6ed",
        "cursor": {
          "ref": "3299552b-12df-4a45-8ac8-8bb32eb5312b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "70453f1f-a89b-41f0-8327-95a2b1fdb679"
        },
        "item": {
          "id": "901d0422-7049-43c2-b88e-a6d0bcebf6ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "551b076d-6718-4379-9cdc-224eb2467e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c68b55d-3f0b-4dbb-adfd-6d0d6a5a4d06",
        "cursor": {
          "ref": "5aeb3245-e757-475f-b08d-0483015866cc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bbdf3611-a175-49c7-ba8a-a47a14228073"
        },
        "item": {
          "id": "8c68b55d-3f0b-4dbb-adfd-6d0d6a5a4d06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3592a4cb-4342-4854-b118-0898aa3aa938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b01cfd-010d-43ca-ab32-c402803be117",
        "cursor": {
          "ref": "b12a1ce7-b953-407f-b4de-a0b9f00e84a9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b8b28d5e-a3ab-4515-9574-d3ae64b2bab9"
        },
        "item": {
          "id": "51b01cfd-010d-43ca-ab32-c402803be117",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "774b8f3e-7694-4a1a-8ef9-a01d0f5dd3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a78462-51f3-4579-92a9-d03939679abf",
        "cursor": {
          "ref": "20e588d9-ef96-4ec6-9eaa-7b4ac1ca3535",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f4f8db0b-8716-4906-9ea5-ac24167c7030"
        },
        "item": {
          "id": "30a78462-51f3-4579-92a9-d03939679abf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8120f4da-fad7-4366-99f0-1ba7ae469e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5540f65-fe05-487f-85f6-7c5fe5fab038",
        "cursor": {
          "ref": "18932cd9-3977-4f33-af16-0c2ea186667a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f9314215-c18b-4eec-81e4-df3b071f719c"
        },
        "item": {
          "id": "e5540f65-fe05-487f-85f6-7c5fe5fab038",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "57ff0910-25e2-47dd-9f3b-8f64d17c0f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ece5d0-3a78-41fc-8e69-02232e6c8650",
        "cursor": {
          "ref": "2aae9656-4b5e-4b4a-974e-43c5859ca220",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d02e98a9-deb7-49b2-b36e-a3b7ca8ddde6"
        },
        "item": {
          "id": "b9ece5d0-3a78-41fc-8e69-02232e6c8650",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26c1efea-778a-4797-b128-1b9338ce0038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d19b48-4c8b-439d-864f-37242e65b0b6",
        "cursor": {
          "ref": "32bc2c50-b509-4e84-b08b-c7af0dc3e556",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "886095c1-a207-4663-a630-5163af3e1ea6"
        },
        "item": {
          "id": "b5d19b48-4c8b-439d-864f-37242e65b0b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "491f20f5-2719-41e8-9d01-70b37dc11c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1bebf7-e735-4043-8e58-026d24cfa8bb",
        "cursor": {
          "ref": "00abebd4-164c-4b9f-b1d0-efdeda60c109",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ca9b3dcc-2bdd-44a2-81a6-d91837d0d0f7"
        },
        "item": {
          "id": "7f1bebf7-e735-4043-8e58-026d24cfa8bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d399066-43f2-427a-ac7c-a9070ebbb6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087ba409-504b-4c9e-a5f2-7aa45877bf57",
        "cursor": {
          "ref": "86a48689-bd75-4f41-8539-0132e8921f97",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bcfba0f5-59cb-42c0-801a-67c8573fcf50"
        },
        "item": {
          "id": "087ba409-504b-4c9e-a5f2-7aa45877bf57",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "63940460-65a2-465a-b202-4cc390cece7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b83f25-a9a9-4b9f-9c4d-ce662baeb3e4",
        "cursor": {
          "ref": "846c8609-217a-4735-af54-ef73e1c3f1d7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bdf5a79f-a009-4914-b750-6bdcade776f8"
        },
        "item": {
          "id": "22b83f25-a9a9-4b9f-9c4d-ce662baeb3e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42170bbb-a766-435b-875c-7eaae97f6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f35095-3581-445d-b3a0-b20ededb1eeb",
        "cursor": {
          "ref": "a18ba235-217e-455e-8378-bd9e9db19636",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1b821737-853f-4aa4-ac68-e5d2781a2956"
        },
        "item": {
          "id": "c0f35095-3581-445d-b3a0-b20ededb1eeb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "65a9ca2d-722a-4caa-9b2b-80bf61272969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591f5f5-9edc-4ac9-aed5-37132946176e",
        "cursor": {
          "ref": "bd0312ea-491e-4622-8e93-123d5d3cc3c5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4ef24d4b-deac-464d-8b61-71bfb66a2e48"
        },
        "item": {
          "id": "9591f5f5-9edc-4ac9-aed5-37132946176e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e052a2a-f675-4e45-8e41-ad05969178da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e2c84-1c68-47e9-b432-3395657d2e7e",
        "cursor": {
          "ref": "5d607599-e82c-4fb0-9da1-87d174951794",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "52e6dd0c-bc99-46c3-af2d-4033b46d5b55"
        },
        "item": {
          "id": "b90e2c84-1c68-47e9-b432-3395657d2e7e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "81b95200-0bc2-4a64-bedb-7a211ffeacf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f8a103-c3dd-4f3a-88a2-a51e7a6b530f",
        "cursor": {
          "ref": "238a9d61-39a1-443f-9c58-4865ef18539b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ac8b2493-921c-46ca-a083-8226aa5b443a"
        },
        "item": {
          "id": "59f8a103-c3dd-4f3a-88a2-a51e7a6b530f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "754ed437-3e22-401d-92a7-de3267cb5e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf6969-a3ff-45d2-8d32-915f57aab690",
        "cursor": {
          "ref": "c119a991-08a7-4e63-aecd-f1832ffb4607",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b761518-0b89-4a90-ac61-32ab0207443a"
        },
        "item": {
          "id": "acdf6969-a3ff-45d2-8d32-915f57aab690",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "445e7995-85a4-4806-b9d9-f8ac0d1fc5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab124803-09e2-48e4-90ba-176167722cfb",
        "cursor": {
          "ref": "dc69b811-0821-421c-9fbf-edc85a1dafd0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7824011-6c2f-4589-a94c-c2186e6e2901"
        },
        "item": {
          "id": "ab124803-09e2-48e4-90ba-176167722cfb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0aa25a1c-267d-4608-b4da-e1d016e515a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc869f5-c5d9-46b7-8785-b6e1cca60877",
        "cursor": {
          "ref": "15404e77-3dcc-485a-ae81-d4e275b86aa2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f8576e6d-f4ec-40d9-855b-b895e45d5bd2"
        },
        "item": {
          "id": "ebc869f5-c5d9-46b7-8785-b6e1cca60877",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "871565e4-648d-4ae1-8f28-2a00213e4c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3faefc1-6d6c-47bb-aecb-ea8fedb725af",
        "cursor": {
          "ref": "36ba1075-ea0e-4dce-a4be-463ceef98255",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bcbbe0ab-379e-4c13-b8b6-ef597dae38ef"
        },
        "item": {
          "id": "a3faefc1-6d6c-47bb-aecb-ea8fedb725af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4be298c4-8bb2-4835-a0ae-2012b06a90f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0199df7-fdfc-4b42-9f97-61af2a215206",
        "cursor": {
          "ref": "f201adc3-a089-4bda-97e2-673d5d88a643",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ddedbb1-a4ae-4f97-b15d-321404484c69"
        },
        "item": {
          "id": "d0199df7-fdfc-4b42-9f97-61af2a215206",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fb45c547-a0a7-4ea5-bbc3-d0a61c2aeebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75dda48-4493-438b-b0ba-bc27cbf2b0a7",
        "cursor": {
          "ref": "3a1a9bff-4708-4de4-a6da-1ef5ceb9b8c5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "63283625-889c-4693-96ae-54afcc64f3fb"
        },
        "item": {
          "id": "b75dda48-4493-438b-b0ba-bc27cbf2b0a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "108506b5-b1c8-4b42-a59a-5417f214cf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa29f80c-c00c-4a65-9032-e1f7711e5acb",
        "cursor": {
          "ref": "00b56433-eddf-4dfe-be26-bccda35273e9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "39eb0ffc-4429-4dcf-ba91-28665f9d6a49"
        },
        "item": {
          "id": "fa29f80c-c00c-4a65-9032-e1f7711e5acb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3952058-2d2e-41c0-8265-27449258fef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81abaf10-3403-44fd-bd43-9ecc67af9233",
        "cursor": {
          "ref": "106237a4-2fce-484f-a059-e775a918628c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e160571b-af95-4d18-83f6-d8d3a07d42db"
        },
        "item": {
          "id": "81abaf10-3403-44fd-bd43-9ecc67af9233",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4017fdd0-0bfe-4374-b36a-7a43b6453ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce6f4c-c425-4d70-a04f-0b20a7d0ff9e",
        "cursor": {
          "ref": "051e0e52-7bf8-4d56-8208-0ab0bc138302",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bbec57d8-6c40-49f3-8709-f0bc9d22bf08"
        },
        "item": {
          "id": "c4ce6f4c-c425-4d70-a04f-0b20a7d0ff9e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6c3e85c-a068-4d24-bdc7-b4e7194ecf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f26bca-dfdf-455b-91be-c6d9cdcca029",
        "cursor": {
          "ref": "12128961-1b01-451c-b7f4-250de28d3996",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b58449cf-1b2c-4f5b-8e9f-c2f04670a703"
        },
        "item": {
          "id": "52f26bca-dfdf-455b-91be-c6d9cdcca029",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37887d23-b9e8-48cd-a082-2ce327e6c346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6277ab18-baa0-4210-8188-be40b5296c58",
        "cursor": {
          "ref": "c57e73bb-4f7b-429e-a553-78965919aa8a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aab7ef6a-ddb8-4a32-85b9-6d0a1dc42b7a"
        },
        "item": {
          "id": "6277ab18-baa0-4210-8188-be40b5296c58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db73f73a-0e6a-49d7-aa4a-3f75fd7088ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb67c72-cbe8-4845-9384-6543a5b18096",
        "cursor": {
          "ref": "5083b23b-43d0-497b-ab5a-4b18fe62d9da",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b1f7c262-fbd1-4a9f-865d-27996e170583"
        },
        "item": {
          "id": "4fb67c72-cbe8-4845-9384-6543a5b18096",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eec42ec9-218b-46c2-b31e-e9cf501c45de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16180a57-fd50-45c4-b5fb-f0531affb688",
        "cursor": {
          "ref": "5f4d5e51-516e-4ecb-81e7-577d9995cf43",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2fa0250b-6f16-4569-b366-d60034a30188"
        },
        "item": {
          "id": "16180a57-fd50-45c4-b5fb-f0531affb688",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3579582-fc82-4e09-853a-86c69efd1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4215c9f4-f7e1-4b87-8884-957966d8bc87",
        "cursor": {
          "ref": "38b0ea46-c7b4-46ce-9015-f1a8f9d6aa53",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eed41f99-9acb-430c-ad09-226c64d984c4"
        },
        "item": {
          "id": "4215c9f4-f7e1-4b87-8884-957966d8bc87",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6b94648-92b0-4747-9d47-e63d6e502fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8abbb7-8c11-4d79-8361-2e8fe0e42fd0",
        "cursor": {
          "ref": "201cd289-9c9d-4e0a-aff1-e0bd087d3e7e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8efd3c32-e508-4b60-a3c9-f53b4820d26a"
        },
        "item": {
          "id": "0e8abbb7-8c11-4d79-8361-2e8fe0e42fd0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "033f052c-8bcf-41fe-95cb-03c7c0ff4d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a47a46f-845e-4566-a67a-72fd56e80fd8",
        "cursor": {
          "ref": "2d29399d-504d-49ad-8cf0-b30d5654ae42",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c434b3d6-25e7-446c-bac5-54dcf395f416"
        },
        "item": {
          "id": "6a47a46f-845e-4566-a67a-72fd56e80fd8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ea8e21c-f8df-47fd-940c-47d4c322a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a12d1-59db-4323-8801-434d7f8324d7",
        "cursor": {
          "ref": "35466525-7c99-48e6-ae86-b2d718c3ab73",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "400358e2-b3bc-4977-884e-e1fae00580b7"
        },
        "item": {
          "id": "fa4a12d1-59db-4323-8801-434d7f8324d7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0bc7a6e3-55a1-4c98-b572-4bab41af8f16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a7954-169e-49f9-8b56-c1d64d0006b8",
        "cursor": {
          "ref": "ea1ee675-9dd8-4602-9173-923e2e2f3bd9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "16342199-883f-41b2-849f-94aae36b0cfe"
        },
        "item": {
          "id": "102a7954-169e-49f9-8b56-c1d64d0006b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8ce351e6-823c-435f-abc6-0e02d5cfb5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da245ce5-0fdf-45a3-a558-4db4ffc1726a",
        "cursor": {
          "ref": "a9713a19-b978-4bfc-aa21-8e505f7a9c9e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "07f73c55-2a79-4c39-a9a8-3701b7593e85"
        },
        "item": {
          "id": "da245ce5-0fdf-45a3-a558-4db4ffc1726a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a21ed177-4b17-460e-9f67-9b6d105c09b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628c1277-9b76-4ec8-9287-bd87efe52e12",
        "cursor": {
          "ref": "fc02412a-b80f-4c02-a9b3-a885041762e6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b6f782f-6a3d-445d-a6e7-105920784eb7"
        },
        "item": {
          "id": "628c1277-9b76-4ec8-9287-bd87efe52e12",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb6535f5-cca5-4d0f-9e83-d7cc607accab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab037a-8725-4839-8c06-98da49419fc4",
        "cursor": {
          "ref": "4ef1cc3f-de6a-427c-9822-94dc91178d39",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4246249e-e5c4-4c93-af20-62564aaac8d8"
        },
        "item": {
          "id": "e6ab037a-8725-4839-8c06-98da49419fc4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a0d02d1f-6700-4864-ac4b-0b0b183930f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245e90c2-c871-4efc-8ea7-adfae99fe91e",
        "cursor": {
          "ref": "76b63268-4cf6-48d1-9ae7-f1c39ff83f56",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cecc4b3a-3bbf-42ef-bba7-07f706e9d892"
        },
        "item": {
          "id": "245e90c2-c871-4efc-8ea7-adfae99fe91e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f962a292-9d19-46fa-aafe-c6c4939076db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee8c927-94f9-4e8f-a5b7-d62bd355fa1f",
        "cursor": {
          "ref": "6d37bb5e-8052-47fb-b82b-1741688230a2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b5257c6e-b025-4713-b5ba-925998c333c3"
        },
        "item": {
          "id": "6ee8c927-94f9-4e8f-a5b7-d62bd355fa1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ab2e435-e489-4861-8001-6f4e5587cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756824ca-9da1-4d67-aa6a-a2b3e56e4bb8",
        "cursor": {
          "ref": "36d90448-7b97-418b-9428-7d624e281a4c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "63978148-eb06-442e-b8b8-dc06d8913770"
        },
        "item": {
          "id": "756824ca-9da1-4d67-aa6a-a2b3e56e4bb8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79e83956-ec9b-4b2c-a85d-78ad0e8a3e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb34906-94ce-4671-8172-a31e346cfced",
        "cursor": {
          "ref": "48d13606-b3cc-4c74-9fe7-e287739c0804",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a3940e22-7b63-4912-a109-d758293ec47b"
        },
        "item": {
          "id": "0eb34906-94ce-4671-8172-a31e346cfced",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c269cd8e-5c72-458d-ba12-ed83b5150811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99fe6d0-28c9-4ce4-90c7-b9e4bd6c1f8c",
        "cursor": {
          "ref": "2b588fb1-0c29-4465-81e5-a983b7b0397b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "265b45c1-6761-4570-a3dd-adb094e69693"
        },
        "item": {
          "id": "f99fe6d0-28c9-4ce4-90c7-b9e4bd6c1f8c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d268e98-90ea-41c6-b9be-c5d2852b2a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce72033-00c6-46ce-94d7-6bd32b87a259",
        "cursor": {
          "ref": "72e3a633-d998-4cc8-b77a-78d867c9dbe0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dddc4cf3-94e6-4466-8e13-c7c0ced2ad81"
        },
        "item": {
          "id": "fce72033-00c6-46ce-94d7-6bd32b87a259",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f129dd63-2176-4684-8aeb-0652e88c0e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e7bc9e-d375-4bc1-8bd5-70cfe6e69f1b",
        "cursor": {
          "ref": "1ade792b-b80e-444d-ba1d-2740a09932f1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2059e25c-f03d-4944-a0d3-22185518d110"
        },
        "item": {
          "id": "15e7bc9e-d375-4bc1-8bd5-70cfe6e69f1b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4635178c-24a5-441c-ab75-39d9daf0e869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a2c384-5432-457a-a6ae-c5ee1dfbe6bc",
        "cursor": {
          "ref": "066438bb-892a-4df4-8c9c-0e91b96ac5a5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83871683-2bda-4622-899f-a82d9547c473"
        },
        "item": {
          "id": "63a2c384-5432-457a-a6ae-c5ee1dfbe6bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6cef3790-fcbb-44dd-82dc-219447eeb528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c6d76-27e9-4f7c-afb4-f7f19dc7269e",
        "cursor": {
          "ref": "85aced10-ea1d-44e9-a3c8-f0cbd74861f8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bfcd190c-9827-41b6-9a90-d213fb1342d9"
        },
        "item": {
          "id": "861c6d76-27e9-4f7c-afb4-f7f19dc7269e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc5411a2-1853-46a8-9b12-b6e059eea0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77df7779-c60b-41de-9be9-58121671c0d4",
        "cursor": {
          "ref": "d3b4de2d-9b31-4a70-acf6-bfb9aa815118",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c9e86297-7dc9-4657-ac7f-f4dd4da4ce58"
        },
        "item": {
          "id": "77df7779-c60b-41de-9be9-58121671c0d4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "65cf9a80-e55d-4fdc-b285-483cff270715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0038abd4-f2a7-455f-8970-ceb6c67da938",
        "cursor": {
          "ref": "f7ff3ee1-0417-4607-aa6d-606c1c95384b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1832c2c6-6fac-4a9b-8111-f6b472179893"
        },
        "item": {
          "id": "0038abd4-f2a7-455f-8970-ceb6c67da938",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30c49c50-bb40-4457-bbf2-5033bb64086d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e840cde-ae04-4ce8-92f6-596bf70bdbb3",
        "cursor": {
          "ref": "281ca153-6d4a-42c2-99d0-c764c86e6622",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "75d53d9d-4f90-49a5-b266-14126a1081fe"
        },
        "item": {
          "id": "2e840cde-ae04-4ce8-92f6-596bf70bdbb3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ef549c85-a244-4101-a65f-904bcf007480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cb21fc-4b8d-49fc-b8af-d4ae18620a46",
        "cursor": {
          "ref": "dd66c8be-09b5-4489-b55e-c3447f006965",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e1660277-af4a-41ed-b939-5b3b71997f0b"
        },
        "item": {
          "id": "72cb21fc-4b8d-49fc-b8af-d4ae18620a46",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c270707-e23a-43bc-b315-f8a912634e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c319638a-ac5c-491d-8131-e9d736b9d7dc",
        "cursor": {
          "ref": "81729827-5e0a-4582-978b-ca9baff002ef",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2dffebd9-ea72-4d0f-b02f-ff3ed1df1b74"
        },
        "item": {
          "id": "c319638a-ac5c-491d-8131-e9d736b9d7dc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a441c545-add4-4f0e-a58e-2ec95efe4c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058b465c-2bd8-4f1e-b500-f1c2742d5cd0",
        "cursor": {
          "ref": "27ac86bd-5dd8-42f6-b048-c052fa7d2fc9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75a4ff77-0624-4a82-932c-728fa6001dd7"
        },
        "item": {
          "id": "058b465c-2bd8-4f1e-b500-f1c2742d5cd0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b4dc057-bd2f-46c3-a281-7e5a8d8e8338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b749ce75-b2b8-415d-9300-ecc76f55b029",
        "cursor": {
          "ref": "31f42778-b736-4b97-966a-115a2accc055",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "26af77fe-b451-42a9-afb4-99c24bf6c6a4"
        },
        "item": {
          "id": "b749ce75-b2b8-415d-9300-ecc76f55b029",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "681ee76b-d088-4874-bff2-64b6812f7c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7afc63e-e30b-4f6a-b7ae-854028f44e0f",
        "cursor": {
          "ref": "8b04bb68-5e73-4f95-b468-aa27e6eccf53",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "893e2ba7-0605-4304-a041-6cc07218ca38"
        },
        "item": {
          "id": "b7afc63e-e30b-4f6a-b7ae-854028f44e0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "451890f1-0009-4d2f-b9a0-fea90a3df5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbf6fc3-0d20-43c4-956d-fa51ded071f5",
        "cursor": {
          "ref": "86d036b9-52a2-4364-9592-45d400fd9265",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "620cf46c-a01b-42d8-81e8-6d5fe8f9fa08"
        },
        "item": {
          "id": "9cbf6fc3-0d20-43c4-956d-fa51ded071f5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e1d97c5f-d638-4a84-877f-2ce5d3808db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bdc813-9d36-4fc4-8ee3-7b2213253935",
        "cursor": {
          "ref": "0a9f0a57-7226-49fe-892e-9d25a31bdd6b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "816e9d36-3e62-4ca1-9fa3-ec2b4aa0286a"
        },
        "item": {
          "id": "e0bdc813-9d36-4fc4-8ee3-7b2213253935",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "03ee32fa-59ed-4894-a7c4-936c4bd5c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71fe97-1657-4a76-b7b7-0ef1b07962dd",
        "cursor": {
          "ref": "5db0b417-ffa1-456f-817b-c2a178e010d5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "620d0bff-e4cb-4750-96b9-252e34ab1d84"
        },
        "item": {
          "id": "7d71fe97-1657-4a76-b7b7-0ef1b07962dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62479be2-66ac-4b43-abc9-14d80382567f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dba11e-43d2-4b1b-ae22-fe03705b294b",
        "cursor": {
          "ref": "aee9ee68-38c4-4509-8f58-609bb106c656",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7067af15-1f3f-4e1b-954e-a7c5d6e4ebc0"
        },
        "item": {
          "id": "36dba11e-43d2-4b1b-ae22-fe03705b294b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5bfebd03-fee3-402f-8201-d19f2b261f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd542ca-117b-442a-afec-eca0f5d73931",
        "cursor": {
          "ref": "343046c3-3d7c-4c03-afa6-fa6f2925c665",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e4329c1d-7fd9-4ffd-9eab-3b76d10c2c81"
        },
        "item": {
          "id": "fcd542ca-117b-442a-afec-eca0f5d73931",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "47c0769e-21ad-4e71-adfe-9384b50f553d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde60ae5-a3d7-4d12-98fb-d0aff976ccd6",
        "cursor": {
          "ref": "4cf35c2b-4f4c-4356-9526-c1e84ab8aeed",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "53b8f46e-8131-497a-9f55-3c0b66c84aff"
        },
        "item": {
          "id": "fde60ae5-a3d7-4d12-98fb-d0aff976ccd6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b51c92ed-73b1-41bc-8350-9ca78de501e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e0fe74-8d52-44af-a35a-f4f1a23c4388",
        "cursor": {
          "ref": "3e1130ac-293c-41af-b41c-4d669496acad",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3615f54-50ed-40cf-ab5c-4041303bc498"
        },
        "item": {
          "id": "26e0fe74-8d52-44af-a35a-f4f1a23c4388",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc517c56-39c7-4ee6-b220-6ae6b68f580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20cc1f4-cba9-4271-becc-8346250fa822",
        "cursor": {
          "ref": "653f66d1-9ee9-441d-a975-11b23e18d08f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf806565-fb0d-4ef2-9b45-93d3eccbb798"
        },
        "item": {
          "id": "d20cc1f4-cba9-4271-becc-8346250fa822",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7d10bc33-1be0-49fc-aeab-e7ff140fe4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f62579b-66c8-4b32-9d00-1d67eff0bfe5",
        "cursor": {
          "ref": "4d261ae7-252d-43d1-bc62-fe4500115611",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a644fcf2-2da1-4380-b5b1-50bb9f9a8aa0"
        },
        "item": {
          "id": "1f62579b-66c8-4b32-9d00-1d67eff0bfe5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb8211d0-3fc7-4498-b9df-7efbaed2951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729e1b6c-5434-4dc1-9028-caf5a0ac22d7",
        "cursor": {
          "ref": "7081761f-f86d-45a9-b7bf-8564ffd17a1a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "211bb4f9-0e4c-4c33-a9e2-c939eb9966fe"
        },
        "item": {
          "id": "729e1b6c-5434-4dc1-9028-caf5a0ac22d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a2b60e9-4ccb-43bd-a06e-8ec7efee2405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e8e09b-9177-4e04-a9b1-1f1c499910ef",
        "cursor": {
          "ref": "e603a1cf-4f24-4cbf-b21b-ee23590c3813",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c3531953-7232-4b45-b62f-1e89d80b67a9"
        },
        "item": {
          "id": "e1e8e09b-9177-4e04-a9b1-1f1c499910ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "25610b6b-1536-48f1-81ba-32ef885dd4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758a4b4c-5783-4055-b8f9-3849752f74bf",
        "cursor": {
          "ref": "ef4e1c63-eab9-4109-829f-381fdde2111c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "856b3c29-0dec-430d-81b9-5d2886de8f72"
        },
        "item": {
          "id": "758a4b4c-5783-4055-b8f9-3849752f74bf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "120a1ee0-1343-4d20-bda2-c5e4bc0aa675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56670a85-700e-431e-a999-13e452f62341",
        "cursor": {
          "ref": "8cb3c9f9-c20b-4e39-9125-1f1ef5a43568",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "57b96aa9-62e9-42a9-9369-a15321e5bc1e"
        },
        "item": {
          "id": "56670a85-700e-431e-a999-13e452f62341",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d1c65448-639a-4fea-80e1-1aed50131d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a33fbd-6717-4149-b70f-6810f668cb2b",
        "cursor": {
          "ref": "4b8138fb-b5ef-4ec3-a999-6998a3c9182d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b7e94e9-30e1-43c3-83d2-29cfbaa7562f"
        },
        "item": {
          "id": "b3a33fbd-6717-4149-b70f-6810f668cb2b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e682a545-0aa9-4b5a-940f-4783122d75ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caa0402-f52e-4cc5-819f-24e128d25163",
        "cursor": {
          "ref": "509bdd5f-cf80-4eb7-9c39-023d89f817fa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0e5d132d-7179-4a0d-a6c8-0730b4c0a1b3"
        },
        "item": {
          "id": "5caa0402-f52e-4cc5-819f-24e128d25163",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "32ecee8a-75a9-49b2-9b4d-7bf25d676972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a7cbf-6e5d-4c96-a496-3c9d4ec5eab7",
        "cursor": {
          "ref": "36e39506-f4c1-46ab-8871-32d6e9da8171",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c76333c-b9c6-4159-beec-c5c5732ab73f"
        },
        "item": {
          "id": "b05a7cbf-6e5d-4c96-a496-3c9d4ec5eab7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eafd8776-6378-4c62-b01c-1345470ec009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10468c36-400e-4a98-84c0-113a36ae84db",
        "cursor": {
          "ref": "27e6f78f-90f7-4aad-bc52-7dec46776101",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "84c6f018-2a05-4a9b-97d5-a4fd49651cb6"
        },
        "item": {
          "id": "10468c36-400e-4a98-84c0-113a36ae84db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8f96901-ec7a-41d7-a70e-247329e8960b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df775a5-810a-4897-8a3a-b4b63b595ab6",
        "cursor": {
          "ref": "6ce1bc5d-c56c-4dcb-bc98-6aaac11f8280",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b206f9b-2bf0-4473-9156-e0e249f06a24"
        },
        "item": {
          "id": "1df775a5-810a-4897-8a3a-b4b63b595ab6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7e3666e-b524-4cac-b436-46561f4e4769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda08013-ba2e-46ed-8bd3-12c8b4a4eedd",
        "cursor": {
          "ref": "7e50560f-70f6-479b-a984-73c315638876",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2949a59c-ba60-48f5-bd41-6005f1b6bcaf"
        },
        "item": {
          "id": "eda08013-ba2e-46ed-8bd3-12c8b4a4eedd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "70544876-3cb6-434a-9f2b-c8bad080a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c898a3-23a8-41e8-97b8-78d443515f7e",
        "cursor": {
          "ref": "3734eced-6439-4ee0-b789-3d276ef82cb7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "12e55fa7-2ae8-4985-9f95-0336013d52c2"
        },
        "item": {
          "id": "e9c898a3-23a8-41e8-97b8-78d443515f7e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "353b8529-2140-4e71-aaf1-c31f338f4775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8062d9fe-de03-47fc-b21e-63b7b3a5b760",
        "cursor": {
          "ref": "d9455f67-bd51-46c0-a59a-1ecb8deef3ba",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e0c3c395-f9c0-4a0e-972e-8b68c305cb9d"
        },
        "item": {
          "id": "8062d9fe-de03-47fc-b21e-63b7b3a5b760",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "11edd5af-4e24-415d-accb-7ffd6b7526a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e6da53-5c3b-4def-aca7-35b3392c641f",
        "cursor": {
          "ref": "e839708f-86c4-4b31-9200-c6cd5ae31cff",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "695d52db-0cdf-4d86-bc63-9679f2225f6c"
        },
        "item": {
          "id": "63e6da53-5c3b-4def-aca7-35b3392c641f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a12c3dfa-e610-491b-bacc-cc7cbbd56c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92600da9-c2d1-40a4-8498-14427c6b9831",
        "cursor": {
          "ref": "7646e82e-705d-46a4-996e-9300a52c84f7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "88e87006-3e59-4793-b5ba-0a32f13a7155"
        },
        "item": {
          "id": "92600da9-c2d1-40a4-8498-14427c6b9831",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "92dfbe8b-8e91-4af5-a33d-4d6783952805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd19944-533a-4fe7-adfc-29195eb17692",
        "cursor": {
          "ref": "0a6b26d5-cf31-4575-9dc8-158044c6aa50",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bbd38c1d-681e-4c31-87ff-3d346050f0c4"
        },
        "item": {
          "id": "2fd19944-533a-4fe7-adfc-29195eb17692",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4a539534-7f4f-4e47-84f6-d2fc6d338c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c1337-bbe1-47d5-9480-a6f856d57f52",
        "cursor": {
          "ref": "4eeb9f09-6eef-437e-aef6-fed73a8d641d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7aeee9a2-3453-494f-a4f9-829aeb3429cf"
        },
        "item": {
          "id": "d22c1337-bbe1-47d5-9480-a6f856d57f52",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a11993c-6d82-4aec-8f67-ddde4bac3136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b158c2-b2f8-452e-9be5-ce278fea1ec4",
        "cursor": {
          "ref": "7a098771-fb51-46bc-b736-fa6409e39427",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9f643e90-6410-4c83-be28-8d030bc3c971"
        },
        "item": {
          "id": "c6b158c2-b2f8-452e-9be5-ce278fea1ec4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "37315b75-5afd-403c-b5d0-04b9452d0af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1051a9b-cc96-4c0e-ac29-1b64610b0f2f",
        "cursor": {
          "ref": "08552dca-caec-4e87-9d36-eb3a0d6119b6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a0f010e7-7ac6-4dcb-813e-2d25e9ca90d7"
        },
        "item": {
          "id": "c1051a9b-cc96-4c0e-ac29-1b64610b0f2f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "49cc83b9-7200-43a0-8dba-9faf94f73dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cc4e15-a70c-42f9-af30-7b88fa010ad5",
        "cursor": {
          "ref": "eea90e08-068f-4aa4-8d4d-f658336956f4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b58d1237-3f9e-492a-bf66-f8a714b56fe8"
        },
        "item": {
          "id": "c1cc4e15-a70c-42f9-af30-7b88fa010ad5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c73272b9-bcf5-43ff-b787-b97e453b52f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d0d3ea-6e2c-4514-b446-9df0a9009465",
        "cursor": {
          "ref": "e705905f-e9e0-4d25-a658-e2c5e12f8bdc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "762c3ff7-089e-4ad4-ac3b-79fece452d0c"
        },
        "item": {
          "id": "d5d0d3ea-6e2c-4514-b446-9df0a9009465",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ad66c27-58f6-4b5b-8358-02b2d2bea6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5173f88-7323-4151-b7b2-0bf6ba02df8a",
        "cursor": {
          "ref": "b59b8575-0e46-400b-8ad3-00afd571c860",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eaafc7a9-c54e-4b55-9818-386567da6d39"
        },
        "item": {
          "id": "d5173f88-7323-4151-b7b2-0bf6ba02df8a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "81c2ec46-2d84-452d-9728-5eb2e9a73a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98212c5d-f60e-47d3-a291-edbd43ffdae2",
        "cursor": {
          "ref": "1794a738-80c8-4e22-944e-9dc5eb8379f1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d652b10d-3307-4f2c-862a-428012ecbd7d"
        },
        "item": {
          "id": "98212c5d-f60e-47d3-a291-edbd43ffdae2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4f4dac74-5b98-46b6-9bd9-40063162ecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cfef83-6a5c-4527-8eec-797e1fac9af1",
        "cursor": {
          "ref": "3096b048-f4ee-404c-b55d-4dbdf7ca316b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b9aa07e3-6c59-4644-bd59-9072be04c791"
        },
        "item": {
          "id": "57cfef83-6a5c-4527-8eec-797e1fac9af1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07f0166d-88ec-4600-beb0-c054fe9dd59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb7e8ee-9a9c-4c98-8422-b2c29a5c3726",
        "cursor": {
          "ref": "4620c93d-59ff-45fe-8a98-72c73f4f2115",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0075ab19-8b0c-460e-a76c-4c46cffa8145"
        },
        "item": {
          "id": "bfb7e8ee-9a9c-4c98-8422-b2c29a5c3726",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f9ca83fa-c5e6-457c-bfca-c6736b80fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c41dc57-9caa-4343-9d9d-9edab738a338",
        "cursor": {
          "ref": "322be96f-0e38-4d21-b487-f0f972fb1d26",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b4f73bc1-0847-454b-a177-912e20987aed"
        },
        "item": {
          "id": "6c41dc57-9caa-4343-9d9d-9edab738a338",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d79834e-f6ed-4655-9257-b8b16a911ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aaa272-7ca5-4214-aba6-83093e1b592d",
        "cursor": {
          "ref": "90cf31f9-1c49-46a8-b75b-bbf5a1c43563",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea88b480-6d1a-430c-8b95-4ac108b686e5"
        },
        "item": {
          "id": "d1aaa272-7ca5-4214-aba6-83093e1b592d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0e8c24f1-59c5-45c5-a48c-715f3ee2ed0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f19a0-ef3f-4d01-acf7-1b8f587bd03c",
        "cursor": {
          "ref": "75db0168-1af4-45b3-af04-b5d9e9e13e00",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5f759f39-332d-43fa-a4a2-2cac363689c6"
        },
        "item": {
          "id": "c03f19a0-ef3f-4d01-acf7-1b8f587bd03c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dee26e89-2d36-4029-b818-e1189c843de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f20bf0c-a923-4170-8961-b6071fd40a58",
        "cursor": {
          "ref": "5f315d25-61e3-42bf-ae92-e634714d22ad",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71ef4348-3e37-4614-b464-d4ce610a48e6"
        },
        "item": {
          "id": "6f20bf0c-a923-4170-8961-b6071fd40a58",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5f84f66-4813-46a3-b387-573773704d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf59bbe-ef2e-45a9-afef-de3c03104972",
        "cursor": {
          "ref": "c6ad587c-c2c2-4bb9-bad5-2c100780fda9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5292a2a6-999c-47a7-a4ef-2659668394df"
        },
        "item": {
          "id": "fcf59bbe-ef2e-45a9-afef-de3c03104972",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5e338d7-aba8-4809-ad10-8c923092ce64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34324826-5173-48e1-9210-361690f0d348",
        "cursor": {
          "ref": "28b1f037-b300-46c9-9301-0e0f6524327f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c5bc1793-da3d-47db-8228-d64046b32778"
        },
        "item": {
          "id": "34324826-5173-48e1-9210-361690f0d348",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f3f375c6-c148-4bc6-890d-9d159391f2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191dd11f-21d9-4eb6-9ac9-1b99dc540e47",
        "cursor": {
          "ref": "ce4d3a12-5a7e-4fb3-9d49-c9039998e534",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f35f8890-2610-44d0-a5e1-4628027b8c9d"
        },
        "item": {
          "id": "191dd11f-21d9-4eb6-9ac9-1b99dc540e47",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c9d3b7a9-2e9c-40ad-94fb-d5d03318ee2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d38b8ce-727f-4ae9-aaa7-8248638817df",
        "cursor": {
          "ref": "fe6eb8a1-627f-4fcd-b339-b4e36fde4349",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "76ba65be-fb64-47a8-9e0a-2716d240b8af"
        },
        "item": {
          "id": "8d38b8ce-727f-4ae9-aaa7-8248638817df",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "522abfa7-8939-4557-87d2-1ca0b6d97804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add91ff1-fa67-4575-b6a4-61db7ce8c795",
        "cursor": {
          "ref": "2895cf86-521a-4259-add4-98bf8e8aedd9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3a19f147-2914-4fc5-9ac0-99dcf7e66c6e"
        },
        "item": {
          "id": "add91ff1-fa67-4575-b6a4-61db7ce8c795",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b7ad9d6-4eed-42df-836d-8820ac23f82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39769336-ce83-4b2c-952b-c088065fd553",
        "cursor": {
          "ref": "ab79bca1-3300-4720-b0fd-4e84851149da",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5def47bc-3759-423e-8154-84f32009c38b"
        },
        "item": {
          "id": "39769336-ce83-4b2c-952b-c088065fd553",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ca8a749-5df7-434f-9a4c-aef6fb68252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54474631-bd5f-458f-a709-0d73b195acd4",
        "cursor": {
          "ref": "f3297599-47db-40ae-b832-44047e060517",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8fe7ced9-5558-4b1a-878b-ffd3ded834d1"
        },
        "item": {
          "id": "54474631-bd5f-458f-a709-0d73b195acd4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e3a791be-f721-4748-9a2e-f0cdced71d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034af661-595b-46e2-8144-20c7fe299e7a",
        "cursor": {
          "ref": "e471f673-7602-48c0-b9d7-de71c05f9653",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "509f3cff-505e-4a67-b092-1cd27017f864"
        },
        "item": {
          "id": "034af661-595b-46e2-8144-20c7fe299e7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "84fa40bd-053f-483d-b83d-bf15a4e6aa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa3312-4460-4120-a1d8-39c1abb9fb45",
        "cursor": {
          "ref": "d16b6e38-d945-4199-96a2-aad41b73222c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ad4975ac-8dbb-4cb3-a478-86c14ac152cd"
        },
        "item": {
          "id": "bffa3312-4460-4120-a1d8-39c1abb9fb45",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cfc6cce9-bda4-4673-877d-e725a744ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9828e07-d206-4839-9e69-b99b5f658d25",
        "cursor": {
          "ref": "04f8ff54-cd67-4a9a-897a-9f21da6fd716",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b96a9f8c-f5bd-47d1-9e5f-f4b150c4773f"
        },
        "item": {
          "id": "f9828e07-d206-4839-9e69-b99b5f658d25",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2f543a31-2372-4ef7-9b5c-2a0db8f490eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962b0197-5b15-44a1-8f4c-4ca52bd89f6f",
        "cursor": {
          "ref": "ad49e895-34ae-471a-a45f-8914eb127b47",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "511ead5f-c980-4f4e-b482-ed7066e2eb73"
        },
        "item": {
          "id": "962b0197-5b15-44a1-8f4c-4ca52bd89f6f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9dc04b00-a7fd-4e25-aaa1-2785f4769272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24e9d3-20b2-4bd9-96b8-cc0849e138d6",
        "cursor": {
          "ref": "9846fce5-2fd1-4a44-9358-abd73c70d257",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "424da53e-19fa-42da-815b-3e8599c3afd7"
        },
        "item": {
          "id": "8d24e9d3-20b2-4bd9-96b8-cc0849e138d6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2f4d50df-8bc4-493a-8234-6f73d7a3d1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359a5704-fad0-4f76-83c3-016ea3e53465",
        "cursor": {
          "ref": "c3dd73d8-73a3-4e3d-95d6-3743b95f8c8a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d5d10793-9880-4a83-8f5a-e61354a6310b"
        },
        "item": {
          "id": "359a5704-fad0-4f76-83c3-016ea3e53465",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "399a48b1-416f-4bf4-a9c8-9253ada76a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f19dcf3-1f70-449a-9564-b5ee8878ecc6",
        "cursor": {
          "ref": "c77acd96-adbb-417d-90b0-c399aaffa3e0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9dddbd3e-5a8b-41f2-b6fc-9ac0fe2978f8"
        },
        "item": {
          "id": "0f19dcf3-1f70-449a-9564-b5ee8878ecc6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f66bd69f-3b72-4489-aa57-443c22204d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5906c8f-00db-463e-9bf2-8ca6bbed4fae",
        "cursor": {
          "ref": "f93af398-ad4c-4c3f-81b8-c7d79f1b0230",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c928fffb-113a-49ae-8f96-9c3f1374b091"
        },
        "item": {
          "id": "e5906c8f-00db-463e-9bf2-8ca6bbed4fae",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bef832eb-fd69-497c-9513-08dc855ba77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3ba721-fc78-4169-8e54-43345b72258a",
        "cursor": {
          "ref": "2c18b31b-7bba-4a5e-98c7-c0355f24d4dc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ba90b22-b70a-4a32-9222-de92dc968668"
        },
        "item": {
          "id": "8d3ba721-fc78-4169-8e54-43345b72258a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "640187c6-a612-4835-b7b9-3a0b95a3d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd38b8-c59a-4c59-abc7-36f6476def15",
        "cursor": {
          "ref": "bb50df42-669a-4cf0-ba25-1eb2a56c00a0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "43812486-0f4d-4202-9c56-dd02f4d0b81c"
        },
        "item": {
          "id": "b1fd38b8-c59a-4c59-abc7-36f6476def15",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9a8be1d1-3c41-4930-b77c-1a46a41542e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d976bbe-3704-4188-952e-50e60a71b670",
        "cursor": {
          "ref": "f44e788a-63fd-4393-80b2-238fa021f129",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "597d1fc2-955a-42ab-b68d-e94f285cdf14"
        },
        "item": {
          "id": "4d976bbe-3704-4188-952e-50e60a71b670",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d281c7b-ba10-492c-88e5-79d477358466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bd050a-8c7c-471f-9cb2-2adde77eec36",
        "cursor": {
          "ref": "3bca255a-264e-4ba1-bfbf-6a6db32432ce",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1c746455-9d6b-4181-8622-f2a1a29ab1df"
        },
        "item": {
          "id": "43bd050a-8c7c-471f-9cb2-2adde77eec36",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c663abb-92d9-4a68-8517-f76c9f086b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30257810-54dc-4ceb-94d1-036a543f4b8a",
        "cursor": {
          "ref": "a3c6d8c0-961e-4d2b-ac28-d9b233e6d377",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6af8bf08-7820-4711-b91b-3fa998c0b9b7"
        },
        "item": {
          "id": "30257810-54dc-4ceb-94d1-036a543f4b8a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "86400443-3c33-45a0-ab89-1260708eb971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40caed01-b064-4ea5-bba5-3306c01175f4",
        "cursor": {
          "ref": "ad0a71f5-1277-4ae6-9d8b-8642f86e128a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70d55ba7-1da5-42cb-81fb-6f0921c016bf"
        },
        "item": {
          "id": "40caed01-b064-4ea5-bba5-3306c01175f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "219db58f-9039-41fd-ac0c-f040e053983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddcb5a2-f54f-4667-8d92-286c62010b1e",
        "cursor": {
          "ref": "57daedd6-e730-4369-b606-1a62ee6f078d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "010462a8-08e3-4a88-bb99-84fa0fff5aa6"
        },
        "item": {
          "id": "3ddcb5a2-f54f-4667-8d92-286c62010b1e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1367b1de-7838-4842-b963-5221bdb39d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a2930b-0e87-4153-bebd-e469b39a7687",
        "cursor": {
          "ref": "d50a7049-40e0-4875-87e7-7219669c7955",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "81fe8539-4ef8-42a3-b0d0-74e3e775e617"
        },
        "item": {
          "id": "35a2930b-0e87-4153-bebd-e469b39a7687",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "84db10b7-da42-43b6-b585-23d0fe668610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83b3879-e290-45c0-9dac-3c44c14c2608",
        "cursor": {
          "ref": "2464229c-7969-40e9-9375-aec1c99dba9c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba645c10-0d8a-461b-80ef-733b72ed9534"
        },
        "item": {
          "id": "b83b3879-e290-45c0-9dac-3c44c14c2608",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "65045e21-336d-4a2a-9217-2f268310425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb8ac98-9904-466e-b381-cedfa4805a17",
        "cursor": {
          "ref": "a2a1a434-e61b-400a-8db7-e720a9afd644",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0957c834-1847-4bd6-a0cd-8362e3716ce3"
        },
        "item": {
          "id": "9cb8ac98-9904-466e-b381-cedfa4805a17",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dff5c8f9-0653-445d-8aa8-35ccd6b0ebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d984c5-a7dc-471a-8b5e-c0d0601edc49",
        "cursor": {
          "ref": "effaa782-d7b4-43ff-a476-09f4535c8606",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2bab9587-84cf-4354-bb95-1f1ef9c954db"
        },
        "item": {
          "id": "08d984c5-a7dc-471a-8b5e-c0d0601edc49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2015ae69-31f8-4f84-90f9-5d1be98edbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af4de7d-5de4-4c35-8a82-f7edb648af03",
        "cursor": {
          "ref": "e57b1f9d-e314-4e56-81fd-505d1781e5d6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0b62b4dc-df62-4103-898f-8baa34138175"
        },
        "item": {
          "id": "5af4de7d-5de4-4c35-8a82-f7edb648af03",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "984dadd0-e55d-4e77-b488-6a322b5a446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2754f204-03e5-4312-8e9f-c6996b35608d",
        "cursor": {
          "ref": "7f01ad92-c0ed-46b8-a029-4271b9b453b9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "89aa3f2d-db8c-489d-b400-2a2f6cc0ad63"
        },
        "item": {
          "id": "2754f204-03e5-4312-8e9f-c6996b35608d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c389ef16-72d3-4f51-a20d-77c9ee73206f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa5d4c4-886b-4279-bdf4-347f5b45f068",
        "cursor": {
          "ref": "2484320a-f52f-4cd9-8b69-dfcdf0b633b9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c434e65-7570-4f2d-b3a0-36d1f8f08e16"
        },
        "item": {
          "id": "7aa5d4c4-886b-4279-bdf4-347f5b45f068",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b8db050-9218-49be-a03d-c954844ae512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a0382c-f028-4967-8247-76d1ef1cfd34",
        "cursor": {
          "ref": "8f1f048b-313b-4aa5-8470-c0cfeb606fec",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "27d170e5-8b6b-4a40-b71b-f107bc5cc786"
        },
        "item": {
          "id": "58a0382c-f028-4967-8247-76d1ef1cfd34",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02f53e64-4bcd-4b72-9534-022fc883438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849fbc4-42c0-4303-a61a-d8d8b862e111",
        "cursor": {
          "ref": "2510c53d-374d-4a96-b580-2936d44c20e0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0c49a8ec-4f0e-486f-8efd-6d7810a0e4ae"
        },
        "item": {
          "id": "3849fbc4-42c0-4303-a61a-d8d8b862e111",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0826040f-2212-4909-9af2-06351083c6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540a6047-7865-4802-bffd-f88f395685dd",
        "cursor": {
          "ref": "02085ec7-47a5-4bff-ba65-efb29af671c4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f45f2a29-c8c4-4e00-a302-c3d4a6096c89"
        },
        "item": {
          "id": "540a6047-7865-4802-bffd-f88f395685dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "66d52417-822e-40e0-8191-af2c3d54ed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12253567-0117-47df-a6e0-cff7325be5cd",
        "cursor": {
          "ref": "9f037442-94b4-42a8-af97-8519fcfdf2e6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7517f758-e521-4912-9162-6e934ba2a81b"
        },
        "item": {
          "id": "12253567-0117-47df-a6e0-cff7325be5cd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "59d2055e-5039-415f-a0e4-a721ce9107f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ecdb7-1ec4-4507-8a72-60ef85b70af6",
        "cursor": {
          "ref": "93285a4d-ee78-4d3b-b389-2bdb1a9799c0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b426aa39-b10c-45af-bdf9-f885656631b4"
        },
        "item": {
          "id": "387ecdb7-1ec4-4507-8a72-60ef85b70af6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "15d80b8b-33e1-49cd-a651-03cb57986993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00058d24-8813-476e-a834-16d1f8755bbb",
        "cursor": {
          "ref": "4130bdd7-91f0-4e74-a542-7b1570ae73b5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1ace06dd-2fc7-4697-bcb0-bbc09728d1e9"
        },
        "item": {
          "id": "00058d24-8813-476e-a834-16d1f8755bbb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e7d6234d-f372-4056-8082-450f345e2b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d00c18-6f9d-4930-ad2b-51bd8c3543e3",
        "cursor": {
          "ref": "0b09565a-66b7-4c2d-bc51-071513890d58",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "022537ef-9835-4f1b-98da-c67190ca375c"
        },
        "item": {
          "id": "48d00c18-6f9d-4930-ad2b-51bd8c3543e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e68ca89b-bf17-469c-90de-6ac66157b8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180965d1-c053-4809-a3af-90a44567590b",
        "cursor": {
          "ref": "bb4daa52-5b43-4349-9646-0d04f2749485",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e6e336ab-46ed-4fea-88f7-fbe01104d058"
        },
        "item": {
          "id": "180965d1-c053-4809-a3af-90a44567590b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33b94695-2304-435a-b80e-70530cc0a9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b516b3-fae6-4bb6-9f29-2ff3de95992f",
        "cursor": {
          "ref": "eef56241-881c-4fc2-9437-42f3bfbb6524",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7ffeb1c8-514a-423d-8218-1eab4222f689"
        },
        "item": {
          "id": "e3b516b3-fae6-4bb6-9f29-2ff3de95992f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ebdd0b7-bf89-42a2-b194-ec5a6e0a4e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22adf057-a601-46a1-b513-476e3cfaf00e",
        "cursor": {
          "ref": "3142cd3b-a277-435f-95e9-f23e38870465",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "252d8ff4-b293-49da-87dc-696e88741892"
        },
        "item": {
          "id": "22adf057-a601-46a1-b513-476e3cfaf00e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e232413c-396c-4b80-b383-5c250f88241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca84cd3-cb89-4940-af2d-a402a0a84ad1",
        "cursor": {
          "ref": "ca9ecfae-f519-4350-81d5-053698dfaf07",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "343fc9ec-7084-43a9-b018-9ff4c8986c95"
        },
        "item": {
          "id": "bca84cd3-cb89-4940-af2d-a402a0a84ad1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d3b74517-2b5a-4bec-ab79-8dff922e9e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a82c0-0156-46fe-9a1f-9722be57a573",
        "cursor": {
          "ref": "8688e8ff-2c9d-44b6-a6b3-fa3a2735cef3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2860fcf-2971-4e14-b1c2-88323d242521"
        },
        "item": {
          "id": "4d0a82c0-0156-46fe-9a1f-9722be57a573",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "124b3010-ce3d-436a-82c5-e11fb264df38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc9d2c5-65f1-459d-8161-109697b1e2ce",
        "cursor": {
          "ref": "850d889a-c4c0-420d-a1cf-26edcb222380",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a1712feb-3372-48ea-8857-69ae97473d92"
        },
        "item": {
          "id": "3cc9d2c5-65f1-459d-8161-109697b1e2ce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "def57ba7-2f84-4f24-ba28-1fbaea36bd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d442f5f-af9e-47c2-84d5-4434978a06de",
        "cursor": {
          "ref": "26a6cbe8-f296-4d6e-9983-0709890d9e8e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ccf26c09-8f96-4e63-b309-7d5ccb6fe867"
        },
        "item": {
          "id": "2d442f5f-af9e-47c2-84d5-4434978a06de",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e95ca168-c712-4f6c-a62d-fc2d9acbd98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838bb33-2638-454a-8dd7-3b9c8457dc26",
        "cursor": {
          "ref": "333a2ba1-8ada-41b5-ab9c-2b602de418d7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ab66354b-e3dc-41f5-8705-bf43e7315824"
        },
        "item": {
          "id": "5838bb33-2638-454a-8dd7-3b9c8457dc26",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d47e5528-6bdd-4bb7-92ef-7c8771e17b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefcea45-3076-406f-aafd-db407881656b",
        "cursor": {
          "ref": "8323ac82-ccfe-4ac5-9c4c-268403b8a6d8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5ebbeac4-41b5-4af1-9913-238317b28f7f"
        },
        "item": {
          "id": "eefcea45-3076-406f-aafd-db407881656b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b04d3670-c116-4982-8355-58c85c8ceb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca92099d-0ce5-4318-bc33-31d43b3f5c2e",
        "cursor": {
          "ref": "6aaa020f-30ac-48d9-8539-e8c2789f331e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d8898795-fa94-4647-a8b7-cc82b4c2ae4a"
        },
        "item": {
          "id": "ca92099d-0ce5-4318-bc33-31d43b3f5c2e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bbeea8f9-e17e-413c-b1dc-15ac294d85ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b7f0f6-909e-4cfc-a3f5-1928008a15d2",
        "cursor": {
          "ref": "28fa05cd-225f-47b0-88c2-c5064c1fc098",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4f8ae71-d365-4c05-aee1-d16557822eee"
        },
        "item": {
          "id": "85b7f0f6-909e-4cfc-a3f5-1928008a15d2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6fe71dd4-b185-449f-8e14-eb633fee6de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7907e5f-7b92-48fa-89af-4681d7039763",
        "cursor": {
          "ref": "83c783e1-32e8-4d66-b7be-d1505af87975",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d3fa352a-7250-4c29-ab19-84204c6afd82"
        },
        "item": {
          "id": "c7907e5f-7b92-48fa-89af-4681d7039763",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1f64081a-52b1-4f73-97a8-3d74f9992a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9a843a-863a-496c-8ad7-bf7b19fb02a1",
        "cursor": {
          "ref": "d5f47534-e9e1-4e7f-9cba-953f8db38016",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7dffd2c2-bc5d-4b88-8fcb-28d1044bce7f"
        },
        "item": {
          "id": "8c9a843a-863a-496c-8ad7-bf7b19fb02a1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d0e27111-40c4-4181-b791-f23d2b818cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2184177d-bd24-4afc-b148-a0d71576aaf8",
        "cursor": {
          "ref": "6f8067b4-ca3a-4272-80b4-af72166e3a7c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "15010815-56b4-4b9b-b1e3-fecac9f88a37"
        },
        "item": {
          "id": "2184177d-bd24-4afc-b148-a0d71576aaf8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cae97889-aec4-4f09-b1bb-ae993a163183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d847223a-8fc3-4aaf-8ac1-5aa3ac315f7e",
        "cursor": {
          "ref": "1e4dd2f9-f549-4dac-9bda-3afa88e1f8c1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "afc32228-241f-405d-b5ef-4eb93241d441"
        },
        "item": {
          "id": "d847223a-8fc3-4aaf-8ac1-5aa3ac315f7e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6b862fcc-08fd-4863-96e6-cfd9f71417ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c20ec4-5233-4179-b382-b52cae3905ba",
        "cursor": {
          "ref": "47a22d6a-bbd4-4ad5-8637-ead733f8f63a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dbb529a7-09d6-4213-8408-68db67526cd5"
        },
        "item": {
          "id": "d2c20ec4-5233-4179-b382-b52cae3905ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "53ee0661-9a26-4f8e-9a51-b39e570790c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d34ce1-357c-4b50-bdbc-b836231ac631",
        "cursor": {
          "ref": "0d067b92-ff25-4fd9-82a5-3fdb82e9d81c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dc881a8e-9db3-4e2a-8264-85d8363ea53b"
        },
        "item": {
          "id": "09d34ce1-357c-4b50-bdbc-b836231ac631",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5fdac1da-bd91-476b-b25b-a4ec9461d7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c354cc21-78ae-4d94-b253-a445e989917d",
        "cursor": {
          "ref": "0614cda4-5c0c-4485-9c3b-6b7e791c990d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9508ac4a-7ed8-4f89-b4a8-31817a491457"
        },
        "item": {
          "id": "c354cc21-78ae-4d94-b253-a445e989917d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dbed8eb1-5536-49aa-bee1-6993fa6ad8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6605a6a5-8152-4248-90a4-4f9167905cd0",
        "cursor": {
          "ref": "c3d5f06e-80d7-4fdd-bc18-4ae329f5e4a7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "815c359c-f98e-439d-b847-1f8cc2caa1e0"
        },
        "item": {
          "id": "6605a6a5-8152-4248-90a4-4f9167905cd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc123b7e-db91-474e-b758-c724d7935e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc5dd8-8490-466a-9ea3-1d452fee0eb4",
        "cursor": {
          "ref": "0c6afc84-4417-481f-b013-cf706a90ed66",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1f6b871b-3fe4-4a22-8acd-fa6d74826971"
        },
        "item": {
          "id": "16fc5dd8-8490-466a-9ea3-1d452fee0eb4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "573b897b-73ed-49d4-81b7-068733e6958c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41aa4de-8178-4027-8c10-e4e4dde1baf7",
        "cursor": {
          "ref": "ae5c4ef9-d23e-4021-afe0-41b725adea63",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "749499cb-5160-4889-b9b5-82e00d4c56a4"
        },
        "item": {
          "id": "c41aa4de-8178-4027-8c10-e4e4dde1baf7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3de198f7-5f28-432e-b760-7521d752af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f140b4-d66b-480f-87a4-21d1c5c1b77d",
        "cursor": {
          "ref": "6ceb77b4-525d-4c7e-b38c-e130b7f76ac4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6a1ca3ab-6398-46b3-ac09-e2efea81a360"
        },
        "item": {
          "id": "08f140b4-d66b-480f-87a4-21d1c5c1b77d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e6142b84-930c-4335-9f90-10da48f4730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8030020d-5d7f-4756-9e20-c668dd37b0c7",
        "cursor": {
          "ref": "4c559bf9-b084-4222-8d04-d65b1f3a4c0a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "533a5497-0db7-44b4-a685-5bb1396d811d"
        },
        "item": {
          "id": "8030020d-5d7f-4756-9e20-c668dd37b0c7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d5bb341a-1709-4801-bd53-1f2b360e5156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5da738-6aa0-4144-8174-3f51d6086e8e",
        "cursor": {
          "ref": "ba2f9044-59b8-49ca-8a99-1139c143cca0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d0aa8d63-7e2e-42a7-9681-e4bf3a23ecbd"
        },
        "item": {
          "id": "2b5da738-6aa0-4144-8174-3f51d6086e8e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d9b1b9c-29d8-413a-a0c2-c1f73562622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf357cdb-2a6f-4eec-8762-190512367d37",
        "cursor": {
          "ref": "c6e8721b-a242-40e6-9cea-7061f3902f66",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a9193b36-733b-4cb2-9d2b-7820040348b8"
        },
        "item": {
          "id": "cf357cdb-2a6f-4eec-8762-190512367d37",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3f27ede2-fc6d-4ec4-b315-aa5351d84084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa0d752-782a-426b-8e12-ba4637955cf6",
        "cursor": {
          "ref": "d21bc349-b8e9-4580-9a40-3008ea2b1391",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3197c224-fa25-49be-8164-703210f00222"
        },
        "item": {
          "id": "ffa0d752-782a-426b-8e12-ba4637955cf6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "386dd8f9-c3bb-4bfa-bd89-4e690a98413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bde9442-21a8-40c5-88e3-84483cec614b",
        "cursor": {
          "ref": "7bd5f8f8-656d-4132-b3cb-99eed2e1fe22",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "39f04b98-f8f5-41bc-9c5d-2c636c0faa7b"
        },
        "item": {
          "id": "2bde9442-21a8-40c5-88e3-84483cec614b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0b5677bb-7334-4c5a-baf7-26d9bdb3b1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbacd01-6e4f-4e29-bf2b-e9eba708a571",
        "cursor": {
          "ref": "44074e56-fac9-4b5f-8016-bebad68edad4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e4f58e09-4ee3-4319-9415-f0461398f2a8"
        },
        "item": {
          "id": "9bbacd01-6e4f-4e29-bf2b-e9eba708a571",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8fa38e3e-6df9-406c-8731-160f96c40cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a8173-3c53-42c6-92d4-d954dcec8899",
        "cursor": {
          "ref": "56a4a745-076b-4c7f-9749-47e423da8340",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "35b3135c-b0ce-4e1f-ad6c-cfba8d7b28fb"
        },
        "item": {
          "id": "988a8173-3c53-42c6-92d4-d954dcec8899",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "83f61dc6-9784-469b-a276-e505033ef5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baefb9f8-f19c-40fb-8dce-0e79187a777d",
        "cursor": {
          "ref": "67d5e7cc-0017-4898-8417-940c278c4f9f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "197d472a-e814-49fc-8a52-9dc08bbc199b"
        },
        "item": {
          "id": "baefb9f8-f19c-40fb-8dce-0e79187a777d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "00b4434c-a458-4160-95b6-78ef48574463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a63d34d-8eba-40e3-a83a-f69ce626919f",
        "cursor": {
          "ref": "cccf812d-b552-4f8b-b68f-7f73cd1f86f2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b78e7478-5b32-418e-ae55-73fdf2783439"
        },
        "item": {
          "id": "4a63d34d-8eba-40e3-a83a-f69ce626919f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d2a90d37-8366-46e2-9d1e-0768bd15298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ad675-5bd9-4ce8-bf31-4811f981bbf0",
        "cursor": {
          "ref": "b1d589fe-501d-4702-8b30-39a5d97e79ca",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dfc42fba-eefc-4a54-b5af-acf9a8a9489a"
        },
        "item": {
          "id": "1b8ad675-5bd9-4ce8-bf31-4811f981bbf0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "27b51ef8-a1fa-4842-870b-cfd45cb55e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf960b-7fa0-45ee-986a-a079a9fcf52a",
        "cursor": {
          "ref": "4ba8fa99-6217-47ce-9e28-3e8ac80c436c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cd2901c6-7890-4eab-8648-a6e0c14a2cf2"
        },
        "item": {
          "id": "7bbf960b-7fa0-45ee-986a-a079a9fcf52a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "beaab6e3-76ec-4df9-b19c-555ebd8b4a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c7f8f4-482d-4b92-838e-61de94ac0db6",
        "cursor": {
          "ref": "193179f2-6b04-4b22-8b40-4f5f67d2dd1c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1ab58b7c-b110-411e-b5a2-4798acf60f4a"
        },
        "item": {
          "id": "95c7f8f4-482d-4b92-838e-61de94ac0db6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa56666d-6162-4d76-ba97-0937f34c6100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7209e5-7abf-4c26-861d-4075d0541794",
        "cursor": {
          "ref": "0157c078-b1cc-45be-b8e9-133b1abe063f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "befcfb79-d686-4ab8-9221-b4b45a9146fe"
        },
        "item": {
          "id": "5e7209e5-7abf-4c26-861d-4075d0541794",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "851fd50c-8c50-458e-884c-65a38d81bb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533522bb-2472-456e-8deb-5469e52e97d9",
        "cursor": {
          "ref": "fda3d94f-59e4-4128-bd03-2e06a5b933ad",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1e7b1ec4-c7ba-4084-a4f6-ccf1f4f0f71f"
        },
        "item": {
          "id": "533522bb-2472-456e-8deb-5469e52e97d9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ec84269c-fcd1-485a-9077-1bd7b52430bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8f3bc9-feea-45d5-8591-bdf21545d7a9",
        "cursor": {
          "ref": "411c4fb8-87a1-403e-b787-7d3269872ac3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dfdefd4e-c6d1-47d2-914a-520c508d3336"
        },
        "item": {
          "id": "6a8f3bc9-feea-45d5-8591-bdf21545d7a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "04de32e8-b551-4440-bbfb-b3dcb6d94809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfe76f2-4770-4b14-a7c7-f7a65213fe7b",
        "cursor": {
          "ref": "1b016f79-670a-4c33-9edf-d12ac7ac82ef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a7175e3b-19bf-46cd-88e8-e41cbcb91731"
        },
        "item": {
          "id": "ecfe76f2-4770-4b14-a7c7-f7a65213fe7b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6e1f6b1b-35f1-4b56-8705-4e40b2ce19c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2509fe67-b5b3-468a-9f42-fe3faf3a5421",
        "cursor": {
          "ref": "40de0947-5cea-413b-8dd7-db45492ede1b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3e60db3e-41e4-4aa7-b721-ed4a17a1e19c"
        },
        "item": {
          "id": "2509fe67-b5b3-468a-9f42-fe3faf3a5421",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c17019a1-370f-4e0e-86e6-29d295ec4e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef9e06-d5c3-418f-ab96-4859d40b64f9",
        "cursor": {
          "ref": "6a82594d-1bfa-411b-8afb-8a8212eed805",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cc7e9b2e-cb77-4c5d-a876-c499ad0fe76a"
        },
        "item": {
          "id": "eaef9e06-d5c3-418f-ab96-4859d40b64f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "acfa7201-1352-4512-8efa-1446474c1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85ced84-3cc8-4e10-a014-fa931ff765e1",
        "cursor": {
          "ref": "d4349cd0-bac0-4503-9284-4fb730731876",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f93402ec-b02b-437d-b2ac-7035204dcd6a"
        },
        "item": {
          "id": "e85ced84-3cc8-4e10-a014-fa931ff765e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b77bbd98-2a60-4092-939e-d987d04eee9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8e1cc5-2da5-4666-96e1-72a99f3a5c1a",
        "cursor": {
          "ref": "caf29fd4-0a0a-40be-a790-b993d5108bde",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e938773c-f6cc-4f3d-995b-c189b404a51a"
        },
        "item": {
          "id": "ab8e1cc5-2da5-4666-96e1-72a99f3a5c1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b178c10f-4621-4b24-a58c-8abc55418250",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86857449-4a9b-46f4-a915-cca51de83b9e",
        "cursor": {
          "ref": "b6886a0d-4208-494d-b565-4b06ddfe5c06",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c34bbb20-f1a2-4270-9a2f-04ccdac76f63"
        },
        "item": {
          "id": "86857449-4a9b-46f4-a915-cca51de83b9e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4934ad6e-49f5-4264-8cca-5049d965883c",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2ec2f9-849b-4c6a-a73a-eb8c48fc352c",
        "cursor": {
          "ref": "5927a3ce-51d0-4378-b114-fa8dbc4287fd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cf638986-898e-4097-b3b1-6db0eb923c16"
        },
        "item": {
          "id": "0d2ec2f9-849b-4c6a-a73a-eb8c48fc352c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b5b0178d-4d6c-4e14-9555-ce2f54fbe6b0",
          "status": "OK",
          "code": 200,
          "responseTime": 1436,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2110936-d771-44c7-ad0c-a5e84aa59ac5",
        "cursor": {
          "ref": "66ab04a3-efc0-4f00-b3c8-5c992e5e856b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8b5d249c-5e1e-4459-89c2-70d85a23d248"
        },
        "item": {
          "id": "d2110936-d771-44c7-ad0c-a5e84aa59ac5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d022882-65b0-4d4d-b2b4-a3e6006965cf",
          "status": "OK",
          "code": 200,
          "responseTime": 1455,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afbbb6a-e538-4d3c-8437-4eae06cca5cd",
        "cursor": {
          "ref": "ff88a19f-ee5a-42ce-9e98-edd7afe78e17",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7f0b4cb4-f90e-4295-8e8c-cce8e32e2bdd"
        },
        "item": {
          "id": "1afbbb6a-e538-4d3c-8437-4eae06cca5cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "69579bda-f639-40ba-a731-1c51fed84a56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afbbb6a-e538-4d3c-8437-4eae06cca5cd",
        "cursor": {
          "ref": "ff88a19f-ee5a-42ce-9e98-edd7afe78e17",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7f0b4cb4-f90e-4295-8e8c-cce8e32e2bdd"
        },
        "item": {
          "id": "1afbbb6a-e538-4d3c-8437-4eae06cca5cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "69579bda-f639-40ba-a731-1c51fed84a56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7447a88f-5ec4-41b0-96ab-90ffd1f97adf",
        "cursor": {
          "ref": "e8c93c9f-a9a1-4744-89d4-3587d6ed0e0f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9e740f6d-07a2-4c2b-b3e0-975bcd3275e9"
        },
        "item": {
          "id": "7447a88f-5ec4-41b0-96ab-90ffd1f97adf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98c7afd5-c8b3-4a39-9fb8-bed424564e2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de2cfd-93bc-4308-af2d-caac0a85e24c",
        "cursor": {
          "ref": "847149d7-e12c-4f37-b27c-354951408f31",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9306b3a7-9165-4ab8-b7db-adec4c9203e1"
        },
        "item": {
          "id": "46de2cfd-93bc-4308-af2d-caac0a85e24c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "09f5c478-f0fb-4769-9217-5c1afea98509",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}