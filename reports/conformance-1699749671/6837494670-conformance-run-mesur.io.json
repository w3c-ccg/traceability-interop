{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34c5ac73-eb09-4ab0-a418-41cf3d5b8cfa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e92d6b1-f9ad-471f-86b0-842968c8c84c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d9ab56b-abd9-43c6-83d8-c165ac07f8e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f128a4ea-088f-460a-8ede-a631a0e74928"
                }
              }
            ]
          },
          {
            "id": "170082db-d24c-48af-b41f-5b73f5be07bb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cae8251e-3b86-4344-b0c1-1fd32685f92f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85390a83-bebc-408c-92a4-2843c3b6bc4f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd1b8734-183a-46b1-9b43-69f5caee404f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d53e869-b194-4e8a-86fd-8c8213eb4755",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f0e7311-c46c-4bc3-8b27-99aab2e27e60",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87126f83-e6d9-40cf-94e7-05def41447fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01c282bf-2b66-4742-8835-6d77d7c43527"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44273dce-5095-48d1-b8f3-0715f5eef3c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e99457ab-99c8-4a6b-af49-1a427ccec7e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9a0881d-c10f-41fa-ae14-ee5cc2a21fb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b01e064f-317c-4fb8-8bcf-d06a75848e76"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a9ef07a-f381-4d4f-8b3c-cb2a1981a98f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c11db0a0-b657-4f78-aff9-6f43952f2f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "183b9807-3e73-432e-b8f7-6b5d2585e0f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77d2bb99-e4b3-4469-bea1-ebe0df08c547"
            }
          }
        ]
      },
      {
        "id": "cac4b7f7-73ac-403c-841b-322a88c3ab16",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "768a2362-6c58-47e0-8be8-f3a158f2d10f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "835b541b-d8ff-4871-9cf7-a256de9cd4ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cfd0521-9fd4-4ed5-b8c9-8c75758c701c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b00f79-1487-4bc2-b1f3-891006441ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83f8ef69-2b74-4cb7-a01d-5b041e2aba5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50bc437-777f-4cdc-806f-d9cce6335d11",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e889ab-d982-463c-a18a-932654178d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "226839c1-923c-4e3b-8dea-81114db14271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9740f8d4-4059-4130-869f-06c502857cbb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61e1e6b-56c1-435e-8018-b1f01783299e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1be2a07a-8fcd-4ca5-b194-35174defe2dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac18c85a-9614-44a1-a830-19e0df6d961c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8159d0ca-3463-4bbc-855a-ff46b15381ff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a66f08-7f8a-4930-80fd-b515e1bbd6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c6c22ab-f09f-4932-9eff-e23b823a1fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ebc36-10fc-4f75-bc1a-befe230420ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f72447a-1c9e-440d-a45a-93ff8e07fef3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2fd0a08-e214-4392-b88e-73be8a169b64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33538902-345c-4249-be82-05e698d52ef1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "297a54cd-3916-45c7-90e0-3fdec017e9c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "18bae1a9-415d-4332-b065-5473f34ab02e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc6d664c-6315-4f9d-a846-e9ab287f89e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f3a6b079-ca6c-4dc8-b530-29259a4510dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "098a6c14-9121-4479-b8b7-3293b55bb70f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5346f53-4976-4114-867d-ceefcebecf66"
            }
          }
        ]
      },
      {
        "id": "fff1bb6d-9b50-413e-88f0-14f6200d7384",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99c15526-ad15-46b7-9810-f5c6ec72ab8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "980ec651-cb1c-40b5-b6b3-0430b0976d2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "78dcb35f-3cab-4454-ab52-cd41aa679037",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541243b1-ffd5-4403-b1ee-bd5519f549e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b75030-b03a-43f6-8202-cd02e1debfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c4b38c-11a0-4d98-9e1b-a7ef3b15c922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be99d3d4-6c85-454b-9921-bde011f482a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f09e0f6-181f-4c68-98df-7442318a89d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34af8c2-2b6d-4038-9a18-4024ee1b0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d469c9c-801d-4636-a54d-b9be2608976c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769cc462-1be3-4e57-99ab-38dbf0dc8123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb134e5b-ad5e-48cf-880c-14c8ca686344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c77f9e-a820-4c94-b6d5-3a667f06144f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedd1b38-b40d-47b4-8a33-3102dceadabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618db109-4e5c-4f47-8cc7-e41f071a624c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a65bd46-c96a-4695-97ad-4e251048b269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8dabd5-5b20-45ac-8cfb-92a393d6c627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ac2636-7a28-44ce-91d3-c0ebd2a99c6d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ed257-de39-4bd1-87d4-627a1b894d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c64680-a1ec-4f91-ad57-55691d765ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaabc02-10dd-4db0-a1ca-8d227b5d14da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e7b41d-3a51-4053-a774-2f619912bba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2149674-3ced-429b-833c-1da81cd8e672",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b63d8b-6a19-47d5-b162-b9d47b5c129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b914b8c8-a015-40f9-815c-51b223e057a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e04df3-443d-4b31-90b3-aafab5b6adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e50ba9a2-67fc-4be6-a14c-8a4c71e4fe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cfdb51-038b-4107-945f-0912be14301d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033eb9d2-9e64-48e1-9d78-323b1ff5dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f41d6b-ba7e-4a4d-b58d-8b145153c835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e73cea9-4915-492f-a759-867e6730ce59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d0f1b81-e5c6-4970-892d-05580a647cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cea2d38-6022-44c6-91cb-d729785a4466",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc302ab9-afa8-48cc-b92e-d58ac5e69d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c2e385-4c91-426b-b333-44a6ba3e41d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debeba83-9606-439b-ac6f-c9b2d682ac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1b712a-2ba0-41f4-b057-2e9cee080a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3092fb-6665-4873-9eeb-5fa4c7afbd3e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c973e41-2cd6-4153-8bbf-16226964ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c092913-8222-46f5-9327-0ab3a1a0e0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a22c96e-94a6-4f2e-af00-2967c73ff4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e683e2b-a048-4354-b94b-1ceb03274ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee253fb8-ec1a-472f-b952-93dadc8243aa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48afbd4a-66ee-4536-b1f2-a09aa255bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d3701d-e67d-4346-b1de-e82e4ef27a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6848a2-7f77-4fb9-b250-4ba5581fb7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f62c7644-c25a-4a64-8b2b-3132c7fe774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7623549e-7475-4e98-97ab-bf2a9d0ee753",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8435c5bb-1133-4e69-bb68-f1a550e832f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30de2db4-9056-4195-8946-c6d2eead8ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feffbe57-855a-4c51-a6b7-0c1b6585187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "995b02ff-c976-46f4-ac6e-f904fd95bf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5da0a4-ac74-4f4f-bed2-6714454f47bf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c258d-6c26-419f-895c-1d6a3cca1de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98e96df-45c6-4349-8775-04ed017d8fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd6bb7-808d-4dad-97df-c0f30e77cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00ffe48-6cfa-4b60-bd03-c844b296ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10656a6-ad0e-43f4-b275-6a38bcd46a8d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2588b728-7889-40a4-add2-fe16ed7e8b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ae62d6-cbe8-49dc-81f0-b4f7cce4024c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463abbd7-0490-48ba-9476-8cf73956dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd2e9c11-5d8f-4291-aa4d-ef89a7d9f969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba55b12-ddeb-47d6-bee2-e55ba52c4dfd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19dcc59-0d0b-40fc-86f8-325d65431226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bd0d40-5f5d-4812-81de-d2d6c2af7cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f015a263-c6cb-4421-9fbb-ff86443bdfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2dd9023-1ee6-4dc1-bd1e-2f5c078319e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d667b8-3a02-44d4-b59f-35dcf1a834de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdcf3a5-3b01-4ae5-963a-9267bcf9bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0310cb4-6a70-40f0-aa3c-489c2e660e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1d6494-2545-4797-bde5-b9a32affc6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70aac235-2849-4726-a3ea-b57acaf262de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e601227-93d1-473e-9eee-91f5df1f5820",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e1688-0e74-428d-a14e-9b07d7b0a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23548ec2-061b-4ccf-970f-f633a6671deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b5f072-4a0d-40a7-a50f-e1c90a8fa27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5005c56f-fd3a-4dc8-9ebe-79079ee35aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac12f2c-355c-4929-a328-63c920060c47",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48940c9-4257-4045-b374-9bd944bf4515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c549f3e1-9e47-4f76-8e13-0e19777e9c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424645c4-7384-4085-9438-1de11b485acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4556ca25-2abf-4edf-bbad-d077fa668aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4b2e9f-1f40-4c5b-9a2f-7ae35384089c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c816b9-884f-4935-899e-2c1f39860fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ee686d-8369-4bf7-84a9-ef66251767ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5744eb9-6004-4905-91b4-c607e88fab49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8503ff67-70c6-4116-980c-7330513746b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8ef21f-57ec-4ce2-ba49-8b443dbd3daf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d911a-ae39-4057-84e3-cdb69e9d625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37999e6d-e8b2-4f7d-a9da-23ee3d025893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eab72f-a4ae-4708-8915-74ca60191c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97125121-336f-472a-9218-0e81357f72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb50867-d024-4f97-bb74-208393598df4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2055f4b-8731-457a-9d92-1202a91aaf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc26ca9a-e551-4297-b4fe-d49b91e9ae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a90a26-646d-4404-b709-f23ca25414b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47a2da2-f09c-4ed9-bae6-abae03905298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2177b9-f34b-4057-ad9b-3065f7a256a8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ebe25-8395-4d24-be29-6a37686ee83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3837f1-cb42-469b-a79a-4136f5b08e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11094d13-43ad-4900-ad20-5d801655c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d05a2c1-e02f-466b-8772-696d010ad119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1312f576-cd08-4252-b6af-e5f78016633e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c8084c-493e-42e7-b758-7c065b2767ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0db2664-fd23-4d5a-9152-cbdb6dfb033a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f7b29d-1a34-4c29-92c0-baae8112ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "587feaaf-12ad-4fcc-8284-e410f5eed801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89181a6a-2016-497a-b361-fa439dd936f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30915517-464e-4ad5-b271-4ca00d046d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3953aed-6fc4-4677-a546-a5ffbd7a8501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201d3e51-7721-4a5f-9d92-12e98f6ed0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0214bad4-f7a6-4692-8b20-a0f8ee5ef5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f989a4-c1be-4373-af3b-8f1daea7010f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bff1d8-59d6-4413-9b43-5804737a0c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab07ae2b-2061-42c3-a434-e78f204ab9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59401fd-a09a-4e5e-8363-e5b5b7baa66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3504d220-6624-4061-9147-58b652047d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a61b87-c468-4f22-ae9a-8c5ee68c7a7c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4e961b-d6dd-4769-bc78-a42be24ffb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f409c4a-28fc-4cac-b0b1-80a9c5541120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c229a-69fe-49a1-af77-80b3b0049f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1c9094-5961-4d95-8b6c-a539e20bdf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f2ad7-e9b8-445e-ab29-05b28ed4e8d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55582a47-4cd6-4519-a6ac-002f01fdb951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8353e9-dfaa-4155-93f8-0fb3228a70ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf3396d-94de-44d9-9a1b-b3283d55f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "690facd8-f575-4328-8b45-414c2b182b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232a37c7-38c5-42aa-a004-d546f4024f80",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b911f6-dbec-4f59-b2e1-9f5c4ee56cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff77add-f181-4829-83fc-fcd3db9dc053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a097a-3195-42e1-8a96-230df09810c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05547b36-3b3e-4c08-8e74-dcee45368660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29741e2-e97a-484e-90ef-1105e84a3798",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e34c85-86b2-48ed-993c-ae9ff9870626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc5055d-1104-4bf8-b644-2f599902d732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64356da-908c-4ca0-9048-64acd839d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5fbcef-22f2-472d-b90c-83d0ef9b517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d410bc6-a4a7-4c62-8235-b88f788a0d7f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b63ab1-af3d-497d-a713-8436ce882c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5674553-b398-4be8-b03d-a05bcb864441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c3ae0f-06eb-49c5-b66f-a41086cf5d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67439c7-a228-492b-b23d-2fe449287766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9a991-817d-4d55-80cd-8336978f96de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d162a2db-5976-4a01-8ba2-04e20297e9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76850af-9a0c-4c0d-80c7-720f5bd6c794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd091dd5-e73c-42f8-ab4c-4ca7953a4b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "338a53ed-5bdd-4802-9b49-8d001a3ba0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1718aa26-ab76-485f-9e65-2186e87b2ba4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a9630d-22be-47f7-ae77-8a3980265fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e330d71d-ccdf-44fd-8c3e-b90df87b4cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99e3ce8-db6e-46ce-ac22-1b6e9291b431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f379089-9f7d-4f32-8adb-b66c8750f555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ea9284-294f-4b1d-918e-03ba27e1bb37",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cedb12-5bcf-46a7-87a6-5cffab5d279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ae084d-20be-4b5e-9246-7037884966f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc04fd0b-9d05-42d6-96c8-959460f29376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42eb834b-29ab-45bd-884c-c49f1172614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237d5897-4d43-4397-b057-2edce6e4a8dc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee343b7a-c394-4afb-bf37-0d52cabd897f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f9d644-3a95-483f-a5e6-e4bf1062c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cce0f1-f0cf-4932-8f40-f9c9558a52e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac1e1ca-3048-4849-89ef-2ca0f35405f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a73845-7fec-4758-948f-792ff92a9dfc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faa6680-0e81-490b-8064-5af0d6edf3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18f2b62-457c-41f7-bf78-4880fa0be6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118cfc5e-68ea-4609-bd77-b9bf6e3b8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b5024a-18fd-4e67-8a1c-eef9df6d3659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bdef97-17d2-4af7-9be8-8fbde58153f4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba54a95-6d9b-4e6c-b704-11e0dda86dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4076c1a2-6e71-4221-8265-a8b0592e36c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8844a03b-e0d6-4b9d-97f9-c3f179e86d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ebab0c-aa41-4b72-9bfc-99a2f01d7fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0d78f1-6308-4a0e-980a-a199b05e7f64",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba8d466-c8ce-49ef-b349-8327326a20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a22a7-6322-44c3-a07f-4582b5f3d795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f6153e-5efa-40d7-87b5-3fb69e466355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e270008d-e9c8-4423-ab27-2b5c72260884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14e34ad-9a10-4e9c-a180-d2957b371a35",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cd0781-5bb4-4bb6-bc94-cc903273592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d3c87a-a590-4552-936a-bbbb31d342b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57c6e8-8a03-4423-be96-4066753b8e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19b7ff07-4f0e-4929-b3ff-1ff1dd0313dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116438e4-b32a-4238-a605-a26f41bbb9ac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef699b-6131-44c0-97fb-b19a5f9fdb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75878ff0-575a-4852-be3e-6572def5c3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd042b0a-32d9-4aa7-a4f3-b0fbbda53af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e5174c-959b-442b-8928-529f6c1215d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42046659-4779-4a44-a1e8-cde7d545d36b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01704ab-f7f2-4543-88e4-880ac7480513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea313e9-e578-485f-b50a-cd020c3ef337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2158b-3029-4e28-bbff-f22e69496adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e389069-7cb9-46d8-9238-dc773aa9d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd96b0e1-6cd7-4c22-b28f-c82662420f78",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614b29f4-386a-462d-8c9b-33e3e4154e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895e5bf4-4904-4786-af66-12d504f08d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d21e56f-b21d-4a84-8f10-0cc1081f2314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5a42b1-33b4-4b44-8e68-de599e836bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320c4698-d6fd-4c49-99cc-be8db8ced025",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baf8e90-1cf9-424d-8b58-d2465276412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e947638f-6a63-400c-a782-1e1814ce8d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716c7a81-46fb-4055-8833-ee9dd494e4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2a3360-553a-40a6-b54b-83c916760cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3505b67b-336e-4cef-a878-a9a5b0d20ed0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcceaf86-fd72-4ff6-a339-c20bd58a452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476a4499-0d49-498f-b39d-33cf7d0cfb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af92f468-3d19-4cec-802b-eff1684a8c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8b99a0-b110-441c-a5c0-3ad543692ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b73ca-65c1-4662-a39e-0b920f07b191",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f4b659-8b94-40c0-96a9-d03b31d5acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6adce7-e9ce-4780-b315-d0e829b197b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eee951-c67a-4468-8b10-2b18f8943ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa04c6e5-afaf-4a86-a65a-3171a422ffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120a10de-d368-4587-aade-a501783c9a91",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb81a37-d9a1-4745-acf5-420e63830130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c088652-e95a-43ee-8a46-75a7ea98b7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa07d12-14ec-4c70-b092-8bc27090c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a07fbb-7a74-477c-ab46-a09e99a139e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15bf3fc-ed77-452a-be57-104b2b19cfd5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938067a-8370-4b98-b947-dab5f43317be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7870835-3fe7-4502-8829-23adc283bbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd6eb09-700b-4348-b693-9ad44f837ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2761b562-95d0-428c-9550-e9ee0139f753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d9fff-b192-4f3d-94e4-3e2621681a07",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce3603f-e3dd-4b47-8b83-c61a5c05de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29108ba5-82f6-44f1-92a7-ff28542a512a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c08c91-d8a0-49ae-a9ae-af2cb43fca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a27a85-4972-4863-a096-b76eebc10b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de7a23a-afd4-4d4f-9767-08eddcd8bcab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993f64dd-d2f0-4464-a5d5-3124dbb318ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2487231-a1f6-4e5a-8595-7b965fc65f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886b5891-ae14-4f14-b7ec-3ec049d018a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee20f7f-973a-4379-b3c2-d09cec9f2a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf4995a-8cf4-4df7-a40e-141079c16fbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeae3e1-8c5e-4b5d-9755-d6e2844ae5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567d9fdf-5137-49d1-9ef1-d959219ad7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77a984a-672d-4fed-a443-4b8f9cb1f956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94bd4d1e-fb77-484e-a8f5-466bce968111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e34df9-c5a2-4256-9623-7cbdbecfd3d4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52058cd-ca13-44bd-8b88-6fcb606adf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da33987-466a-4427-bb45-229208bb4428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ca9100-b16e-4bd6-a3a8-8f6f48ac8d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d68bbb-78e7-4dfa-9d8c-76121d81d81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4f8f48-2b87-4e9a-bcee-aa6ebabffb9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f36a605-2ff2-4fcb-a6b0-d099eeaca31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5994e49d-90f3-441f-88c0-3b1b0beb3cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d2c70-dcd2-4b5d-a69c-7c47d003d5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f43a6683-9370-418a-84f9-f2cf58fa2f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07442eb0-713f-4607-906f-d8dea0f5d408",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e082b3-66f9-440b-9c2e-c1815b1d84a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbc9314-222b-4deb-8da0-acc627d67afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7def250-9a5c-4408-a08c-db5b1cad8f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a379cec-110c-4a41-9a21-0aefe42d7db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd154275-5e7d-4d31-887d-00c0eca9d4ba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac2b9d-d1be-48b1-bec6-b8e6b4f51640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d521725f-5a0a-4256-829a-813caa155c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb563b3-a030-4762-ad0a-d849b2f16d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae23c9c-9be7-4fb9-9ed9-a57866664f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8056aa-d9f4-416e-a040-0f0c78ad243a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f1da5-af25-42e5-a911-73a3a03cd75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0793516-57da-4a69-bcc4-8a4c48784b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd169e5-ab98-40f0-9241-7ebaf7284de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3051fe6-69fc-4c5d-8210-a763d7a9884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c1b569-788d-485d-b2ed-3b8285a1cc8d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a78194-c6be-4639-a6bc-7db5bb918742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7728430-5eb2-4447-8cf1-e2bf2b408a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6b20c2-897d-4b9b-b5ab-13adf029a612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0d4e2a-d9ea-4894-9a81-4d1152f0f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d42b9c9-5764-4035-810a-1e0fee6a28e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dc2534-9e48-4898-a7b5-83a224e5b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebbd545-296c-4601-97c2-5fa3815e0525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7835e01f-bfbb-4bcb-9c2b-abbe2cf2b49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f7b675-796c-482d-9164-b1e6f52943f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d5e868-e75a-4cc8-8686-103a643370cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194de061-f0bf-4e16-8175-58e1dc0500db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0833de4-a2f1-446f-8a3b-da7a5bdea668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbbae47-c6c9-4ac0-acc7-f906d616acb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1366e4-1109-4c7a-9c35-eb58956240be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c18355d-166c-4a78-8b03-511cff525594",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba04527-05e4-476f-a7c6-8d7b4e229000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1805ba-fed5-4956-8b95-c3c54ecb1d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47d8e2-9e47-4359-bf37-3d922251eb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd20f5e-fa71-4ef1-a0c4-4d61b34637a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d597d065-6907-4b15-8c24-cd69811699a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15171193-ccaa-4d35-b8f0-b4137e910b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36037cdb-b453-486e-8c81-a037b89cf1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d08e1d1-31ed-4378-863b-b7dd137fbf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcebcc8-4460-4953-827c-1ce12a52125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f9368b-dac6-4e07-b149-0703a7d267a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d955f70-d5b0-4496-aa9d-c4a6dfe1114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a34ac9-b2d4-41d1-a280-cf933539a199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d089e86-de38-4888-a897-c2108fbf91f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b39919-07c4-4c29-b888-136d5cde4b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad2e169-d2e3-448f-9605-69fc838b394b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4b8d35-b908-46aa-91b6-375f077f1a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d8dc25-9115-4a5b-9bac-65ed612ee9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1b4e5-29c3-40d0-8efa-887e2aeeafb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f4d20-946f-47b9-adde-8c8e58899a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2abe7e7-8e98-45f6-807d-a4d86edea687",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d742a6ea-3ddf-42c7-a4c0-02ed0429d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8098f8-33e4-4e00-9f71-a65e14b60e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1d660d-e3ee-4333-a7a6-1a263e765304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0d65cf-e5a2-4427-bb4f-71eaec8af138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b387c0-155c-4671-b579-7cf6396201d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f9a9ef-a15c-4837-aa7e-ca7fcf9cc66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5233f976-6e1c-47f7-a6ac-65f52aa38471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd57cf-1103-41ad-ac73-a0a5ccb9356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b617753-bf1c-41ad-b09b-8ca1da5a132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f39f26-3f32-4db1-b391-0d88907a3c17",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b1442c-c12e-4f62-b1de-c608014d1fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ef6836-b866-440b-b9ba-e02b2334fe69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514a762-fcb9-4e2f-9dae-8b89c91071f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc1f1dc-f557-4e9f-87ab-a00717fcc263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d2f04f-93ca-4a21-951c-e4b19df8b34d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e088b9-cca6-4401-95a9-664cd00a9766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e377f-75f3-4295-8dd3-92014797a8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee59e5de-e825-4c75-9429-7abde4d7f312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4778f99f-e004-4a64-87c4-19608d7b705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6940a82-3639-4cba-94fb-8a28241296d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ed654c-796b-46d1-a430-8bce350ad0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ea2d35-f343-42c3-a2db-d69f4814ceb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3721cd-4925-4ebe-97ae-dccae72c22bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d868988-0be6-4103-8202-75ef4fbe37ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac19945-ff40-4065-b064-a815c268a673",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c78767e-fe6d-4ed8-977e-b0c2090b6fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd535ff4-fea0-4cdb-8f4b-6592b0ebf8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b8a948-304c-4391-8efa-e5f95f67e41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8deb2537-46c7-43e3-afb0-f477ccc80c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cf7d28-5f99-483c-ad84-db49f5c2a161",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e287ee-2e66-467e-af98-25d87b2c6842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87afc96-28dc-475f-81e0-4bb34b5dbacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ec3dcb-e3b8-4060-8aa1-b042fc356a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb2ca3b-160b-4f0c-a460-b0e81804bf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810f0dc2-e561-4338-9f21-80372c310b93",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70016b0f-9f4b-4609-b2df-f77a63a50fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adf236f-8b13-437c-a16f-a71a93d0729f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be03b354-911d-433f-945c-ce795360d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6095d1d-217e-4092-8729-1013d9432f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e1e925-7cf6-4464-b27e-3656fe5e7a44",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74375802-dbc9-4915-b749-cd2f40b8a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6675541d-3599-473a-be03-5fc728ee705d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71b50d9-1c80-4b76-bbbd-16e3e3feb5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afe9648-0367-47ae-92b2-5240e7b40710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99a97f5-222f-41cf-b74c-d9a49008f62c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5993dd8b-e655-4570-98e4-a0447cc4896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e88a96-5e34-4b7f-ab25-a9f6829dc86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc9712-571c-4612-a5d4-87ca02c1422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0002bb-cbc3-4b70-9d70-966c32ba176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20499885-ead7-4d84-bdbd-04e72d236f2f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b458c8-0bd8-437a-8be7-89ec63bbb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d126c284-ad23-407f-a335-ed68100496ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb6892c-e1b6-45c6-a3e9-1677294b31f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dde95d3-0b31-434e-addf-8206862a1090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dabfe29-82a5-4b81-83d5-0fd5dd5f2b2d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4b66df-a207-4a7d-b230-984a0e31434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79ef09f-faab-4f53-994a-8f2937c7b632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c9d446-4cbd-41e7-99a0-f31cbbb50a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aedfee3c-e734-4ac1-b254-922d106c1919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258002f-e933-4545-b9b1-517e9d035b6c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a408c8-5e65-4ebf-9f26-7d20bec48c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb04db4-109c-43d7-83f1-3f6eeb7ea5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3c36cb-4e3c-40c4-bd2d-7bd7b0406a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dad54a-7bf2-4064-aec4-e8b2445cdc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd4965-d88c-46d9-a966-aa4be1742650",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4ffd3d-a606-49a3-b100-ff45d9a46179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9edc4ea-cc35-4b59-b2d9-00b8c17a02c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da686e08-1c2d-4e41-852f-3dc029872b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e811da33-dc0f-451a-8e97-07cdeaa0a795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0e7dd-7010-4510-953f-7751d7f0dbcf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd68ef8-a799-42c6-918f-70bd7cf15341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1446bd9b-f196-4313-81fb-65eeb43c44dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe1f9f2-2353-4cd7-a5f5-a1e3f4876a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d44b1e4-1d5f-448e-a5b4-d03d1954d719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23585a8-cd2b-4b45-ab35-324db349995d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c25d0f-e614-4c91-834d-4146592849e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782a03a2-b582-425b-bb1a-86b482dbe408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3de7a5f-e509-4ead-9175-7cb8c521e37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08495e24-ca96-470a-a9c1-ed1f0503bef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d8d37c-4893-4381-b27c-24372851a1a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48f80b8-117e-4564-a101-8ea731be14b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7d6bcf-fb61-4667-bf51-a163284d5793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb30a96-d87f-46e3-bb65-a48be93e193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1472a22-4ca8-49d3-b3a8-2f7ce22e87e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec44b26-f326-42a0-a42b-09aa93fdb0b8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fb7447-fd75-411f-a9e6-aa7bc9263e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be254b4f-0861-40be-8746-d44139b51ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0487a3-36f4-44f0-acfe-2133a3f6558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53ef7e9-aff7-473a-8f7e-67e45824862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a07fcf-fdf0-4452-8257-fbfa08d1f7a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63329924-3a6c-4a2e-af00-5c54ffd5b119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09087de9-ae5d-4694-b161-ccf537701845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0bc7f3-3b64-479e-9963-73591f419376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9cd8d6-747d-4931-b79b-ec0459bcbde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0fc16-8300-429b-afcb-290ce86fe8b4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257516bd-d579-42bd-8fe7-cb83edbfd6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02205f8-6206-40a2-9c7b-9bea31487cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be89e1ba-a2ef-47b3-93b5-e8247d8bd177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e024c027-7495-4042-af4f-20f51609b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9104fb0c-4696-4273-ac8d-10b8b2e7330a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55657a0-d0ed-4a4f-b547-6cdb1bc93fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce1bcc6-38c1-4854-84b5-a85914f43e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845fd637-7b1f-4d8a-a146-d3c07ad14bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d65a6-f478-4335-91d7-feadd3f9d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0823be-0b90-44dc-b82e-9171b8695207",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34472023-a934-42a5-81fb-ad490c9b0982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a199cf08-62ed-4d5e-a9ae-456f9d7c1f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a34cd-ab72-439e-85a9-4fbdfa1882f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9891c12c-68e8-460e-95fa-732c7c62eb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3f475-cc7d-468a-bf8a-abb70d8a4767",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c4eb7-7bab-4c10-864e-962e3ca7fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d73a73-94b9-4b7d-a37c-0fb250bbdcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b3c919-2915-4102-9ee7-b418eb3839ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2eb1c0-994a-48ce-82d5-bae2be656cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac74a8eb-40c7-47d3-ba31-457d98f91b84",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35113376-5cbc-4e18-bbb9-998ef3e575d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3492dcda-7a7f-4c08-b8a6-f71b41a9889f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ded4c00-42d7-43eb-bab3-80797838f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9b3038-0497-4952-99da-f818ec1a610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43f7300-8910-4514-9c90-ecde268465c5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a916887-8058-4a98-b332-5fd806d77166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cd3f88-4bb9-4d5a-9658-29ad7bb6acd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f90394-b682-422b-9597-c53c7ee7c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d851168e-ae72-44e7-9b8a-9e8f2272be4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17969c39-0647-4907-b9a7-65b8ff79b03a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353eeeb-7f79-47bc-a343-296786c97532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d8bf27-e22c-4045-b19e-b7efcb756b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3334e9aa-a821-4e05-994a-b4cb6719ebb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4a61ba-087b-4d14-9e49-5c7066f21bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a635c64-55cb-4321-bf50-c7079b5e159e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d99ef7-c7dd-4272-9a62-07efceed1ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465689d0-1bac-4143-9084-f65bad75356f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8470475-1f09-40bf-aaf9-bf695ec658bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39aa2a7a-8e5f-485e-adb0-60fef47c86ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402c2e52-2309-4d89-b040-7fba73386d6d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3961b0bb-2aed-4790-9472-3f3957f0fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64eb3528-5484-45be-957b-1701b8306703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917d5666-7905-4e74-9281-07d9a91e97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7c0f00-6b0c-4cc8-8dfd-ef71dc1582af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f61f898-8c41-43c6-9e60-f4a7a1b6e06f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a1f848-add4-449b-82e2-feedabba75fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f28496-eba5-45c4-9006-88e6c16014aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fce529-955f-45f2-84ab-d2d04decb7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4745123e-dc71-4e8f-85bc-fdee74fb3aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bacce97-2d97-48da-99be-44f374f8b9ee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85722aa1-cb86-43dc-879c-9c810050fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1f471d-a942-4ed7-8c63-0c82585f48a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087e6c4-f078-4bd5-a8bf-6e02fe4aa69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1a83e8-1d43-451d-9329-0e74bd532891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011cc342-d645-4ae5-b25c-0d57e3b33bec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec65172b-f2bc-4e0b-8432-285f9e600f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af7e2a1-9085-400e-91f2-a58759afdc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578bd027-0f5b-40da-beb2-45f57e4d2c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c84bd0ca-ea25-4ec6-b9a5-09ea3a684ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0a3b40-22b7-4eb5-bfca-fdd002d2041e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3038a815-a5be-405b-8f02-1eaf001e710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc8f515-4e0f-488c-85d4-f84a3e705714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03634c0b-adf4-47ca-b918-55c936ef08ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9fa5a4-3a3b-42bb-8aba-7dd56cc294b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7613400-a2a0-4182-8953-9036da37d98c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4fd077-2728-4c21-8430-21f1ef4b4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6e9f6c61-7a1f-4753-a038-34562c0abd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db1cff8-64a5-4774-8574-7b9bf8e05637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "074c7097-a262-4704-b328-2275f2ca085c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b54b778c-7c3c-4fba-bbc5-5b25c77a7feb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56491a8f-3be9-4175-bcc0-9ecc75965f47",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839cc303-6e12-4e16-8ed8-5ae1824fd0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bd98c4e-be45-4458-920d-d7f949b611f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea54d25-a856-477f-89b9-ce0d834ed0c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdc99d17-79ac-4883-b141-68a53554ac7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b923212e-ee7f-4105-a270-e6f006d04e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "991da431-5d7f-495a-9a9f-7ac7539e607b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf16f499-7bde-426b-9373-716c0bc582cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3b1c221-131e-46af-b924-e36aea58300e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dad908c7-70b0-4710-b087-096e54b414ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21420fa8-08c6-4fb1-b56e-7c971987de5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "208c1a95-f66e-4409-bdde-b5fbd25ed9f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bd29886-ce63-4d92-9522-3fa06034d4d2"
                }
              }
            ]
          },
          {
            "id": "b3f5a5f1-014c-4c6a-9763-3131a2ba9846",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3535c792-004e-4021-9f1b-c48bf1fd4b25",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "27946a50-83ac-4508-828c-8e62835e61fa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2169ba-d88e-483f-add2-5cd275eb8153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "68936bd6-603d-41ab-bb9d-ea4e1a1c3505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948da497-c01f-4522-a5d2-2e1e7cb92687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b2dab4-6f2b-49b4-b4d1-fc94763634bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e80cc042-c7d3-47f5-bb6c-a48acd786327",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4273f823-27b1-4497-af79-b9212b22f7e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08c5bd37-e512-447e-b977-b3db8a5ff028"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acb6749d-a7b8-4acf-b449-7e14bdc43563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "428b5445-e6db-46d9-937d-ed3630ab1a95"
                    }
                  }
                ]
              },
              {
                "id": "fc8e4357-53b8-405e-a142-1fadfad221d5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e0baf85-9392-405a-ae42-46c62193581d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fe7a536-3619-486f-8ba8-ad4cc52b85ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "266ce3d8-8244-4027-ba2c-e6eb935b8318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36c4a8d2-51a0-4e9a-ba42-406be8d275ef"
                    }
                  }
                ]
              },
              {
                "id": "2b3d8f7d-464f-4d67-8818-83c9876d3c4e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b3e7da-280f-42dc-9819-96b110013a2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da6feccd-e1ee-40a0-9a86-07de4d0e0d25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f2442e0-f140-4512-af72-365a45f6bd35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd235995-08bd-470d-9e7a-c204a40e9c49"
                    }
                  }
                ]
              },
              {
                "id": "41c44828-b920-4fa2-946d-9b43e27d9590",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1742009a-c73b-4283-8f23-81ee939c87d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fa646f0-8bda-4034-a32e-690a11c402f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34bbe3ed-b866-4d2f-ae6c-85bd0cc66720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28459df1-c7fa-423c-a4db-213175b8a81d"
                    }
                  }
                ]
              },
              {
                "id": "06d44d42-6d05-4b9d-b438-5366f5b4cc8a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4cbd10b-763b-4917-bc02-5d13488da84d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b8e92e8-e01d-4611-ac33-130ff835e950"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4d4e44-cbad-472c-9023-72713890095f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "85a2e1d1-041d-4cf3-9bef-6266b2e89bfa"
                    }
                  }
                ]
              },
              {
                "id": "7acd6fa2-2c4d-45c4-85e1-b037fa2e04dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "935d3760-1ecc-46e7-b320-a27ac112ee62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72504b81-dbcc-4f4f-a6df-5e2b46ed9fef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39aa8cc2-0baa-498b-9de5-a61f428897cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8e27f79-dde1-42fe-a4da-980b05f2749b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa301103-63ad-4076-9701-6f370abab422",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40556832-ff87-45b9-889d-110ab759ee5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fae20a8-a315-47e8-ac43-b94ff1bc3b18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58b91d36-55a2-421b-89dd-00d3206b5116"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b744366-08e2-43c2-a12a-dbbcb979f892",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4130adfd-3ff6-40d6-b931-00b328c6aac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e547bddc-f5d3-4564-89ff-35b922f6cde9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78db298c-6a9e-463e-b29a-a559111352a7"
            }
          }
        ]
      },
      {
        "id": "781ff339-36dd-43fd-b0a0-b49780ecc743",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b1921b58-7fac-4821-87da-90510dc18e13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45ff28ac-1b8a-472f-8aae-9916b909f19f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6569dd9-ecdd-4bb5-b4c5-8d396022ab2b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fb619e-53c2-4fbd-9feb-88a455146c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f01915-6951-4f54-8c0c-962aa24d80e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc417b6-7cf8-4354-bbdc-2443ca61b478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c62ee8-89a7-41ae-9b81-043583a5d097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30697437-9a50-47ef-a85f-2e000efd258b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ca507b-1644-47b3-aba5-3db2b4226b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c854de86-ff3f-4291-81ee-606562c89129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48429740-e602-4ae5-aeaf-2b287d8a9a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4b4cf1-96d2-46a9-bd07-05ff249e1931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c737d8-c0da-4add-a63c-e7a05f5f377e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892badde-3686-4508-91b3-7d2a9aacc4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a41d61-5e3e-4a11-9f4b-08d1cb6cbe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283d9552-225b-4b42-9a5e-a722f67990e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7143d65-02f6-45b3-b20c-493b3b20ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018de221-ed82-4673-bada-dbdd873621d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8636400f-29cc-44ea-b095-03fd7d0963a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096d45d5-afa4-41f3-afa4-1344f85a41f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566230b7-28d4-4180-8f36-806dc8b3abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71902ddf-457f-43dc-9e95-f0c94184ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6f938d-95d7-41c5-9d84-f5c677c1ee69",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439c6d59-ac8b-4142-bb04-a4ff7a2eb602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0948d983-724f-4586-9ac8-3b118f23df36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf1fc8c-0cea-46d9-9969-3f99d0ae79f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0497def0-8f65-445b-8031-eaa4574a9596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3f3cd1-a064-4425-92dd-08d774fe7363",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c638ca7-32bf-4ae3-89ee-5ac0a7bb0eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e14a2fb-ebb1-424b-bca7-7f2f18b617a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba449a8a-e9b9-48dc-81ed-fa598e212d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8fbfea-8cf7-436c-abd1-290eaeca9556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d471fb-59a2-496e-9e7f-0e40693a7649",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b512ccc-a4b8-4c42-af1c-0f4f89355e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef95a245-165f-49dd-837b-9f042d3efa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f83be1-0362-4fca-96e1-2aeac66cca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4260938d-28a0-4541-ab93-9c5ce0d99946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3aa52a-a47e-412f-a6de-ebf4e70318fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825be843-d704-4c45-9466-aecd0f9af289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634e8004-95bf-4252-8fe4-2a21b6e19bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79305374-a69b-42e3-a6fe-63c8d12f6c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74e2766-c155-49df-8950-4db2e78c40fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9639bd8a-c131-4255-ada1-3b6954b65f77",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a333f09-fafc-47a9-afe5-471d35f3e311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aaf8350-2cbc-4743-b03e-e4577eb573b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6208b9-c3c5-4481-b4fc-75530c7cc3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8ac56f-32c2-4e82-811e-ba5205ab1962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7466a6a3-be81-46ea-9a74-b9c0e5f991af",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b3e1de-ee58-4ff6-b4fe-b15b831751e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a96c768-72e0-46fd-9f16-391297d785bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb35741-4aa9-47fc-b0ec-6ba6d8e6552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d5e5be-b162-4106-b277-fc67db0d0f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af397bed-ae59-40f7-b3e5-49bb25da77de",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3d096a-0636-4e94-9e47-3a61ad2e3155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77938b98-d97d-4ac4-a528-36e5f068ca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6755fd12-7772-4ea9-bc32-c67e12ee5037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "62c35346-eb15-47da-a21c-383fa6146c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c3a8f0-dc08-4f5b-b081-69c77bf2c07b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beebd5d3-eff5-4c3c-95f0-46be27ce1c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014afb74-51ed-4995-a6cb-d2a269b51297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6078484-4f21-40a2-840e-34d1b45eb89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "074ddb2f-6de6-4f04-b52d-eb8fcf2c5b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9bf8b8-23ef-40b4-b154-9c38751febc4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8d8a75-2d37-466c-a11d-6f487bfc00db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9530fb-f336-432a-abef-1fefd0db3704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e794600-2f20-4b1a-9d83-661e50b4e3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd5ef04-d051-4fbb-a232-ac028213c150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb4800a-ee21-4908-8f7b-62c35bfc88c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb44647c-3421-4199-b131-924db1390a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796d57eb-2c7f-4092-a2d7-7325d0d5d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b145838b-33df-408d-b547-709990beb8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cead2ae-2445-4111-a94c-444e3f3ee512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81332a23-570f-4b45-b207-edc92149b60f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e599964-4196-4592-8def-fbed5146d797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e72c53-3f8a-429a-bd71-21a8db3ec6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbcc287-0f90-4be9-8c9c-6dfc3d831130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cc1365-36f9-4a42-a492-b9dc778cd1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4cfe1e-0a0a-475c-a8b9-05ca520527ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d0e02-b787-4a22-be77-99ae3b98d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7f3222-a859-40b3-b4e2-465843022a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3637f787-967e-457b-98aa-feb92a22aed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0804230c-c403-49d0-9111-1bf777e30c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eccc63-1dff-47e0-bac1-82e7fe5c0fc3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0c4f68-76e4-4f74-a24b-fc0e66d4b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add7c4d3-6e61-4aea-a88d-58daa618b714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f140d-17ee-4a6f-a6e8-4078ab8a918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46811c85-1311-4727-bfc2-856e7bc6992b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7104bf-19fe-4b5d-a9b9-5fa907793de3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4558ed0-e647-450b-89dd-eb20f86c2417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834e789a-1a5a-4567-9019-1e21e937034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f7bbc-6e09-4fb0-a399-34ed593156cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b3694d-1c28-4b66-8d5a-fc4965e74096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2a233a-0004-442e-aae0-d91cc6ce7fd9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be45c1-ed24-48b9-b8a3-8ceffd762125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ad9e94-ef7a-4c4d-b0ad-1186dcae722c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0322e1-311c-4668-8679-14a52423fb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b077f54-329d-4a52-9d74-a74b3ad9a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda04fbf-19c9-4b57-a5b1-e06c2959fec2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9b8d6e-3147-4cf6-a938-d3b89fe8ef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1e9665-2eaa-470a-9c9f-ffbc7bcf3665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fccece-81a5-4fd1-b711-a092f6fdcbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58a2262-3191-4257-b84d-8d741af4ab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958a1186-423a-42c0-8865-b263569a18a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b6de84-b6fc-4287-8c44-7d679212668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43267179-d33a-4d3e-95b9-8802226a56cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62f5ba-95ad-4899-a98d-c075aa90688d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb6bdc9-08a7-48fe-a6b8-ad9108e7984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173b66cd-0062-43af-ba95-d9341e9876df",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b23520-ec9e-424f-969b-c318b05183c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13624cd0-86c1-4e62-9262-6c957c952fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019fd670-fa54-40da-827d-e9975ae6d68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2533ee21-e8e9-4c58-a379-e031c49684d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45183548-9a07-4a89-833b-5b785281b30e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224a5735-ae85-4c77-b3c3-d38ecf098071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca97fc9-cccd-42c6-a9e1-efbbcbadaa6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7a92b1-c5bd-479b-8f57-d36548748d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "014d583d-9936-40d8-bd50-ac552ff183bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e412fb01-ffd3-428b-b56f-449dbb00e0b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5fab6b-84b5-460c-bf57-96e09c704a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc0ec2a-d437-46d0-899d-9e0d0ab1b633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ffff6-50e0-430c-b0a6-4132916928b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed76149f-ebe1-42dd-a592-59e092c30747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d82313-b6a4-4a84-ac51-03acd461a241",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ddb919-9ebd-433e-8b81-fb95d28cf46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fade7e6-d86a-4fa3-ad04-92b5e5168e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7305b210-9f29-4313-a65b-d98254745d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73de22a1-1b1e-4cde-8a48-02be9b799152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1251decb-03e6-4642-8124-c76a5fb1e324",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecb55bd-e8c9-467f-8241-37b9b1910afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d91e22-3ff7-43ee-b514-d77aef7672a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dddf88-2763-47a0-9dab-36d59dab12c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae6f764-ea9a-40da-ad72-c2b3996423a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19205ca6-7323-49a5-91f7-4643b52b075d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd0283-00e5-45a0-b03f-5e17eb419890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef822804-50d6-44c2-9dd0-25645c676953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79015278-a66a-41e2-ba91-020218798c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "defa891f-cd40-4769-8675-4f04ca395871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa0b747-e37d-4a5a-8bdd-0b7ae30346e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5845b40-f359-4048-bbbc-7ebae4c10a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35858c19-1dca-4277-a3e5-f11ad1287171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f550ee-0a3b-4071-a7cd-6018ed77de59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "389c3ce2-c870-42ee-bcc8-bdb7c5eaefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3bb8ea-4789-4a1b-a821-40da7660938f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3dae8-9682-49c5-9fbc-9cbe6ce88f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22e23b5-b3d9-4646-921c-d1a7ffba00f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7241f38-e35b-4f6d-85a5-17c79f48d863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6abc746-2c1f-4f76-876d-ccf5043e1a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8ea80-f0e0-46b2-9741-e51a3ddfe178",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cf7ccf-e367-4394-94ba-33d028ebc499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82158524-b7de-4112-93ab-fb7207b69918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd508565-6add-4ff8-a649-7b842d5c5d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c333a64b-67c4-4869-9b71-e39b9f9e477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a31148-4d7b-4f37-b9d8-a0cb48f720f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17fd2de-2d82-40fd-a6ec-a197c970156f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f4b3c6-6e30-4587-a96b-70d862c1ddd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7836ae-0445-496e-9fe0-04c4f3034845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d404ac3-37f9-401f-83d6-e78980b00d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9169e8dc-d0fe-4f28-9f7c-f7b4b3551499",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90e0d4d-e842-48d6-939d-ffd993cd1573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122dfd8d-29c6-4399-8113-b46697e7da04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7cacf-c982-4a89-9779-4ea4aed886d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "111b25a3-6d21-4f5a-8c9b-86305c1f9d09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09b38d0a-0091-426a-90f2-61e66af848a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4eb1b243-82e7-4cf4-98e8-e6135bdc89f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa63df0-a453-480e-bf07-2c7e6dbe7030",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "87084c87-8721-4e97-a6b7-866ea184c7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544fa33c-dcae-4f48-9989-b498170fc542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aef6b64-7d85-4ece-9f1e-46406bf8a518"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9339167-a2be-450f-baf0-950525c61025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73c4f53d-b534-4c84-8300-8c3c9d3bc84e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8971fa7d-4944-48db-ad01-d621b070965e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fc1120e-6b28-44ba-be53-1730091fe909"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06a23fbd-e0a2-4211-be8b-5a296f0e4e97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1213b7a1-84fa-4684-9edf-611aceca1b7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49557ae8-5950-4329-8b5a-f66f38b124b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87024ee0-85ea-4d55-8881-e687b4d863bd"
            }
          }
        ]
      },
      {
        "id": "7b34a609-bfab-43e8-8573-a39cb41affbc",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2d42b7b3-e8cc-4a30-b6d5-3c0f0f7ce2a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37722a59-e4c9-4f2b-bad2-67ec68b6a743",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dff82067-0229-491e-b032-afcc67edbada",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ca83d-5426-4765-a2d0-d3db058769a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ed0f46-1386-4630-8940-19ad05c775c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67266447-def4-4bc3-b3d0-be9c08ec1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "077386e2-2723-4df1-88ef-6f8b078dd9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab2187a-51aa-44bf-82a7-9ef976110b85",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae2225-d26f-43be-9ee6-e4b34cd7a0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d8986f-efa2-4721-a6f7-b9b0910f97fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917b84de-1e44-4d6a-a1d5-7d50412be211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "846fe9fd-bfcb-4a5e-9d91-699fb1b31e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef816ad-db0e-4e27-9f29-5282f438849b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47832e-eab6-481a-9ede-39bf851e6196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4857ac62-31e0-4218-a021-90ab61c7f023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2591f2-874a-4df2-a524-baccbd4613f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f7c55c-f901-420a-b406-e5d7829e68c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee43924a-5bf4-4cbe-ad7a-1433a71df5f2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d87ec4-de6e-4e14-847a-3694000c9ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c8409e-0b0f-4a57-96a9-df7be66f5557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1505ddc-4c31-40b3-a48f-09f780463788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e76cd-41f4-4024-83d7-f071fe0f8d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfd1ff3-f7a1-4e14-97e3-17e3a2392254",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b9ac0-b372-4abd-9b04-fb18bdd70e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99395f87-6b30-4c43-a7ca-0e514e063ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e795b4f-6150-4c37-b8f7-dd8e8a3d5c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c44c59bf-e96b-4b83-a8ef-105097e20854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e09dc-709c-442a-924b-105f3af6bb2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63833b4d-2182-46ec-a374-9fa87c87beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4434ba7a-a53f-481c-ab1f-ce9296b9038a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f71bd-08bb-49f4-959b-e31fd737266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a110663-bd3d-438a-8a1b-eb369502b6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b6b96c-0914-4b5d-8d7a-04f92127b7da",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3bb53d-d766-4fb9-8b45-c220c4ccca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a0e803-ef2b-4054-a27b-cb93d07a4a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eee65bd-302f-4d8e-8e70-0fed5cb1f428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf93c2f-3f1a-420c-b917-4b15f8a4b7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8036d6b7-c381-4d64-8c61-d8592d7321e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1fde3-9278-42b6-895a-239b520c6e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d626c8-16cd-4faa-a228-bb0fbb1301ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975cb4f9-17a7-416e-87d3-f055d97fb36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30d2f56-1a41-4138-961c-f900379626d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07fbaf5-3c4c-4384-8809-710ff908950d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c301f3f-4227-4f68-b0e8-8095a4162fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba370af1-1b64-4848-9850-0d085e2f74c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f66087-8bc4-46db-a72d-7db633047040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c079df-079f-4483-977a-ea333668409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3c3e13-4b3f-4c72-a990-089c4feb1fe4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc82c53-5957-422f-8cce-2c2c5fbfd831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb90dca-451b-4bab-b79f-4be7617495ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5ba3b7-ed89-45c2-9104-4c98a8bf1e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72502590-3bc4-4533-940d-82f088595c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad40581-dfdf-437d-8e97-b33994b7c812",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1762fa-a4a3-4d18-a206-f6c6c6d3944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3b4865-3e3a-45bd-bc96-1befab610d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5394476-20f3-49ce-9cf8-7bd1fa570c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "faf3fe71-b47f-48f0-96ff-dd24fdfa0fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd203b6-28bd-48ee-9f97-8336ff6c4b12",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8df6c87-d07d-4ce0-b6ce-dbe649c72f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d14c80d-0158-404a-981a-2e957c8a09c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7343304-33c5-4983-af6b-fc6952f345c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87667d9f-7d7d-47a9-81a7-2cf61205bc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673e8915-4330-4645-8756-068876412eee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e626b-8d54-41f8-a39e-5b1aaaafcc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c47266d-6735-4e3a-ad9b-7020424adee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e444e99d-692e-4bca-ac94-706a9fe65935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c986ad34-b7c7-465d-8b6f-ec6b7580c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4763df3-e5ab-43e8-90ba-238b624afb38",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b4e88-dd06-4dcc-a7e1-517d653889db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c382db-e7c0-4ded-b4be-1b5472d59d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314ec45-816d-4f54-84d9-51f7589621b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "60274d6b-0331-4c04-bf03-df33dd86d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4eadfb-66d0-4e97-bfa8-88d7d2e1c8fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0272a5fd-4645-42d0-9a91-ffda00e8acc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724488d6-0823-40a5-a479-816f78894dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b956ba0c-3801-4ffa-b882-48ba9bbf82b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "454974a0-ed7b-4b70-a462-07ec93595283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46edc2ca-d6b4-41e4-9a76-c0ed433f2ad8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c3c5f-1e3d-47d9-bb5a-9d4b1b319259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf6666e-eebe-4a4b-98dc-c4fda2aafc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb16b1e3-2be7-495a-8110-9ec8d9ea14ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ba6ea4-6157-4417-8437-228f62f9f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a130bc0b-4e11-4a98-819e-8564514c38c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9eb457-535a-43e5-b2cf-3d95f3175bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2c9a39-4f19-4c40-8178-96802492e437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e965de5-9240-4a7c-8ffd-afebc3320621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7d45a8-af7f-406f-bac8-130c4d089e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d46271a-c4fc-4b16-a3c8-b3e366c917c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa93424-90a0-476b-a445-58e30a6bb59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106a00c2-77ff-4db9-95cc-aa5b4707ab4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93364bd9-198a-487e-b72e-2241e8df3230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bf35c5-e53a-48f7-a771-610d768bc311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32ac07-a349-47c8-bf3e-563bfa4e9eb0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476cdaf6-9d97-48cd-b878-7a4cc049fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1a16b7-35d1-4294-bbab-074e55d20a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1861745-3f30-41a6-a92b-007d57471c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d9c9b0-4e02-4ec7-9f6e-dc76ac5ba19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6fc102-f478-4873-819e-a7580c41be7c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f8583b-9125-43b5-87c4-4afd06571c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b4a1f1-e4ee-435d-a994-fae9f54b0977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de522f5-b780-4c1b-a093-ca5b3bef236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ba083a-09eb-4da1-b536-c3fddc97ac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc79757-1dc4-4e58-be40-9c5336f1c35f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a0c7b1-ca42-4bcf-b5df-85442802af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c256d4-1a1d-41c2-b355-c8ece56721e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba279ab9-c4c0-439e-80ff-104d32d043d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "151ddaa8-4cdc-4bb0-8b29-01d77395e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fe79ed-6ca6-4689-9e78-3aae15b72dcc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6030bc-852b-4dcb-b0c3-1fd9b24fea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ab44fe-d648-4a7a-b192-b6ed1672d761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13608ede-ead1-4d16-bb58-a304754e971c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d51a60-9458-4742-92ad-f153eecbb86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4998b831-966d-4d34-837b-c19dea9d8616",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ba6829-1cf1-443d-97a9-c36ab88b6d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6354ad19-cc67-479e-8476-a9b01610e5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed3617-fe28-4978-99e2-00c4de3ba8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcba60c7-aa69-4bd8-a6ff-dcc1e44ab561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a17b7a7-cdba-4daa-bcee-d8a9642880cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bee13e-47fb-4325-a737-cf93900e65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc15a7b6-d03a-470d-91b6-c0a085e19112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a9ab20-b106-479b-8cc0-aa557bac1564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb1cbe4-191d-47e5-b4bc-6eb7af012847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bbd4c6-ce68-4460-82ce-92e470bc203a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677dcdbe-5a73-4b40-9d4c-3d38848c927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2498d1-2eee-4144-b04f-fec406b37840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61f0310-5458-481e-a342-166149366e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1360cb-d086-4fbf-83c2-3b1eed73639a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebecefe-9c3d-476f-8a83-678ff1319e7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f981e1-9609-4a69-8cdc-396625a50c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e329358-466f-4778-99ff-ffe985917b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c4ff73-66e6-4653-b052-d40f05ca2be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec837e8-8669-4562-bf04-8b282c563835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7473e80c-da57-4d37-8e6f-6719310e12d1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48667da5-6036-4d2b-8e45-fa54422a88ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b3b2e-6e4b-4102-8676-1d876b239dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402efa20-4011-4027-9bf3-52ac0e81d076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99320731-03c8-45d7-b460-2aea2a3585d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35acd4d1-53b6-47ec-893a-45bc27dfc89b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4dce4-39ad-4bb3-9d5d-53b04e7df1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2b2163-2801-472b-8c50-a765b2f592cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ecfa62-d965-40ba-9c27-7dc178f40afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c4506a-59b1-47e1-8f52-037e41d7ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6cf196-5f7b-480f-89fc-27bd290d49a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6b412-11f1-41ba-995f-a27d739e3ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd7b136-2683-4feb-a2d0-de625ad8681e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f52bd2b-e411-4c6a-8858-3c511cd8eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a7586c-f23d-4d15-90d1-fc13822b446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80b9aa-54c1-462b-9b72-fc60a40242d6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780eba24-3969-4f9f-bab8-327adcfc47c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870b9073-27f2-4856-8f6a-96c47c1baf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2733b17-ef0f-46e0-8f17-7b6d35375337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22589dd2-6389-4461-b131-68d783bf4e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef631eb8-15ef-4903-9dff-3ae84eb55fe7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f5f997-cbe2-4142-820e-685c5440d428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df097a64-4d0f-4880-8bed-4a82bbb70f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b290edf-b621-4e7a-9fd3-3734d5135876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7c2183-7ff1-4b4f-bbb5-623a57ff9957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9304f65-7e50-48a2-b17a-9961e902bfdd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3163f3f5-b270-48a0-a764-64e59750723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b10fda1-050d-4174-bf61-2a5d9d345adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e97affc-9d49-4779-a60e-fd18f55a95e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77494770-f5f6-4691-88bf-14729b8296c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b58bd-8a38-4ec3-a0f8-4d6bc058a48d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f81676-0a81-4467-8802-36dc1c7d5d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c21f5-5965-47b1-ad3c-f87a576eacdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a2a594-7979-40b6-89f0-839a672f9511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ab8dad-9dca-441c-af9b-4860bc3225cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2847ad2-8386-4b7f-8a58-b2a079feea6f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01b503-5bd5-4223-9d0e-06ddbc1bcb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213c7916-c0bd-4680-9c38-4b2a280ec95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf79935-4b8d-4eca-ad6f-0df0d81eb411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff0fc15-f92c-4c62-a37a-4dde90ae909d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4b579-081a-4896-a2f1-d0934b21bb78",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b97985-ab8d-4271-9f93-2175a0920422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1eb1ce-7935-4893-b64c-944c21970610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebfa444-bdd6-4fdc-ae15-3f8b07679c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07003686-7b09-4937-9112-a5b52c3d169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba430f3-aa03-457e-91a8-4a95efc4ca7d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e207aa0b-0adc-49e5-81fc-5ab98bd8b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa08cce6-4424-4321-ba3d-1f0cbe34ce0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31795ff3-99a2-49f5-97ff-3f4279db0a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49abc529-e3ba-468a-b333-b16ef8d1e17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105b87cc-e138-4377-bcef-26b62f41dea5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee76f9-91a7-484a-9206-34cf9d7076c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68657929-7d46-4d9c-8594-89bffe7c49c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6838107e-31c8-4993-a696-f901353c4250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3f0edc-9352-4a1f-b970-416d19d787df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02bc489a-7abd-4560-8430-31aa67b45a60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e94c5374-c929-4a46-a1dc-351f68b5771e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0ea09c-19f3-4997-8c39-b8f06af8b1e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "86d4e3e8-7a0a-41f1-a018-c47d0c682cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6541a2-a8c9-4f08-8eba-82028caf4446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "013f2fb1-85c0-4bde-b752-b77bcfa7c298"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db36c42-dad2-49dc-8e6f-b8db9a9dedf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f82a4003-d090-40d5-9f98-e105e1e16155"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aec0422-082b-412a-ae29-85fd44a1ce24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffd80615-d961-4ee3-aedb-f3837a808e60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ee81d69-4516-4d81-8ca7-446d01fe7eac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a044318-a77c-403d-ab7c-5ded1199f279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a94b4b82-f7e8-4b31-9ecf-0a528673ab7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ddf79f8-6efd-4c87-8af6-13839b375749"
            }
          }
        ]
      },
      {
        "id": "8c558985-06b9-4af7-998e-608393859fa8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aac3aaea-be03-4556-ad3d-6348007eaa85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "711f4df0-defa-4142-a2f2-6d842a253553",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bbfd37bf-6027-412d-af9d-841e0092550d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312555ad-8ec4-4a0f-9dfc-21a1d09c4ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8589edf8-0346-46d3-9644-8cd42bf72938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe97166-d297-4165-b4bc-99e70987337a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6c5597-e131-483c-a173-e1357914d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b041b347-8173-43cc-a80d-e94c430417dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1945d4f5-5976-426d-ac06-288d7cc747f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59123303-4ca1-45fd-a2e2-fdacfac17c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcaa556-cb7b-4fa2-92cd-30ae0134cb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02d398a-df82-418e-bae2-595003e9c8cf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1115eda3-de6d-4e10-896a-58636787ed36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e648ae-53b5-4193-8af6-3c88b5214e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ab2aa-6670-459b-9157-e73f316a70e3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4054be2-c9ca-4cff-abbb-0cfe5297363b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b4e7ca-cb15-48c7-982e-fb4572234a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebb210a-8f19-42c6-a081-d5e52ae814df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92279b43-0cb9-4a0e-b2a3-f8b3f86d1ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb7638b-731d-4695-9d85-0729d067d5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06965af3-d49d-47f8-b466-7f003643ef54",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb0d0fc-7dec-4e19-8e0f-800d1f804a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0380e433-7f78-437d-b143-0eed2c94f6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b27f4ff-9123-4797-8a4d-5ab0644baf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339e805c-6b70-430e-add9-6b432a6de790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d548056-d8dd-4437-bd42-b2eb6934995a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac65f43b-109c-4d5d-8e68-3ab8ff54c769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92313a3-adbf-46ea-a68e-0be31b3a73dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5887b-0f53-4c0c-928f-a4bb202d5f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27c7c9b-145f-471a-86ad-71017086e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824aa523-c478-4df6-879e-c043ca879dbf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc31f0-6599-45c0-82ad-b09e9be97f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8affb1b8-7e27-4671-a1d8-c3a201c71d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0956cd3f-4583-4e71-ae62-2995d817286a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5725dd09-98f3-45a5-b0b0-9d578f18938e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543aba4a-6e55-43c2-b5de-b4ef9aa18a99",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ed2f1f-f697-455d-b50a-9e1b6c70d1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "766c552a-9743-4703-8e4c-469f3609e468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2489aa5a-c228-4c97-8549-8d599de36803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a47fc4-ac59-43d2-9435-05d8716fc43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a3ac7a-da4c-4d52-b599-3aa515904c4f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbf9a04-4472-4c20-99eb-e428a62a0645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c87057-8460-4e18-aac3-42c231d70896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33665bcc-10c7-471c-aeba-5786b1d0354b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f723320a-cbbd-466e-aa0d-4a8bfc5df718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27698054-57dd-40cf-994e-82db064896ff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162803db-1ad1-407f-b19c-d81d20bffdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3141f8-6b19-4b94-904f-eb49798027f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acafb20-bd41-4a19-9b6a-6210d527ecd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa693b89-b747-49be-b3fa-9249cdf2a190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bbc6ac-8260-491a-8a51-3026f2117ddf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949de704-e7be-4007-91ba-a2f4b8657b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd6b98a-6e51-4e9f-9351-dd119ee2b702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab40746-81fd-49dd-bef5-98a590bef91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74709920-37dc-4607-ba14-e8d1a3614030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6957600-b592-4250-b338-433a20a5ac44",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a804a-dd2f-4066-96df-3da277bf549e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc73b91-5133-4a8e-b833-2b053ae16f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0821c5ab-0c24-4441-b3e1-f3450608f270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae862a47-f92a-41c4-910a-95f0f4525521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265fb363-383c-4777-99d0-d4257a8d3836",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5769bf1e-aabb-4209-a9a0-3f50875a86ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87657fa4-ca16-42d2-b307-69ee0ecd2813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f93827-1b63-497b-92e3-50c26a21dfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7406d8-d035-4263-939b-e1068f178c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e71ca-ff8b-496e-82ac-4dfc49d2b96d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820e9867-e5d0-47e2-b6d7-877efd546ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ad674a-fdc4-4b42-9246-db8d9d1fc0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25166ae-8f0a-4a4e-889f-cfcd297df626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb97c82-009e-4afa-af25-480c9c2dc5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc55314-c1bd-4851-81c7-018b24dfae16",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84a99d-91b9-4c20-bc47-a849b2a83fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdefee9-9a80-47f4-8e49-3387dbef13b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cf2d9d-c70c-465e-812a-bfcdb1a60055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623adedd-d120-4659-a649-4d39ac3fafc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a03608b-0b41-44b7-96c4-44cbb5b347fb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc882571-f274-495c-88ca-26f12d4b2255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6ca924-5f16-47e9-bd99-06813a562ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc30df7-f046-43df-a5f0-c492f58b5097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fc5980-d85a-4d9e-ab0e-6638cd971551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df4dd1f-f2e5-4fb1-b56e-ceb7db8e51c4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84fe081-d0fa-444d-a591-9996aa02573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8451f091-51d8-4dab-a4ca-36a1b1cb7331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e95f8f9-5ea8-4b88-9d90-136b12424473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1f3ed8-c81f-427c-a218-444ea7711186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7e7562-c31f-471d-953b-8842b24ab637",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfbdf72-bcc7-484b-8fe1-3cec3bca81af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14191bad-6ea8-4a0d-a010-41497cbb1431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ff9d7-6f16-467b-8c0e-03a8407e215e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f1ab1c-be7f-4db2-b564-545f97d6f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097940a7-2ddb-4377-a827-15d53a1e0d13",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61ba81-cbe9-4570-b4ec-9c1e232d3ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31078b82-1a91-4757-aae9-4e1184c02446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ddb744-bc59-4c58-aa2d-74f0bbfc7a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a474fe-df29-4e2f-b336-c9184f4e3721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5af157-9719-4466-a0d9-6b51a75d0cc0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610c14fa-d42d-4612-a8ec-4dadd08fe0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ddd362-f5ae-4dbc-bc81-e44ec17bcb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f0f8d3-473a-456f-9fbe-5dbf8346e108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b032a6a8-bb4a-4cb6-bf90-a221a7523d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf28b4e8-829f-4aea-881a-190142876c10",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91126291-6aaa-4386-9ae9-d132575616f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf937d0-b680-40f1-9e1f-84065b90a217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470cd66b-f709-4d2d-b4e3-3142bd50649c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7e888d-df4b-4a9e-a251-41b7f484e9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19cc9f2-2cc9-4f82-b45b-3d532e8b1589",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a164e3-2d86-4306-af9f-e41bb350d9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957b2f85-e884-430e-a067-1fea958ac937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe18e8f-c207-4e7f-9a87-d25a0b009c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2adc7d-d061-4e32-84bf-f2c4ffb93b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8bd483-614b-4e8b-8cd0-5f606b34e11c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5722d8b6-0335-4bd3-8dba-d21695136598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0f39a2-c993-404f-b8e2-dd90cb05ceae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfbb759-a122-4392-b58d-10f96c50b484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd76bd01-c401-4173-84d4-0432dc7b9aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac297a7c-b385-427b-9c3f-f2b26357afed",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b90cc0-1fbe-49a2-a9a0-48f60df7c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1f653e-fbb7-4f30-9fd1-278f2e1680af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc903d8-2aca-4f9c-b5e5-c01a669a2634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cae192a-96cd-4058-9688-698b2b997ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b83695e-7c95-4d1f-b201-12005da1af12",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f7de66-6505-42fc-80fa-84de87cc16ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb17ae7-34d5-41ba-8caa-2e0a77d73277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58515650-0f4c-4032-998d-8aff72bb5c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88456f0d-1a5f-4427-8dc6-e2aa778d267b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728872b7-a562-4564-8c37-573adf7cd0a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff7eb5-23cf-4a46-a198-cb58a34e816f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c76029-d34c-4e86-a270-46b06c416a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e5efdf-0df6-46f4-892a-4d23b3603aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2210b2-084b-4c69-8af6-65c13d954004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196af5d8-17f1-4083-bae2-69435f6d454a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39f0652-eb79-4357-b9a4-872da1895dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c540cc8f-45d9-4e74-9f1a-0d9b4af79cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a222ba-1d0c-4e34-b323-a317f7655edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff55eef-c0b5-4af0-b96a-e141b7a0d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dff423-9ff0-4a9b-87a7-3da969c04705",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4055d15-0715-4b77-b9de-91ce20056ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37533b20-7c94-4b10-92bc-8bfb1f26f915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffb56a1-d671-4f8e-bf0d-d58e76584045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361795e3-b6db-44f6-8850-b807993f2641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766ff63c-5ccc-43a8-85f2-d216216a12de",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e160995c-3fad-4d8e-b9cf-fe350976445a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfd98e2-e1b3-44b7-bd36-7f6de0d982ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bb8f11-8f12-4c71-96b4-9a4d6a227cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26381837-fd0d-4071-988b-873943eb91ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc9b02d-3b20-4867-a374-7b29d5b4fa7e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d903128-8d3e-48f1-a921-c27e6c292e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4c0ecd-be98-4c8d-9046-600c4b02376d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4bc0a4-2f87-4fc7-a179-7321edf6813b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c09516-2fa8-4012-9497-3b1878915cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf243bea-81ec-4b88-ae73-2eb8dde27c8a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c8ce46-b389-4101-ac44-435a3cb4a128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed72e9ed-4e34-49f4-abc3-95df47cd97de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8575e-35a0-4d25-a349-949658ddd188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8539eb83-2b9a-4c89-a92b-b995a82bbecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a6508f-24c5-44d1-8406-f1bada32bc1a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e71459-319d-4f49-96e7-4a94e85514b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5faeb49-e991-4d66-826b-f06987bd5694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4ee1b6-7674-4341-a001-d5336e2f1c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d42656-08ae-4d1a-a7e7-8dcc40cccf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d197a92-5a75-4c08-8ed8-bb58f6f5be63",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feece087-ad03-4510-b6bb-2312eded3724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4497007d-d008-4a13-9659-7415ed286ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6607519a-c7c1-48ae-a2b4-1ad78bc96e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c718c75-1299-4dc3-bc80-05be2f1cdb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ffc63-c3bd-426b-9e44-b8084a7bad41",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf20474-3b3e-4c1c-a667-0dd042e9b2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2db84f1-615e-464d-a79f-163ce1bb1ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1dfa92-ac26-4b07-9c42-2c80c6b8e891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acae732-3ea3-4892-8c55-223516119687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11885450-ffce-4fd3-9ba9-6b2597dbb210",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2151f0-4478-4dae-8934-34b3de2578c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5eddbd5-3167-46b6-b122-c7f59619a508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88faa1b3-49fb-47ec-bf88-4a622f25b5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba9c6d3-e269-4ff0-9e46-662aec22f1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2747cb-2c13-4e1f-b94c-b31fbb3971cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202e7c64-e42b-4af7-a6e9-3f51e680ec20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f569009-49bd-4044-892f-762f67c544fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd31350-3a97-48b8-b38c-4d80c7420e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2096b809-46cf-4c33-9e75-19f4c4387a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3cc8e1-94d3-4d7a-a297-9df258923c51",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649169a-9621-4fb1-be72-8bbc94947cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dd55b4-8a7e-4012-8455-b068e7d67ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ff417-6533-4e43-91f5-ce246770faf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f63a96-a002-4107-8f88-a2d0d3ef5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2648c337-5234-4b63-8043-796e366c642a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd1efc1-bbb9-40ea-9533-f33fb844bd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8324b475-b527-4309-95ae-fa0568dc1672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf6704c-0e5f-4aa9-8544-2849a29cd1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f26cfd-0493-4131-95e1-e9fdee749a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f24edf5-5e98-46ab-b022-aba322aa7fe9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c2dac-8a21-4cbb-8713-3886b59f7b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ac4866-4219-4b55-8251-e753e85e30ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af732d8-50b9-481c-afb5-b63e3ceaffda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c7d4a7-b8aa-448c-9213-3043172ec6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3856f171-087e-4f21-9c4e-a1d24fb8bc94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9567a033-de45-4cdf-bc1c-6830834e17d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f69d82-a0df-4a3f-8642-e6026659de9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d20365-bd26-4af6-b9b4-5ce4d3eb724c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e9a58b-c16c-47d7-b43c-a36cbbf86900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d956bc0-890a-442b-91ad-0506bef7914b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86e4cf5-290a-4604-a2a6-2e8e6c52c5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584db69e-2aab-4f87-8ef0-3535b0e6c7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb37a77-5d05-4f2a-ba84-72d8605b4396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d28c02-d3e9-4753-8c9f-58ffdfe10a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b43b7f-6835-4ec0-844e-9a3bd2de049c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da0d729-4b34-40b7-8b08-caae2f290b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9be558-66d2-4f32-9126-39f98c45e10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbfba03-9470-47b2-9a1b-569dbbcc262c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cb8b92-20c9-4ba5-9947-63cc2ebb511c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9418022e-9869-4305-9104-3a54c5587345",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e90394-29eb-48f9-b45f-db5efc35230d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0a877d-ffb1-442e-b14d-4194f4f76b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b04deb-5750-43bf-8a53-3bfdea17da7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc66abe-3f2a-4900-bf43-e4eeb3d277bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63e31a7-9508-4b0f-ad4a-38bb0ae60043",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319c14c3-460a-4042-8506-c458ddaccbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942e6354-f824-4922-b57b-2b123fee1b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2fa48f-8ad6-4473-9a99-1dd3765cd6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350e819b-7a66-4e61-aef7-89c81167fb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8583105-ed3a-45a7-b978-baa3ec052e45",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d44174-0796-4e1c-84ba-a7b3a41b1d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb87c9d5-a694-4bca-862f-870367c3ab0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644236b3-dd5f-4cd9-81e9-ed88a9d43d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291c5310-7a88-4b4c-8acc-3e9b9f96fa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcdc237-237f-4ac2-a094-da8b2f0b8d2e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80523fb5-42c9-4942-b5c4-99cb41849783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5372a5-c4b0-4298-b4f3-d9789ca61747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3174399-9ced-463c-b082-6894fbb572dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad75154-3775-44b9-9381-020f32cc0847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781ba6fe-cf7a-44cf-9958-03fecd7968df",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6831841a-9025-4d32-801d-8c6fe8b76953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff90a08-31c9-47f4-9ac1-cd60e6d989fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3fd2d7-8328-444a-b31e-94728f67de95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748756ef-3d8d-40b3-8c4f-efe9c5b70f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9d6c9d-15d6-405b-9a8e-2a538033d0e5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633597e5-68c4-41e6-8829-159932361c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5926c337-13f4-4e70-9e56-8a2102e9c6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a10883-85aa-4b12-8df0-64e364d3746f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bc890e-b59b-402a-b17a-4f557a46b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490b70dc-3cd8-40d8-ae1b-8273e9b2fcf6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e36fba-8f4a-4476-b614-86fe318e883b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e811288-e4a9-496b-a516-ec8b48d07df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa03619d-70f9-47b5-9089-892f3e6b3c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ef061c-a05e-459c-bb01-6c990d68a565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac783d3-c02e-4a43-aa4e-ae5fbfb756c9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0787a6e7-d56e-4d99-ab2b-9c345ab15b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53f9cb3-1c5a-4643-bbec-5e3d63f18074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f16336-e086-4c43-9e0c-d379659f7856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4457d179-e489-4c86-abc9-52f568851478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e481bf-b51b-47c3-a178-ee92d6470056",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54a9e3-d43f-4c4d-b35f-b5519fae1f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94af3135-e649-447d-abe6-5f99ec49e23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5b89c7-0d2d-4bf1-bf91-dc776d8556ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127a847e-475a-458f-8f5a-90ff74e237e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e61b870-e8ca-4eff-95ad-2bfe04546c5f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec19dca-26c3-4c77-8dab-2316d43e53c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5f88e6-c9f5-469e-bcb8-f66e431c3e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c5a8b-1261-40c5-b60f-f6fa745a0a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512277d9-41d4-4419-82ff-a925b89236c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2114c960-61cd-426b-9ad9-3a82af44ecaa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a42cce1-af2d-4a64-990b-c231747eba44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84ea74b-dd4c-412e-a35c-dfaa7c1f450e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b9143a-a6b8-4115-b406-4c81767053bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3b6d80-df06-48e5-8c59-0763d53c1447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fad812-3d9e-48b5-b5ee-69a9aa86c5ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd21d8b-1ad1-4f3d-b3f7-2a87d78b246e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9879cba4-00ba-48f3-bf6a-9855fc177ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e952b7bb-2a6d-4448-9aac-d3044e819c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1011ac00-8e71-4ae6-b7b8-74b7c012d86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221f2cd2-fb6c-49d5-8281-c9f5f2fd0a17",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba185cc2-4369-4ae1-99e8-540b2b085673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565d0b59-3bb3-4dff-a9a7-459764f810ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37808ea-458d-48f7-b6cc-ca665c35753f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4ba05d-84bf-4bff-b525-23ad30aba33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8702f75d-82ff-41b8-bf45-c59469555685",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01424f40-fccb-496f-a9ed-68cc97419663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17635040-e1be-42fb-9ea4-48bc0baa8921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55f05b2-3b4b-4f03-96e5-77580a7bdd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac58e21-d390-4cc9-aedb-1632c96621fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3969d3ad-637b-4852-a473-423337d04c99",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73120667-6e3b-4bef-a0c3-db57fb5b69a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a5914e-077e-4319-9b3a-87a9f4584fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81be032-1d55-40b6-a7d8-fef9fc6d174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d68b2c2-10f2-4a07-94c4-6af91fd582a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856797b1-84ad-42a2-84ba-e53ab54c3617",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148a6da9-edad-49b2-a54d-fdbd40a23484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3313afb0-b62e-4e72-acbd-b295f19d2a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b4139f-5457-40e4-8c62-72a5d4b4d454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b18b529-e5e7-4bac-979f-31c44d34be5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39953a-46c9-433c-8546-f8d47f6b685b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c296ebe-080b-421f-a5eb-5d877cedb2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5dcbe7-331c-468c-88b9-dfaa4d584911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94323c70-b4cb-4c48-b1a1-80e795e3f1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed07be9-b94f-4def-8c46-c5cb939b8a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb5d5ac-1560-48ed-bc6f-244e2125fec4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35750ef0-603a-498b-b979-9402ddf4cf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c924fb3-c983-40e7-85d3-7b5ffc8d7cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085619f9-32af-45d0-a286-1aaeaa5e8eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b008c074-e21e-41a8-919b-415c7c6a4067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9db1af-4692-46d9-b1de-2061e3cb4ee9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4830567-1b07-46cf-b752-24f04928cd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc6ad6f-b891-4055-8bbf-c2464f2e0d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff489fd-2444-4514-8dac-f730ebfd3533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62586135-dee4-462e-bb99-84aae020a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3df79c-6810-4359-ae83-020841cff09b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23812a5d-c9f5-4f8b-9aef-0626dafd6bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe0fc66-6e30-413f-9232-509ae91eb4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba736cca-357e-44e0-bcc8-87b2be37d1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4986d5a7-88aa-4251-8840-97e18e354222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f94e3d9-d236-451a-8171-32d9605b525f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69305cc8-48e9-45f7-86fd-3de5b439bdec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f730b65-5ced-456c-801f-aff8c15e407f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cfc360-b8ad-4838-b7c8-2c6e9d5d0fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b3821f-e241-47fd-b014-b8bfe3c211d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68744063-a375-4982-bb86-a5866f0d5a88",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6c89e8-3a23-461a-9aea-c17c95c800e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96a1c1e7-5b0f-4141-a3b0-60e16a740efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bbfedb-ea34-4973-a3e9-27ac9b6aa910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d68ddf5-b009-4ec3-8b75-1fb6733634ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045b2d94-51ef-419b-a76f-fba6e78c753e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41c21dd-3e4e-40a7-83cc-14906111cf1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9800d471-b9aa-4d2b-885c-fc9e273e0f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff3d09c-bb9c-4c94-8039-d98cd0088ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d4693d-d0fd-4cf4-b943-6bb49fb036c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600daa67-85b0-46d8-b8d0-c749a5153fe6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb54386f-9d78-49bb-9741-bd2ee281ba96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16a3eed-17bf-4446-9586-e324c8a09725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43caad51-8903-4b4c-bca4-399aab09c912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c282f2-ae9a-4a63-9554-e27da24c8e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eb971e-9dad-47a6-be3c-4e6f349141fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6decf6-e9f2-4ef6-b7ed-580235ed8556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7298c7e8-505e-4f9f-8ddd-768667a764fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f872a2-7797-409c-858d-1b56440c3e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85905f98-db81-439f-84c2-9e77ee30e1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0000ac7e-c73b-4512-9859-2a74f05224da",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ea7876-6492-46eb-bbc4-e2abee2ee90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0ef357-7b65-4a37-be0f-0c548f313841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fecfee4-a691-40c2-a9dc-48338c6b7397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154132d2-5b2b-44c8-8cb4-329822d25f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222d7fc3-c2cf-4873-86e5-023e2773ebaf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf2ed1-1df3-4957-8962-533b5d7e784d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ae560b-95d8-4b6d-bef1-9da1f931cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf4597-7006-432d-bc36-c698f8a64208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faebe5bb-3454-4b95-8cba-373d6b855068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e71facf-bb09-4d89-b916-b09d443ace70",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0530b4cd-ec13-405e-ab7e-d688a8a77bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04326cc-2905-4465-be90-5ed4692fe30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b6a11f-514b-480c-bca8-96ff31829e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8d3e28-0ea8-420b-8690-0b42cec30b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d344228d-4c6c-47cb-b6dc-4335ec54b4d4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4826db78-106d-447f-a91b-9d583e5b2bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e48db4-38eb-4497-87e2-006cc03cbdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d0199-c2c4-44e5-ad48-a06d0c05bda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f039ca0-30b0-47ce-856b-295abb960782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5bc2d2-f747-4559-936a-df109329244f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f698d3-082e-4522-ba3d-796086782a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c97b54-1fbd-4413-8257-715a614ed703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955dbff5-fa0e-44e9-8da8-1df322a17882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a39f696-b0f8-4416-a38e-c32fa3592442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70fa302-83c8-406a-9555-24b62df8d7d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a69a982-ff4c-4d40-b316-86f789fca0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbd5efe-74d5-48f6-987f-e86185346743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23df2687-ecf3-4ff5-be53-50200541cee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac09042f-f301-4f97-a9cf-dbf06e9429f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f976898-0a26-4003-aaa2-e9f77a9545cc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22faefbb-41f6-4536-a4fb-06ea3554403c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbf9a1d-64a0-4b33-b5d3-bac71172ffb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ee52f2-3706-4937-8a30-d56e9b3af94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fff39b-f153-44c4-8b93-86613e68a949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325324b7-f331-4307-a72c-5ad53cb91451",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcac56fe-3d0d-4de1-82a7-e9eefca4e4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24aea7de-5031-4f52-8bc0-2460b79f2c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9de68f-c434-4d44-a57f-a69b1e24d593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81177b9-8f00-446a-8777-162bc4834d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b197a59-5208-42f2-8dbb-0db5b2d9e132",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8140df18-f417-49c7-b519-e75fc3580574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e323144b-f914-409f-8ebd-d15888b0896b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c9d273-3796-4a31-b2b5-35fa5b862e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1b92be-ba5e-4c98-8285-72db76fd3dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c64f5df-6783-406d-8925-eba848859f02",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15d3ae1-e2cb-4c19-aa94-9e07ed2dffd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f40268c-22bc-4ab3-a1db-a8b771d443b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9619a3d7-64a6-4c43-896d-9509cb535873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5add42-8880-4807-b717-e890677160ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1c65c8-8bd8-4825-9ec7-267286c244da",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73fe9c-c0ec-4f12-a0d1-d8641061b54b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6a9107-9156-479c-a1a3-6d1e8bff8ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dc7f2a-a858-49f5-b3f0-2a0262d90667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890b284f-7aec-4602-ae01-e83f9f7ce840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9865f0-7723-427d-9c54-49b7c0db6536",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd00829-b602-4205-a364-6e69fdf39ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14aa93be-36f0-4dcf-88ad-b726162e6872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bd8cff-cfc7-40dd-8486-ff61bd98fec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b246f8de-5923-4120-9fc2-7699b77e4e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a140f1ef-c4cb-496e-aff3-29fa1967d5cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed9470-80b6-4dc5-8067-826efee1b8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd4890d-0394-495d-bd4d-003930cc32d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e033223-81b7-497d-ba75-f0757ac1233d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ec16eb-17bf-4014-ae95-8f17e2784565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0d300-44c4-409f-8033-bd268ab43581",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4aca0e-dc0b-482d-9ba7-da00193d0e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1362f8-ffc6-478b-946c-d1e447973767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94593bd2-3dae-4ae0-9c1f-da2964d48606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699ed8a6-6ede-4eb4-8992-aba94a8511cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9373fd72-43c6-4df1-8c54-7ee3161ae989",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4bdd5-fc86-4e65-a782-426110027ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110f99f5-4860-4a51-94bd-32b552a2c267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b3f8ef-da01-458b-a199-1b5bb6b3d277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936bc51c-b068-4d32-9f7d-1898d4ab7bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202bd8b-360a-4793-a3de-88e28916046c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9ce54-1fb6-43db-beba-f4e9caa4f5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23bbf32-c7a2-4785-a051-3ad85cdac477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9551d8-95d3-47ae-b184-3070117da77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce77100-f561-48fa-bcbc-9ea52fd09101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3fb261-8156-4b5f-bca4-dd2144add366",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ae297-3364-4563-9fe9-53a7b29a7488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6bb46b-e5db-465a-89d1-fa24b1bb0ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce3850f-f6b2-423d-8548-26d0247514fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a543b176-079c-42b1-a52d-1c5fdb4a0c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0e214-0e35-4561-849f-6c7453abd29a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aef0332-323b-4d66-bd27-6a29b111e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca6250a-ef06-4d1b-9c90-42533f0a5f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f3844-ee8d-4546-813d-a4d0dd5346a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb261f8f-940a-4861-866a-53dad4e8e39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c06d67-70a4-47c3-a439-025d17ed5899",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ca32ab-ea5f-4b10-bdb6-f54767ac7300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29571920-6a0e-46b1-913f-66333d6495b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed060835-b5ca-472e-8495-5aca3a211432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bf1988-cca4-40a7-8241-a6791159ef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a65a2e-2529-4c12-a36b-e122ca193014",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eaac02-d44d-4054-b56c-d685454477f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4793cd8e-51b4-42fa-a8d4-d6908a7713db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fde3567-e4af-4aef-adcc-200ee5ab24c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4098af-e1a0-44d9-ac37-a391eff24f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f550ae-1c7e-466f-99be-902b7d452299",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712cb953-eb6a-4cea-99f3-a71f42aff3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29110ebd-f74e-4f75-8f37-13e398998c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde60423-12d5-40d7-9afc-7d0d6fa273ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acc2a94-3d97-49d5-85c6-cd1eb0afcc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ba782-a37c-4c5a-93e6-eb0f114566f8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6185a49d-bd55-4327-ac79-c24ab5b96f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3f2e95-c36d-4ccb-9b1f-2a1abf07f68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c26b07-cf48-448d-9ee4-9ac3e53f79fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f2d273-f635-4c09-9811-abb5ed277d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b789496-42ae-45c4-a962-d9f540e7c1e2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46938c2-dfbf-4730-8e45-b5024504c319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625eba0c-cf97-4fe2-918c-aba527693720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb0787-adc3-4be8-a9aa-1d7abf89de0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811af2a6-62fa-4126-b91d-56d1f988268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5bdef3-d804-4762-9fe8-73cf3566da38",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ebaef0-043c-4546-a327-88a9010ec9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213717ab-a8fc-4450-b2bc-eb9beba40409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52914630-c969-485e-8a66-320ea1f16bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10098fb8-df76-46bb-a3fb-06b8cd521191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f025a67-db55-4943-803d-36704c70697f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e39227-c9f4-4f24-bffc-0158cf30abbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fbea14-1bf3-4447-a8ca-cec9a42e7fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50882194-8e5e-40ef-9330-8d82990d5e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cfbf60-81a1-493c-b801-9c153ffcb222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5133ce-a060-443b-9e7c-4d28e9c6af07",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd2792-b43f-4d78-b27d-bb86ed93df46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d9f27a-03e7-451f-961d-8d7729b9a24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a07f085-08f6-42c0-8869-2edb4f013499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08322c2-db18-40e5-924f-18569a9baf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f572bb9d-d0e3-4946-ae18-e438ef63d517",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e217b7f-3aed-45a2-8cdb-4fc82d7c25fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5232ae-d53d-48cf-b24c-1ed738e850d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dadebea-912a-4dfb-91e3-4e694cc1056a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de256ff-405f-405b-9ed0-e9c432b48e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbadc437-044a-46cd-befe-2e8d9ef43c2b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8176b9-aa36-4a71-91d7-d82b3fa5aa97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ae592d-a4d6-40e6-a79a-fe9070838178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796d7861-ef29-4366-ba44-c20506435b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7573d6c-61f3-4eb6-b4dc-6621f088f715"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b97d30c-e3af-4d50-abc3-72daa2e7caae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5325656-5e25-4887-823d-b53ef9c0e755"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61a243de-1835-4ee1-8642-f10440d66442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ecd96a2-c84a-4eb2-ae5e-cb18e0846a0e"
                    }
                  }
                ]
              },
              {
                "id": "409af2da-1e85-4785-896c-555be2b0db6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6e06b60-c556-4cc8-87ce-6ac14809a26b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6b9297-36f9-4f22-af7d-6373ed7f3ef8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cfbcfb06-18c5-433b-9c87-92d4080f6c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067d9d1-55d4-4ad4-ba04-c22b51409998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60481045-6e98-4383-9e69-0f8c8e184be6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4cac02a-b087-4c34-a885-450851d50143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "725b8c34-1d45-4b03-9aee-04ba183a99a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc354257-8963-4b58-82d0-24e5e2a12a61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9cc9a01-2094-4496-af62-49ee36e5a46a"
                    }
                  }
                ]
              },
              {
                "id": "09fd1a76-a391-4ab5-8f69-e66b0d72c463",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bcc6fb49-1482-454e-9602-2555eeaac4a5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59340fe-55d1-49f1-ac4b-e7b51e559ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "374d4e0a-0620-4faa-8415-60ee139e7b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98010a5e-ba86-4661-9af6-890687e8dc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9972a5-60b1-49e6-8172-d9936217a9ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49b7489d-9ee8-448b-8efb-481d46fdec3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df035e60-c540-464d-9743-cbf09aaa9b0e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2635252-54de-431a-a76c-3a57c63c94fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e2f4a39-19e8-4081-be6c-54a873a26330"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66deeefb-7d93-4750-bfe9-b35315fb4769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79c21717-cbd1-46fe-933a-512e9b30bd51"
                    }
                  }
                ]
              },
              {
                "id": "5a837c0b-069e-4e6e-80a0-14f7639b2101",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f4deaa2-7610-46f0-8d54-22169ee09144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a2037fe-4fc8-45a7-874c-4520d45885c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c69c1a72-6e8c-42d7-a4af-3a7b644f1b6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "030acb74-79b6-43d7-a0bc-026f53fb5f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d5af27b-f3a5-4ea0-9b1c-fdf4e430a885",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f9e3b8b-b16d-4eee-93a7-6054bafc8694"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86561c53-960f-4c8c-bfac-83f1a8f480ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee639b3e-cc9a-43b8-bf01-50d2ba2a23ea"
            }
          }
        ]
      },
      {
        "id": "ecb6093a-399a-479d-a3b9-cebabb5c0935",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "abfe9cb1-6337-4e4f-a044-0d4abf79fc64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecd60e8a-5788-4572-8389-f23e0447b0cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ec0857f-0541-4f47-a85c-218ddcb7ad5e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3403680a-6848-483b-af36-5f9faed9f81c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "50aeac5b-d3c8-42dd-b7d4-7b9f62a31834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c936a81a-8380-49b2-8179-4bdc9b31e64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0207ab0e-0375-42db-842b-0291408ea2c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c935fbe-20e8-43fd-9b5c-88d93b2133f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd22f6c-bb00-4e31-b05c-a030c07e9686"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb9d282-dc3b-4aec-bced-ab21bc5ddb90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8285c970-9e27-45e3-a85c-4dd8917f06a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27043e85-b287-401f-a026-9f6b54d9c3d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d188549-53c6-463e-b37a-18256fdfeb96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff587468-e0a6-4729-8d4a-18c2ebcb5549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdea9e30-aa5b-4ca1-9e09-c8f421b04949"
            }
          }
        ]
      },
      {
        "id": "0505f36a-41ee-491e-970d-d33771035076",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "156e3d17-49d9-4a5f-b3c2-0e0f1300b063",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b9b56b3-b0f4-460d-b619-2ab5ce6fea01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a18c61a8-555f-497f-970a-de9f772c10ce",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec430f4-9952-4b38-8d59-fb94290ff47f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef69dd4f-a20b-464b-a9ff-d78063ccbbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e41555-214b-4d71-bb81-b2b10c384120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "433563f0-a7c0-4972-86fd-999a0791879b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea1788a0-ca99-440f-9afb-e7fbc927ffa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "630e249d-34e2-4117-96ed-2b0b62e55bba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dfc4151-5414-42a0-b845-4d0902aa770d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2366c47-7a4b-4eee-ada8-21c8ea121645"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d054451e-a535-4a39-9781-5c066be49807",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1fdf32c-4303-44b5-8539-3d8ea1268047"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b05ea3e0-1b46-43dd-b544-15873d7d9f1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3599fe2-3792-48a6-9496-8f5a0f4ca178"
            }
          }
        ]
      },
      {
        "id": "f4446913-2f77-4c8f-b294-070406f0035c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cb597890-3ca2-4c0b-9d0a-2d7697f2345c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a19e3de-eee0-44e3-a684-af5d61e83ac8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b72f251-caa0-47e4-b8af-ff61b080cb60",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fbd282-8d6b-473e-aa73-cf0df0a8c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f44748f2-e359-4632-9fcd-4ce0b36c8333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543421de-29f7-4906-be9d-325b9b6d52a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab3ed4a0-dfa4-4cfa-9ef7-dfa0012e1597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec062f19-9c23-414e-9b58-7d9f4a45d846",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f1f70bb-9975-45cc-b0d4-9233133ae249"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "492662f3-b8d4-4fb6-a261-ba97c5ba8c48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d68ca5d-02ce-49bb-8a9e-b4a5ca912a56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87cd51f9-b400-445c-ab48-e4e49f021c5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "833101d2-67ea-4262-b842-283b51692831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f59751c-0622-4cc8-ae01-980d747b2a7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56d2c00d-9d59-4495-a4f0-dd98ba2fef81"
            }
          }
        ]
      },
      {
        "id": "b932fa41-c8ab-4e3f-a53c-05f10f0a9e82",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2401d4dd-d6ae-4b19-9404-93d570867d05",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0339301-87ce-4124-b14b-d7e6e3038eae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c52bdf63-a3f0-47ef-9735-3849ab6ee537",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36505023-ea41-4d00-9e71-228ca21eac98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "287c5dde-54c6-498a-a37e-6473c52ce62b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.108771929824556,
      "responseMin": 6,
      "responseMax": 518,
      "responseSd": 36.49213460412434,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699749424896,
      "completed": 1699749442559
    },
    "executions": [
      {
        "id": "3e92d6b1-f9ad-471f-86b0-842968c8c84c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6e292ecf-f56b-4a9e-b2f5-5b85b00ce31c",
          "httpRequestId": "2391bfa0-f5b2-433e-85f9-8bf5624df36a"
        },
        "item": {
          "id": "3e92d6b1-f9ad-471f-86b0-842968c8c84c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f29ed858-076c-4bf4-9075-c55f986649a6",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "170082db-d24c-48af-b41f-5b73f5be07bb",
        "cursor": {
          "ref": "f7e59e0e-6f9f-41b8-ae11-826f0a51a63e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "33219823-660a-4a32-b53a-832edf412821"
        },
        "item": {
          "id": "170082db-d24c-48af-b41f-5b73f5be07bb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aea2b6fa-3335-416f-acdc-7ffe56d934b7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3f0e7311-c46c-4bc3-8b27-99aab2e27e60",
        "cursor": {
          "ref": "53fde71c-7b56-4746-aea2-a9568bd892a6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d859a228-d779-4efa-8e12-dc825e227b31"
        },
        "item": {
          "id": "3f0e7311-c46c-4bc3-8b27-99aab2e27e60",
          "name": "did_json"
        },
        "response": {
          "id": "e0210a9e-2b02-4984-87b3-621f4d7fbbf4",
          "status": "OK",
          "code": 200,
          "responseTime": 518,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd0521-9fd4-4ed5-b8c9-8c75758c701c",
        "cursor": {
          "ref": "78cd5f08-fbcf-4e44-99b9-e03bcdc771b7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b35e59aa-8304-48d4-a995-9871d99487b9"
        },
        "item": {
          "id": "9cfd0521-9fd4-4ed5-b8c9-8c75758c701c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7f2feac-f7f8-4a45-9ffc-f73e4f76e45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd0521-9fd4-4ed5-b8c9-8c75758c701c",
        "cursor": {
          "ref": "78cd5f08-fbcf-4e44-99b9-e03bcdc771b7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b35e59aa-8304-48d4-a995-9871d99487b9"
        },
        "item": {
          "id": "9cfd0521-9fd4-4ed5-b8c9-8c75758c701c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7f2feac-f7f8-4a45-9ffc-f73e4f76e45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50bc437-777f-4cdc-806f-d9cce6335d11",
        "cursor": {
          "ref": "251b9ef6-635f-4593-9335-6909453b0be5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e09842c5-8141-42a1-a7cb-aee6b887d9a8"
        },
        "item": {
          "id": "e50bc437-777f-4cdc-806f-d9cce6335d11",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0ddf2950-b212-4f16-92de-a757a9b47121",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9740f8d4-4059-4130-869f-06c502857cbb",
        "cursor": {
          "ref": "f2cd0ef4-4530-4f97-8943-3128793bac86",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6032bc4-ce0c-4791-84e3-90900a8e13d5"
        },
        "item": {
          "id": "9740f8d4-4059-4130-869f-06c502857cbb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3ba545d0-220b-48c7-8b62-a83eeba21514",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159d0ca-3463-4bbc-855a-ff46b15381ff",
        "cursor": {
          "ref": "b34ca755-b617-457f-920e-4e525f14d0d4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f39bf6da-c1e7-40eb-a430-74b9fbd2f953"
        },
        "item": {
          "id": "8159d0ca-3463-4bbc-855a-ff46b15381ff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "59683cf9-8bc0-49f9-89dc-76820116ed20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33538902-345c-4249-be82-05e698d52ef1",
        "cursor": {
          "ref": "74e0bea9-670a-4a30-8a5d-3c93dde1f005",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40937de0-b108-46f9-975e-ef136b0280da"
        },
        "item": {
          "id": "33538902-345c-4249-be82-05e698d52ef1",
          "name": "identifiers"
        },
        "response": {
          "id": "d29e14b6-fc6e-4cc4-909a-fa1751b6e6cb",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcb35f-3cab-4454-ab52-cd41aa679037",
        "cursor": {
          "ref": "27ff9a3c-20be-4696-8db4-9ac50ce65364",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c1730c0b-0927-4912-b678-6b1097d4eae2"
        },
        "item": {
          "id": "78dcb35f-3cab-4454-ab52-cd41aa679037",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c7a6abcd-8f0f-4e8e-8c90-acee6e081df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f09e0f6-181f-4c68-98df-7442318a89d3",
        "cursor": {
          "ref": "8799b142-2d5d-4d9e-9309-abaeace53e91",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f4b1463e-187d-48fa-bd49-5135a5ef1aeb"
        },
        "item": {
          "id": "3f09e0f6-181f-4c68-98df-7442318a89d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88c4883b-e185-4ad7-b3ec-5cc71be99eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c77f9e-a820-4c94-b6d5-3a667f06144f",
        "cursor": {
          "ref": "0f1887bf-cbe4-4d97-bb9e-0a5aa3a306e5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "281c1b3b-5e6b-4277-a6f8-49362cacb94b"
        },
        "item": {
          "id": "17c77f9e-a820-4c94-b6d5-3a667f06144f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "613933b6-ec53-4208-9602-dde2d6c70a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ac2636-7a28-44ce-91d3-c0ebd2a99c6d",
        "cursor": {
          "ref": "3cbb74c4-9938-4132-adeb-e16bd3e7dcc4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5320c2da-5466-4162-9ab7-9c1eb52ac2c2"
        },
        "item": {
          "id": "a6ac2636-7a28-44ce-91d3-c0ebd2a99c6d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fcea2f32-ed9b-4745-89dd-88958c471b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2149674-3ced-429b-833c-1da81cd8e672",
        "cursor": {
          "ref": "8134595f-e0c7-49a5-b493-28de07526adc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff7e173e-85cd-483c-8a6e-ea6be3856abe"
        },
        "item": {
          "id": "e2149674-3ced-429b-833c-1da81cd8e672",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "85754d2f-5d31-4d07-b223-a2f4a6b694a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cfdb51-038b-4107-945f-0912be14301d",
        "cursor": {
          "ref": "991606ff-2860-4ea7-b74a-08293ebc93f3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3118e2cb-61b9-474e-9acb-37831fea6e15"
        },
        "item": {
          "id": "95cfdb51-038b-4107-945f-0912be14301d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f2aab1d5-a51e-4b42-86d2-89776975196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cea2d38-6022-44c6-91cb-d729785a4466",
        "cursor": {
          "ref": "eb5a1676-c674-4ba4-9c27-e5cc8ddbf771",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d540dc5-e1bd-4666-a0fd-92ebe36ec00e"
        },
        "item": {
          "id": "7cea2d38-6022-44c6-91cb-d729785a4466",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4812f3f-0276-477e-b858-b8f0a761bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3092fb-6665-4873-9eeb-5fa4c7afbd3e",
        "cursor": {
          "ref": "b9d017c1-4cf8-4816-b09c-b3a862026e56",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6c7c20d-0146-4d69-a546-a7bf537849b9"
        },
        "item": {
          "id": "fb3092fb-6665-4873-9eeb-5fa4c7afbd3e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "969487ff-e58d-4966-a038-304a4c2c5f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee253fb8-ec1a-472f-b952-93dadc8243aa",
        "cursor": {
          "ref": "30ac18dc-8b51-4d81-8741-9e576b198b0c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d4e6e918-095f-43da-b041-63b3cb1907a3"
        },
        "item": {
          "id": "ee253fb8-ec1a-472f-b952-93dadc8243aa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "58488c19-6a1a-46c8-8589-3542d6eb8f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7623549e-7475-4e98-97ab-bf2a9d0ee753",
        "cursor": {
          "ref": "e63ea7f9-028f-4614-9e6b-1ab50ad8357d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c82a70c2-84b2-43db-8ab4-c224a5abf097"
        },
        "item": {
          "id": "7623549e-7475-4e98-97ab-bf2a9d0ee753",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5eb19614-0ec5-4ae1-9d2d-668f9c797b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5da0a4-ac74-4f4f-bed2-6714454f47bf",
        "cursor": {
          "ref": "ed4800d5-e9ba-460d-a95f-bebe4518ab34",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "59e0b36a-5667-438c-b6f4-36e7d1a17343"
        },
        "item": {
          "id": "0f5da0a4-ac74-4f4f-bed2-6714454f47bf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "495976c2-28ee-4729-8239-6898f8fbcae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10656a6-ad0e-43f4-b275-6a38bcd46a8d",
        "cursor": {
          "ref": "c2174730-dc46-46ae-9e69-9ead0762cd08",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6e4b4940-e659-4b32-a59b-c4eb5620e029"
        },
        "item": {
          "id": "f10656a6-ad0e-43f4-b275-6a38bcd46a8d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c804a91-27f4-4074-81c3-be5b5e765ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba55b12-ddeb-47d6-bee2-e55ba52c4dfd",
        "cursor": {
          "ref": "50b94fae-dedf-4c13-b265-06cae071a4ae",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2bec3d75-66d0-4399-8742-43ace7ca4681"
        },
        "item": {
          "id": "eba55b12-ddeb-47d6-bee2-e55ba52c4dfd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21f39bbd-4b8d-4c6b-9c17-46fc50efce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d667b8-3a02-44d4-b59f-35dcf1a834de",
        "cursor": {
          "ref": "97cc229e-3fd9-4905-bb6f-29b00c52c954",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b7fdf10d-fef1-4f58-9a3a-27aa885a42c9"
        },
        "item": {
          "id": "14d667b8-3a02-44d4-b59f-35dcf1a834de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1dc15065-47c7-493c-bd01-c6f5d296cd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e601227-93d1-473e-9eee-91f5df1f5820",
        "cursor": {
          "ref": "230c8181-6778-4dc7-b270-aa18c0033d74",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "682e0fcd-fa14-4291-b641-378c4f2beba9"
        },
        "item": {
          "id": "3e601227-93d1-473e-9eee-91f5df1f5820",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aa4cc16e-85e3-45e3-aaf9-aa11ec5be8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac12f2c-355c-4929-a328-63c920060c47",
        "cursor": {
          "ref": "8274119b-05b9-4fdb-979c-2d81a15da60f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f9a9c582-6ceb-4e31-8e75-1081c1e9cfd6"
        },
        "item": {
          "id": "5ac12f2c-355c-4929-a328-63c920060c47",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "24f7ae1e-69d6-4d56-872f-e56a29f58f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4b2e9f-1f40-4c5b-9a2f-7ae35384089c",
        "cursor": {
          "ref": "71828484-9232-4310-b7fe-478dc9255306",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a0a7a7a1-9795-43d7-b694-0e4caae82383"
        },
        "item": {
          "id": "8f4b2e9f-1f40-4c5b-9a2f-7ae35384089c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2a2a4543-6561-4049-9988-fc62c8dab3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8ef21f-57ec-4ce2-ba49-8b443dbd3daf",
        "cursor": {
          "ref": "219bf36a-73f4-45eb-bced-865341b38aa2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fb693807-d169-4abb-ba07-03906a0c1171"
        },
        "item": {
          "id": "3e8ef21f-57ec-4ce2-ba49-8b443dbd3daf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "500eb2cb-7294-4912-9cf4-a8b3216df5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb50867-d024-4f97-bb74-208393598df4",
        "cursor": {
          "ref": "8ea2da70-6ec4-4030-b97e-a07d0d522b28",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c39244d-bcf6-4ea8-8aab-1155b1dbd2b3"
        },
        "item": {
          "id": "4fb50867-d024-4f97-bb74-208393598df4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "65b2811a-c96a-4fbd-9893-3e4c27643ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2177b9-f34b-4057-ad9b-3065f7a256a8",
        "cursor": {
          "ref": "177ade23-02ad-4cff-84b0-78d1451c3cd4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c788c670-c93d-47c3-b668-8c9ddf8513cd"
        },
        "item": {
          "id": "9a2177b9-f34b-4057-ad9b-3065f7a256a8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "733706be-3650-4917-a7b6-b161b177c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1312f576-cd08-4252-b6af-e5f78016633e",
        "cursor": {
          "ref": "4ddcb7a8-51f9-4063-b650-a59562ffb81c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "779e182d-c7f0-4482-ba70-3af16ae4d7dc"
        },
        "item": {
          "id": "1312f576-cd08-4252-b6af-e5f78016633e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f8699154-c211-4536-9b89-c47f82262572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89181a6a-2016-497a-b361-fa439dd936f0",
        "cursor": {
          "ref": "0781296e-fc84-4d19-a8dc-8ce004776171",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f635ff07-7bba-4718-9dd9-9fb527e196b0"
        },
        "item": {
          "id": "89181a6a-2016-497a-b361-fa439dd936f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "871d5def-6091-466e-84e6-3ddc6fb59089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f989a4-c1be-4373-af3b-8f1daea7010f",
        "cursor": {
          "ref": "26be6108-8393-4c64-a7a1-c60fbe7c1265",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3e92fdfa-d15b-447e-b9ad-4736440a97b4"
        },
        "item": {
          "id": "39f989a4-c1be-4373-af3b-8f1daea7010f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "66bab7d1-25a8-46d3-bb0d-00bdff3a07e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a61b87-c468-4f22-ae9a-8c5ee68c7a7c",
        "cursor": {
          "ref": "6dc94f7d-87c6-48d6-89bb-31969353d3c7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5a9a4ef3-bafa-4ab5-916c-59241eb2a13f"
        },
        "item": {
          "id": "a5a61b87-c468-4f22-ae9a-8c5ee68c7a7c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0d753703-3851-44b2-9b9a-3d57f1f9efd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f2ad7-e9b8-445e-ab29-05b28ed4e8d5",
        "cursor": {
          "ref": "a61c7646-a006-4c8d-bd51-c9d44f62ee07",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c1116e40-72b6-4717-89cf-8f47d2559298"
        },
        "item": {
          "id": "170f2ad7-e9b8-445e-ab29-05b28ed4e8d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3194f39f-0a52-4021-acf1-4858ff19b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232a37c7-38c5-42aa-a004-d546f4024f80",
        "cursor": {
          "ref": "59d6ed4c-e414-4abb-b9e3-0293ef57d879",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1dc2eea-7c29-4e26-8331-51baa91acb6e"
        },
        "item": {
          "id": "232a37c7-38c5-42aa-a004-d546f4024f80",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "984c1dc0-4d9c-4f13-a7fc-d037b4c87e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29741e2-e97a-484e-90ef-1105e84a3798",
        "cursor": {
          "ref": "8a842399-af7d-418e-b852-b36b6998e516",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5775232c-acbb-418d-8722-bfc3a860f05a"
        },
        "item": {
          "id": "e29741e2-e97a-484e-90ef-1105e84a3798",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dc20c204-3500-4acd-b30b-81613f803c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d410bc6-a4a7-4c62-8235-b88f788a0d7f",
        "cursor": {
          "ref": "1142b434-3101-4188-932d-40d710e305a4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "750af18f-def9-4f22-a6b6-1b413f40289b"
        },
        "item": {
          "id": "0d410bc6-a4a7-4c62-8235-b88f788a0d7f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cae75f00-1cad-4a82-bd33-67e10064bc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9a991-817d-4d55-80cd-8336978f96de",
        "cursor": {
          "ref": "fdc3e20d-5c71-43ca-b5ff-1cbb34da5143",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e85b6cd5-583f-4bc5-92ac-a2263eefe12f"
        },
        "item": {
          "id": "93b9a991-817d-4d55-80cd-8336978f96de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f66bb1d1-540c-41c5-96d4-88eb9edb07a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1718aa26-ab76-485f-9e65-2186e87b2ba4",
        "cursor": {
          "ref": "5913ff54-bd5e-4949-b647-677bf77b17da",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b4e1d54b-6c06-472b-b8a3-4cd1c59cf4b0"
        },
        "item": {
          "id": "1718aa26-ab76-485f-9e65-2186e87b2ba4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c4b82c5c-793e-469c-be93-dc945f4821c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ea9284-294f-4b1d-918e-03ba27e1bb37",
        "cursor": {
          "ref": "50c86134-b1cd-4bd3-94d6-764eeb8fb46e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "600163e6-dfa0-419e-83a2-773dbe5532e6"
        },
        "item": {
          "id": "e8ea9284-294f-4b1d-918e-03ba27e1bb37",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "008c4104-7a48-416b-9db4-33ce4f196c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d5897-4d43-4397-b057-2edce6e4a8dc",
        "cursor": {
          "ref": "0410aa3f-8e55-434f-891a-4eee47394870",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1de00ff6-8187-4ecd-99ad-c5032e575ccc"
        },
        "item": {
          "id": "237d5897-4d43-4397-b057-2edce6e4a8dc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2e0c2042-249b-40b6-b527-bae1e881f134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a73845-7fec-4758-948f-792ff92a9dfc",
        "cursor": {
          "ref": "dbc41614-9e07-427b-8a88-1549b95ba007",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "035fddd8-fe70-4ceb-8664-a3551df06509"
        },
        "item": {
          "id": "d6a73845-7fec-4758-948f-792ff92a9dfc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d0b36be-e721-4c9e-9670-bd4ba7fac2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bdef97-17d2-4af7-9be8-8fbde58153f4",
        "cursor": {
          "ref": "2e38ab3b-7ab6-4150-82e0-053720a6e252",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9b751b21-fd09-4ad5-9c05-39be86e4c07e"
        },
        "item": {
          "id": "65bdef97-17d2-4af7-9be8-8fbde58153f4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cf5f1545-921a-4a25-82fa-a7eb10d2ef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0d78f1-6308-4a0e-980a-a199b05e7f64",
        "cursor": {
          "ref": "8ebeaf64-c0e3-4d72-b31e-23d120f18246",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a89cf389-3b8d-497b-b339-57ac93cb4376"
        },
        "item": {
          "id": "0c0d78f1-6308-4a0e-980a-a199b05e7f64",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3265036c-712b-4b65-abc4-9166716baadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14e34ad-9a10-4e9c-a180-d2957b371a35",
        "cursor": {
          "ref": "b61177e0-a879-4442-a444-976decb74efb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cdff4a85-9e9b-4c47-ae8d-8a2a1ed2af91"
        },
        "item": {
          "id": "b14e34ad-9a10-4e9c-a180-d2957b371a35",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7b897656-1bc3-4ee3-bc8d-6bfd56ce65c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116438e4-b32a-4238-a605-a26f41bbb9ac",
        "cursor": {
          "ref": "c1838c9c-d220-4f74-866c-5e86804700a2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eeac6b27-a179-4956-9321-51102477b4b7"
        },
        "item": {
          "id": "116438e4-b32a-4238-a605-a26f41bbb9ac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8d0d6ece-7a80-40ff-b2ff-1bf65205f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42046659-4779-4a44-a1e8-cde7d545d36b",
        "cursor": {
          "ref": "4eb80968-ad22-449f-be45-b9d6d282ecf7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "727017e8-f9c6-40a7-bf01-de0b778d25f3"
        },
        "item": {
          "id": "42046659-4779-4a44-a1e8-cde7d545d36b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7b2d847b-102a-4240-b6a2-fe2cea5e6b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd96b0e1-6cd7-4c22-b28f-c82662420f78",
        "cursor": {
          "ref": "5ab8322c-b7f3-42cb-89fc-99dec5ab2934",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "de0dba7a-e05f-4da9-8e76-98cb501304a6"
        },
        "item": {
          "id": "bd96b0e1-6cd7-4c22-b28f-c82662420f78",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e8730ea7-419c-4079-83b6-1c8e9571ec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320c4698-d6fd-4c49-99cc-be8db8ced025",
        "cursor": {
          "ref": "5ef54473-ccc9-4dd6-a310-be9cde0cb82a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9f27e90e-b14c-401e-bf40-64444fa26afb"
        },
        "item": {
          "id": "320c4698-d6fd-4c49-99cc-be8db8ced025",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a2af911-9527-480e-ba6d-d564b12c83e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3505b67b-336e-4cef-a878-a9a5b0d20ed0",
        "cursor": {
          "ref": "98a25033-31e2-4d7d-98a0-55088c9f820a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6f7be392-6917-4b92-aa90-a1fd56a62aaf"
        },
        "item": {
          "id": "3505b67b-336e-4cef-a878-a9a5b0d20ed0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "68a8b2ab-9c1a-47db-817e-f697b9d3c430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b73ca-65c1-4662-a39e-0b920f07b191",
        "cursor": {
          "ref": "da6fc6b4-560f-4f85-9b5c-fbfed75bdabd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b80186ea-2c7e-4f51-90b7-38bcd614108b"
        },
        "item": {
          "id": "fa0b73ca-65c1-4662-a39e-0b920f07b191",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7e068b9c-edb2-4448-b8f6-8effda008353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120a10de-d368-4587-aade-a501783c9a91",
        "cursor": {
          "ref": "1b402faa-dade-4745-ba98-17e7a267cdd5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d44108d6-fcd3-40dc-9f10-572128453ab2"
        },
        "item": {
          "id": "120a10de-d368-4587-aade-a501783c9a91",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cf5714b6-60de-4244-a6b9-f9a8c4eeb122",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15bf3fc-ed77-452a-be57-104b2b19cfd5",
        "cursor": {
          "ref": "912fcb34-b27b-44eb-aafd-3a8e6788f90f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ac4f08c9-761a-43de-9c81-5a22d1199a08"
        },
        "item": {
          "id": "a15bf3fc-ed77-452a-be57-104b2b19cfd5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8efdb7b7-be59-41c4-b176-25c769c302c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d9fff-b192-4f3d-94e4-3e2621681a07",
        "cursor": {
          "ref": "cc9285c4-51bc-44e8-8d5d-fd877c597d67",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fdccb8c1-7d87-4e6f-8229-54fcb7be8139"
        },
        "item": {
          "id": "d06d9fff-b192-4f3d-94e4-3e2621681a07",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "64ed84b7-43fd-4f47-91c9-4cc40544cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de7a23a-afd4-4d4f-9767-08eddcd8bcab",
        "cursor": {
          "ref": "2279ace4-4f07-4930-8ee5-2c1a37805ef3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8073c0f8-d7ca-4b93-9737-09111106d0c7"
        },
        "item": {
          "id": "8de7a23a-afd4-4d4f-9767-08eddcd8bcab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a54296ad-ad4f-49b7-a2d6-3938d05af84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf4995a-8cf4-4df7-a40e-141079c16fbe",
        "cursor": {
          "ref": "5326856b-e11a-4e11-9faa-7076cfcd3ffb",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a923f0e6-ea67-4dd8-8a0c-171e2d1171d1"
        },
        "item": {
          "id": "6bf4995a-8cf4-4df7-a40e-141079c16fbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aabe8cdf-10e4-4c05-807d-9b68041911cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e34df9-c5a2-4256-9623-7cbdbecfd3d4",
        "cursor": {
          "ref": "9cdda2e5-8e6f-48d8-8c21-05122cd88ddd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e76f7580-82bb-4422-9466-905c4a52deac"
        },
        "item": {
          "id": "c8e34df9-c5a2-4256-9623-7cbdbecfd3d4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "de37e1eb-e5d9-4ec4-8b1a-5820b99d0cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4f8f48-2b87-4e9a-bcee-aa6ebabffb9c",
        "cursor": {
          "ref": "320cc91e-e662-41a3-a764-c19152c6792b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0fab841f-94aa-42bb-8059-8382308445dd"
        },
        "item": {
          "id": "6e4f8f48-2b87-4e9a-bcee-aa6ebabffb9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d473155c-6c04-4624-833f-236cc628ea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07442eb0-713f-4607-906f-d8dea0f5d408",
        "cursor": {
          "ref": "b579413a-c223-42ae-b291-077044970d30",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "380b6824-1e62-4dbb-ac20-02fc73cae673"
        },
        "item": {
          "id": "07442eb0-713f-4607-906f-d8dea0f5d408",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "223eb89d-616c-41f6-86dd-b857717b6af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd154275-5e7d-4d31-887d-00c0eca9d4ba",
        "cursor": {
          "ref": "5c3e65ab-1cd2-4f9c-b5ec-0aebd7d3ec21",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "85316242-5721-4ab8-af09-c55c31782890"
        },
        "item": {
          "id": "cd154275-5e7d-4d31-887d-00c0eca9d4ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bbe5bfff-e85b-4189-b42c-52388cb916b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8056aa-d9f4-416e-a040-0f0c78ad243a",
        "cursor": {
          "ref": "b6426de4-6664-4824-9c29-b41180064bd6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "16fd1d2d-551a-4aaa-8965-5ddb0e330d43"
        },
        "item": {
          "id": "3a8056aa-d9f4-416e-a040-0f0c78ad243a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7494047b-3fc1-472e-abd8-35920af2eb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c1b569-788d-485d-b2ed-3b8285a1cc8d",
        "cursor": {
          "ref": "a5d5cfed-4979-4133-92b2-1cb0fb3a4e59",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "85b11056-8bfa-4669-83f0-e8b430f31dbc"
        },
        "item": {
          "id": "02c1b569-788d-485d-b2ed-3b8285a1cc8d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2cf7e1df-3b38-46a5-9aae-01b0918cb273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d42b9c9-5764-4035-810a-1e0fee6a28e2",
        "cursor": {
          "ref": "cc6ce239-47bb-457e-ba39-5447a671016a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f323e54f-345c-4c12-9d33-19948628081e"
        },
        "item": {
          "id": "4d42b9c9-5764-4035-810a-1e0fee6a28e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "186f6f0e-1b4c-49d0-af30-b65b9bdfaf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d5e868-e75a-4cc8-8686-103a643370cd",
        "cursor": {
          "ref": "939d9b96-1a6c-47c3-aad7-05e7e87979c1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cb986671-bc5a-4482-b5bf-d583ba9f9eff"
        },
        "item": {
          "id": "13d5e868-e75a-4cc8-8686-103a643370cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2fe0d8ac-52c6-4cc8-a396-acfce482854c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c18355d-166c-4a78-8b03-511cff525594",
        "cursor": {
          "ref": "2902bde8-611d-4368-9e6d-43a2c2a414f1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f75bd3a-43f7-4474-93a1-d1b4cdeed13b"
        },
        "item": {
          "id": "0c18355d-166c-4a78-8b03-511cff525594",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "59af3cfb-5213-445d-8ce7-924788de5df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d597d065-6907-4b15-8c24-cd69811699a8",
        "cursor": {
          "ref": "4cfc9298-0d18-4772-97d3-04a9711f26fb",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a04f801f-3cc0-46d3-bc79-0567b6a9c1ac"
        },
        "item": {
          "id": "d597d065-6907-4b15-8c24-cd69811699a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a412ace3-a7c3-4fea-a122-545d97866eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f9368b-dac6-4e07-b149-0703a7d267a9",
        "cursor": {
          "ref": "58c45bfb-a99b-4379-8499-740d504bddbc",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "08c3ab15-26f5-44eb-bc9c-d0832e693978"
        },
        "item": {
          "id": "02f9368b-dac6-4e07-b149-0703a7d267a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "525ada8a-0a14-4705-b8ef-87c13819dd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad2e169-d2e3-448f-9605-69fc838b394b",
        "cursor": {
          "ref": "400bab9b-ef68-4961-b5a1-50586d5e645a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c55a2fc-0b2c-4bb2-b068-faf896b67cf5"
        },
        "item": {
          "id": "cad2e169-d2e3-448f-9605-69fc838b394b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d084cd92-a3a0-4da3-b9b3-da9103b568fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2abe7e7-8e98-45f6-807d-a4d86edea687",
        "cursor": {
          "ref": "7caeb55d-07a5-4bf5-bbd6-ef3b42779e35",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17e53ecc-ebf1-408e-a142-7a45fc5246ec"
        },
        "item": {
          "id": "d2abe7e7-8e98-45f6-807d-a4d86edea687",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79e0b118-7a79-4590-8562-7feccaa00787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b387c0-155c-4671-b579-7cf6396201d3",
        "cursor": {
          "ref": "448bd877-239d-4bd2-ab4f-c3e67ef89430",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43bb3bf2-9a95-4d55-b430-7b63311c45e6"
        },
        "item": {
          "id": "11b387c0-155c-4671-b579-7cf6396201d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3d5013dc-b69f-4a8f-81a2-5e0535be5d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f39f26-3f32-4db1-b391-0d88907a3c17",
        "cursor": {
          "ref": "ff7d41e1-3fd3-4ee4-b206-05707cfa40f7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "63e19b2d-0d26-4b20-aeea-0b768b9f47c2"
        },
        "item": {
          "id": "d4f39f26-3f32-4db1-b391-0d88907a3c17",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1cbc6f1a-f322-4a7e-980d-48328d3a999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d2f04f-93ca-4a21-951c-e4b19df8b34d",
        "cursor": {
          "ref": "c7ade15a-6ff7-494e-b1e1-470785ff6427",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9ca44a10-469a-4ee9-a918-1e16c3573389"
        },
        "item": {
          "id": "e6d2f04f-93ca-4a21-951c-e4b19df8b34d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bf278e74-9283-419e-82b4-43b3e8d9ae8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6940a82-3639-4cba-94fb-8a28241296d3",
        "cursor": {
          "ref": "7bb98399-3fda-4302-8068-35cf51679232",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b21b56e-0c8f-47c3-b518-b5c1ee0314f1"
        },
        "item": {
          "id": "e6940a82-3639-4cba-94fb-8a28241296d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ecce5869-1fc0-4f1f-92b3-06f992e65e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac19945-ff40-4065-b064-a815c268a673",
        "cursor": {
          "ref": "e40d779e-d6fb-48f0-a85d-5a6db79a0b3d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "082b735e-486b-445c-8f3f-2ca466d602a9"
        },
        "item": {
          "id": "7ac19945-ff40-4065-b064-a815c268a673",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "592a2013-e965-4cc6-b8ce-e1b47abfd9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cf7d28-5f99-483c-ad84-db49f5c2a161",
        "cursor": {
          "ref": "55ff6e7e-53c3-4a2f-9ab4-51f2421ada93",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e594db3-6eb5-4e05-ad99-c3b99204f923"
        },
        "item": {
          "id": "87cf7d28-5f99-483c-ad84-db49f5c2a161",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2fa2db8f-fba5-4ef7-a29a-d78102648992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810f0dc2-e561-4338-9f21-80372c310b93",
        "cursor": {
          "ref": "803eb12e-abbc-44c3-a1b6-d87040ff433f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea70cbfd-ebeb-41e6-8709-e6e69e95e388"
        },
        "item": {
          "id": "810f0dc2-e561-4338-9f21-80372c310b93",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "37622f4b-0bad-475e-9d96-70744267cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e1e925-7cf6-4464-b27e-3656fe5e7a44",
        "cursor": {
          "ref": "b07e25fa-40da-416e-ae0a-743aaf5dbe19",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d448c4d5-55ae-4894-9240-f6e5d27d76ca"
        },
        "item": {
          "id": "a2e1e925-7cf6-4464-b27e-3656fe5e7a44",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "972c10c3-810c-4c5b-a079-db50b3038615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99a97f5-222f-41cf-b74c-d9a49008f62c",
        "cursor": {
          "ref": "237b03a0-f0c4-45b6-98b4-8c76d9c80eda",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "44fe1ac5-0e34-4ed5-aad0-dcfbc257a0d9"
        },
        "item": {
          "id": "a99a97f5-222f-41cf-b74c-d9a49008f62c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4e7be357-152f-43c6-9fdd-54e8e8cea879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20499885-ead7-4d84-bdbd-04e72d236f2f",
        "cursor": {
          "ref": "0b853322-3aed-451b-82f1-85ce46cb2278",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "452550b0-f615-40ea-8b84-2777bdec0392"
        },
        "item": {
          "id": "20499885-ead7-4d84-bdbd-04e72d236f2f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0bd1b79d-eb53-4802-ace6-ec5d414fb85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dabfe29-82a5-4b81-83d5-0fd5dd5f2b2d",
        "cursor": {
          "ref": "b10e3300-1beb-4775-b8d6-307ea1046d50",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d7be00f4-6054-4bb1-9527-ccb9d90381c0"
        },
        "item": {
          "id": "6dabfe29-82a5-4b81-83d5-0fd5dd5f2b2d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "295462bc-836e-424a-94a4-29bda981ec5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258002f-e933-4545-b9b1-517e9d035b6c",
        "cursor": {
          "ref": "a96ee92b-56ba-415e-b766-ff3f34059943",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "00debcf3-95c3-4dfe-a28f-f3d49d9c0b74"
        },
        "item": {
          "id": "1258002f-e933-4545-b9b1-517e9d035b6c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82da71e8-471b-4ce0-baec-115fd82f4ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd4965-d88c-46d9-a966-aa4be1742650",
        "cursor": {
          "ref": "b4ff5114-8b4c-4361-8888-fa0289faa3f1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "138a08fd-ac6a-448f-ad01-822ad4615327"
        },
        "item": {
          "id": "dfbd4965-d88c-46d9-a966-aa4be1742650",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a9e8d19c-9cc3-49ba-9633-c92589757c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0e7dd-7010-4510-953f-7751d7f0dbcf",
        "cursor": {
          "ref": "ffa8fa5b-1bf0-40f6-bfe8-08f0a1112aba",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ef6d050f-1ace-4d07-84ce-e25751b3abe0"
        },
        "item": {
          "id": "92a0e7dd-7010-4510-953f-7751d7f0dbcf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d8d89eee-e71d-4562-8bba-43ec17a76279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23585a8-cd2b-4b45-ab35-324db349995d",
        "cursor": {
          "ref": "da063c66-0451-4195-ae7e-59bf62cf5aa0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89c040d7-68c9-4d42-ba5c-c6bd223a20e7"
        },
        "item": {
          "id": "e23585a8-cd2b-4b45-ab35-324db349995d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "40ccfcbe-ab92-444e-9309-b7402f9d8c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d8d37c-4893-4381-b27c-24372851a1a5",
        "cursor": {
          "ref": "a9a8d108-ad29-46c1-af79-5e74e87d1a7e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "28e6895b-3492-4154-a09d-db4771cf88d5"
        },
        "item": {
          "id": "c1d8d37c-4893-4381-b27c-24372851a1a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e0cbd11-2132-4d20-a0e6-cfd146e672de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec44b26-f326-42a0-a42b-09aa93fdb0b8",
        "cursor": {
          "ref": "b6d5817c-7b04-47e8-b2b6-87ac0c89331b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a22b0fd3-c961-44db-aa94-20e009c04833"
        },
        "item": {
          "id": "8ec44b26-f326-42a0-a42b-09aa93fdb0b8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a8b2984f-cdff-48ea-89cb-533617e4a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a07fcf-fdf0-4452-8257-fbfa08d1f7a5",
        "cursor": {
          "ref": "2330e5cf-069b-497b-9d28-8209c51b4ee1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "37a82a93-b3ed-42c0-9788-f3597b1276b0"
        },
        "item": {
          "id": "a4a07fcf-fdf0-4452-8257-fbfa08d1f7a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "009e4c0b-4957-4324-97dc-841a7655ab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0fc16-8300-429b-afcb-290ce86fe8b4",
        "cursor": {
          "ref": "0e30c47d-ec6c-4c8f-b311-38fdb7c1cbb1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d999f684-7b2c-4621-a83d-d0e2e49af049"
        },
        "item": {
          "id": "c6d0fc16-8300-429b-afcb-290ce86fe8b4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8b7a9348-3637-44d5-8c74-ea8f11942ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9104fb0c-4696-4273-ac8d-10b8b2e7330a",
        "cursor": {
          "ref": "bede0eb1-251e-4fc1-a5df-533f35c5037e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8799c1ce-ed7a-4651-984f-4a5db2991561"
        },
        "item": {
          "id": "9104fb0c-4696-4273-ac8d-10b8b2e7330a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a42e01e7-0fc2-4d02-bb53-18980f04bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0823be-0b90-44dc-b82e-9171b8695207",
        "cursor": {
          "ref": "040da014-46e5-408b-a9f0-89e0f2b09002",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0da250d9-07b0-43e6-be64-ded7cc1fa796"
        },
        "item": {
          "id": "0e0823be-0b90-44dc-b82e-9171b8695207",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "61208344-b574-4858-969a-38572530f2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3f475-cc7d-468a-bf8a-abb70d8a4767",
        "cursor": {
          "ref": "bd7261ab-4cc0-48be-acb1-2d1ce700c32d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72ea46e2-142b-4a82-8887-24c03556b6b0"
        },
        "item": {
          "id": "b1c3f475-cc7d-468a-bf8a-abb70d8a4767",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c204e930-a64d-4a0b-90e3-dc061bc79c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac74a8eb-40c7-47d3-ba31-457d98f91b84",
        "cursor": {
          "ref": "5d2d79e0-31e2-4bd6-8a10-b0c693a19fa4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fa52c55d-aa84-4557-9016-82611309b1f0"
        },
        "item": {
          "id": "ac74a8eb-40c7-47d3-ba31-457d98f91b84",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "661dd282-f726-4765-b594-c35bd88045ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43f7300-8910-4514-9c90-ecde268465c5",
        "cursor": {
          "ref": "97f5ce60-c25a-4f21-a7de-0241fead04ab",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dee7d609-9f16-4dd4-9584-c9ea1645adac"
        },
        "item": {
          "id": "e43f7300-8910-4514-9c90-ecde268465c5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "05730239-b79b-463d-ae28-51a605187c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17969c39-0647-4907-b9a7-65b8ff79b03a",
        "cursor": {
          "ref": "81eaf5d8-5f48-4222-bd8a-9a3472c115a7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e9f21bb-2be2-4697-9164-c3bedcabf395"
        },
        "item": {
          "id": "17969c39-0647-4907-b9a7-65b8ff79b03a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1cb36a72-401d-474e-8ddf-ef2b985468df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a635c64-55cb-4321-bf50-c7079b5e159e",
        "cursor": {
          "ref": "2c0d31b0-a002-4f43-82d1-97be462e4bec",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c1089b4f-297a-47b4-817e-ff8b68547e0e"
        },
        "item": {
          "id": "7a635c64-55cb-4321-bf50-c7079b5e159e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ac30fb02-4b54-4ab9-8d43-9d59b12a90bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402c2e52-2309-4d89-b040-7fba73386d6d",
        "cursor": {
          "ref": "697330f9-e9e7-4b65-b09c-282cd445285f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0cf691a8-6c8d-4424-ad49-695faea27332"
        },
        "item": {
          "id": "402c2e52-2309-4d89-b040-7fba73386d6d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a3056f7c-a3b1-4959-a3e0-7ff63ced249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f61f898-8c41-43c6-9e60-f4a7a1b6e06f",
        "cursor": {
          "ref": "269b4c41-a41c-433e-9963-1e6059f4f0ad",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "add76be7-aafa-48ad-8e29-28c48fbbb6d7"
        },
        "item": {
          "id": "5f61f898-8c41-43c6-9e60-f4a7a1b6e06f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7be94787-de1f-4af0-aef0-081f91305be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bacce97-2d97-48da-99be-44f374f8b9ee",
        "cursor": {
          "ref": "f48306ee-b637-4b2a-a91d-54c6daa0a118",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1425a2a4-caaa-441d-a476-99d9ce24cac0"
        },
        "item": {
          "id": "2bacce97-2d97-48da-99be-44f374f8b9ee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1418a049-bd95-45d3-9415-0f5c678978e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011cc342-d645-4ae5-b25c-0d57e3b33bec",
        "cursor": {
          "ref": "ac11e42d-9c9d-42c4-9b08-28502d2e0baa",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f44d84fa-a726-4ed4-98b6-de08341c51d0"
        },
        "item": {
          "id": "011cc342-d645-4ae5-b25c-0d57e3b33bec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e5a19df-9c56-4aa7-8724-dc4365c66bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0a3b40-22b7-4eb5-bfca-fdd002d2041e",
        "cursor": {
          "ref": "3d66a732-4f52-4288-bbd7-9beacd49cf2d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac1b5a44-8560-4a56-87fd-d91d112e67b6"
        },
        "item": {
          "id": "5b0a3b40-22b7-4eb5-bfca-fdd002d2041e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ff7168f2-4548-4c51-bddf-21e48a81f4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7613400-a2a0-4182-8953-9036da37d98c",
        "cursor": {
          "ref": "5142452b-ed7a-4637-a5bf-46e7cf433d32",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fd05cb0f-0ffb-4bda-ac8d-74d3c91e8d8b"
        },
        "item": {
          "id": "e7613400-a2a0-4182-8953-9036da37d98c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c78273b3-89ab-4f86-95e9-16b6e97cfa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56491a8f-3be9-4175-bcc0-9ecc75965f47",
        "cursor": {
          "ref": "bfe23978-560d-4158-872a-5a5e430490a7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "168d0c91-6169-407e-bdb2-751474301226"
        },
        "item": {
          "id": "56491a8f-3be9-4175-bcc0-9ecc75965f47",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6fc2012a-2371-4c8b-9dff-d38fea952c84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27946a50-83ac-4508-828c-8e62835e61fa",
        "cursor": {
          "ref": "a76caf79-8a9a-428b-9d00-13cc7fc78fb7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "137d24fc-499e-4159-b1e7-b4b0fdab7310"
        },
        "item": {
          "id": "27946a50-83ac-4508-828c-8e62835e61fa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e689b754-ec42-4c52-b08c-3bd334c342d0",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cc042-c7d3-47f5-bb6c-a48acd786327",
        "cursor": {
          "ref": "df15162b-6a06-4e53-b347-24bd9a4d208e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d548784d-66d3-470d-a028-101478f7d8fe"
        },
        "item": {
          "id": "e80cc042-c7d3-47f5-bb6c-a48acd786327",
          "name": "credentials_issue"
        },
        "response": {
          "id": "69de9945-9148-4f06-a9b9-7e0e6f0e34c1",
          "status": "Created",
          "code": 201,
          "responseTime": 311,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8e4357-53b8-405e-a142-1fadfad221d5",
        "cursor": {
          "ref": "41eb13fc-55ba-40fb-aed5-d67bb487ecb8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7780bb66-8ed9-4a8f-9bc5-0151a0c718dc"
        },
        "item": {
          "id": "fc8e4357-53b8-405e-a142-1fadfad221d5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0660ce2c-9b55-486f-a682-189030fbf4a5",
          "status": "Created",
          "code": 201,
          "responseTime": 100,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d8f7d-464f-4d67-8818-83c9876d3c4e",
        "cursor": {
          "ref": "e59f787f-b233-4a0a-badf-b7d81bbded94",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "151998fe-2523-46c9-bcfa-8e7a4087fac1"
        },
        "item": {
          "id": "2b3d8f7d-464f-4d67-8818-83c9876d3c4e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3f7ced02-7432-43bc-8cc3-2b88253920e1",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c44828-b920-4fa2-946d-9b43e27d9590",
        "cursor": {
          "ref": "b8310794-f54b-48e7-862b-8e8041bdad89",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0de8f122-c3fb-4608-b643-0ba0ed0f60de"
        },
        "item": {
          "id": "41c44828-b920-4fa2-946d-9b43e27d9590",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d762d587-3fca-4ad9-9413-86526f17c340",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d44d42-6d05-4b9d-b438-5366f5b4cc8a",
        "cursor": {
          "ref": "9da8747a-42f4-4c64-b604-f8d8d9c11d61",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "028a0772-19f6-4c4a-812d-96825d4df222"
        },
        "item": {
          "id": "06d44d42-6d05-4b9d-b438-5366f5b4cc8a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "008cefa1-84aa-4ecf-96c6-46f9013fd39f",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd6fa2-2c4d-45c4-85e1-b037fa2e04dc",
        "cursor": {
          "ref": "ca315280-7be5-46ef-8a41-178566424fed",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88490b3c-53ef-4093-9bd7-93a4bdbb1a7d"
        },
        "item": {
          "id": "7acd6fa2-2c4d-45c4-85e1-b037fa2e04dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b08e156-dda6-4191-8b4e-e811da84e621",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6569dd9-ecdd-4bb5-b4c5-8d396022ab2b",
        "cursor": {
          "ref": "efef54e6-e1b9-486f-a490-2c797eda8526",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2f9191a6-7e78-4df4-b4d1-940cd76f9abe"
        },
        "item": {
          "id": "e6569dd9-ecdd-4bb5-b4c5-8d396022ab2b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9770bee9-7906-402b-a14e-3335a57b82c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30697437-9a50-47ef-a85f-2e000efd258b",
        "cursor": {
          "ref": "510cde68-30b7-4dac-8775-736d7e1b14ba",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00d47bc9-9aa9-4f7f-b0f6-4f53f248ab8e"
        },
        "item": {
          "id": "30697437-9a50-47ef-a85f-2e000efd258b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e402e237-f32a-4216-9b7e-93f30723c6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c737d8-c0da-4add-a63c-e7a05f5f377e",
        "cursor": {
          "ref": "d97b54e6-3f0b-4825-a08f-cce3ae17988c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a326cb0f-8052-4fce-850f-0c120627b18d"
        },
        "item": {
          "id": "f4c737d8-c0da-4add-a63c-e7a05f5f377e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "01aac256-8ebe-4318-9d6c-036f7caab509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018de221-ed82-4673-bada-dbdd873621d1",
        "cursor": {
          "ref": "a4dd9405-122a-40f3-82eb-9cd52f899fdf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0faa2306-44fd-4906-93fd-41e44b339615"
        },
        "item": {
          "id": "018de221-ed82-4673-bada-dbdd873621d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "99d65b08-490a-408a-ab24-2a50c063487e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6f938d-95d7-41c5-9d84-f5c677c1ee69",
        "cursor": {
          "ref": "825a50f0-d8d0-4b3b-a265-cf48faf1747a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5c9d1b3-ad4c-46c1-8267-a6494d478c94"
        },
        "item": {
          "id": "9b6f938d-95d7-41c5-9d84-f5c677c1ee69",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3498c837-7434-4370-b516-a640b42ae85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f3cd1-a064-4425-92dd-08d774fe7363",
        "cursor": {
          "ref": "ffad3c8f-d38a-4d53-9922-195fd418c071",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "287a3f32-86bc-47ed-b2a4-a994571095a8"
        },
        "item": {
          "id": "cb3f3cd1-a064-4425-92dd-08d774fe7363",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6518d023-340d-40ca-bdc7-eab979bd674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d471fb-59a2-496e-9e7f-0e40693a7649",
        "cursor": {
          "ref": "832b8718-bca2-4a16-8d3d-bef987204acc",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b4062d36-c140-46cb-9c62-3828089ff8a8"
        },
        "item": {
          "id": "51d471fb-59a2-496e-9e7f-0e40693a7649",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9b4330b-be74-4431-b835-02310a4f8e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3aa52a-a47e-412f-a6de-ebf4e70318fa",
        "cursor": {
          "ref": "a4565c2c-000a-4011-99d7-8787d3e30b96",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4a3d0b5-b3a1-48e2-a304-8eec7dc8746e"
        },
        "item": {
          "id": "5b3aa52a-a47e-412f-a6de-ebf4e70318fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f0257b5-5bbe-4dbf-aaf1-aa5b6d8c1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9639bd8a-c131-4255-ada1-3b6954b65f77",
        "cursor": {
          "ref": "8b4f8d3f-2f78-42cd-85a9-3bcd8f87562c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a84cd00-001d-468c-9343-dd22d185216f"
        },
        "item": {
          "id": "9639bd8a-c131-4255-ada1-3b6954b65f77",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0bc8da6e-862b-4d23-bdd2-ff64720ca44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7466a6a3-be81-46ea-9a74-b9c0e5f991af",
        "cursor": {
          "ref": "6f21ad47-bec7-4704-94f1-ec539bfc9ebe",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06ef7a16-b41d-401d-9aac-9bd84535b2ce"
        },
        "item": {
          "id": "7466a6a3-be81-46ea-9a74-b9c0e5f991af",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b75a5846-bc3d-481f-8386-8e7c4ab14acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af397bed-ae59-40f7-b3e5-49bb25da77de",
        "cursor": {
          "ref": "77164f73-4044-43b0-81fd-49680b53494d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08a5e6fc-d664-4b7d-a9f3-8b32cab69311"
        },
        "item": {
          "id": "af397bed-ae59-40f7-b3e5-49bb25da77de",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1a92ba1-95dd-4286-bc28-0ed6e3f73d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c3a8f0-dc08-4f5b-b081-69c77bf2c07b",
        "cursor": {
          "ref": "fa261af0-db87-4e87-962f-35bcdc6d339e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8b11e2e-cb3d-43c0-b692-07b602850d39"
        },
        "item": {
          "id": "e0c3a8f0-dc08-4f5b-b081-69c77bf2c07b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f085f3e9-5571-45f6-a26c-85b57bea7961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9bf8b8-23ef-40b4-b154-9c38751febc4",
        "cursor": {
          "ref": "b7d95962-e413-4337-b9dd-72c2a76a3c6b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9c6f50b6-ac1d-4b89-a1de-a736d6e88dc1"
        },
        "item": {
          "id": "2a9bf8b8-23ef-40b4-b154-9c38751febc4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "de3cba0a-d0df-4b6e-b3aa-79d12d5341c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb4800a-ee21-4908-8f7b-62c35bfc88c7",
        "cursor": {
          "ref": "bb7ed020-c8e7-4d27-bf01-b0b831f37d8a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "41ee7af1-0968-44c2-bee3-80b4dc4c6c40"
        },
        "item": {
          "id": "0eb4800a-ee21-4908-8f7b-62c35bfc88c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "23e161d1-d5c2-424f-9b47-e61ae8e2ce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81332a23-570f-4b45-b207-edc92149b60f",
        "cursor": {
          "ref": "425e41e5-eaaf-4722-8d47-23104af0b5b9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43b213da-4e3e-4332-b310-e7d05cb10730"
        },
        "item": {
          "id": "81332a23-570f-4b45-b207-edc92149b60f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97428837-23ff-4163-b3db-b1768b636a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4cfe1e-0a0a-475c-a8b9-05ca520527ff",
        "cursor": {
          "ref": "b14a1de9-5930-4128-b991-035f18dcdd8b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b91deab8-f3ed-4942-b9e6-03e2906509ab"
        },
        "item": {
          "id": "cb4cfe1e-0a0a-475c-a8b9-05ca520527ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8fad65c3-47b7-47ef-8507-ed6801a286b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eccc63-1dff-47e0-bac1-82e7fe5c0fc3",
        "cursor": {
          "ref": "03155e4c-19e0-4a80-a465-676ba6884b8f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "28b0e936-602e-4003-98fb-b71adaec6d3f"
        },
        "item": {
          "id": "55eccc63-1dff-47e0-bac1-82e7fe5c0fc3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7aec795e-0d24-4370-89aa-6f4d969c1030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7104bf-19fe-4b5d-a9b9-5fa907793de3",
        "cursor": {
          "ref": "df953b1a-c04b-4131-9086-d4ee1e6aad2d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c2b70039-9eb9-4023-a862-87e469aa8c82"
        },
        "item": {
          "id": "be7104bf-19fe-4b5d-a9b9-5fa907793de3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "255480ce-9048-46cf-a3d7-7be54be6eda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2a233a-0004-442e-aae0-d91cc6ce7fd9",
        "cursor": {
          "ref": "44fba745-816b-4079-a12b-248068bad2b8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96ebbee3-4d38-4eda-a56c-c25ea966e705"
        },
        "item": {
          "id": "7e2a233a-0004-442e-aae0-d91cc6ce7fd9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ec8ebc07-311d-4137-b7ae-53d2500d672d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda04fbf-19c9-4b57-a5b1-e06c2959fec2",
        "cursor": {
          "ref": "9c4cfc3b-41cf-426b-b635-9227056c805f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "945ad5ba-68ca-47cb-85e8-c03b7193b5f0"
        },
        "item": {
          "id": "dda04fbf-19c9-4b57-a5b1-e06c2959fec2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "20faa3bd-5e94-4b73-9c48-4dc17ac66806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958a1186-423a-42c0-8865-b263569a18a1",
        "cursor": {
          "ref": "e20827e3-d202-46e3-80e2-1d91002e282e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "39790033-440c-4a4d-bbd9-2c74c2d543d2"
        },
        "item": {
          "id": "958a1186-423a-42c0-8865-b263569a18a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7c927e0-36ce-49bf-b9a0-8713e5ae155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173b66cd-0062-43af-ba95-d9341e9876df",
        "cursor": {
          "ref": "e6efacaa-e677-47a2-ba32-4e5c9e0e9fd0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "913c7aa7-1dd8-413a-91b4-0016ed685234"
        },
        "item": {
          "id": "173b66cd-0062-43af-ba95-d9341e9876df",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd86a608-b4d5-4028-b122-81e4c338c6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45183548-9a07-4a89-833b-5b785281b30e",
        "cursor": {
          "ref": "c618799d-2bdd-49e7-adaf-da390cc10994",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1236a3a1-faaa-4851-b1af-e242c7dd58c7"
        },
        "item": {
          "id": "45183548-9a07-4a89-833b-5b785281b30e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25c3749f-e8bc-4910-84a5-9d595daff227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e412fb01-ffd3-428b-b56f-449dbb00e0b4",
        "cursor": {
          "ref": "3b4605da-72fa-41c8-ba10-4aca090a89b7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e55c0cb-fc15-4b9a-a547-7b7fa29d7885"
        },
        "item": {
          "id": "e412fb01-ffd3-428b-b56f-449dbb00e0b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05728082-297a-46bd-9b41-da66c27df59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d82313-b6a4-4a84-ac51-03acd461a241",
        "cursor": {
          "ref": "d42bfc9b-e1c6-40b8-a746-c1fb7e068e13",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba378849-b5d3-4de4-974b-2dea8c6de60c"
        },
        "item": {
          "id": "51d82313-b6a4-4a84-ac51-03acd461a241",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac5dc156-ec32-4084-b453-c5f4e328005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1251decb-03e6-4642-8124-c76a5fb1e324",
        "cursor": {
          "ref": "16455934-f41f-4e3f-b86c-74d7205cc49c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d0c16f2-06b0-47c9-be27-791a2f92c542"
        },
        "item": {
          "id": "1251decb-03e6-4642-8124-c76a5fb1e324",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e590db40-6332-4a95-9385-87c8b353d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19205ca6-7323-49a5-91f7-4643b52b075d",
        "cursor": {
          "ref": "81aa8be8-31f1-4447-b31b-bfac6772a563",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "beb305f9-597e-4b4f-9892-80b314ab0aa1"
        },
        "item": {
          "id": "19205ca6-7323-49a5-91f7-4643b52b075d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f1dcff4-e7e2-4317-8f68-ddddd186cadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa0b747-e37d-4a5a-8bdd-0b7ae30346e2",
        "cursor": {
          "ref": "62fd2480-2fb1-4e5d-872a-290242d0b568",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9ef70243-097e-43dc-8598-8767ad56987c"
        },
        "item": {
          "id": "dfa0b747-e37d-4a5a-8bdd-0b7ae30346e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d930358-4a38-4035-8ee3-bd683442bd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3bb8ea-4789-4a1b-a821-40da7660938f",
        "cursor": {
          "ref": "6eee634a-b5ae-40f8-9b89-d286b8b5a29a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "64665f05-21f8-42c2-abc1-9d4f49c691ca"
        },
        "item": {
          "id": "1c3bb8ea-4789-4a1b-a821-40da7660938f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c1cff3b8-d577-46d3-ae04-9a17757fe326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8ea80-f0e0-46b2-9741-e51a3ddfe178",
        "cursor": {
          "ref": "6ff6a814-9d4e-40c5-9a16-c61ccac08932",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "50f202c3-d1ee-41bd-a179-f80bbf12c30b"
        },
        "item": {
          "id": "6fb8ea80-f0e0-46b2-9741-e51a3ddfe178",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dff0715b-08cf-4510-867c-845fd3d8e7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a31148-4d7b-4f37-b9d8-a0cb48f720f2",
        "cursor": {
          "ref": "a453c6b4-ab8b-4afa-8634-b973c5c9ed13",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dddb3b85-6984-423a-9a5a-b7edc79eef02"
        },
        "item": {
          "id": "85a31148-4d7b-4f37-b9d8-a0cb48f720f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "979912b1-712e-40f5-9174-11612dd21033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9169e8dc-d0fe-4f28-9f7c-f7b4b3551499",
        "cursor": {
          "ref": "e6430b6d-0c35-42b0-be9a-3de1479e2764",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "00c88f4a-cf28-4bbc-b4c5-b74b2298e1a0"
        },
        "item": {
          "id": "9169e8dc-d0fe-4f28-9f7c-f7b4b3551499",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "863651f1-d318-4e16-a083-57186575a67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb1b243-82e7-4cf4-98e8-e6135bdc89f3",
        "cursor": {
          "ref": "8bc0ed4f-4f1b-401e-8095-48e260812009",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "32cdda5a-2594-4f53-ad73-22e238805c42"
        },
        "item": {
          "id": "4eb1b243-82e7-4cf4-98e8-e6135bdc89f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93ab651b-0816-43b3-8ec6-5df74c9345d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff82067-0229-491e-b032-afcc67edbada",
        "cursor": {
          "ref": "fcc18e87-db8b-4d87-ab69-49799a29bc41",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "40c482b8-337d-4fda-a583-cad74c45e55a"
        },
        "item": {
          "id": "dff82067-0229-491e-b032-afcc67edbada",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0ae8e4d-b88b-40b7-9ad8-de64eace4a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab2187a-51aa-44bf-82a7-9ef976110b85",
        "cursor": {
          "ref": "de21248c-26a7-4f86-87a7-7144dd5289dc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "70f213f8-de39-4328-bb42-4411c537bf33"
        },
        "item": {
          "id": "6ab2187a-51aa-44bf-82a7-9ef976110b85",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d448c353-c141-4fb2-8c79-ecf71ab9f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef816ad-db0e-4e27-9f29-5282f438849b",
        "cursor": {
          "ref": "6b4f6ed7-22de-4bec-b1fb-e76781e0c596",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c75887b7-1d2d-450d-a243-176de6965588"
        },
        "item": {
          "id": "4ef816ad-db0e-4e27-9f29-5282f438849b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a295400b-84a3-4389-ba12-6219ebd8c6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee43924a-5bf4-4cbe-ad7a-1433a71df5f2",
        "cursor": {
          "ref": "45c0a610-bab7-4cf3-8e6a-ccf51582ee17",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0118e56-b3a7-419b-8e05-bff7265fdf13"
        },
        "item": {
          "id": "ee43924a-5bf4-4cbe-ad7a-1433a71df5f2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "378c79d7-01eb-4126-beb4-21f62c2dda07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfd1ff3-f7a1-4e14-97e3-17e3a2392254",
        "cursor": {
          "ref": "f5662d11-7372-4132-88c7-24b0ffa974fb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "46657800-73bb-4df1-8a89-2b01cb7de7c2"
        },
        "item": {
          "id": "7cfd1ff3-f7a1-4e14-97e3-17e3a2392254",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8707ea8e-1345-4f88-8b1e-7f25f489ba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e09dc-709c-442a-924b-105f3af6bb2f",
        "cursor": {
          "ref": "90677213-b7a7-4ca1-9c9c-220d7fb88ce3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "06ea8db0-96e8-43fd-a91c-bb0da82a312f"
        },
        "item": {
          "id": "bb7e09dc-709c-442a-924b-105f3af6bb2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bdc307b0-19d7-4a0b-a08e-626db6f0cb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b6b96c-0914-4b5d-8d7a-04f92127b7da",
        "cursor": {
          "ref": "c1289305-c020-46cd-aad7-1c0bfa7fe398",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b150370-358a-4c03-a82f-ad9e1bea4656"
        },
        "item": {
          "id": "67b6b96c-0914-4b5d-8d7a-04f92127b7da",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26050efe-fb0a-4a76-9b15-755d6ec54be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036d6b7-c381-4d64-8c61-d8592d7321e8",
        "cursor": {
          "ref": "f7bf4025-dbe8-402b-bde9-ccf0829a3738",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d45c0cd3-34a6-43c5-8098-b34fc63009da"
        },
        "item": {
          "id": "8036d6b7-c381-4d64-8c61-d8592d7321e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "04318f45-86b0-43ae-a5c2-4d91f51b17c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07fbaf5-3c4c-4384-8809-710ff908950d",
        "cursor": {
          "ref": "a392bd11-96f4-4a36-908d-8017cd5fc43d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "236cc63a-5313-499d-a106-1e471023257d"
        },
        "item": {
          "id": "b07fbaf5-3c4c-4384-8809-710ff908950d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e984d93-342e-438a-ba07-eb5478c10c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3c3e13-4b3f-4c72-a990-089c4feb1fe4",
        "cursor": {
          "ref": "8bac8370-9db9-452f-a96a-bf2a2ab2ada8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0ae43477-0fb0-444f-aff5-71a36fd08db4"
        },
        "item": {
          "id": "bd3c3e13-4b3f-4c72-a990-089c4feb1fe4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "26e73080-b989-41a9-83e4-4f8a36a6e732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad40581-dfdf-437d-8e97-b33994b7c812",
        "cursor": {
          "ref": "52f38aaa-10cc-44d0-aa2d-d854e1d6d77b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "79eb21ce-8ca7-49a2-8767-dd579108b9e9"
        },
        "item": {
          "id": "1ad40581-dfdf-437d-8e97-b33994b7c812",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6e7d0fec-eee8-4623-88e9-e844f0ea8817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd203b6-28bd-48ee-9f97-8336ff6c4b12",
        "cursor": {
          "ref": "19b4189f-3aba-4d79-af4a-8ba62d5d099b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a964bb0d-1251-486d-9916-fa8a8bd02ef2"
        },
        "item": {
          "id": "2bd203b6-28bd-48ee-9f97-8336ff6c4b12",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "844b175d-01bd-4d80-bb19-79be93ae2eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673e8915-4330-4645-8756-068876412eee",
        "cursor": {
          "ref": "6f9218e7-0de1-4ff3-be35-1a5d0edcae31",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4eb38524-5b67-470a-b8bb-2b9197efaa45"
        },
        "item": {
          "id": "673e8915-4330-4645-8756-068876412eee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "607893e5-d7fa-4d6a-ab9b-eec04f670da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4763df3-e5ab-43e8-90ba-238b624afb38",
        "cursor": {
          "ref": "eebcf5cf-2d9c-44f2-90d5-3c8a9a887d30",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d1eebf62-a135-4909-a02e-32121c2909a7"
        },
        "item": {
          "id": "f4763df3-e5ab-43e8-90ba-238b624afb38",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a638e70d-905e-4601-b503-67cd30b00798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4eadfb-66d0-4e97-bfa8-88d7d2e1c8fd",
        "cursor": {
          "ref": "8483e360-386b-41fe-be02-91d0c2fbba88",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "031be37b-e989-4109-ae5c-52edd9db9f0a"
        },
        "item": {
          "id": "8e4eadfb-66d0-4e97-bfa8-88d7d2e1c8fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "44ee9d35-75f0-4835-b672-22af26f5d921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46edc2ca-d6b4-41e4-9a76-c0ed433f2ad8",
        "cursor": {
          "ref": "bc6b66c4-8332-4e74-9eab-08504f805fc0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c6cdd050-e9f5-4d14-a757-7fa13e5c857c"
        },
        "item": {
          "id": "46edc2ca-d6b4-41e4-9a76-c0ed433f2ad8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a492d25-17f0-436e-bb4f-33949e3e9be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a130bc0b-4e11-4a98-819e-8564514c38c5",
        "cursor": {
          "ref": "7c8a8258-6072-4a59-9fea-56e85239097b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "702b5480-6c39-4834-999b-dbd0a289985b"
        },
        "item": {
          "id": "a130bc0b-4e11-4a98-819e-8564514c38c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7f0ecd00-4251-4a0f-8b24-0190ccb59e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d46271a-c4fc-4b16-a3c8-b3e366c917c2",
        "cursor": {
          "ref": "6b9d3756-9725-42ae-bcc3-40df3e6e4342",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6a53edf8-6d65-4866-8211-0c62858d03b8"
        },
        "item": {
          "id": "9d46271a-c4fc-4b16-a3c8-b3e366c917c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "650baab4-ed9a-4890-a08c-43a51c0c8070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32ac07-a349-47c8-bf3e-563bfa4e9eb0",
        "cursor": {
          "ref": "b511bee9-8d17-4dab-a1da-3ac5a130c6d9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9de000a2-543c-47d9-94a1-cbfee681a779"
        },
        "item": {
          "id": "2d32ac07-a349-47c8-bf3e-563bfa4e9eb0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61728e0a-f915-49d6-93ac-14c27c2ba4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6fc102-f478-4873-819e-a7580c41be7c",
        "cursor": {
          "ref": "2bebbe22-bf30-4128-8545-3a927733f332",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c81d7c63-8f99-4f96-b44a-09dec85ea4d7"
        },
        "item": {
          "id": "0a6fc102-f478-4873-819e-a7580c41be7c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7691e5d0-b62c-4a59-aee6-035734aebda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc79757-1dc4-4e58-be40-9c5336f1c35f",
        "cursor": {
          "ref": "ce90f647-2a68-400a-8ada-e6f3cabd874b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d379e21a-2fc4-48fb-af56-0e08b4eac360"
        },
        "item": {
          "id": "6dc79757-1dc4-4e58-be40-9c5336f1c35f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "becb133f-9be3-4b71-a569-c9ba09f6614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fe79ed-6ca6-4689-9e78-3aae15b72dcc",
        "cursor": {
          "ref": "de214d63-6072-4fcf-bc65-cd53b7ee0cbc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d025ec1-b708-421d-8cec-26d881392105"
        },
        "item": {
          "id": "80fe79ed-6ca6-4689-9e78-3aae15b72dcc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81867506-544a-44c2-93b7-dff740d03011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4998b831-966d-4d34-837b-c19dea9d8616",
        "cursor": {
          "ref": "6f96ab5a-1de4-41d6-866e-08888e75b6f8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d6296ac7-a68f-4a70-9af0-d8ac4f9eb652"
        },
        "item": {
          "id": "4998b831-966d-4d34-837b-c19dea9d8616",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc351b2a-177c-42e4-af6c-cf19c7541c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a17b7a7-cdba-4daa-bcee-d8a9642880cc",
        "cursor": {
          "ref": "ef45ac4b-8ad0-4e2f-80fd-4356661fcb9b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf2edadc-e14f-438e-935d-ee31a925dc57"
        },
        "item": {
          "id": "7a17b7a7-cdba-4daa-bcee-d8a9642880cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8343e645-8646-4b54-9087-f6b7fc4b1280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bbd4c6-ce68-4460-82ce-92e470bc203a",
        "cursor": {
          "ref": "ad835462-a3c9-4a03-864c-d0d73e3649dc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8b3d381c-6542-4e2a-a50e-f988166f2862"
        },
        "item": {
          "id": "c7bbd4c6-ce68-4460-82ce-92e470bc203a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "66bbcbca-3eeb-4c96-82c1-2fd3b1ed0789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebecefe-9c3d-476f-8a83-678ff1319e7d",
        "cursor": {
          "ref": "71cb32af-66f3-4ef8-9321-b3d3e6857fde",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "856d2c47-79d1-4d42-ab13-fee7c029d054"
        },
        "item": {
          "id": "cebecefe-9c3d-476f-8a83-678ff1319e7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "03e6d908-69fb-4613-bf70-4deedb07085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7473e80c-da57-4d37-8e6f-6719310e12d1",
        "cursor": {
          "ref": "54ddf91c-d683-4190-9d94-3b652ff0b72d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "72ee8cc0-79cb-4cb0-b759-7c74da4325f6"
        },
        "item": {
          "id": "7473e80c-da57-4d37-8e6f-6719310e12d1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afeace1f-2898-4a98-bdfd-1c4ef042197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35acd4d1-53b6-47ec-893a-45bc27dfc89b",
        "cursor": {
          "ref": "990371a7-f235-4f7c-a7d8-49493787402a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a97a55a-58a8-4e78-b55d-9240ac96ef9e"
        },
        "item": {
          "id": "35acd4d1-53b6-47ec-893a-45bc27dfc89b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f8fbc63-0801-4118-a14e-fe3c7df383a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6cf196-5f7b-480f-89fc-27bd290d49a3",
        "cursor": {
          "ref": "964b6708-d9e0-419f-9173-4e971742c177",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3c7f0faf-a4d1-4df1-abb6-0ed42debf7ce"
        },
        "item": {
          "id": "3c6cf196-5f7b-480f-89fc-27bd290d49a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fb3035c0-e7ee-4498-a7ba-fc1739a213f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80b9aa-54c1-462b-9b72-fc60a40242d6",
        "cursor": {
          "ref": "2952e57b-6068-4db9-b135-9da8406648ca",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d011c59a-9177-4dd5-874e-465d556ed623"
        },
        "item": {
          "id": "8e80b9aa-54c1-462b-9b72-fc60a40242d6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48762e7c-4ee5-4f56-bf6b-b0302c0e6010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef631eb8-15ef-4903-9dff-3ae84eb55fe7",
        "cursor": {
          "ref": "92815365-a32b-4aa6-83e4-35772ebb2921",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6ef7392f-eb78-48f3-8253-fb3c668a26da"
        },
        "item": {
          "id": "ef631eb8-15ef-4903-9dff-3ae84eb55fe7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "442ce210-f8a9-43de-965a-22f6f8a747cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9304f65-7e50-48a2-b17a-9961e902bfdd",
        "cursor": {
          "ref": "dd511af6-fe3c-4f85-ad0f-7852cea576d1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c8025232-e5ad-4f38-9d85-e43eb2844c0c"
        },
        "item": {
          "id": "e9304f65-7e50-48a2-b17a-9961e902bfdd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "88432b93-7dbb-4b9b-b96a-6510b2d57dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b58bd-8a38-4ec3-a0f8-4d6bc058a48d",
        "cursor": {
          "ref": "4453864a-6602-4102-bb95-8c4e9365f7ba",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a649a4e0-a60d-423f-af1d-5b46fc89dc13"
        },
        "item": {
          "id": "9f7b58bd-8a38-4ec3-a0f8-4d6bc058a48d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dc9ea959-5d91-4ba9-a8c6-98ed9b3f5c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2847ad2-8386-4b7f-8a58-b2a079feea6f",
        "cursor": {
          "ref": "4ffba146-5e2a-4a68-a575-78ffdad0ac99",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b790ce8d-52a9-4bab-84f2-aa7caffe0fc5"
        },
        "item": {
          "id": "d2847ad2-8386-4b7f-8a58-b2a079feea6f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d7ec66e4-a3b3-4582-b891-48e735ac1d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4b579-081a-4896-a2f1-d0934b21bb78",
        "cursor": {
          "ref": "d64ababe-6fcb-4864-a5bc-50eafebddc13",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "edb20632-957f-48e7-9cb8-52811a2ac38f"
        },
        "item": {
          "id": "d1d4b579-081a-4896-a2f1-d0934b21bb78",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "381cc820-6aed-4957-9d54-d68df306d205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba430f3-aa03-457e-91a8-4a95efc4ca7d",
        "cursor": {
          "ref": "1dfb217e-5c17-428f-99b2-01ded05c3edc",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "87cd1bfd-660d-4bc4-bb0c-8bcd9867b016"
        },
        "item": {
          "id": "fba430f3-aa03-457e-91a8-4a95efc4ca7d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0674f148-50cb-49f6-a11d-55983c6e014a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105b87cc-e138-4377-bcef-26b62f41dea5",
        "cursor": {
          "ref": "a83e0c69-da97-4170-8a83-867d0c26bee8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "50f4b0d6-531a-407c-a8a6-942436b52bb3"
        },
        "item": {
          "id": "105b87cc-e138-4377-bcef-26b62f41dea5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "11b4979d-4cb9-413f-9c3d-48072b64ed93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94c5374-c929-4a46-a1dc-351f68b5771e",
        "cursor": {
          "ref": "085270cc-b9fb-4f46-9a13-f3752b3593cb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8b9129be-9e14-4edf-9223-06cb2246dd4c"
        },
        "item": {
          "id": "e94c5374-c929-4a46-a1dc-351f68b5771e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b4bee3c-40e8-4f98-9d5f-39786c0dbd99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfd37bf-6027-412d-af9d-841e0092550d",
        "cursor": {
          "ref": "836199fd-6c14-4867-9772-0edbfa57c95a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1c952ce-1a58-4aad-83f8-2cfd6a7e2547"
        },
        "item": {
          "id": "bbfd37bf-6027-412d-af9d-841e0092550d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aefacabe-6e84-45fd-8557-db6c2135eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe97166-d297-4165-b4bc-99e70987337a",
        "cursor": {
          "ref": "eb9df7c1-7f51-41ab-9d3f-772e98437dde",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c80a6240-e34e-4f4f-8b21-e188477ef66d"
        },
        "item": {
          "id": "afe97166-d297-4165-b4bc-99e70987337a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "af576c9b-8996-4280-bb64-c79f0e268ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1945d4f5-5976-426d-ac06-288d7cc747f5",
        "cursor": {
          "ref": "71e58ed8-a342-4728-83cc-b0b76b02e2be",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a1f4342-0131-4174-8348-e3c4530a6ef1"
        },
        "item": {
          "id": "1945d4f5-5976-426d-ac06-288d7cc747f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "813a337a-57d5-44fc-b204-9573932412ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02d398a-df82-418e-bae2-595003e9c8cf",
        "cursor": {
          "ref": "ff646cad-2882-4bd2-a947-258b8a187465",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "07037dfc-90fb-4f3c-b995-74730480e4c6"
        },
        "item": {
          "id": "d02d398a-df82-418e-bae2-595003e9c8cf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6341ddb-98bd-42e6-b0a2-a9a311a9f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ab2aa-6670-459b-9157-e73f316a70e3",
        "cursor": {
          "ref": "50784805-53b4-4acd-93e9-7995d75d358f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "298709cd-ecbe-4e51-b9b9-52f24c37d227"
        },
        "item": {
          "id": "e21ab2aa-6670-459b-9157-e73f316a70e3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f01e1464-c4f1-42b5-8661-7f2c928fcee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebb210a-8f19-42c6-a081-d5e52ae814df",
        "cursor": {
          "ref": "54c84446-3ba4-4bfc-b173-d4675b748638",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d663289b-3fd5-4841-9f64-163b118cc880"
        },
        "item": {
          "id": "0ebb210a-8f19-42c6-a081-d5e52ae814df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a0066845-62c0-40c2-98b8-85be0af48041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06965af3-d49d-47f8-b466-7f003643ef54",
        "cursor": {
          "ref": "9dc722b7-fc0a-45bb-b7a7-e3a51d9202a0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a51a7a78-4bc8-4468-83b7-e7e22ca578a3"
        },
        "item": {
          "id": "06965af3-d49d-47f8-b466-7f003643ef54",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6362ba2-4a74-4ffa-9c8a-786a1e3b76f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d548056-d8dd-4437-bd42-b2eb6934995a",
        "cursor": {
          "ref": "5ca4b15b-f7c4-4a5f-8bb8-2f76e562d668",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ac71fff6-1a3c-406d-9ff3-0168b7fcc459"
        },
        "item": {
          "id": "6d548056-d8dd-4437-bd42-b2eb6934995a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "700c1d8c-e1b0-4907-9863-fc8a9117e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824aa523-c478-4df6-879e-c043ca879dbf",
        "cursor": {
          "ref": "7ec051cd-37a6-42e6-990e-a8d07de04e63",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0dd3e592-c2cd-483d-9f19-8a50febce9cb"
        },
        "item": {
          "id": "824aa523-c478-4df6-879e-c043ca879dbf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "57c1208e-ddfc-4200-9699-9ea686b747fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543aba4a-6e55-43c2-b5de-b4ef9aa18a99",
        "cursor": {
          "ref": "53be9c95-67aa-45d5-849b-55eacd4ee05e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7f36f43e-f66d-40d3-88ad-523e38b76909"
        },
        "item": {
          "id": "543aba4a-6e55-43c2-b5de-b4ef9aa18a99",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "38a33aaf-ca20-4828-8e26-b7f4ba833085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a3ac7a-da4c-4d52-b599-3aa515904c4f",
        "cursor": {
          "ref": "8a08ee76-1125-413f-87dc-28e3c12d63f8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "19fbf17b-4394-4f23-8375-453e8db22653"
        },
        "item": {
          "id": "59a3ac7a-da4c-4d52-b599-3aa515904c4f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "571d58e6-1560-471d-8583-dc50594d4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27698054-57dd-40cf-994e-82db064896ff",
        "cursor": {
          "ref": "cc271efc-b508-43f2-87a6-c422c6ef125f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4e3c144d-3952-4d04-a402-372a0ea78a5d"
        },
        "item": {
          "id": "27698054-57dd-40cf-994e-82db064896ff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0b553bee-e875-4294-85c2-4974f636bda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bbc6ac-8260-491a-8a51-3026f2117ddf",
        "cursor": {
          "ref": "087ced80-85a4-45bd-8fd1-830c68b47dbf",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6f2c9b42-1e46-4141-ac48-82566686d8ff"
        },
        "item": {
          "id": "41bbc6ac-8260-491a-8a51-3026f2117ddf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d15441ab-5a52-4da4-b211-af40d45e7959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6957600-b592-4250-b338-433a20a5ac44",
        "cursor": {
          "ref": "d6082a3c-435e-445e-a3aa-f14e3a490354",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "09e1d58d-5b17-41af-97a3-20eaede7ba82"
        },
        "item": {
          "id": "b6957600-b592-4250-b338-433a20a5ac44",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e3266c30-2c60-42c0-9443-50ce96ab7828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265fb363-383c-4777-99d0-d4257a8d3836",
        "cursor": {
          "ref": "6aae293c-aea7-4846-98bb-795d4be64aff",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3fbbb48c-76e9-4934-8b99-02bcb5cad18b"
        },
        "item": {
          "id": "265fb363-383c-4777-99d0-d4257a8d3836",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "85dd9c9d-8a24-4d37-8278-b74b3d7fbc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e71ca-ff8b-496e-82ac-4dfc49d2b96d",
        "cursor": {
          "ref": "be4d7616-5d14-44a0-a4df-a94bc83ddc67",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "09ab0697-346d-4ec2-8718-455b331b529e"
        },
        "item": {
          "id": "905e71ca-ff8b-496e-82ac-4dfc49d2b96d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b8cceefc-435e-4f2f-a6a0-5c5b35b9cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc55314-c1bd-4851-81c7-018b24dfae16",
        "cursor": {
          "ref": "73df911c-2be2-4cb3-b9e3-d63efe55d9bb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1ab9f5e8-6a0b-4ca1-8430-6b41a485766d"
        },
        "item": {
          "id": "0cc55314-c1bd-4851-81c7-018b24dfae16",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e670ce0-8061-45a1-9510-1394f52d04f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a03608b-0b41-44b7-96c4-44cbb5b347fb",
        "cursor": {
          "ref": "d0195b7d-3099-47b6-b8fc-559cf29827fa",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3abffcf-97c3-43e9-a096-0a605d2570dc"
        },
        "item": {
          "id": "8a03608b-0b41-44b7-96c4-44cbb5b347fb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3009aff7-1a2d-46ae-9abc-bafd90b70470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df4dd1f-f2e5-4fb1-b56e-ceb7db8e51c4",
        "cursor": {
          "ref": "b2b554e6-72c0-4962-825f-bbb3c906d63d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "538d0362-2801-436f-b341-1ff4518e8f54"
        },
        "item": {
          "id": "6df4dd1f-f2e5-4fb1-b56e-ceb7db8e51c4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a24140b2-290f-464d-91a8-c6785761ca64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7e7562-c31f-471d-953b-8842b24ab637",
        "cursor": {
          "ref": "44d1c8c6-c119-415e-926f-160e941a2ae8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c6163bd-bc3c-47b2-a035-1534fde67d6e"
        },
        "item": {
          "id": "dd7e7562-c31f-471d-953b-8842b24ab637",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7f4b0515-1a4b-4cb5-bd4d-6e070912eac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097940a7-2ddb-4377-a827-15d53a1e0d13",
        "cursor": {
          "ref": "c2d4e3a8-04b7-43dd-8ac2-8e690e4c27e4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "35f8fcb7-04e9-4b1e-9f4e-9042befdbdd7"
        },
        "item": {
          "id": "097940a7-2ddb-4377-a827-15d53a1e0d13",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5329fcf2-c67a-43a9-a3df-174397ae30f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5af157-9719-4466-a0d9-6b51a75d0cc0",
        "cursor": {
          "ref": "288413f5-d631-49d3-83e2-008ec76cd956",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd54e61e-f868-4fb0-b7ef-76ceebaeee3c"
        },
        "item": {
          "id": "dc5af157-9719-4466-a0d9-6b51a75d0cc0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b0ec001f-355d-4362-827d-05d8e1f4c78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf28b4e8-829f-4aea-881a-190142876c10",
        "cursor": {
          "ref": "53c3d27e-c848-47e1-ab3a-c8fb0339432f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a57bd3d9-5923-437c-82b8-9a6181e33f7d"
        },
        "item": {
          "id": "bf28b4e8-829f-4aea-881a-190142876c10",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6294114f-3c63-47f6-af10-e075f635287e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19cc9f2-2cc9-4f82-b45b-3d532e8b1589",
        "cursor": {
          "ref": "c1763c7c-eb66-4ca9-8785-d3b329ab13bc",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d879e324-444f-4302-bec6-50ad31263218"
        },
        "item": {
          "id": "d19cc9f2-2cc9-4f82-b45b-3d532e8b1589",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b627c9c6-602f-460c-913a-26f8947b5f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8bd483-614b-4e8b-8cd0-5f606b34e11c",
        "cursor": {
          "ref": "626db8a6-3d3f-417f-8b6c-9e48c4f4621d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c59ec780-ae22-4588-bb19-894220bf20e7"
        },
        "item": {
          "id": "cc8bd483-614b-4e8b-8cd0-5f606b34e11c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1450b5d0-56fa-4b62-94e6-d76b669cb86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac297a7c-b385-427b-9c3f-f2b26357afed",
        "cursor": {
          "ref": "6ff150d4-9d49-425e-863b-dd2a6e1ee288",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50458533-bdd2-41e2-bdc5-66a7893c97f3"
        },
        "item": {
          "id": "ac297a7c-b385-427b-9c3f-f2b26357afed",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "14d9c940-6b99-45b3-a34f-4fc987a7fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b83695e-7c95-4d1f-b201-12005da1af12",
        "cursor": {
          "ref": "aed0b3dc-7d5d-49e6-9235-5de52ca66f7e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "31225a38-235c-43fd-93fd-e56c7685a61a"
        },
        "item": {
          "id": "7b83695e-7c95-4d1f-b201-12005da1af12",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "060e29a3-e886-420a-b7fe-b138707e2115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728872b7-a562-4564-8c37-573adf7cd0a1",
        "cursor": {
          "ref": "275c4c36-79df-46b3-90fd-f518cc7727bf",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dcb3cc4b-67d6-4a63-9a3b-7e35163b1cb7"
        },
        "item": {
          "id": "728872b7-a562-4564-8c37-573adf7cd0a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "825cacf8-e525-4ab6-9179-5499ebb72408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196af5d8-17f1-4083-bae2-69435f6d454a",
        "cursor": {
          "ref": "1021a71c-49e5-4979-907f-23617df5ef49",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ec3b14a5-0024-4b5c-b7da-b97a54172085"
        },
        "item": {
          "id": "196af5d8-17f1-4083-bae2-69435f6d454a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc5dcf10-04a2-4a55-a55c-f80cd5e03ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dff423-9ff0-4a9b-87a7-3da969c04705",
        "cursor": {
          "ref": "82c2ef19-4bb0-4685-839f-42c53543d5ca",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "93e7bc99-4ba5-4c75-9edc-53b1589e51bd"
        },
        "item": {
          "id": "29dff423-9ff0-4a9b-87a7-3da969c04705",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bd8e0c45-b0f7-4b69-9512-177382cf8e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766ff63c-5ccc-43a8-85f2-d216216a12de",
        "cursor": {
          "ref": "fb6fa7b7-175b-4030-a238-6813ae780836",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "30dba5b4-d5b8-4847-a854-a462e2bb076f"
        },
        "item": {
          "id": "766ff63c-5ccc-43a8-85f2-d216216a12de",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "632b9281-b964-409d-8e66-8c0224347937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc9b02d-3b20-4867-a374-7b29d5b4fa7e",
        "cursor": {
          "ref": "f40dc5b1-6bca-449b-a940-027c58cc135c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "43c105a0-f58d-4315-b720-9de535db4d1b"
        },
        "item": {
          "id": "3fc9b02d-3b20-4867-a374-7b29d5b4fa7e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4012bfa3-6cd3-4ad1-b8de-7ef9d57650c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf243bea-81ec-4b88-ae73-2eb8dde27c8a",
        "cursor": {
          "ref": "8ea09958-53f5-46f5-8f95-0228649d0d48",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "77be9623-7b02-46b8-9920-3b0230a18b26"
        },
        "item": {
          "id": "cf243bea-81ec-4b88-ae73-2eb8dde27c8a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ebddaac3-774f-4d6c-9ae8-6a5dbea67612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a6508f-24c5-44d1-8406-f1bada32bc1a",
        "cursor": {
          "ref": "bca000c1-9fe8-40e6-b315-6521aa53db1b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "718daca5-d951-45e9-a912-c88573a085d4"
        },
        "item": {
          "id": "45a6508f-24c5-44d1-8406-f1bada32bc1a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce55edc0-7949-4899-b445-245870ecc7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d197a92-5a75-4c08-8ed8-bb58f6f5be63",
        "cursor": {
          "ref": "ffbf2d97-acf3-4266-b8b0-f7e79faaae18",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04ac3bd3-4314-44da-859c-917771a1b197"
        },
        "item": {
          "id": "8d197a92-5a75-4c08-8ed8-bb58f6f5be63",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6d7b1caa-8fc0-461f-83d3-d34e4299448a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ffc63-c3bd-426b-9e44-b8084a7bad41",
        "cursor": {
          "ref": "5d40dbed-656d-47ec-8b57-630160b5225f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e23b0d1c-955f-4c70-9174-d5518e23f9b3"
        },
        "item": {
          "id": "d73ffc63-c3bd-426b-9e44-b8084a7bad41",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b4438c05-4858-4d1b-8d17-4076566ad5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11885450-ffce-4fd3-9ba9-6b2597dbb210",
        "cursor": {
          "ref": "ee8edea0-67f5-4b0e-b260-14ecf8afbaf5",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a7f24edb-5c9e-4d2a-b27c-b380a6287adb"
        },
        "item": {
          "id": "11885450-ffce-4fd3-9ba9-6b2597dbb210",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c629840-fed6-4fd8-9e48-aea597b0a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2747cb-2c13-4e1f-b94c-b31fbb3971cc",
        "cursor": {
          "ref": "70e5f1ed-8f9e-4119-87d5-e28791133c0b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "beea73a5-fd78-4583-9ae1-72cdb26fd520"
        },
        "item": {
          "id": "8f2747cb-2c13-4e1f-b94c-b31fbb3971cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "62433d41-69f8-4c99-aca9-c42f9a7d58a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3cc8e1-94d3-4d7a-a297-9df258923c51",
        "cursor": {
          "ref": "643ed5a9-0e5f-497c-8985-b8f13d8d6ec1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bc0dc495-1a0e-48af-b1e0-71ef7035cace"
        },
        "item": {
          "id": "4e3cc8e1-94d3-4d7a-a297-9df258923c51",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c65f249-22f1-430d-9e6f-8a45c01bfdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2648c337-5234-4b63-8043-796e366c642a",
        "cursor": {
          "ref": "67d71117-1996-4771-843c-e257eb3e2772",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "064227e6-5023-4e8a-9e8f-a42ebfa29464"
        },
        "item": {
          "id": "2648c337-5234-4b63-8043-796e366c642a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47ffd2b4-df0b-4550-91a1-04a75bffa560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f24edf5-5e98-46ab-b022-aba322aa7fe9",
        "cursor": {
          "ref": "62f60001-8117-4e46-8ebb-7f71025121eb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "25d08696-834c-425b-9114-e7230392d10a"
        },
        "item": {
          "id": "5f24edf5-5e98-46ab-b022-aba322aa7fe9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f181cdf2-0483-497e-8d23-f9aeb0fdcbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3856f171-087e-4f21-9c4e-a1d24fb8bc94",
        "cursor": {
          "ref": "936be6bd-83d4-4b33-95e8-4393ab27356f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a4ba8fc4-e69f-4f2b-b5f2-0e09f96d06e9"
        },
        "item": {
          "id": "3856f171-087e-4f21-9c4e-a1d24fb8bc94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8198201f-fa26-43b4-a6e9-3aa3af13cdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d956bc0-890a-442b-91ad-0506bef7914b",
        "cursor": {
          "ref": "a750d469-e39a-478a-b373-fc58b2d557e1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "687d2d56-14b3-4bdb-9698-45934b6754fe"
        },
        "item": {
          "id": "4d956bc0-890a-442b-91ad-0506bef7914b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "36b3e39e-3990-464f-bcf2-2826c7c4e6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b43b7f-6835-4ec0-844e-9a3bd2de049c",
        "cursor": {
          "ref": "45f5d6bb-c3ef-4253-aa8f-3830ba8fb2a2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8384d035-64db-4cdb-af62-9a10d67ffc4b"
        },
        "item": {
          "id": "29b43b7f-6835-4ec0-844e-9a3bd2de049c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8dae20d-d147-479f-a798-abac282661fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9418022e-9869-4305-9104-3a54c5587345",
        "cursor": {
          "ref": "39a87df0-e680-4bc5-90e4-2227645967a4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d763b948-d8f2-4203-965b-ce46a1a3e6de"
        },
        "item": {
          "id": "9418022e-9869-4305-9104-3a54c5587345",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7f432b2e-d748-478c-9cc9-df0d1d3a5189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e31a7-9508-4b0f-ad4a-38bb0ae60043",
        "cursor": {
          "ref": "3a20cd7d-aa34-473a-bf70-f845d86ecff1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "032c1f3e-1974-47c9-8baf-2584a9919b44"
        },
        "item": {
          "id": "d63e31a7-9508-4b0f-ad4a-38bb0ae60043",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0dded5e8-7527-4458-87af-d00e0b05f799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8583105-ed3a-45a7-b978-baa3ec052e45",
        "cursor": {
          "ref": "17165656-383c-45a2-a0b4-48c914240d92",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9cc1554e-05b0-4d5a-9406-893ccf371152"
        },
        "item": {
          "id": "b8583105-ed3a-45a7-b978-baa3ec052e45",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "149717c6-83dc-4921-91b1-3da05cfdf0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcdc237-237f-4ac2-a094-da8b2f0b8d2e",
        "cursor": {
          "ref": "7db7045a-9b07-405b-9866-9bc31edb8891",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ca42120e-9d04-419a-8d49-96a4182b5e8e"
        },
        "item": {
          "id": "8dcdc237-237f-4ac2-a094-da8b2f0b8d2e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b9329eed-3e9e-4c76-9671-1e800bf72e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781ba6fe-cf7a-44cf-9958-03fecd7968df",
        "cursor": {
          "ref": "ee560896-5ace-4d9d-9493-4f7a328a838d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4a257cce-2575-4303-b305-c65121a8eb7d"
        },
        "item": {
          "id": "781ba6fe-cf7a-44cf-9958-03fecd7968df",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e2c38c6-fa8e-409e-80a8-1c9f669bea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9d6c9d-15d6-405b-9a8e-2a538033d0e5",
        "cursor": {
          "ref": "2d77a10b-417f-4bd8-96eb-29a6200f0603",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9b3e45e5-6aeb-415c-bc90-e09f45eb11dc"
        },
        "item": {
          "id": "aa9d6c9d-15d6-405b-9a8e-2a538033d0e5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e98a07b3-4826-4249-b589-0e10b07b47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490b70dc-3cd8-40d8-ae1b-8273e9b2fcf6",
        "cursor": {
          "ref": "d88de596-9c1f-4094-9375-f40f25051c97",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6e08b196-1cca-47c2-9cd8-f88a0991612b"
        },
        "item": {
          "id": "490b70dc-3cd8-40d8-ae1b-8273e9b2fcf6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "72bebfb5-b701-414a-9e7a-0367d5a272de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac783d3-c02e-4a43-aa4e-ae5fbfb756c9",
        "cursor": {
          "ref": "8d6933b2-09fc-4e25-80f1-5ffd8d0fe768",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cc7a9924-a0f1-498e-9a44-1d7861ef5a1c"
        },
        "item": {
          "id": "8ac783d3-c02e-4a43-aa4e-ae5fbfb756c9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "119bb99b-dfa5-461a-987e-eb511d5b1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e481bf-b51b-47c3-a178-ee92d6470056",
        "cursor": {
          "ref": "045e3ce0-8850-4234-a950-26ae01e5948f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "77300b93-6b73-45d4-aaaf-b21393859f93"
        },
        "item": {
          "id": "c6e481bf-b51b-47c3-a178-ee92d6470056",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "71343dec-1172-4bea-8632-32b4bfcd5426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61b870-e8ca-4eff-95ad-2bfe04546c5f",
        "cursor": {
          "ref": "b4d6ee3b-bb20-4e6d-a892-a3e3565a96bf",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1ff5994c-207e-4e32-ae47-40d3e89cce3d"
        },
        "item": {
          "id": "0e61b870-e8ca-4eff-95ad-2bfe04546c5f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d440575-90ce-41d0-8ddb-73ccb684d57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2114c960-61cd-426b-9ad9-3a82af44ecaa",
        "cursor": {
          "ref": "b986629f-bd47-41c5-bea0-1651505a7a6c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6a0e95c-3dcf-4d7a-9bb5-8ca641090139"
        },
        "item": {
          "id": "2114c960-61cd-426b-9ad9-3a82af44ecaa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "951b182e-c615-4f85-9857-fe3a9475a927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fad812-3d9e-48b5-b5ee-69a9aa86c5ef",
        "cursor": {
          "ref": "bf9da2c7-de4f-4f38-929d-6c023537bcd5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7322e57a-1eea-4ca8-8206-a449f81f0080"
        },
        "item": {
          "id": "51fad812-3d9e-48b5-b5ee-69a9aa86c5ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f8829631-00ee-4f9d-aa63-c098b65ac76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221f2cd2-fb6c-49d5-8281-c9f5f2fd0a17",
        "cursor": {
          "ref": "f86e0154-8b3f-47c6-af7d-87044b19fae7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c60e169e-9066-451c-b073-71d6e48faa22"
        },
        "item": {
          "id": "221f2cd2-fb6c-49d5-8281-c9f5f2fd0a17",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98f3b6c6-04ca-4352-9e3c-017b647850cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8702f75d-82ff-41b8-bf45-c59469555685",
        "cursor": {
          "ref": "e2a7bb4c-ce72-41df-9d1b-65394f6af22f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1c166368-d67b-4166-ab90-214ccea6dd88"
        },
        "item": {
          "id": "8702f75d-82ff-41b8-bf45-c59469555685",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "62ed4a17-bfab-484e-bb3b-80e8f79ea5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3969d3ad-637b-4852-a473-423337d04c99",
        "cursor": {
          "ref": "a7874200-81d5-4338-8f8c-c2657cf495b2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "85d10df2-cb11-486f-abbe-1885b7fd0230"
        },
        "item": {
          "id": "3969d3ad-637b-4852-a473-423337d04c99",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "61d188ca-0bb9-4b16-996d-f9605895ea6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856797b1-84ad-42a2-84ba-e53ab54c3617",
        "cursor": {
          "ref": "09919520-0b2f-4dc3-b8cc-0ae7cb3149fc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf844622-6d3f-47e8-adee-5568e8605fca"
        },
        "item": {
          "id": "856797b1-84ad-42a2-84ba-e53ab54c3617",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "674c5477-bc68-4f07-8293-4ec58d28e0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39953a-46c9-433c-8546-f8d47f6b685b",
        "cursor": {
          "ref": "d34d52e9-986f-43a1-b784-dfafdedafa39",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "88ce347b-91b1-4c9e-b602-a56a0e21b68e"
        },
        "item": {
          "id": "0e39953a-46c9-433c-8546-f8d47f6b685b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cd9557fd-e9a1-49c8-9ce7-f17dcae66f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb5d5ac-1560-48ed-bc6f-244e2125fec4",
        "cursor": {
          "ref": "fe71d07f-0d4c-4d78-a00b-f6391abc3013",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59ae5a3e-8c74-47ee-b030-3e8d3209cbb5"
        },
        "item": {
          "id": "9eb5d5ac-1560-48ed-bc6f-244e2125fec4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7fd5ad04-8d4f-4d92-ab26-ea3ad7c3b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9db1af-4692-46d9-b1de-2061e3cb4ee9",
        "cursor": {
          "ref": "11b6b741-0148-4296-860a-f2a74e764b7e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dd673803-5c7a-40ae-9011-53395da66517"
        },
        "item": {
          "id": "9e9db1af-4692-46d9-b1de-2061e3cb4ee9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3fd2f5ba-c366-455c-919a-3489b1fa5d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3df79c-6810-4359-ae83-020841cff09b",
        "cursor": {
          "ref": "03df6a5c-67fa-436d-b324-f82aa8365d50",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "360080ad-691c-4dce-b2a8-41aa024d2a57"
        },
        "item": {
          "id": "ac3df79c-6810-4359-ae83-020841cff09b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8850706d-aff9-4c2b-8975-4eb025202adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f94e3d9-d236-451a-8171-32d9605b525f",
        "cursor": {
          "ref": "caf66547-49cd-4e3c-8390-de751ed33371",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4574ee15-2397-45d6-b844-d8a050e7d969"
        },
        "item": {
          "id": "2f94e3d9-d236-451a-8171-32d9605b525f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14101a10-6d2a-47d0-b1b8-1f2594a36317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68744063-a375-4982-bb86-a5866f0d5a88",
        "cursor": {
          "ref": "e7597021-c3ac-436f-9e8a-f9fbb3b0ef3d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a8ab6f30-e0ba-48d2-b8e5-00fbb050e1cb"
        },
        "item": {
          "id": "68744063-a375-4982-bb86-a5866f0d5a88",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a8370d24-2efe-456b-91c9-1eba45b7168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045b2d94-51ef-419b-a76f-fba6e78c753e",
        "cursor": {
          "ref": "d12fe52a-3d40-4889-8fb1-abe42fe07091",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "167085f2-fc1a-4131-9b93-bfac4dda05b1"
        },
        "item": {
          "id": "045b2d94-51ef-419b-a76f-fba6e78c753e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a7febd3f-81ca-4dd4-9820-bfccf2df0cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600daa67-85b0-46d8-b8d0-c749a5153fe6",
        "cursor": {
          "ref": "724d2e8a-75e4-41b4-bbaf-36b8f18eb1f6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9bf03af2-2715-4c64-8b92-99ac0c9995bc"
        },
        "item": {
          "id": "600daa67-85b0-46d8-b8d0-c749a5153fe6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03131257-5c9e-436c-b77a-79191d5108c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eb971e-9dad-47a6-be3c-4e6f349141fd",
        "cursor": {
          "ref": "b152fe98-4c4b-485e-9cb5-3a59cfd9dbdf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "57eead84-d474-4b72-b871-9de7f57d2b12"
        },
        "item": {
          "id": "09eb971e-9dad-47a6-be3c-4e6f349141fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0e269f10-bfd5-4aae-9f96-5196ca684254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0000ac7e-c73b-4512-9859-2a74f05224da",
        "cursor": {
          "ref": "8987e140-5214-4fd7-aa2b-894088ef92ed",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ade1bf8-1b58-4511-a390-49020fe47f9d"
        },
        "item": {
          "id": "0000ac7e-c73b-4512-9859-2a74f05224da",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b155f6d3-a27a-4e1f-b099-93997b7d33c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222d7fc3-c2cf-4873-86e5-023e2773ebaf",
        "cursor": {
          "ref": "351351f7-7c82-4437-9dfa-a268b0265647",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "38a080bb-d172-47d8-92df-30727c048ec2"
        },
        "item": {
          "id": "222d7fc3-c2cf-4873-86e5-023e2773ebaf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9aa3f634-f59d-445c-9dd2-e85142a756ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e71facf-bb09-4d89-b916-b09d443ace70",
        "cursor": {
          "ref": "c4cf0029-b96c-4a73-bed1-b20b4077bd9d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "639298b4-3b58-4665-af2a-570d36270ebb"
        },
        "item": {
          "id": "6e71facf-bb09-4d89-b916-b09d443ace70",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0bdc359f-eebf-4717-8cb1-69d6089dc174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d344228d-4c6c-47cb-b6dc-4335ec54b4d4",
        "cursor": {
          "ref": "85946d2e-d0b5-4fff-abab-97344d11d4e8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d8c2d69d-e19c-40ec-85aa-ae3e65f9914d"
        },
        "item": {
          "id": "d344228d-4c6c-47cb-b6dc-4335ec54b4d4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8d533737-3f19-47e1-9e84-98dfa00543dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5bc2d2-f747-4559-936a-df109329244f",
        "cursor": {
          "ref": "be26d0aa-51ec-4578-a644-e4cb7f4b917a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a64d72c0-8c25-4313-b407-38a183a16178"
        },
        "item": {
          "id": "5a5bc2d2-f747-4559-936a-df109329244f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eef296b3-3bb9-4d4a-8642-9de7aa6a1d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70fa302-83c8-406a-9555-24b62df8d7d9",
        "cursor": {
          "ref": "30726eb8-86b4-46bc-8ea0-b67f4560a992",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f0de6856-8883-4e9c-8305-3e533279cde7"
        },
        "item": {
          "id": "d70fa302-83c8-406a-9555-24b62df8d7d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3dec552e-7d7f-40f2-9ee2-9d9707722236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f976898-0a26-4003-aaa2-e9f77a9545cc",
        "cursor": {
          "ref": "65d39687-ff1b-4190-8513-c0ac234a05e2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0cc2d77a-f779-4476-a686-9014ca6bdeda"
        },
        "item": {
          "id": "6f976898-0a26-4003-aaa2-e9f77a9545cc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d6745d9-d5d5-488c-9901-3b310089e1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325324b7-f331-4307-a72c-5ad53cb91451",
        "cursor": {
          "ref": "72b43f31-6f69-4a8b-a288-8e0c02d5668b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f3e883cb-5763-46d3-847a-160ba34b33ba"
        },
        "item": {
          "id": "325324b7-f331-4307-a72c-5ad53cb91451",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "28c00645-e780-4169-915b-d6d48648f685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b197a59-5208-42f2-8dbb-0db5b2d9e132",
        "cursor": {
          "ref": "b16a8465-a308-4251-93c5-fe2b3f80b36f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "58ac2dba-4331-46cc-a027-418ae51a7e17"
        },
        "item": {
          "id": "6b197a59-5208-42f2-8dbb-0db5b2d9e132",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "735b1cf5-d221-4058-accd-4ab0ebe5af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c64f5df-6783-406d-8925-eba848859f02",
        "cursor": {
          "ref": "5a7d60c8-d12f-4229-a2ff-102bfaef260e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "545af62d-fa22-4324-8f58-a8ec8536eb06"
        },
        "item": {
          "id": "4c64f5df-6783-406d-8925-eba848859f02",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eddcd546-d373-45a3-8c97-99c2c842162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1c65c8-8bd8-4825-9ec7-267286c244da",
        "cursor": {
          "ref": "f02d3c2c-d7ea-4033-8ab6-9f41c19cfcd5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "181feca0-72a8-45b5-aa65-7f926703bd94"
        },
        "item": {
          "id": "6a1c65c8-8bd8-4825-9ec7-267286c244da",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac5d6455-b9ed-4c4b-8110-a74455f3b026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9865f0-7723-427d-9c54-49b7c0db6536",
        "cursor": {
          "ref": "db7570f9-2ab1-4a9f-a0b4-118eeb764392",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ae489877-8fa2-49c3-9dd1-1f0346705abd"
        },
        "item": {
          "id": "8a9865f0-7723-427d-9c54-49b7c0db6536",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bdd4b16b-5433-48df-a581-e3ab547818bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a140f1ef-c4cb-496e-aff3-29fa1967d5cd",
        "cursor": {
          "ref": "6cd4f7ef-d1e0-4e94-bca5-e86407eaebf6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0b2bd3e2-3832-44fc-a574-5059874beea7"
        },
        "item": {
          "id": "a140f1ef-c4cb-496e-aff3-29fa1967d5cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad86a314-e729-410b-b905-092853416242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0d300-44c4-409f-8033-bd268ab43581",
        "cursor": {
          "ref": "b250ab6c-ff97-42fd-9c05-be6b30888abe",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "abf77344-c1de-4f96-802b-f757598f6e39"
        },
        "item": {
          "id": "34a0d300-44c4-409f-8033-bd268ab43581",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af6e25df-ce7a-4c0e-9690-7fca25e6989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9373fd72-43c6-4df1-8c54-7ee3161ae989",
        "cursor": {
          "ref": "394e7fbc-36d2-4509-a165-fdcd18edc13b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "20c3f4ad-7c7f-4b50-81f1-a0695fb75eb3"
        },
        "item": {
          "id": "9373fd72-43c6-4df1-8c54-7ee3161ae989",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e41f9412-5e61-4782-bf0a-dced5a23078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202bd8b-360a-4793-a3de-88e28916046c",
        "cursor": {
          "ref": "f34ee655-e088-4ed5-b079-48d47c34b652",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ce1a7ca7-42fe-4cc7-8e84-717fba4e6dd2"
        },
        "item": {
          "id": "a202bd8b-360a-4793-a3de-88e28916046c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ecbc1837-cfaf-4916-aeff-878f13a8748a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fb261-8156-4b5f-bca4-dd2144add366",
        "cursor": {
          "ref": "cac61b33-d757-4b5a-9eb8-b3711bc568e3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "62af69de-5b07-45fb-8333-3475323731d1"
        },
        "item": {
          "id": "6e3fb261-8156-4b5f-bca4-dd2144add366",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "82bde24c-5f50-491e-a983-83d2fbd1adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0e214-0e35-4561-849f-6c7453abd29a",
        "cursor": {
          "ref": "10f866b7-064d-4a97-aac6-9f9f158c60a4",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d584de4d-c621-4a48-a8d6-49e2db2cd952"
        },
        "item": {
          "id": "4af0e214-0e35-4561-849f-6c7453abd29a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2f55e455-6378-4ae5-b85e-3fa47b1e2865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c06d67-70a4-47c3-a439-025d17ed5899",
        "cursor": {
          "ref": "dcccca38-518b-4dba-83a6-0020c6e6bddb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "235ecb48-6a9d-49f8-8341-a4eaaf28831e"
        },
        "item": {
          "id": "44c06d67-70a4-47c3-a439-025d17ed5899",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e92f2c1c-8c99-4200-b340-f523b9ebfc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a65a2e-2529-4c12-a36b-e122ca193014",
        "cursor": {
          "ref": "50a0806a-3ee6-4fa5-b877-d5453028238e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2fc9a7ce-d06f-410c-83f9-ff2954bc6dea"
        },
        "item": {
          "id": "19a65a2e-2529-4c12-a36b-e122ca193014",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "038ad17c-a3f8-407b-8b87-ec9db37a8a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f550ae-1c7e-466f-99be-902b7d452299",
        "cursor": {
          "ref": "1c43b3eb-ed90-4ddc-8f88-28402dcabf77",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a50e4c8d-3e2f-4f3d-b475-603d7cf92e1c"
        },
        "item": {
          "id": "07f550ae-1c7e-466f-99be-902b7d452299",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da0f8d93-86bf-42e1-9518-0c49f6efb91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ba782-a37c-4c5a-93e6-eb0f114566f8",
        "cursor": {
          "ref": "abb53e0d-206a-48ad-869b-0fbb84fdad25",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c17848ba-1a0b-44ed-9a75-72b440435cbe"
        },
        "item": {
          "id": "ac2ba782-a37c-4c5a-93e6-eb0f114566f8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc6d4421-8a4d-43c8-a3cb-95d648aa634e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b789496-42ae-45c4-a962-d9f540e7c1e2",
        "cursor": {
          "ref": "c7f7df01-5df8-420d-83eb-2e9cae381441",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "687477b2-ca73-49f4-ac0c-0d12bd5f9ff1"
        },
        "item": {
          "id": "8b789496-42ae-45c4-a962-d9f540e7c1e2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9fd0f0b7-93f5-4c2b-90d1-aaf22755ad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5bdef3-d804-4762-9fe8-73cf3566da38",
        "cursor": {
          "ref": "657cdfd9-b996-46d0-8af2-d911162c5084",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "38cdb24c-88a0-489d-83de-75fc36c589a1"
        },
        "item": {
          "id": "4b5bdef3-d804-4762-9fe8-73cf3566da38",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d022df17-5a03-4f2b-adeb-6d91a101801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f025a67-db55-4943-803d-36704c70697f",
        "cursor": {
          "ref": "75e828cc-f37b-4167-86d8-980811597d3e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9ad8ad01-36ad-4f21-a708-d9ab01175b8a"
        },
        "item": {
          "id": "2f025a67-db55-4943-803d-36704c70697f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f4a687bd-12ed-4fee-a552-14aa2fe87863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5133ce-a060-443b-9e7c-4d28e9c6af07",
        "cursor": {
          "ref": "0d4d9037-dcf5-4ff4-a439-f6694be58257",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1165c27a-784d-4bd6-8976-3202cff9d2ce"
        },
        "item": {
          "id": "8c5133ce-a060-443b-9e7c-4d28e9c6af07",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc6c75a2-5d2e-408c-9b5a-cb2dfd05df4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f572bb9d-d0e3-4946-ae18-e438ef63d517",
        "cursor": {
          "ref": "e10e2942-2d30-4e93-b236-ee28ebfe04fc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "08172735-956e-48f9-b1e8-c3a415dadf55"
        },
        "item": {
          "id": "f572bb9d-d0e3-4946-ae18-e438ef63d517",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e660421d-8c94-477e-808c-547bfd4037e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbadc437-044a-46cd-befe-2e8d9ef43c2b",
        "cursor": {
          "ref": "1b9e58e7-be6a-4743-9924-7392066a4a52",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eb3c547f-669a-432d-9b93-395cb9589f0d"
        },
        "item": {
          "id": "bbadc437-044a-46cd-befe-2e8d9ef43c2b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "35f1ddaa-fcbd-4751-a7ba-746623701a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e06b60-c556-4cc8-87ce-6ac14809a26b",
        "cursor": {
          "ref": "4a3697a1-38fa-4166-bb95-055f87f74395",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dc4295fd-b607-4612-8f04-4141a995582b"
        },
        "item": {
          "id": "d6e06b60-c556-4cc8-87ce-6ac14809a26b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d5fa6c0b-48e9-47ad-b741-1f0376202c07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6fb49-1482-454e-9602-2555eeaac4a5",
        "cursor": {
          "ref": "208e1ec1-5245-4fd5-be1d-d4436f6d9765",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7182d5c3-0795-42af-a054-6295046601ab"
        },
        "item": {
          "id": "bcc6fb49-1482-454e-9602-2555eeaac4a5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1a52f49e-4e27-4bee-9c2b-fbe55647486b",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "df035e60-c540-464d-9743-cbf09aaa9b0e",
        "cursor": {
          "ref": "d1640429-65b0-4aab-9e4a-8fb88bf9fb2d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f93a36b0-0642-45ee-ad6b-665a2b4fa0b3"
        },
        "item": {
          "id": "df035e60-c540-464d-9743-cbf09aaa9b0e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ac947bb-ff70-48fb-801d-25d008d61a64",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a837c0b-069e-4e6e-80a0-14f7639b2101",
        "cursor": {
          "ref": "fefc2a33-0771-4945-a8d1-e32b0533a443",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "54788641-3571-4a5d-83b7-92816e84b777"
        },
        "item": {
          "id": "5a837c0b-069e-4e6e-80a0-14f7639b2101",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "40bc26a3-eacd-45d7-84af-5135ce48607a",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec0857f-0541-4f47-a85c-218ddcb7ad5e",
        "cursor": {
          "ref": "edcf408a-0844-4d94-9506-dbac5ab18b86",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "60135390-9b5b-4e56-b478-3e9d6061280f"
        },
        "item": {
          "id": "9ec0857f-0541-4f47-a85c-218ddcb7ad5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e65c8d2-6fb6-4754-8e16-df5c40233704",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec0857f-0541-4f47-a85c-218ddcb7ad5e",
        "cursor": {
          "ref": "edcf408a-0844-4d94-9506-dbac5ab18b86",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "60135390-9b5b-4e56-b478-3e9d6061280f"
        },
        "item": {
          "id": "9ec0857f-0541-4f47-a85c-218ddcb7ad5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e65c8d2-6fb6-4754-8e16-df5c40233704",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c61a8-555f-497f-970a-de9f772c10ce",
        "cursor": {
          "ref": "9f223034-6501-4e9c-9d78-dc67f19b05eb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e3000499-8b60-4879-bfd3-44cfd3bf8c0c"
        },
        "item": {
          "id": "a18c61a8-555f-497f-970a-de9f772c10ce",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2dad8360-1351-4c41-a292-533b2531ebe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b72f251-caa0-47e4-b8af-ff61b080cb60",
        "cursor": {
          "ref": "b3737489-ad9f-469c-aaab-1be6e03d1d5d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "350daf2b-15bf-49ac-aead-4b1e3f88c539"
        },
        "item": {
          "id": "5b72f251-caa0-47e4-b8af-ff61b080cb60",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d0b4da77-8126-425a-a58f-1e03b5b48b83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}