{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6fe5598e-4427-4b15-a3dc-a94594ebd94e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70bc685e-585d-4ae3-b96e-387a312a3777",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1965740-ef83-4dd1-8cc9-9c342e9f76d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d18142a-2680-4135-bf5d-203b25215a8f"
                }
              }
            ]
          },
          {
            "id": "1d917e9f-0e5d-48ca-bde1-1879c4bfd383",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adeb87c3-4f02-437f-8ea3-88171a033ba6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a36f70ff-215c-4b3e-ac18-271195018098"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9ac06e00-b339-4208-bc57-b7e9dfcc5f06",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a04e3bd-8f2c-4d1d-abc5-4f14848a4e9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed6858fd-7d59-4a86-9605-d48511960ccc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de5e19c-7c13-4983-a974-28f37e84f0e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "663b6e98-6e73-4328-85eb-3704a398e501"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff765c7d-bf33-4654-8307-ea5871a0e557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3857b8ff-a6e6-48d2-a299-b47208f23ea5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e45f5f0c-c015-4d3b-93dd-a46804db61ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "498175d3-1e0a-44bb-b485-859ff5236334"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4469198a-a419-4296-88fa-d68b3f1e9a26",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7f831319-0b2b-4ee6-8e9f-237cd82eb5f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ac81fc9-2e2f-4f1c-8c19-3ce19c4dbd08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92625350-c458-4d3e-bfcb-1d62bc0bec89"
            }
          }
        ]
      },
      {
        "id": "b35e22ee-2a89-4139-a40d-24edb9fb528e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3f04f49f-2165-4c65-b037-057bcc5b33af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c4342a8-c590-4814-aa8a-b782b18ab7cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17f7b4d1-cb76-4297-8071-338c9ab15313",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59bd1c3-e509-471f-96d6-b281eba21617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b3f9f1-5af0-44fd-abcb-b596e76b1f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f3312c-6f79-4a66-86a7-5ff19f09ebb2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2071d9b4-25b3-4120-944b-b0de640feb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b36b4803-3e2f-4cbc-8970-8981a3432660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb089f2-f21c-49aa-b2b0-b2c6158b536c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5866922-7775-4996-8b7d-6d5be707111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8740ff55-f06e-4be2-93d6-436ce9016933"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a961cd81-e029-4661-a5d3-7974577b6a88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5057ee6-8dec-4125-b4a9-451fb7b402b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9e9379-54c5-4686-94b9-b25131d7f13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7aa1a510-ab9c-4936-9d5c-bdf28ac2f302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f560be8d-c171-4e5b-8acc-bfa768bef698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a04980-4dd2-46fe-81d3-634d5d58ac71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aebb4eae-a04b-42fa-abf3-3eed285571a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5431fcdc-421f-4cb4-ae18-8647f276fc46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab33990a-300b-4b93-9dd0-19c544d5a7ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "710e844b-9df2-466d-ab5e-6c90ca9a868e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6812f11-9dba-4c5a-882b-89707310290d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ba6d2b8f-1c13-4c4f-88f3-4cfa56bb476e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01135b55-5f62-4d95-a84d-2b2a593b0fe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf65621b-fc33-4844-a451-3f7a39acb56a"
            }
          }
        ]
      },
      {
        "id": "0115bab6-fd7e-4ed7-9e06-8367bbc66e89",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b5bb726d-0b97-43f3-a2c3-a4d1c09ee174",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3dd787c4-d310-4a67-9ee2-8d421c7ef424",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0ab83f17-7fb6-4106-bbf3-40aa2b0b98f7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ded95-99bc-4a2c-a085-453e47e8d397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe0bd67-1718-4236-96aa-cbb50de5c27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12baf013-56c1-41ec-b55d-c6bf13685340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e55b85-07a2-4f4f-b288-634bcd5c667f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f0da4-5980-48ab-a2c9-4030b809b6be",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab94ae1-b34d-4f15-b55e-070b94f37490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f80a36-0444-4d23-9ed1-46e08017b01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87928d81-ddd3-4280-9414-9c15e1fd4235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6805a6ea-8c7e-407b-8f9b-702a343abf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dce343-5b00-4dd5-b848-cf0171d72726",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376519a8-c638-4f37-9733-d0393de7d96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b721b7f9-1b47-4328-90cc-df3ce4e85348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f076e921-d42d-4351-89ba-46a502d4984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a9d438-d98d-444e-9f02-dc8ab7ced047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f957367-e681-407f-95a7-d62b98a24ad9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d38f67-7de9-4807-8c25-45b1193b3c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31524403-2afd-47b1-a270-b00994540da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5ef332-8c10-42a3-ab0c-3a39bdb3f878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d18c568-dd66-4183-8f11-03754c17d963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c113c144-5c3d-4a53-bb88-eed7b5f81a11",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644eeff0-d3e2-4071-bb55-0579357c716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b019f8-b6be-4d4e-8ddb-200b1d39ea76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ccf517-4736-49c2-9a6c-33f5bb584d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "497643d5-af76-4764-b9cc-fbd156543d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e98b572-0630-4271-ac50-ec84b061bf09",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c314f1-035a-45ae-aa84-bc347be2015c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f00c02-0574-4b59-90df-3e4d9771ed0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05770729-caaf-4ff7-9ed9-8427ef0984d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77554d48-070d-46f1-9224-d9c491ae9623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c22a0b-34f1-4ee2-bb5f-5e1e99067fbc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e303724-c2e2-4afb-ae09-856f11dfed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e426af-af1d-4452-a97e-971a66de4652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58586948-5a6d-4cc1-b33d-2f8851f0c19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a3c6ceb-c333-4429-984f-fe89d2f823d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c988131b-467a-4a11-8305-36ef2d395e79",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a024c5-1911-46ec-9065-474107c5001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a4b5db-c60b-4c02-b436-ecf975e7ce75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ad701-ab83-4bfa-b0b6-c40aa770bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3c84a2f-ce41-4be4-bdc2-83b23b23143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe812c88-4899-4b5a-a7b2-bc7db27c60c3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203dc02d-15ea-47cc-b31d-9af0a8990318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7680e51-4472-46f4-be61-8139e7ad51dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2547a-70af-422b-8999-9555c57cd925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c37ecc09-7224-48e5-9fab-bb4cfa70d484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa5dfdd-fba1-4d75-90d1-00e8ba6eb1cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53c94e-8ff1-4797-a185-b8d0b29cf676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3484df-bfcc-4314-8233-11a1c3c40fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c3d1f9-5b06-45d7-b718-a1f6e55242a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c193e1c-52b0-47a2-b257-5aad746adc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382af64e-558f-4293-8c3b-2fa6a132f759",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e11650-5512-4c7b-b900-f7ba9f3d38b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4344f8fd-315e-41ea-8c7e-2f32554c8c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d3048c-8b93-48f1-9a00-0a03b8473b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c0e1f5-186f-4a9e-a66a-f1913d8c97bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2bfd9-a2f0-49eb-997d-7db64ed2bf97",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6515fc8a-87c9-46b2-afeb-5c3aec49e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25afcdd7-6940-4857-8175-07c9669af6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eba228-f915-4a52-be4f-0ebf37a84438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fa9705d-bb21-4ffa-88fb-d15a992051b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37caf808-79ba-4ce8-929d-2018826b3c69",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306400de-0c10-477d-825b-5ed99ac3943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed97531-20db-48c0-ab5c-a49b1be3fa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d00dc-e0b6-44a8-becd-052b20828f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d0e815b-a278-4b32-903a-0f1f5423704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57556883-1a09-4ca7-a184-a77234b7846b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c99810-761b-4536-b500-6d9120d38eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc605559-dafc-48d7-a4a4-76efeba9fc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4731e19d-4c68-4b12-8a51-7468b049c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa142781-08af-47a2-89c1-87f95da8c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea69b63c-9c01-47a6-92e1-18e73f46078e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa49be0-f326-4ee0-8421-d30f810e44dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2177bc8-39ac-48d2-991a-38d6f48f70ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e574f-727f-459b-ab6e-0a3b21205381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f67561b-2256-42db-a4dd-81c367247d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb3e7f1-2dde-4b18-bcc3-02433e67cf62",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481f6433-72de-4ccb-a939-a0db13752e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c670f5-01c9-44c4-a50b-6f551736c8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e3b86a-9d53-4fa4-b91e-a352c4293f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac1d5657-27fb-47c0-8aa4-0e705c8e32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe4e4b-5752-4930-961d-753d59814b69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c022f-65e7-4e7c-9684-65faeb3b927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3050536-7fd3-488e-8a2e-f3ae129cc70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa2eb98-ea93-4507-a19a-73ef9a87f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "286855c0-fa3c-4562-ae1d-50ce09f7ab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd48dd9-209c-45e6-ae6e-e1726e890311",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95a5415-5419-4997-beb2-82b8f8d991ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91462c79-02f1-451c-a8d2-e7023e2c1ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c0bca-d396-40f1-b65e-a67d8e5b57f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "615bd417-eb90-4afd-bace-cea155545674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363d6fa1-0253-4401-a601-26c5d1176a27",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf793b-da17-4ada-a712-599116b04810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8916753f-0977-4446-aeff-0f7aa8140db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e39bdc5-5263-446d-b7bb-b399a00c9c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c69c423-54f5-46b9-a509-8359a4ef9d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c73e513-e984-462b-8d66-5abd56ef6552",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185ef4b-21fa-4810-b3ed-6825cd86220e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0709d69d-bcf5-4e42-8d29-160b8e52ba67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c05ba0a-c479-4a64-b3d1-062adbfa368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0e49de-c7d0-42fd-a5d0-17cc4a626613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ebbf32-5303-494b-91ec-9bca81b618e8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ddaf01-5a1f-42e3-97b9-47afae89b7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272931b0-c4b3-4f0f-b992-087333eb6120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcea944-1231-4531-adfc-9c2764ca9a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e4c662-334e-48ab-99f3-f991df067134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0286912a-7d96-4630-955e-8ecdc1182880",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e81c0a-bcec-43c2-878c-7b47525bf904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cef066a-8134-4e1f-962f-57f8baeca1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13abbb29-52e1-420a-9d9d-89a724bd7117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dddb20b3-7388-457d-86d6-e5831fe3b4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5489a951-2ff7-40d1-b5f8-13d83f897f7f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc26c7-3f46-4686-bc33-96bb84152c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39d278-cc7b-473b-9c2e-41b5fa08a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304d5cdb-8176-4fc2-bc12-4621f38c9a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34cc7a1a-439c-4c92-974a-11321fe01626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048c533c-1ec0-4312-9041-751dad6281f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac013714-ff30-4c9a-a219-d0914760f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc176a4-1e86-475c-969d-c5562172a60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243a049c-1a2c-498d-aeb3-18a2e31d8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d948640d-5961-44ec-a42d-b481b45720b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b8d823-1354-4ad6-a33a-baf6c8a21b1a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03304d0a-7f62-4a9b-950e-c1aaf2706edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73528f6b-ce12-4481-815f-5764bedcc1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5865a3-fe1d-47f5-85ba-0c82a9ff122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a08e6d-4622-44e4-b87b-4e8aafb4eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68f286f-9ed1-4ea4-b6fd-0739ba8b32ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7155568-4da8-441f-be61-1defbe7d4286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e9f1c6-3265-40e7-9907-57b0b6a09c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a2d26-3031-4cff-a890-1ffe10e07606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaea4447-6ff2-423a-bcdc-81ab79fec2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dbbbdf-0d32-46e0-baf1-2e06a121fe1f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1cf54f-0b5f-4bf4-a7df-2ef4ff0ce26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec854e01-59e3-4d83-868a-83fb03df9355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32914b6-2065-4371-ba9d-e1882b5379e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97225cb-aff9-4b95-83ea-b913b21a7e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67681767-e448-405b-95d4-778551592e0b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7497bb-f24f-4d79-9c3e-06ee585e839e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deb0045-d2a7-4f1a-9458-e60b850e2272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6161fe-49cd-40f7-b706-3e076647d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55019ff2-4de1-4b87-bc09-22ba1670a59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32826f49-65d5-400a-8dd7-70cc5d4ec759",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928863aa-eb20-4735-a698-118f8409f5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa577b0-c6dd-4d62-a1be-e34aad13363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e67f3-e314-405a-9f6a-63fb815c87f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb5b187-6392-436b-9f39-98b76eb5cb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6068630-b966-499a-87d7-67b10ebf0d55",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39191ca3-9205-4cb2-ac08-9e0c31c30da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ff8e6-9765-419a-980f-9db492d3801f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94570213-d8ff-40e4-aba8-e097bb070bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e14c39-4f9e-41b9-aea6-54a77690d576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c053a2b4-0f53-4d9c-96d9-151f251a0f0f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a50dff-2ed0-4b62-b878-64f75e7aec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fb0209-6cb4-45b6-a32e-773221e4249c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a72594-bdf2-41ad-995a-3c3e7cb11c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9897265a-c657-456c-bb5d-3ced1f6b37b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9c5090-619e-44d8-8754-842f019c94f0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c43f45-e350-4e95-82df-7f0549f9dc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c190b02-0ce2-41dc-a579-31d05c579b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7cabd8-2f84-4b3a-a7da-858b17f503aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d612397d-98cf-46b6-aa61-655054d53cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0544d831-9cc6-4974-89cf-6b8edc2f0044",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b0d92-a5a4-44fa-981e-98d9f8b33708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba472113-1981-4f4c-86e0-c88e549ee824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de2a29d-2f4c-490d-a7ae-f70b7478aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9ea751-d864-4caa-a80f-650fbc7fa31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4dea6e-e3b2-4920-be0d-56a6a7f705ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3cecc-ece8-4b9b-9ca9-73163a756f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ab2177-7b1e-4c73-8ba0-c07edac970d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ca4b4-2e4e-419f-a8e1-92bcf133708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2fb947-8004-4a59-9eed-c3822f3267e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506a7101-3085-4c97-a9f7-627789315484",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17a5dfe-79fe-419f-b06b-151b66f50c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06091182-0315-4569-90db-e18aa402faca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae8fce5-43b5-41bb-9f29-309802ae30eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "34bb280e-56ad-46dd-be85-11f3248610e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe95f2-0d7d-4b0f-8dd2-788a70942c98",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaba0a2-ab23-46c2-adcd-cfdc1d0229a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22002a1d-b75b-4baf-9c26-cf3d5a0ecdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2f8bbb-3f36-4319-a917-6e7477f29c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbfc5be-06c8-4a37-bf06-4ba3e59aaf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f330e-e3d1-4d0d-ae77-5e4b3387081d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde5ddab-f9fd-42aa-9c21-51ed05db9fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be91c8be-0c20-4395-b426-0b940a7f11f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a1de1f-d32f-4d1e-b9d6-1912120e02e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed11abb3-1456-4586-92ac-679c35a1133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b8ac9-a6a5-4753-a56b-1a9f5090d6f2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d1c6d7-fce0-445e-94c5-b48715b53a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0eeac8-e856-4d27-9dbb-f3e714c8e35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11815f23-f687-4625-add3-dca5f6c6c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c466ad79-2350-4b5e-a54c-53f57fe27b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fa10a8-6687-460c-b64e-19db26204546",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30f2ab1-06ea-40cf-98a1-285345be72bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18a087c-534c-4045-ad2a-72d149ec1ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cef1ee3-275b-48fd-aabe-6408b509b8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9d3621-6494-456f-9852-037abe003b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca60d7b-5d3b-4630-a9c1-a8ee2fb467ce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea89d366-c3c4-485f-a188-7d24fe9e2bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba7f71-50e1-45a4-a081-e8ba02d2f840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e85884-3de4-4d3e-9bd1-a64cca353cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b972c8b-e78f-47f4-b9c2-32d99ada4d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ad9f03-cc5c-442f-b17a-d974c1881f7a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1e5ee-795f-4e7f-acb7-cfce45caf074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d647a30-6489-4070-996b-99b9fb52e019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aba001-0d50-45d2-895a-d8c99aa09f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1efa0f83-c1ec-4f0e-866d-6cc473f16ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f17840-1ddd-409a-b8c7-361c9ac7c7d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0f323-bfd2-423a-8bad-32073050af96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bcaa51-60c4-4c99-9f44-a12803e5705d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d676da0-15c2-482a-baac-b97ca4fd0c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "67b45508-e723-40a5-a6e9-ea4535179083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c107d9c-b5fe-46d5-b353-1204068473a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4764f2f-eef1-498c-a0c2-a49df1c93b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98544d8-2499-47a2-9f22-062111e39571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a24b11-1a98-4ee8-875f-4e75bb5bb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "215828fa-dcd8-4198-9715-99fe64fb5e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f855ccc-adc9-4470-8236-4197fd09e6b4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fc807b-7e38-4f92-a0d7-47d5694b2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c594d640-7398-4fc5-b267-239f8f7bb44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9663a0-63f3-42b3-8148-4fa56668ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38bb2dc-50a2-40f3-8f3e-c44dfdaabdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2d4064-1575-49f3-89bf-6046fc6b388a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329f1a08-fb6a-44c9-a689-8f0bea34049a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0357c4-b783-4d2d-9703-a815284710b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96611783-4e52-4e0b-a097-c8ac4868fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3fdd88-44e9-4b16-8289-05bf1a0b4ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62da83bb-9f05-4dfc-aa4d-356ce0be8a9d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f31c54-efa0-477a-bbf5-de1677428e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8241f1c1-db2a-4082-87ae-a9835eaed608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d2ab21-cb72-45dd-abc4-45dc651a7d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ef6f4f-22a7-4a42-9dd5-360add249ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b3af55-1a65-4e16-93e7-f2cc4f891c37",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313a336-2c1d-4011-85fd-5c75a2e74290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cea0b9a-e503-46a6-9c7c-26d88da518a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a3646c-0b4e-4583-a768-e872d4250290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "098c3be5-888a-434e-960b-e010a0a3fce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b884f44-4a82-489c-a8f6-8e6f391618f9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63597926-0eee-4844-a8ed-5df54154298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dafed09-e038-418a-8b64-ec31f413db84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4225c281-b6f1-4ae1-9eea-df7a3ebe870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39fd1c1d-8161-4830-a791-67dfa65479b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803afa6-8b82-4fce-9488-0e7423934011",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d21384-f267-4c2e-bea9-367d279e4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec1267c-3774-4a49-bd95-42cd255afc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4f3287-89f7-4e9b-a4ea-8e4f37140d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecc5544-c6a4-4040-895a-304c252b718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad95910-a370-4ca9-b6f1-aae9af93b937",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c01ecb7-c235-416b-bcec-de49aa03e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5360a8-91e8-475b-ae0c-24a4817e0960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d02a34-83e3-4c1f-a1b8-2037cdbb2d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24af7687-0c59-4652-a4db-1660753f51b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93c5cc4-601f-43cd-969e-960d3a594ace",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af5431-9f09-4649-b22e-1d84b983e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f31c69-417d-4712-bee9-e32995aba9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59109ccc-6a69-4e60-a4b8-1b3e4aa31773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66facb7-92ab-4d42-822c-0db565726ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a2cf8b-5f73-4b7a-99c8-737ecb821248",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d690838a-9fbc-4b04-909f-7e6de2cbef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816604bb-631a-4b68-8c95-b85a99e28347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a292ce9-0389-4fc9-bf00-6e3f146eb5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5600f9-0c6b-4e6e-aafc-fae528bd43fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdc3654-55e4-49fd-92df-b917a7e3ae3d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b157178c-fa8f-49c7-be50-7dee685d93a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7834da1-46b5-490b-a212-53f1cdc797c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aac63a0-abb8-49a1-8e3d-261f94532ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d8757-569a-4fa4-878b-a98854dc3888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6bb2c3-cd82-4d59-8a3c-1cb9bdb11b96",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0b7026-728a-4ef3-9029-58ecd9256d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619b0b73-36ae-4662-a16c-ab942fc86212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae4dd2f-63cc-4d85-bbe6-54fe1274f3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb679ba-2fb5-40f7-ad2c-708f929e5d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35414248-887f-4615-9946-4d6df1336e94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc170e5-1d66-4cf7-8b0d-8ecff41885e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7def95a-d376-4a73-bf8d-aabde62c1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b57ec8-de0b-4632-9a7a-c4d386aae64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "353b6969-eb52-4a7b-b3e7-0341fc9d0643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebe10bc-d7a2-4f0e-8c39-57d1328fa4f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1862576-892f-471d-9952-f37890d1afa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf646a9-7a07-45e6-b153-006a664ffa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b827b80d-cbec-4ba6-ad61-1934a37cf0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "56ceec08-7994-40ab-8798-917080135bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9545b8c7-4f34-4d25-8bfb-a43058ceca69",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb8fe29-7687-442f-b34f-4c508a7310f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858d9dfd-e94e-4fca-b3ce-488110573e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff7c374-f5ea-49b4-83b5-120878875148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf494bd-e776-41fc-b42f-39d1a8df18d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f42ac7-a4c8-4338-845e-1ca757b55991",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3c77a7-1d40-4ba4-9c0b-83ee14f109e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12393fb4-c1c7-4ba2-b1cb-83a2140ae0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2a012d-0dbb-4935-82dd-dac66ebefc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0252cc51-b2a5-4126-b57a-f7d158b25e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a40ca95-39fc-4e3f-adf6-9e957cceccd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9321b6be-d733-43a6-aa76-f7b1f983be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6319ea5c-b66e-4be0-ae87-bf9a50752a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c18f5ca-5dd6-4510-9bfc-e0cf4c7692ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdfc8ac-173d-4d9b-9293-823fe54519f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ccf194-9c6e-4bf0-a09b-3565234ca131",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f974d970-1022-4ffd-ba21-016ba5a12b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1390e25d-dc68-45c0-af15-e3955f72b7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0914c23-b8a9-488e-84a4-fed23f782ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7202119d-6e6a-4e24-ab64-ebd7ee3b8003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe7cedd-2c80-4715-a4f6-b3f6b84a6d52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc2564-4a44-44e4-aa4f-12314b1b270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152bc633-50a0-4413-b769-649a0b1cac0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b1dac0-1926-4cda-a2e0-d91be7dd67fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "beaa2f5e-99f6-44e8-ae4f-70737648b90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afe9466-b503-4a57-9597-7765283e91d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519394b4-8e01-43a2-b606-8b724be33853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4449c02-2575-4c62-a637-ee039fae7c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90911433-992a-47d5-a95a-898ecf1760c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead1ca2d-1ba2-4fd0-b5c5-e1bd356c83cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48a8cb7-0317-423c-9720-829ad68d606e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab830e4-9309-40fd-823b-3acd6f122c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2419cdb5-e7d0-44ac-8fb1-c900eb7664ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef98ea8-b984-4691-8242-0493c0a87851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "788e9dce-3897-479b-9ab5-ab34aa6ed328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ceefcc-071f-446c-8952-04f22daa81c6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5395a59-07c4-41f9-895e-1da2b3c81c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ae635-f2a9-4886-a153-8ba52040f78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db12d97-9dfc-4fc3-94dc-1daa56b3761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "484f5042-b23d-456c-9c39-a638518fae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef72405-aec9-4d18-ba3d-5fcfad489464",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc84ee6-ad8a-4e79-85fa-e96b37eb2fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a8164e-7ef5-47d1-8425-623337f3df08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b78007-307a-4f84-b344-11eabf7aceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "435a0617-7f24-4020-af58-464689d73829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0468e69a-f1f6-4c74-b2c5-4a7d407fee82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e1925-3b98-4f20-8acd-ddd61d64115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc6efc8-cf55-475d-aae5-02d2699661a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9993f13e-5fcf-48cc-8e12-21f1a6a481e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de80324f-caa1-4337-aaea-753154aecd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8b14b8-fc68-43fa-99c9-331f3c46b6c3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817bd79e-29c7-49ba-822d-536dc1464a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9efe884-47d9-4767-bcca-e55a1adf6e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b96a09-1e02-4520-b1d6-e169ab4d4cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c6a0ef-107c-4f06-8d56-ed9c8dff49f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fff204-9735-4488-845c-5fcfcd41761c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196c09c8-7d3a-4bfe-ad6a-848363b84c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dd1823-f52a-41fc-9764-3e270db992af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3105e57c-5e45-4fc1-957d-5f2f3ce3b87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "874f73d3-bb8e-4a4a-bb9e-5bfa5bd92605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd51eab-a7c6-428e-8364-1ce2acd23116",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d4fbf7-9363-4999-8419-4844468d33b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f90259-51c7-4f6c-93e8-179b961f53e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c750d-0abd-4a3a-893f-3242c7263884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a1c51d-2c86-4f97-8067-267058334695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd00065-f7b3-47f5-a583-85ad1a6d6f2d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff96f7-6102-48ce-b652-879db5fe1320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8ec243-4600-484e-9bdb-b4c8c6b7294f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c07175f-3de0-443a-ad2b-a8336b3810b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2f0572-d07c-45e3-94d9-a40916124961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b41ed75-1870-406e-a1d9-da3b2500e1de",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb3b1ed-32b5-4844-8d84-0721eb0c37a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1ee50a-76ef-40e2-a449-f85a95e409c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2bbb4b-f566-42eb-b8cf-5278c48bce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "018320fb-fe82-444e-a0a5-a2fc936f65cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b445c5-3da1-4f44-b96c-6b8e0eff3d6a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7d6767-4970-4eee-8847-fa1dd6995325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384dd9d9-168d-4843-91bf-13fa86c14db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4b79f4-dd9c-4d68-a7dd-4441412a12d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9f9c2d-674c-4d05-9483-c25c77c206b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e366e239-1427-4d6c-adc8-e2eabce0454f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb08585-ce7c-4659-9811-bb5229d4b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4cf0df-6483-4b0c-93d1-9ea449721105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee809648-bc1f-4fe9-b113-315e99f4f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5bb326-8d96-4881-94f2-eda61f0723ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f74ce23-89ce-478b-a07e-e3828b8c0ac5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514f97fa-e06a-44a1-8b27-175608fd4438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d057b9e-7b6b-427a-a31c-cb36d25f28be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e2342f-4742-45b6-ac87-5dcc6ecb300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9514f2-9d5a-4343-a4d1-08e7e9b8dedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7da197a-0767-4d5b-bb60-5adb7b84cc9c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910a32c6-ae8f-4ffa-9918-8377e36ed833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25274ccd-b9e7-4e03-a565-aed59cf180d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65d474c-d74f-420d-b9f8-e72e4f49e3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10154ba-b488-421f-99a1-669190c47e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f548d494-5e4c-4605-98ff-a0382bc68993",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65a992-f1ec-4ae9-8577-91aacd7b74c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debc9de6-c168-4ce7-9950-6c614f779034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb96855-fbc1-4f50-8385-1964c0e24c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0993503-a611-4ccf-8e77-62dac58ff1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeed4bc5-f22a-47b2-b82c-982dedd7f300",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5796c2-0e0a-4d74-941f-d6c9c08db37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76f8e33-8226-47ed-ace4-cb9ee417e0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178ba09a-28cb-4cf8-be59-e6880cdc39eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0bea54-7120-42c0-9b67-12a4d342d183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35a9972-cdbc-4fad-9653-4d233dba9d40",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a673dd74-b814-4f00-b99e-b9709209bcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6067ca87-1435-49c6-b607-306c282bb8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63c0ae-f465-4b20-aa7f-5dff8e52e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9850de39-e737-4f49-9427-117f12e04218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e8d54-7117-4bbf-9d01-bfe2851c2630",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d8e9d2-27e8-4c8a-b5b6-4f916037e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fcdab9-afde-43a4-b96c-436418e6aa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157003a0-e900-49dd-b3ae-fe2b6bf14289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d722c723-bc5a-4694-a9ab-378352d1b577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d358255-20b9-4c33-8bca-e976a5845fe7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8822e730-28d5-4aa0-af31-a4ba4d3dad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d728c260-73bc-4a56-b0ec-bceb0e5ba84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fc8b5f-6ba4-41ec-910c-f6e855781f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1525da1-3934-48c0-939b-cce5a7c74c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6916abf-bc84-42f3-a604-646431a61724",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a2bffc-418c-491a-b4d9-e1808baf3a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc9f556-4766-499d-9489-d47aaf140227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b604db-2099-4958-962c-851938cd8d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4975f61-ce99-4629-976e-536d0dcacaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fcff36-52dd-46d8-8a9e-ac4a332ce656",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3ecc2b-2f5d-4725-801d-103dae4a48f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39adb693-a74d-453c-8bbc-cba2017e2c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4264873c-e68f-4e0e-b854-295270b9a008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af516c79-a866-41c0-b1d1-d9565ce4685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b0a355-1cbf-4704-ad65-f474780dc268",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de61d29-75b5-48b5-983b-f43fff16a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4d86e5-ecd5-4cc9-b727-165f55646938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4612864-cb0d-484f-9873-b5dd2089f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b2e27a-3eb2-4cf5-9a3a-f54d7178b9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de8aaca-2175-4fb8-93bc-e32a02dfebfc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a8d50f-38a9-4efd-ae7b-88576bd9e602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc0d6d5-ab1b-4e73-a9b6-74810a8fd7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5542ee8-46ee-486a-bdad-89bce3a33dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "746161f4-8f5f-489f-8988-f9c4b3695de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa66316-710a-4ee7-af9f-335f53323354",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97b4ea6-a7aa-47a5-b542-8ef5cb396b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecb670f-d2f8-4c7a-95c6-dac9ba11976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cf5084-39fa-400b-95af-f42728bcfb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9463fe91-5bc3-46b0-a4f6-5d8028c083d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217bb986-3ef6-45a2-9c5c-f2ece637d3a2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c744a756-dacb-4746-beea-bc99a51bf361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69cc26a-7fc6-4335-97e7-adf6fdf7948d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f20997-0728-483b-bf5f-5f603ebff6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7072893-d34c-4c43-82fe-16835b21b54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff88dff-2f6c-4057-a71a-4ce6694b6d02",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44c3f77-33d5-40b4-acd8-777c6347da13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2718aac-21b6-432f-9304-2b835faf8080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eb7629-1357-476a-9d61-70282226c437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c85a88-b537-4f2e-9097-07d891d80c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5eb95-c07a-4e39-92d7-3af75cd94449",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae28212-18a1-49bd-9c98-a6cdc3bf37fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9216c-f85e-4fd5-af44-781be2a98719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed47760d-506f-4597-8508-428f3c2a27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95550004-d4b9-4ab9-a38b-f3b3513232aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aa5315-2d89-4095-8e8e-e9f1446b7077",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050d064b-06a5-40ba-b961-4285d6f4efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3c97a9-cba1-4d36-9473-7dd3486e695f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db42aef-3a6c-493b-b31b-fbf761a32bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca5ba44-f3e9-49c9-bcc1-d5c2e78fbfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c365f541-e28b-4e48-ab06-8ad2bee2e695",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06490b2-9207-4ea3-829f-e759b765c8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92454f-7444-4247-8899-7c51f0595600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81bc3e4-43d5-4b85-8de4-95aae15d0345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34722bfc-de8b-4247-b08f-0cba14acb9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b08861d-72fe-43af-bd87-b6a162355014",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513d84ba-384f-43f9-8c1b-3c1a9568ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d2805b-c8d3-450a-b46f-e218c7bd6785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7768067d-4d94-4d7d-876e-5298cbf8aa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f125a9-ea3f-4121-85a7-c548839fb925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55c4ed0-f4da-404a-b736-04844cd20843",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924ba002-2066-423e-81bb-98d344534b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92c0b8cb-5dbb-4b48-8c0c-a585d0edb176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79131405-2590-400a-ad59-dfd515e7d5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d506ea7-8864-41d9-ac8b-ebc989b29990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c52ec175-985f-45c9-9aa7-e9e93bbe681f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f371104-e6c0-4f5b-bf87-b0ea564d88c9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1012f61b-2057-48cd-983c-9c6d2623c2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79ea7940-8e86-4d73-a9b4-1211beee834d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bf0197-8e4b-4638-a42d-5f101da689fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4121807d-fe59-4629-8fb7-8b0e34a726f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39887da3-f9a5-4eb9-b61e-73f0c07330a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7950ec2-10fb-45b3-9062-5df0840f2605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0748f0b7-ae91-4621-8a49-924c6640984a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2f58787-17b7-48f0-af0b-1721c31dbadb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a412dbf2-23f5-4e60-9184-4da2e05151cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8207ddbd-cc04-4174-94cc-3ca90c49c52a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "649441ec-a65f-45b0-958c-c7957895a0a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cee5d2e-4ade-4b7d-947b-c291621b6c7f"
                }
              }
            ]
          },
          {
            "id": "76f52ef1-8e4e-406b-8ee5-1a8f1409ac5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "528e1a00-2684-4f9b-9733-dda4d7e6ff6b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9ac460f6-613f-46b1-b882-6fa509ff606c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b1dc2e-1c38-4f34-a4ce-e17ff60872a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce3301f9-7115-4038-9ce7-fa0a8c391984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b6fcb4-e769-49ec-ae3d-290668fa8bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cd3ce9-0355-4da5-91fa-08311b57ae8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2ce708e-5427-4c72-87ac-c61b3158ad84",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "744eac30-3a72-4acc-a9e8-8fc23d3a7ff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97bdb78c-8446-4311-8de1-36cfea96dfe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f4c39c6-46c2-426d-885b-a88cc9c631bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3aa0b17a-0007-4a46-ac2d-cb432410b0a6"
                    }
                  }
                ]
              },
              {
                "id": "0455b5b9-e50e-4907-9b2d-616a32e3c2ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8bfa4b4-ea4a-4ee6-aa88-f1f6da496e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9892c707-8710-40fe-8001-593c519eb857"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f717316a-65e8-49ab-8df7-d655073f45d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "858121db-6e7d-40bb-8f14-eb77b2de4d0d"
                    }
                  }
                ]
              },
              {
                "id": "6ac05350-567d-4d5f-a4e8-4ca9743b1993",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa3ebf68-6360-4a15-a00e-20ad2a55bdc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "694c3847-3da2-4c91-a972-3aba0c2ea865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc73687b-e230-4f67-959b-0f9a91973d62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5a447e9-4eb3-4ce9-b210-d8f8e8dafe80"
                    }
                  }
                ]
              },
              {
                "id": "0f47742f-5951-4f92-8f3a-3332065fedd7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06e5eb60-9552-4018-b9b0-5624eceed0e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e45e1bc2-d501-4c4e-b85c-20943a117d30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "460cfb49-9789-4155-8026-a9d53a5e4cfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dc79ccfd-cda0-4651-ab71-bfbddc84687b"
                    }
                  }
                ]
              },
              {
                "id": "444b208e-7cb1-4d5c-9957-066be32e5dc5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff8ffddc-744c-4175-9c85-4505d8ab73e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e2875a1-bac1-496b-93c0-6bc7225cc05b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6754828-743f-4bc1-ae32-92718344de62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aba60b61-a37a-418f-bc1b-cf9242c7d730"
                    }
                  }
                ]
              },
              {
                "id": "1dd73ba3-88a7-4842-b32e-2731a856e4b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b613d7-38e3-479e-8f4a-3a0eb7a447ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99b53c58-cfe5-4179-a624-47d6113862a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a48f959f-53e8-46d3-8174-aa1e6308a3ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e47b0679-e821-44e1-a473-3e6981e3dad5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fffa380b-1a99-4fcc-afc1-684233838cee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aed0cfe2-813c-4a82-b6a4-2c6741161e81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d78137df-e9e5-49d1-b85f-e4b443c547b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6c5dfa4-5d45-4b9e-abec-872770c6b1ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "217985cf-6657-4fb3-9cdf-05f56d5cd5f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "beef55f9-0d59-4149-9d74-492e6b5491b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de817b84-1817-4bcb-a10f-468715d3c47f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d890d2a-ef60-4d05-a636-350c6219a249"
            }
          }
        ]
      },
      {
        "id": "8470e5af-79d3-4510-a40d-efbe6e9750e0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ed0041a9-8251-434e-980d-d68a480b4fb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03127fad-4c4f-46b0-bb24-8a1fbf1ecbb1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2eb0e389-734e-4a59-a5fd-571995f69d1d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c070218b-0c1e-494e-abcd-4a957058c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16727a02-c100-4cc8-9249-f44075c45749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fab693-b56c-463b-8c10-b2be3763a75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90ffc72-135c-4ac2-bc61-97ad2d2370d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9cdd4f-3896-4de5-9e50-e5435ac9f2ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8babd79-1216-46f0-8c70-11b3b8a98110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8678c799-6296-4438-81eb-ee9565502bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3384a-bc10-475d-9734-e41dd0f3fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79250b8a-6faa-4032-955a-2ddf9bcaf395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb5be0-f78e-49ae-baf4-6ad662e5303a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc1d692-4051-45fd-a384-88460aac1611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf232c01-1803-4232-b3b9-8800931196c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20880f6f-9499-4d67-b883-c0d122b4cc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ec2e3f-a18d-4f32-b328-8f0489acd0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075961b5-303d-4862-91b3-887fd1e1a2dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793bd45c-7dcd-42cf-bff8-ace86363ba86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4db8c3-33be-44a5-988d-f7f5b972146d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ece2a5-2056-4f7d-9209-63e860be30a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9281d0c5-cbd7-4c1d-8ad3-8160773a3d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c60e519-3bed-4690-bf77-2bc4c2fc1f20",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435ec72e-a947-45da-a8bc-f2057ed822fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab4a738-2c4b-4bf1-b540-382963af44f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce52af9a-68cc-49c8-a7a5-1b6e47b2c6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e44ec346-4eac-405f-9dea-ecc506a3410e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7971401d-b262-40c9-bf20-4ff2a87c8dce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59e2177-6168-4aaf-bd26-cb779d9496e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05e7ba3-56f9-4618-95b1-896d569177e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a56637-1606-44c9-852c-2294e5312ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b84cc323-1aae-4845-b1b9-d239ca4d0ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b5e15f-838b-4803-894a-7f7b89aedea5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8f3457-4a7b-45c2-a97e-2c0b29ec022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0657294f-ccdb-4b8b-a36d-8d6e2917759f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbae8b9-8ceb-4da3-86b3-859c7e63b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8fe2bd-664f-49c9-9ff6-f787e6f662f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccf1a6d-9286-4bfb-bdd5-e2e00429a8e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354fffc1-2ad6-422e-886e-ca2a0dc58618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141a6ef3-54e7-4ca7-8429-618f4fc1fda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177ece71-586b-461e-b6f8-43ca53315746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "021cb948-8760-4cf7-94ef-1d06279d7f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c965dd21-1959-46a4-86c7-f53024c49987",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b59bab-3bb0-4c0d-a1e5-187263915edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f51738-ca33-4dce-8ef8-6cffd721ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b719ee-d76a-434e-ba4c-9f1a1ea220bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a6e838-79d0-47e1-884a-c4869d0e404a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86718d8c-dd8b-41f3-86d0-f9d5aa1ba4e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555dde2b-87f2-4015-9f3e-ceba7176b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4a4937-9afc-4eae-aa14-b9184c5ecd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2929e52d-887c-462a-96be-945d6ea7f000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d2bd89-dd87-48a0-96da-01f58e336cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621af0e4-ab71-4bb2-bf84-6e709b6793ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f02315-bdeb-475c-9e30-0a86584d9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94f23fd-67cd-4032-80b2-233b6b1cede1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ddfdad-20ad-4cd7-9cb5-f212dc4cd16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fff2ce79-d289-4417-8a93-bdc9f9addb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e59b8d0-e3a1-41f8-a1f5-25697b03e37d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1070e705-5b76-4a24-9201-81c1108194ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c75203-a2df-4063-b7a5-0c0023b62231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8117746-3c51-4d2a-9331-9fef4db389a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "366e2176-1269-4827-a091-8866f177f80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57899939-41dd-4d04-aba5-a4383ec1ad55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b24d754-4306-45d3-8be1-bf126f52c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dceca889-263c-44ce-ba96-d4999bb9f6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cdf487-8211-4c9e-9051-00bf746f50ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ee8bf2-8d4e-460b-b208-f5842277d1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1f02f3-815f-4482-9667-fef5382a35f4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76064a90-5b42-4e74-8cf2-fbaceac038af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab3e385-a7ec-4597-acf8-ff02f795bea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2cc389-6217-424e-8292-50f055c92f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "77bf2eb8-83f8-416b-96f2-a3928f9d3051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c4667-ccc4-456a-9dc1-a5fb072b4429",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9596ed87-4a15-418f-9b8c-aefc107fe455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5910001-9cb4-47d6-a596-ddbfd2fe8ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb41f5e-5df9-431a-9305-b4d56a5aa75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb1e802-27e6-4b0d-8614-f9389b3cf4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd466ac-417c-429a-b5f6-74c95ee9876f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dd6254-3de4-498d-8662-2c69a10779cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2545ce8f-4d2e-4f28-b859-434718ed1de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60248054-3208-45a4-aeef-7567611f56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c0350f-d9de-40ae-9bdd-01e9466f02c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e042d51-9f79-4b02-9776-47868368aae9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65425faa-928f-450e-8014-8b5a4373ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd836c71-bea2-4ae8-93d1-e6f4c66fc8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca734ef0-5d72-448e-884a-bbff22149318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee35a1d-857b-4efd-9035-4913b639c825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73b9164-80f7-4de0-b876-69a85c8765f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0df814-3f2b-4467-b382-a3a45c09f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f18376a-e210-4f3d-b647-637131b3ae6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0987eab9-0a7d-40bd-8f6e-878542b280b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c80cd73-c243-44c3-81a5-252a353f02a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48b6bf5-88a2-4a8d-83d2-43353053bd86",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b875a973-f7ff-41b1-ad81-495aa1b5ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e654dea-adba-4d50-9159-c824af2907a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec12951c-6935-4b6e-b709-58bf0002d668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea12658-b14c-455b-a237-7255edef6e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5dac1e-e8d6-4911-8e29-ebaed96aad3e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c5273-0345-4026-b323-58dac249a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdc12ee-1ca0-4a87-b43e-02fb4fe1dc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8322b390-b1bc-4f97-8e66-2b36fd3fa841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b3c281-5c4f-4f05-bad1-2f6fef4c5cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36517d0-5c5e-4e14-9023-af502c621fe5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142241e3-d8b9-4181-b6b2-364b5616fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32775677-58da-4e89-a7f7-fe013156004b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ee89f6-9b81-4bf3-a7ff-0be1466c3949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7672d8d-689e-4c2c-8ac1-645e3201b488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af45e36-7cd1-4160-87be-3270a3b2bdfd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a306a6-a40b-443f-b669-4c2939bb1a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080b9ce9-be23-4d4d-9a39-0d0a532d208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0eefc0-f39c-4d63-9472-303530fad246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5629af-170f-4b57-847e-0d87b50d497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d70de24-99ce-4bb0-b206-f8607749a966",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539ca445-09e8-483d-b8d5-0601901c2a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85799ad5-1efd-401d-b71d-92007da7a09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b639af48-cd89-4799-976b-295e942f2b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83b5818-865d-42bb-a7a6-8b61d6727e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e81c398-7653-4156-ad68-1aebd387a275",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae235cce-4949-43b6-9399-d676a0c330c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347effd1-9d66-4179-9558-d62bab4cd73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd9576-56da-4b46-a171-b861b0b7a084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8040a8a8-8f53-48d4-949a-d45355443239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f18929-1099-4025-8dff-f0c39321df9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc768e-c4bc-4060-9bd2-07d48d557ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679527cd-2836-4c1b-bbf4-203f49f36dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc958f4-7cf7-4e31-ac68-894e30bc2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1634b1c-a5cd-4e85-9d6e-7af7232d375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c484dc-2998-411e-8242-36b5791d27ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109dd126-81b9-4961-b4a2-861e44772195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdae8e7-e61f-4f11-9811-fe3580142a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bd5d8c-0c62-48b8-9804-b5f001a593f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ab606f-3f45-41ed-bc70-345b3d7490d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bbaffc-8576-4acd-b46d-2aa0ff57cae5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8011e090-4374-4079-a429-9698d2385217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdc9b9a-5c57-4d84-936e-59b0d52acca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b3f77-410f-435b-88b7-0f4405ab1088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "912b129f-0791-40aa-9d64-049bcc74241b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbc7b96-cac4-4e89-b59e-2977ecc8d3d2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e101ef20-d477-4f7d-9842-2e7f033c3e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56fe181-a375-47a1-b50e-79fd60b26aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35927c53-107f-4a82-a52e-4948656b0f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb0fdd5-c157-45c3-9b6e-2e5414155c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f277dda-5bd7-4be8-89d1-a554c85ad7f0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9850ff0c-56a9-41a2-990a-94e8fbe05a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0cab3e-bf83-4cd6-9ec1-1cac90836790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8062255b-5a97-4df1-ae96-9e7bb11695ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d15841-f921-4c00-aa85-71be529639d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35166c7c-da0f-4ee1-8333-0d5222d9b1f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea9a956-ff19-48aa-8b98-a6dab3746365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb702c5-c501-4a95-9e15-f3cfa8c9ebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da672f1-3d1d-4071-a0fa-419d93ba6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "385f9370-6c8a-49b6-9b62-cb66528651e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1cbffa-9869-489d-b8f9-25b3f7c0125e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c037cbd-248b-41d6-aa68-094e96ea67d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c71342-77bb-4955-a3b7-ae7eff2a2737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8249d7a-8b58-48bc-a97a-5b9a9ea57c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d148ce65-b936-4904-8d64-4fa8c8f652c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ca80bb-bbb9-49fc-8324-fe56fbce7123",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546349e8-4b18-41b5-ac3d-11ee33ee03b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e75b380-992d-4ccd-a637-80b56865792f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674bc89c-72aa-4ebf-9552-e2e7c8d5ce57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf342de-84f5-4089-91eb-48991428add1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d781e196-3c90-4966-bc8e-886885b654d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75b7449b-c869-4e3c-b1e3-aab8c12a5b74",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4863a83-ffd6-4830-82a3-33add1ef65c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bec709-e49a-4fcc-856b-d13c43790e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc5f473-f61f-4154-b5e6-bc4221c03dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "855869ad-1e91-49f1-8551-b3c4c402b520"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4cbfa46-5f62-443b-b6ab-e9ac3aa1ea50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afa7d9ab-8494-4502-9b06-c2569dfca23f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be817768-a273-4e61-9522-125d6603243f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdf6d1d-8c38-4d46-9e1d-1d95fd060e23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e29bb600-fb6f-4de0-b695-e506d642b4b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66583bd9-3381-4948-baf6-a51b2cf00079"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67aa1c9a-1abd-48ff-abde-5e554a6aa797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eadcda81-f0c7-4f7a-aff9-b9e1d294b162"
            }
          }
        ]
      },
      {
        "id": "28ffd5f7-f558-42a8-80c0-042c19bbfb90",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce345188-e94c-4a06-a9bf-56c9c136c560",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf247e1-c1a3-4428-8e37-4650828c3aa5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ea4faaa-8c25-40b0-af46-98edb01de82f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9d327f-da5f-4f00-bca3-f01d5608b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5a7cc1-4b30-4426-a266-ddec7ecee265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47ecbfb-3d65-465f-9402-b97cd1b2b972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0398d2b-5023-4b4d-9ec1-87cb028e9add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0586e7af-0bbb-495f-b59c-171bb168e1db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f57c63-345a-473d-93f7-81628dbaf322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb8c136-d068-4444-94eb-f32721730edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e505e4f9-976d-4fcd-94e8-f4d432456c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a36f0ef-1a89-45a9-aa00-8e7736ecf2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9ed5c0-e8ca-48f4-9f3b-9fa7cf489d18",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff31e54-f73d-4f15-96e9-bb660f13819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b27168-5509-4d27-b9b8-23001fdfc418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32897d1e-d3c2-4b1b-b4db-ff84fa6ebf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e71c8bb7-2659-40b0-8487-efcf824a127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191cf091-db27-4fa2-836e-efe35ed8eae9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828c2603-bca1-4dc5-bb90-eb68d011a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b319d72-09ac-47cb-9ce5-47e5992e4286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4532d2d5-8b11-4dd5-a3cf-0c286bd46a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4809e341-85db-4020-9913-cc201b76417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d38220-e2c7-4de5-8799-6e6ce4ed18f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372d09f4-32b0-4062-bc3c-37d9471ead7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906220f5-5212-4645-899f-d51bf4a1fae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57de0ea2-f2f6-447f-b511-73d8777f7596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cea9a79-8a03-48b2-9022-f4cc08c1d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c7aac5-877a-47d8-8d47-8b7a883c8df8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4707e-77a1-459c-b546-4e4f8913b7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7dae700-a361-418e-8d82-627f06d9439f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5714122-82f9-451c-905e-6fa3ad8920d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0154170e-5883-4b1c-a5fd-74588cf51a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8081fb3e-a614-45a1-9206-8bf3f74a886d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cdff42-0d92-46cd-bdd9-6c2c6e294806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b07feaa-cdcd-445c-9f81-6346e34a9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded60e9e-3bc2-47ef-b687-e84d21bea455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "53956690-dacf-4150-89c8-e08788437c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1036e6b-e246-45fd-9e7d-65044d2d892a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defcfce0-1d7c-43c7-a090-e53eb8ff1bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae84af-5f0f-4192-a86d-a6d1ffe5dd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d45a0e-097a-4063-9ab0-158fbfa46a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6714a047-952d-43a0-9737-23ab0fd980b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca3dc69-d714-4d94-b836-3aad83a513cd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e1b6b5-1a29-4697-9e0c-d0fbed6ef3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e4711c-bf6b-4588-9397-da4d42908494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febaee8f-76d9-4510-809c-0d49456a969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4e020b-4052-42ba-ae7f-d81fbb4dfeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9ceff0-795d-46c5-96df-4e727742b2b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f1e055-5c5c-4f64-afbb-a24ad4481a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9854ba-6637-439a-97dc-f2f641c9dd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb899ad8-0ffb-410b-b977-33e6192c5eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22dc206a-6d59-48fc-a18a-8c5c7fc8b685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1780dd6f-5961-4cb3-9abd-f2b1a1662de3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c3085-d7b6-4abc-ade5-5a346e3cdf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5354c28-5429-454c-9a86-0604fad43820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66159716-2e06-4c5b-8258-9cc5d9a4fb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10f42b06-a4b9-4434-b036-4c223f2e89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4207132d-85ad-4f46-95bc-6907aac9d0c0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa2f51c-1837-4997-9ab0-03ce8239e943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9330d087-9ed8-4b21-9f76-39ffd9f2bf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea9ebf5-e486-4602-aa12-7a6c1d7d1a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "868c8e42-3bab-4334-8b68-838d4bfc5df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63399e53-77ab-4d16-8a96-14e4b579f00e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994b0e0-2b39-44f6-b594-ac29e3e5b161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c50cb-8d2c-4857-be13-01e15dc03ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d6c8e0-3280-40fe-8ab6-e738604ed20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca1fbc2-eac4-4943-863f-d2bd05835cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6c95ea-1a62-4f95-8502-f716a00a19bb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6bca75-1f09-4b7b-9a80-0dd37ed0c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3879c4e8-0c81-4e6d-894b-d035b0fe6505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ee7853-fc93-432f-9ff0-4e7cde727332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5f62c2-0fc8-44ce-8ad6-c754b0a11e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98d3b3b-bd8d-4e9a-a5cb-08e98c8738ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a2ebd1-8349-4408-b6d8-7361cff8cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174f6f8b-7dae-41d5-9d03-1c2c2a6e7807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563e5cb2-2a99-4e73-8743-af00599e0ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1650bbe-b387-4a4b-a5d3-57795c27bba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada78f2-a556-4fa2-a1fe-555e837d4d5b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a1fc83-6d12-4d32-affa-d93887abf8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980c194d-fa22-4749-8e2a-b3c704fc0d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05158650-6793-4fca-b4ce-22d4f45143fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df79504-a608-45dd-ab11-9f4594df0e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a2bed4-bf99-4664-aad3-c22a0828497b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e1041-e20d-4f37-b81a-a96f60b7adbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd050b22-1f6e-46e6-bca1-ea6015b3388f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417118ef-ed49-48b1-81b3-34808b944518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a7ffa4-cc89-446a-ba53-f37467652306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b289d-25c0-4e51-9366-7ad28e90d6c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeee59c-5493-4605-bd06-5a465674ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22dd075-f45e-4930-93ec-9221ed81e131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd1febd-b17c-4da6-9097-28e3586dbb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa7712e-6716-4ca4-a002-fafd4a491667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00e9762-bdc4-4348-900f-17009c40851e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1b8a5f-5498-4acd-9016-4af4c7937f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d118b22-fb4c-493b-88c2-5394932408d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e841320d-6608-49c4-bcfb-16c15e2e2f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d84da7-2b4b-4105-99ae-18b00e8d775a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1394ff3f-29c5-41e1-bb6a-42b1c91a8e0f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d23f069-ed18-459f-bd99-3f05128eb456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26e2d06-adc9-453d-a8ab-19e4997e4d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cceb545-5459-4690-ad3e-32fde149d672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad86ad0-ded6-4f04-97a4-26ace9dd48b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e0bca8-fef6-44c6-81cb-2b13b62f2432",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb80a5d-d59f-4ce4-8f61-3671230d9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724d1269-9f7d-482a-9492-699cc9ff3577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de7e7b0-3381-40c5-83bd-cf6e91b35695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09cddf8-6275-48b6-82ba-730b9d7f2e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9015585-85f5-4e58-bb63-ac3a0ce211e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099adb19-e9bd-4af4-a066-036b31b008e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6269c5-5883-43e8-96c0-51ca7f799543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53665ee5-f2a5-42cb-8d91-76360e043bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17ad261-a1d9-449e-bb33-82865d94647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19240564-7fe1-430c-8566-736402554bc7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d2e1f-fcee-42da-a7da-acbe15537669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1953e55-ed0f-4c67-9943-c123f108f567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e22f41-81bd-4a6e-b561-100290397d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0c237f-4dfe-44be-afdc-59b063e17949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d0a0c-411c-4bb5-bb00-163d0ea3de3d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed723b5-b4a2-46d9-954c-ebb1cc6c8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fe5d76-3339-40ff-9ede-8aa622fc6a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e3d72d-f9f6-47a2-af02-fcbf5493bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "336c92b1-2b61-4feb-8fe6-a52290c2b0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a622f92c-b129-4956-9937-8c508e6ab97f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6087321a-24ff-49ea-a413-0ad7c7eb9ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49919534-4fc4-4b88-8c9f-9c0b49d3987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6885d2cc-d487-4087-ac76-765c835d25e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6235c3d-735a-4664-9417-7524556b622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b8ca98-8b40-49db-970f-bbb4b296d5c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3ab618-4fb0-482a-b535-dd2429131c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273ab24-2337-4863-9fc5-b5ba1f1858b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3c1c4c-9469-4122-9b7e-86b17c15390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337db44f-5d94-4916-8fc9-43c0076732e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01687979-09ed-4279-85a3-9fc99c199abb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde0bba9-b177-419a-a412-adfdb9bca32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fd9f4e-c489-453a-bc38-e8aa8d61fe4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0352af8-fd56-4dd5-ac1f-ece12b8c2cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e64f5f-5872-40e8-9eea-0eb73137cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12255b7-5e75-46a4-aefa-08a32f9bd5ac",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7855aea7-499b-4a31-8788-4c6527beb66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa784d8-7836-427b-8fe5-dec59c03e381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd427127-1d58-485e-9a64-82527cc14153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64bd456-40cf-4ca2-a79f-38635da77d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a267cec3-1e8d-4f84-ae71-302570e00600",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2ddd71-5db0-45be-a726-0a73024fa64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb02708-7628-4e97-ab68-e61989580017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739a1245-09b2-4382-9610-672e8fc953cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a9da90-d59e-4a52-94f6-02a0eaec1a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3253ae7-b7c9-4515-a070-eac33ab848af",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aa60bb-bd82-4d71-979b-2739285952f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84425851-7913-4178-9b2e-048ac1e8852c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f9833-d47f-4b12-ac0b-322d8502eba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c4e7b1-e1ca-4c74-9c4e-e4a5d0ef0fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb16e26-a0e8-4e29-96ef-5bb49e5eda73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8b5d4-95c3-416b-be51-124e66768386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d9aa35-170d-40e9-a1cd-09d92e7a79e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ccd64c-cb8e-4980-927c-406f0e22c62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be8f784-6d35-4267-b479-582c22c82a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30baa681-116b-476b-90ce-41a8ac52357d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797fcba-41b7-46cf-9760-53779cb691c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4748557-9152-4725-af75-c0547064e5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1472fae6-8bb1-42ee-8986-49f5673f5020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103d0db9-eebe-49d6-9574-3c6c7693c75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c82229-5fba-4232-815a-620a89584acf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08025ef4-7a23-46a9-b06a-451f9c50619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96157dc8-e978-456a-9d89-9092f9a76d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0e9dcb-1b29-4cda-94ed-090002d03943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "955b57d5-1aab-475d-8fc9-aec58d64eee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a1126-714b-4846-a125-6d246743f25e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6792db-4392-469e-9d80-c6e46eb62323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4433e3d-be07-48c2-9d1e-c7e33c79cae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664b52ff-d91e-47f0-9f02-274c961fc4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74c2b9f-f721-49ec-bbf3-19bffbc3b202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99937a33-84a8-43f3-8161-bc47a0573b67",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c525a5d4-a318-45d8-bc1b-9f67d9d4ec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea75b783-2552-4c4e-a430-242c064a9fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00190b38-3b29-49f8-9ebe-c998f5a8517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45aeb6d2-a546-48e6-9b98-e878e5ec1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c8df3b-e93b-4d32-80bf-c004d3215a89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e304c6-7492-493e-bfe1-c5051d10fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc1ce9a-5c18-4278-b534-ee2eb2656174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a11d8ae-22fd-4183-8d18-4c1d4b84f0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4752766-aeaa-49f3-81c1-91252c7f3615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5552c1fc-7340-4525-bbdb-10a13e7a15b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04638e9-c926-465c-b873-cd7b8474f90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5317a6d9-6731-4d2e-a3e7-5c4521eb5f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b579355-d622-46f0-87a0-4fbc2e5f8000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5941da-6b1f-481e-9517-fd9ff5b241c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54abbe75-4627-423d-8cfa-75a9f969bf42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cf40b7c-5b73-4a4e-8e88-0862b6053fac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5509874c-de43-4a0f-aded-3b6f68701580",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee3ebf4-ec8e-4071-8bad-c95ab4145bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f0129-a358-4d42-997d-7ed0d712bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7a7930e-f1a9-4ae5-a80c-d53a6c567e51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c07f86f1-0218-4407-a18f-df3a37f1022d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbc3a188-5758-4479-b545-136500102416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "301cdf52-fb7f-42d7-8f71-75d98bef24a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93afac46-5621-4f59-ad86-b88c8c9d464a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c94f12e7-aac0-416b-bdb0-ecba3ee11f8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "306244a6-dff4-4d3d-85f1-93b458875347"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1f61d5d-1a85-4557-8a75-a59c76052c33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e7b0ca0-9d22-4de6-a7a5-7dcd14739eb0"
            }
          }
        ]
      },
      {
        "id": "98a30228-ddb0-4f5d-a469-4ef19fc1c2cd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "485341b3-bd34-4732-90dd-3446a5d1a116",
            "name": "Negative Testing",
            "item": [
              {
                "id": "023bfa83-ec67-4a86-8720-c86d6cceedda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c07e8f3f-2ebb-4351-88e9-8e4bd09a581e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737209f7-8cac-4fed-a53b-4c5beea6458b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9935c628-4200-4784-ac1c-a5000661c884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428d23b8-429b-4518-88e5-71d71bfa5956",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21fc60b-31b7-48a4-ba32-9c6b9d3232c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf704ac8-4b0e-4b73-a464-f39b8f8d5ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4987a9f-3632-491a-8827-93fe1bcb4680",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1846da-cbd1-44c1-a585-fee833b50223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3d1ab4-2670-487f-a96d-fb4668ac696f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad4e8f2-1df8-4231-bf0d-6c264e2134b1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadf6be-78f4-4478-abe3-cf67ef2d2b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e5b06e-3dac-412f-9133-781a0ea30a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab28433e-0298-4609-a0eb-72ff14d9d1d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e79cb8-099e-45ea-bc76-8bb912e8480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e2e39-dd2b-4c98-9af2-e79105b75dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea865629-333f-4a11-b13f-b9fc0776242b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaaa1c0-f69f-451f-9be1-211f8e868474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9830dc-5bcd-4b0a-b11a-f793bbc8db7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab324ca5-8024-4152-8a97-1d12b5ef6048",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcff9a2-4566-42ae-841e-a45f866b5a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09dfbe2-f96c-4c2d-97f9-db98f9e08a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26496b6f-7fe1-4234-a1bb-8f1775f2d6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e31c2f9-f266-4028-8385-27adb26ae206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55c597-0198-4b8b-a83d-288c72c21eea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8dac1-aecd-437f-8f8f-816ccdecb2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11bdf195-bdc4-46ec-b49a-0532c61cce3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f4132a-465a-4659-9d8d-6c72b6a64241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb93657-2c61-43db-b880-ed14de4427d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adf016e-391e-4002-802a-73f0d5f5f308",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b8eb4c-1130-4740-9db8-188a4575208c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20099816-4763-4fbf-ae04-c3e83eedeedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35957de4-4736-4438-8a68-931583209dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c0dba6-2d63-4b59-a128-0e64da4fe16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec50f78-7497-49f1-a8a8-e44283f59ea6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339387c-1059-404c-81f3-f907f7b16471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967b877f-2e06-4088-a5d5-99e4e79be891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b6ddc-3f86-47f4-ab92-33b90d918180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d17257-f441-4fd8-993e-7ffc57fcb969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8341ecd4-29d2-4e2a-9e5a-3e066baab784",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4fb441-6042-4c50-a3f6-de6a46792687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a394662-6c4c-4e66-89e0-8df23da13882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d189f462-e8b7-46fb-9883-538fcadacd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d1addd-b800-4e6d-aada-4287a3584b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91082990-c118-4250-bbae-76a4f5538717",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2905365b-d4a3-4962-bbf9-978c14f0d1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e09144-366e-432f-956d-11cd48ac66a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b060fc2a-e3ba-404a-8c74-f13a1893763b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2595879-516b-41a8-9dfb-04ddbc42a442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925fc39-962c-4c85-86eb-bf7c153a3291",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e2e20b-0043-4b32-b7c9-c0ec7d584086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8b844b-2560-4fb8-99b2-1c9f8d0f8391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8225cbe-239b-4f36-94c9-2de3b42d826e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5dff3f-959e-4334-9455-9dc61b3e03c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311aba8a-d3bd-4220-be79-9cc740d9f551",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789749c6-3087-4232-969b-b05cd3af2b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127699a7-1879-41af-b8df-c68515b5df3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7799b6b7-f56f-4403-a0f4-e379cce67b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a5415d-e239-441f-a69b-389c4830242e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4357c13f-89a2-4e75-9705-ece8b5242b72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05d187-5c7e-4b44-a658-84d49cd9a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a8af0a-5a4a-4a1b-b149-f9b873a284ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ea70cc-7089-4874-b2e4-32116442b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b79b37-15a1-4702-a9dc-00219ed288b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6b2e91-424b-44cb-89d1-bfe2c73f19c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a22826-a6b0-4148-ae96-792980b26c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ae32a1-dab8-4a9a-884b-8106c9637df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec51f38-ec21-4256-a8dc-5e68389a42e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1067fd-2fa2-412e-8901-de8fba194fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff498ff-6b80-468b-bf86-5516d93bcd4e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e438dd2e-a3db-4598-b4bf-b2c2613768b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c8e65b-24d9-4d69-9847-367d27310975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a3423d-aa66-4dc5-aabd-fb0fb605772e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32421e44-8890-4e38-8c94-490bf425b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea429af5-0919-4b96-9d01-fad90cfb5208",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64335b5f-16b6-4473-bc0f-47de99c8d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189cf571-0d6b-48bd-a0d3-3b120307cf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71e6ae7-e36a-475a-b7e3-091f8621162d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87ffb52-12cb-4581-8d2b-34e4cd294c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5101b4-49d2-4d13-80f7-f4a1ea133dd5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5020674b-f42a-40e6-9178-387cccc5785f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f153d17-8081-4fd8-a49d-3f12040b21e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ca0ee-3369-4ad7-952e-d021331964ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a897c1c-db61-42e8-b494-c077bcc01e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78268555-e37d-446f-9605-54e9e8570e19",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0be68e9-12b7-4044-8a0b-d1da7384b385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23e5b6c-cac8-49d2-8d2b-a39ad7661692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79b5632-8f33-4991-b39e-e3236beaea8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84021316-ef3f-4459-a003-5d22630a53a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12d9cc3-a2cc-4aa3-8bab-347e58699758",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d439adf0-00e5-4f76-b21d-1916692f48f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9ee10d-b65a-47f0-aae8-11dc1a659026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491fc9c2-ccf7-4a2d-9e8a-af42b96bd647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed29d9d-0e0d-4298-9fdd-ccdebc17787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d431c6-63a9-4fb8-86ba-2bbbff93f824",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6edc354-e5f6-46b4-b4bd-79f158dc143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11b8fb3-e892-4c3a-b2de-f3f1e49da3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec69dfa-0081-4eec-975f-ec9cfbb7808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28674836-f92b-499a-929f-65061b6ff6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a745a9-319c-4c6c-883f-41b4b3ba627b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dd8c4d-7960-4fc5-8953-fd9d4124c560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f77bfb-b997-4066-bc5c-66d8ac20fd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079fdab2-546b-4ff2-be5e-8b525e34dc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c5d1cd-fd7f-4200-a208-48f52a4b08c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3914a2e7-f7db-4e49-91f5-efe766267113",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1635510-4b01-454a-b0b3-e504685f9b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2c6040-4e03-4168-bee8-427e59d225b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882c79e6-dbf1-4d73-9a24-19ea316bedde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7be8a7-b03a-4c8b-bb07-8dfb1638779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ba6ca-41cd-4664-9c1c-2471ed5b2c83",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467c59a-908f-414c-9a1b-5b1a993c5c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952cb389-fb0f-4e19-b2aa-d5903f42144f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e30fdf-9370-4025-9984-52f8c668a8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d4ffbe-362a-4472-a890-3595e39c921b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690352f4-2cc9-4937-9354-4cdf547439a0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b03265-e58f-424a-952a-793e07596e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9cb4df-9621-4863-b157-d4d8e8d73794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b620d49c-8f02-475b-8661-a1313260ae1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea7fb27-2c84-45a6-88ee-7b1349c9f417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dcc88c-8bf6-4ea8-bfc0-6b2aed4d4e24",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326764e1-0400-4d44-8a66-9970f6335c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba8a335-528b-4914-9b3b-604638337d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a78e0d-87d1-4212-9bb9-252f029a4605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582edd28-6e41-4a93-a8cc-dad0aab55058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b78a8-0cc6-4e8c-8738-7acc62a22a46",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491e9c4-56cb-4339-b163-32042d6b0c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543f2548-3dce-4bd0-af79-aa4f6d005c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a056ff1-8051-4ccc-97b8-b29e2cb2c87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5008bc5-c549-45cc-907a-be8aae76b933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afff2917-ccdd-4883-b915-5db1dd726cb3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86fa069-bf5b-481e-acbd-6936146d1425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06935c4-80e1-40fc-8b0e-6a98bcb4fb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e39d59-5982-4c46-b9b3-38ab361c4310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1761c48a-f739-4bfd-b417-c5f5774f0655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52e2ccb-a379-4630-829c-275efbf88733",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eb3c63-285f-4f54-a236-c036dc583788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9b4cbe-19f6-47a5-9da9-dafc96cb1944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e10e1fc-3db5-4d64-ae11-3570362e077c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f294d9f7-5f56-4d8a-a2d3-642621aad3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c67ad9f-e0e0-4995-a013-89598f667c4f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81756839-5585-40cb-a5de-4c10c6f494e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b30d5a7-d344-4527-839b-d1ac3d419e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a218414-271a-4c40-b82c-fc9a524a7b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbd2732-39dd-434f-9300-77f6c66d461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4553c2-7381-4832-b7c8-5e49955e098e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82cf99a-5efb-4882-92b4-44cc4c8b15ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d9e27a-7589-489f-9ae0-4af7f4f8759a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8c716-3c8c-419b-85dd-595cc030cc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedc8372-e72d-4814-a12c-9f60c80ac5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6f7970-b0de-4ed5-9a5c-2a69ce8f4d2c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cf5e34-75cc-430a-8af2-ba2f7402d0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9c2df5-2694-4e1a-9072-3de748d51e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89979b49-8dce-4c49-9333-de4c05ba435e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4270cc93-05d5-4719-a898-1933f1a1362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78360831-13a7-480a-afcd-59a4495cd1cc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce73f24-4abf-4ded-861d-e4d9fa6f25d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa1b8f4-0b8e-4fa9-ab2c-e6cd42aee6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18885d49-266a-49dc-b075-54fb42fcf55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c5a140-11d7-438d-acef-e460aba554cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22b2a46-ef08-424c-9215-d71f929afa9c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a75f4d0-c7be-4464-9da9-27ac114da12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaa6c73-8fc9-4339-a4d9-19785047d9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30f14f4-72cb-4b89-aed1-9e2e9c3fb8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd6f4c5-5fe5-4e25-b998-05e02ba5a873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dade297-515f-4417-a8e6-5473455cf2b2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc5c66-4b45-4f08-a40e-e8cc3314c4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd71031-eaf8-4c19-a0e2-5d5ee39c4d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca8300d-0ef4-4cfc-bd93-97cf7113fe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af65bbe8-5356-40e5-b4f5-5caa6c612362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e73df-f3d3-4441-88f3-383f45401776",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a54587-8f22-4ebc-b9e7-a24f080a16a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75b62b7-6e57-4dd4-9706-bd1daf5c2250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e72c7f-ed88-4d0e-94c6-16c7ddb9b223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90c5e7e-2499-4410-94cb-6863ef1f204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3524c74-7d5c-4260-acae-77d7aa8e40b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106b8b4a-f009-440e-b6f0-66d0c8137b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0dffa3-30a5-4c41-a506-c4f6f6d2bd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91ed371-71f0-4dbd-8de5-8d838ba09732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ed4486-462a-4e9b-a171-3c97bf1bf1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da227ad-2a87-4db9-ac01-de0d95c098cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd5f7b-81ce-49dc-9222-1235f2898490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48511d67-7177-4328-b5d2-f6f364a33cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360d349-aa78-485a-9ed0-0dc66880e4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c433f0-b88d-4cee-9306-0564731ebc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683c52d5-d0d6-42e6-989a-c244ba6d5046",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e99c257-b531-4aff-a616-35467e0564d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b31bb48-1d22-47e8-a3bb-4302e6e18e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961d6a98-eb57-48b5-88c7-9ee2cc49e362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bc3923-d580-4cc1-a16e-a7955e94ed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a6a280-c462-43b4-b888-5bb09c74cc74",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa70bc4a-0f4a-4f89-b819-06f51716d097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94452e4-0023-422d-95b2-0f4c4da69445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bdad81-89a8-4de8-b8ba-505268dbbc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a2c5fb-fe4a-4782-8dae-d8998fe459cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102ad8fd-e8dd-4a5b-a2f8-a4b1b2adfd6d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2873f14-1799-4ad5-9668-eb7ebcd15c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f32cba-59ef-4b1a-b533-5ca137166cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a23c3-8a8f-4ed8-9d75-4a7563230362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260ad7f5-3480-420e-8591-448e230ccd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6f41cb-3d18-4140-bf02-fd5f2c910980",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616917e-86ca-49ef-b717-583a5755e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a6dcaa-5e9d-4604-af3d-8bc1ebbbadc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a271ee-d938-4c9d-a295-aa5673075885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197e336f-42d8-4fe6-b487-acff89269f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a76fa4-26a4-45a5-a8fd-0ee888b37c79",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd08476-8567-481e-b352-e1dd76e37442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3f0022-c943-46c7-be29-c6bc908ea650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d8d747-ad95-4cb8-bba2-41ca96ab57cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dd5f03-1616-47b4-929c-7febdf487c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220a1c7-2931-43be-8b65-bca7cd68656f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de381358-2042-41ed-829a-2ac1dfc48642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd34319-e6aa-4a75-b8e1-0417facf75d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f8314-f3dd-4bc4-9dc3-57e0234d5d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4aedd1a-0bf9-4f18-bde7-573bccadc785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38273137-9182-4d5c-9c9e-256e52435b57",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7224cf4-7982-491b-b593-71fced5f82a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7099b4-cb24-4567-9a6d-ba8603dcb4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a931eb0f-9987-48c1-b6f5-5081867baf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabb7c51-ccd9-4b64-9037-257bf6247320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebed364-18d4-4dae-ae8e-143db5cac430",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21c4be2-29ba-41dc-bae9-fd9c3778c5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856a87d7-6fe1-4338-ba3f-14835ff7853e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7f405-e15f-4156-9abc-aae55f39e29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df53b5ac-4d15-483c-8a9f-a64d65449482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a207eb-2641-4273-8b06-f68de29d7a73",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc7460b-8d97-4c03-a7b0-b4a97c018ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee3da4d-e98d-483f-b4de-a38e4ae4874e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d5cb57-a262-4faa-9082-4221294a2f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fa38f9-e28d-4443-adfe-2f749d146327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e31932-c6bf-4fd4-8f04-40fffb79a0e9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3231b780-5024-4a93-9beb-b3b03d0faf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f9699-d9f2-4c65-a11b-9b4518ef5089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad27a6cf-82e4-4906-a6b1-b264db3fc4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bce7176-a981-4dd8-ae00-b4b7d835c0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f11297-f5ad-42ec-b43d-7cb6564425ce",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5029e1b-6a99-4552-b122-22a38f4d36c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da235ce-cffc-4f95-8b5d-94acedb41bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0575892f-ea6e-42fb-8ca2-3e00185afb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae6601a-1419-42ef-98db-bbcc8062196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ae4de2-a7b1-4813-b0fd-1862fe281a64",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1d332a-035d-4cf2-8752-ca16e3471730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68136a55-f309-4d8a-a2c4-e65e44a792d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ad9039-6056-4499-ae68-7a5cbde697b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4fbd3e-9482-4720-99e6-b43c1e16ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d5154-edb5-40d3-ad30-da8fde2a4e3d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8951c328-0f45-401c-bc42-4fec45148519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896eb84a-6e87-4354-94ce-33a7f20c6cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495c7b49-fe2e-4f86-9387-a97d9106e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37755e69-d1e6-4060-b0d0-1b00bf8b2ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6987fa-502f-4c70-b899-4f13854d8268",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081d272c-66a2-4428-9705-6a90beb72bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f39560-d86a-46c4-8eae-d02cb17901fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6457afe-3129-418d-9fd6-f61323023abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217e0f66-6b07-4b63-a18d-fcee76aa26f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558dc49a-a7cb-4af6-8fe1-77492af712ea",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68edaed7-5fcf-46a7-912e-59c6915a7c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce584c50-ace5-4769-b4bb-e94528dffbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3821a178-a71d-4ae5-9762-28e193e86681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47784e31-0632-4f27-9381-15aa50bf5e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7770a3f-6ec2-4787-813a-9f6955eabbcc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea886b-15c2-4b2e-b010-6c9536551e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6c1ce2-e103-464e-ba52-710b48703936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed837e4-461c-456e-8311-52a63e0603e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e9e1f0-e093-4544-be91-1e4b4613d1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dd805d-fca9-4a65-bdc6-d695128166b3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84decc59-53e4-4f7e-91a3-2b755d690513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153fb0ff-fcc7-483a-860d-95b65766c3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478bcb65-9a51-437f-a6ed-5b4b2676cc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c32987a-9186-4ab0-84f2-f65d93494d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada86cba-b3c7-4c74-b192-5882b5754050",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4195b6-8715-48bd-82cf-446edd828ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9810bee0-248d-476b-bf1c-03f996ebc0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34439bb8-2dc1-474e-aa3b-7ddd281b090b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0552850e-1293-4bd3-a578-b3cb49d48799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b711ea-25b3-4969-bb8d-28e31d89cf9b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff47a948-2a1b-484a-a315-8f15ebff707d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb1b616-7f76-4afd-8b21-a736906eee67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d958b40a-378a-4512-96ef-2a51d07c8b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a882b0b7-274e-4546-bde3-118a9342cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7280393-3e0d-4b5e-bdcd-22c8e6989ceb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b609d48-4837-4b06-88be-d520d4252092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6f8ee7-dc0c-4432-82d0-339bc2c1ec19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc29305-6775-4c3d-8f27-6aada7df7ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a3d8fb-03e7-42cf-aa87-bef1670f8894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f2a6e-635b-4af2-afba-91403eb443af",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909aebc4-37ea-40b5-9648-d2cf01bd099d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8413289e-14c8-4dbd-816f-ed850f4b303b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0decc8-71c9-46c9-96ac-941574560ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2233aeb-4d0a-40c8-ba02-e0464fc06bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be998b89-15be-4ce6-88c3-1ea7820cdd94",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23af071-5c61-4b60-ae07-51c99ef37d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7721d7-50d4-4282-97f9-20d7a5471539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4834ed72-6c19-493b-9ffa-7d3a1ecc16e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9124ba-a18d-41e0-a5c4-f772b18fa67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da65944-c0f8-4c9c-ae64-66b197234558",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf755c1-b644-4e10-a9ff-7531d859c209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be48201-0ea8-463c-8f81-4f549003fe00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafc48d0-26b8-4813-b9fc-be8574d70da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053f13af-d061-48cf-96d5-c75702d23221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38206cdf-5b15-4578-b26e-5979c562624e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace6627f-7b45-447e-80c9-45ade469c325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2678f90-a00b-4eef-aa4b-8143343fc9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4746ab51-ec27-4e36-9e65-2a2a8f25c230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e0f01-b63f-4c57-b5f0-8d26f0848ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeabcec-5f1f-4e1d-a41f-eca7a43901b6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c69a9f-b8ff-4916-b29c-69f6772067c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1db1f63-dd8f-43ed-91ea-9b266f7bfacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6029af39-eb5e-40a4-ab99-24a3e472c5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2889988d-d56a-49fc-b7d6-3d3f8b0e817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e705053-0716-4b24-ad25-43c9e72ac5d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046eb99d-6701-42f1-a8b1-3e8928801968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5b302b-8aa3-4c95-af59-4d75a4c353e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297911ab-7ae5-434e-8676-aaa20ee31b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bf4496-dcb0-495f-8450-72f56b6d5887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb618823-b5ff-473d-880f-6082c77c6844",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6e4da9-1fff-4c68-b021-be9c261dc316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3315d1cd-e325-4ed7-86c4-61275f9c434f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea51b5ce-72b4-4b8c-95dd-04f0fc2943fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f525deb0-beda-411d-9783-66ab995471c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace61bf3-70a4-4137-984d-b0617886f3cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1681cf4d-864b-4adc-8b26-b8c02025aeea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d589bd6-9db7-4ca8-a194-4d37325c8d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc10d3a-2fd2-4f40-813e-6d4ff993251f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6324c4-34bd-4687-8137-7cd628311d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ea20b1-042c-4234-b853-c9e100245a52",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217193dd-0df9-4621-8dd8-fc617d433168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af706cd2-bd91-4973-b657-4d590f7ded85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78d8103-b1a2-4475-861f-7737218aabec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce40fc-b07b-4219-9e7c-6129d2b7e7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c4a77f-2033-472f-a880-47a7d8167217",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd851028-b03c-4463-b999-7b272feda933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393e37ff-0ba2-4f42-8fe0-10966a7801a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ff749b-82f0-4490-a8d8-7422c138f8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a77c8a2-7fef-4e3d-88ea-563fcc50bde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c287129c-1247-47cc-9e86-09d70b1c5944",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebf8028-6451-4723-afff-c84fbc5b6389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2312c4a4-0200-48da-8b94-0e76204bbb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73102412-b774-430d-9445-6c4417885b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49727233-57cb-4116-bbb5-23905ef7cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bba489b-cb19-41d4-b8d8-1a39c01e2007",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f317584-3665-48df-bf8b-711d63880445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3148e92-2777-4d80-a544-636fad280166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2610d3-98c5-45c5-8ec8-347048198dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea48f1d9-99ef-4d3e-89be-fd180d377440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ce2245-21d1-498a-981a-bbf2966792dc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed74c761-7d39-489e-913a-2153199dbba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bfe3957-b0cf-40ba-959d-474118604e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d868f85e-8ea4-4a52-a53b-4e0d2744fe06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492dfa78-0eb7-4d77-a63d-114687d8aa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49171a-afba-4c57-8cd2-2d476403ad59",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4ae68a-05ec-4c72-b090-12d5b780b964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4779be1d-d8e8-48b7-b5d4-605041377bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66e2f5f-fbac-401b-9c3c-3e7636ed67b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87aa9a5a-452f-46a4-b10b-18d313766c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42379312-aa24-4572-a84d-481ce21423f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f9d728-e14e-4d4a-afcc-217244da5d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a91445-6c24-4bc4-8fa2-e02d1c8397a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a6366c-e45c-4285-ab99-8c77b544b17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06019f2c-24c1-4128-926b-01906e9ac150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb0cf3b-8025-4f8e-a0c5-bda1bb4aec78",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efa6c99-ed74-41a0-9c84-8a82f3b2d149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8503f5-27e6-40a1-8a71-53aec7a5bcfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f507eed-248c-4fc2-8dca-51c35a9ed315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7283d8a7-539f-4b32-ad92-ae3189880301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dddf3f2-86d2-4a66-b78f-e8fd1fb4f799",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e15623-e8f6-4786-9704-267025d12c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5078ad0e-0eb0-4ec4-af5b-7386cb2cd3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bef80cb-f8dd-426e-821b-2a154766d479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13c6106-c006-412e-ac84-6ca66276aa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4b1de6-0322-4173-b3f9-7f9bc7e2f228",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683305be-fa5d-4763-9560-cde7120495de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19f09c1-431d-4c45-8f58-63ac084bf3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4036c8e1-e2f9-436a-81d2-50746baca7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d738cfbe-5343-4f1b-9efd-a73df5dd43a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6e3508-9569-4c62-a98c-6e5d91a6df33",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a485472c-ed1b-4387-83c6-65aaf46cbeb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30c3217-ec32-48dc-ae1f-b30891c02d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda3ed4e-354c-47d6-aa56-9a05a52dfefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffe9ce9-0fe3-4e3c-ae34-7591dedcc2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b09e2c-4e1e-4dc0-90ae-e541aad21308",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bdd989-81a8-4040-a56e-fc1e4200eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ec0be8-7af0-4e67-9272-44f5788a9f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87186baa-888c-4dc2-ac9a-ff20bc0d48f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dc9cac-a1a2-4a58-baca-1288246a1d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d030cb-cf39-421f-951b-24d779506e30",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85795f35-b03e-4d20-95b9-c0b2960cbfe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7306496f-c1a3-4dd6-97db-759453ae7822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85678b8-0ea0-4690-9e63-462421255101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9c010f-6eb4-44fc-a051-a0c23fc63918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98687980-5e98-47d7-8189-db704d5db648",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30166084-c538-480f-8b8a-b9813bd428e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5933199d-5861-4740-8746-7e8b642b32c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7480cb5-0e39-4130-9bd0-92505dc0241a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23babf71-7be3-4ed7-a91a-333be130339c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e61773-7bcf-4d3b-90b1-7071d4dbb0a7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d11de-0981-45fb-b609-87cc8b4e72b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72203627-0035-4de8-82dc-169aa5a19bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a8ca73-74e2-462c-b6d5-bedba8cd053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6334b91c-3b63-4893-bc50-2e5172165126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515be9a4-dc56-44e2-b64a-fe21f16f17b0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3516b73c-0387-4ab7-bca4-d27452b82c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9345143-283c-4502-869e-ecf6fc881933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75534ad8-6fcb-4fef-aba5-6863c8709597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f2f303-574f-4ffb-8f91-80ab6dfa29ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6e49ff-ec69-44ba-b511-72c20aa9b1db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edc3d1b-d89e-412b-886a-9862d3813c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f826fc9-d0ef-4346-8362-9dd2cd8d87dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318874c-c8bd-4984-af77-78a67f61b9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f9d241-5c43-440a-a8ad-f31069eb95b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a86f038-748d-4acb-9444-fa57acc5b428",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a55cf3a-6346-4667-a229-5405df74cca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c896a8-e25f-4acb-bd3c-cc6a1be54926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae9ce3-b101-4f1e-8eb3-fa2174cebe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d880876-54d5-4312-92be-9452b63ac2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c214752c-5fc9-4e74-bfa0-8e3226cdd643",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c8a68-77b2-432c-8009-cafec19a391a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7592e2-50ab-4eb6-87ec-52acf260f1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff47cf2-da1b-4e94-b6ee-d03d5660742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba758dbd-bf29-4e99-a871-d25fce85f706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e672a850-8dbc-4cb0-ab69-3d27e443ba22",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b8878b-5890-4e23-a895-e5de6e955fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e002d1-92b1-4157-9545-75c979c0aaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eb9aab-80ad-4ba1-b841-eecc2855883c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ab724d-6154-4878-b5f2-d9395279263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd6cab-553b-4e41-952e-5457c8d0b0b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c35533-2a5a-437a-8ed2-a38dc84a25ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e1149a-a39e-444a-8017-90a1fcd3f3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9d7922-54f8-456a-bca7-3cf89e39296d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb2e06e-639b-46e8-a17f-fbbc926f0f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619064f0-a63b-4e30-ac05-ca6bea3fbd11",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3555f418-6c27-41c1-b6c5-b2105f18b861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e813f614-20c5-4c5d-ab91-e54786d627a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfcbf10-35c6-4e95-8550-6a6466f493d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d0e88f-801e-4c8c-bf75-665b75df30a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b333e8ac-3fbc-438c-8ce6-da7b669febe4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7846660-d906-404f-9257-c087bc242138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84444fff-5457-4170-abb5-b942a0da2a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833b0a60-c0f0-48bd-98de-e3bd31c64627",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baff920-6602-4ecf-a61f-d0467a7e90e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e718f0-8bb6-4776-9fcb-3444c8def7e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acfd885-cbf3-4406-987a-c247d95ce37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5230a4-296a-4778-afe6-abf7294a62f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1c7f56-4c03-4869-9281-b33a096dea2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c803c6-1807-416b-a70b-23c299f922bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a479747c-49a5-4636-b6fb-61d68d84db3d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71113b57-7021-4675-a8a7-a42060d3338f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8126a2-c024-4180-ae37-0da043a7309b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4fb74-4814-4559-85ca-4938bbd484b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafd9c4f-236e-4186-bacc-3cfcaa31dff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d6567-fe62-415a-95b6-a04059ada77b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b83eb2d-47f6-46ff-86df-1b9ac74d89ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2d5025-136e-45b8-ae37-11d14de05436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e0790e-94ac-4cd0-a2f2-6ec517616897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c810135-2475-4f59-a6f2-787a1f06920e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c5ca1-c12d-421d-9a51-92185b30b2f1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640a34d8-4069-4c81-a4b5-06825d0afbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a7c76b-3b52-4e2a-a21c-7b12d69476ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e9867e-a518-4a83-a92e-c0241b650fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7a14ef-6a5a-490d-bb49-0d818a745555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fc34d3-314e-4e5f-8b6b-63bb8fe13812",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28844660-65bb-4c19-b566-210cf4253815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c2498b-1d1d-4819-9ef8-11df10f2b465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead56c84-049e-46ce-953d-0201b38c82c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c2f6a1-bdcf-4bd6-91b8-cb1619f6253d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdedd295-004f-4a47-9bfa-f396841ffa0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09803c5-2a2e-48e1-8b9c-04afad560d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67ec4dc-42cc-4a2c-856b-2d7de81b6a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac60d10-8d31-4eca-9b75-bd273303deaa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c1593d-1b46-42ed-9904-887345f2c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973153bd-8edc-4d41-b267-2842bd7c9112",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378f08b-2121-4886-9b67-285ace4fd273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f4290b-237e-4add-b305-8a09e4043d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ac4327-8ac9-4920-a2a8-2a7246a5bb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f84b99d-6791-4e9d-b376-824e59c1ecfb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bb7765c-44aa-4af0-abe1-51d342b30dcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f62817c9-1b62-476a-ab9b-f1af4e46cd76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e5ddabd-293c-4f40-b13c-170f589eab6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b2d778a-602f-44db-a3f4-ede6bf83b495"
                    }
                  }
                ]
              },
              {
                "id": "14fbfe0c-03e7-48e9-8f36-6e6741d1b886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1e1c928-f4ee-4bd0-a190-1f0fdbd5f3a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee594d8c-9b96-4222-bac4-2a2eeda62198",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05e43e29-fc7e-4982-9d5f-530cc8c27e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840e388-fca0-4f97-af79-40515ad37af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4caab8a6-5779-4aa7-9636-3799274f06b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9180582e-56ef-4e97-87f0-91fd0f083a43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90cf5136-94c8-4af0-ba1e-904388887407"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8614e1d8-99f6-47b2-9c69-0cdc46434347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17013175-490b-4def-aa71-9402d0e3199e"
                    }
                  }
                ]
              },
              {
                "id": "9ec708ca-cf65-4c25-95e6-9ddd86eedfaa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f37096eb-58e0-40ec-8389-847dc98a4ca7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1011fada-1e90-4043-b882-7da36148c007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a8421104-628c-4b2c-9cce-204676054dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd084d9-4a88-4aab-a542-19f6031df41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58050f95-6267-4682-b729-75d9bc02086b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa84a96e-f97f-48c6-8b29-2dc1ec17b5c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee638562-a85c-4074-98fe-a5a113e486a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca594658-626e-4b6b-932f-7c8164094376",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "feba42ee-ed87-439d-9636-f30e07a1bde0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85ec6f37-a2f5-477f-91a9-cd5e9433710a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ec6a39-a0b2-41c5-8c9e-73b204b4ce71"
                    }
                  }
                ]
              },
              {
                "id": "668a3182-0ee4-4c9d-a700-27f9f6dbc4c0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc7ac1e-c26d-4cbf-b16a-be395e6b29f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15cd69fd-64bf-438d-9d1f-7f844423a9b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5889113b-06cd-412a-9b38-ddb7e7f53275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdf222d-41e2-4c2e-bcc7-3535161c11e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f6ddf0-1c0e-4ee9-9b16-f4c57547c07d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "01566724-cb68-495e-867c-4b5f0d2589c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fc9e512-f4e2-443b-8336-abd4d967c088",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0262ba6f-f710-4ba2-83f8-25e13db58258"
            }
          }
        ]
      },
      {
        "id": "8eef1de9-54d5-4a6f-9f70-dede957db208",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9e30e4ff-57be-43a1-b096-24b9eddaf9f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50c936b7-a2d8-41d9-ba2e-31aab7f2788a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9489356-adc3-4ddd-8ab4-fd284d964aad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc117374-c3a6-411c-8618-82bed696d045",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe557a9b-2285-453d-8334-edc883260fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c50c5d-5fa7-4031-a46e-c06266e89b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fd1447d-b148-481c-b452-1ebb937055e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84a298c7-331e-4444-904b-ff765d92f957",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0031eee2-c80b-4242-9c22-0b2c6d6377f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c940854-97e7-4b51-abac-6a0fb12e63d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25353383-2d8d-4eb2-b9cf-c2d477e8bac2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08366412-010c-4f87-873f-d9b923c1ebfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5e1ec75c-d079-44fe-92bf-ea86702f917a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5eb220e-3c88-4045-8d22-5924b9306b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a1c4dc8-b366-4189-bbe2-26b9dd03db36"
            }
          }
        ]
      },
      {
        "id": "c578172a-ea52-4a98-88ef-7d0a63425992",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ddb45da0-b778-42c0-aad0-758df54f192b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e07d935b-a123-4966-a91c-edbc159cfb1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a28dff8-411d-4b8e-9f43-5ba8c40198ff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6ba6be-147c-4fb5-badd-27f9b44de3ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac42d8c1-3921-4eb3-b70f-f465bf270a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e75801c-a5b8-4ca4-9f53-80e56080d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b747afb0-4dc3-4877-833f-64944d706eb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84998d9b-04d8-480c-b6a0-3d1357c2ede4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c91eefb-69b0-4141-a747-5eebac51f804"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2acd5854-20b5-4a6e-89c7-b31c2b06dc00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d051e2cc-0dee-4142-8600-c912c80b6c24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e982cd8-4e51-47b0-bc51-fc88c9781b28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f15450a7-5597-45ec-a997-b0db906bdb3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80ea082f-83a0-46ce-9ac0-2968e5188e45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "418d7c8b-f494-45ab-a80b-acdea5c0529c"
            }
          }
        ]
      },
      {
        "id": "ddde0dcb-ba48-40ad-85a3-ec5c054cd48d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99b8ef3b-157f-4abf-bbdf-02df8f913155",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8991708f-036b-4192-b685-25f9a03538b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70849760-7126-49e0-b86c-131f159be4c9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abcf9ec-e666-4bcf-9918-80cb3443cdae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "976878cd-7b2e-4401-b78d-8803537faa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8061fc-aac8-48cb-a6d6-89b56c2a21d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "094d0a28-274a-4e30-aab0-113b9ca34b6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62253528-7b42-49c8-b324-92bc2890355f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c274bca9-7aba-4b98-adc3-25ff99f7441a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ede071-798c-4002-9fce-6e532a5ec9d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97f5a652-0f4b-4a1e-bdc9-df306e382c85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c014055-a1e4-468d-a157-91e2bedf16a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49a20d84-1edc-4fbc-952e-da3807b27dfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "629cbf5e-f4ac-493b-9521-7cb938ebfdd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "367a5a80-afda-4537-b37c-b548d48b0e5e"
            }
          }
        ]
      },
      {
        "id": "4ce8e3a9-d9c7-44f5-a4ec-0b3285a93319",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "461951a0-35ab-41a6-ae92-1f9f8dc64ce3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "658c306f-c2fb-4965-b219-0006f494b9ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d0f50e60-ca8d-4c35-94ed-062307214902",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85c0bacd-86ae-4b18-b052-2845c8242245",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "926d49e4-e411-4434-876b-3e537bac25a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 155.9964912280701,
      "responseMin": 4,
      "responseMax": 15220,
      "responseSd": 1002.6022369822082,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699749423899,
      "completed": 1699749477459
    },
    "executions": [
      {
        "id": "70bc685e-585d-4ae3-b96e-387a312a3777",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0966ff00-61f5-473c-b9f8-2485628dc31f",
          "httpRequestId": "86d3f2cb-1f32-4b04-875c-d0fae6e1bf75"
        },
        "item": {
          "id": "70bc685e-585d-4ae3-b96e-387a312a3777",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6625234e-91e8-412b-a27f-8b2dec009809",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "1d917e9f-0e5d-48ca-bde1-1879c4bfd383",
        "cursor": {
          "ref": "2f84f262-95a1-400e-b15a-a516f4460d6f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "773527a4-d2c0-43e6-86c3-c482217b4be2"
        },
        "item": {
          "id": "1d917e9f-0e5d-48ca-bde1-1879c4bfd383",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a1582294-fab7-4cf6-bc61-b2844eb0f12a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ed6858fd-7d59-4a86-9605-d48511960ccc",
        "cursor": {
          "ref": "a12b33c2-2e28-4dd8-8d36-947fe84e0dd1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5dad73fb-9b90-4bf8-bda6-170e97b27d8d"
        },
        "item": {
          "id": "ed6858fd-7d59-4a86-9605-d48511960ccc",
          "name": "did_json"
        },
        "response": {
          "id": "8a9a7f49-a136-4652-9c34-21a6e13b6b7a",
          "status": "OK",
          "code": 200,
          "responseTime": 497,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f7b4d1-cb76-4297-8071-338c9ab15313",
        "cursor": {
          "ref": "6c99f93d-a5fa-45b7-9356-05faa72a96bf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1173cbb2-463c-49bc-8eb9-0dc35922bcc6"
        },
        "item": {
          "id": "17f7b4d1-cb76-4297-8071-338c9ab15313",
          "name": "did:invalid"
        },
        "response": {
          "id": "c5514517-fd85-434e-add9-11d2f1297f96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1272,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f7b4d1-cb76-4297-8071-338c9ab15313",
        "cursor": {
          "ref": "6c99f93d-a5fa-45b7-9356-05faa72a96bf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1173cbb2-463c-49bc-8eb9-0dc35922bcc6"
        },
        "item": {
          "id": "17f7b4d1-cb76-4297-8071-338c9ab15313",
          "name": "did:invalid"
        },
        "response": {
          "id": "c5514517-fd85-434e-add9-11d2f1297f96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1272,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3312c-6f79-4a66-86a7-5ff19f09ebb2",
        "cursor": {
          "ref": "63e4191e-af7c-42f3-b7fe-69311d2ef8f9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f12c8c34-f34d-46ed-a668-ad8c1daff82d"
        },
        "item": {
          "id": "b8f3312c-6f79-4a66-86a7-5ff19f09ebb2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a829e258-993b-4133-9dde-127b71f2bece",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb089f2-f21c-49aa-b2b0-b2c6158b536c",
        "cursor": {
          "ref": "5154a100-e7e9-473e-94ff-111614b5ecbc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b579ffed-c883-4601-885a-7f65df448ca7"
        },
        "item": {
          "id": "ebb089f2-f21c-49aa-b2b0-b2c6158b536c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79e39f1f-c174-4101-a358-05c834828ff2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5057ee6-8dec-4125-b4a9-451fb7b402b1",
        "cursor": {
          "ref": "443ef6df-ed12-4e03-bbd8-cd952dbdd4d6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a89c94cc-12d8-4a4f-9104-36e67f609465"
        },
        "item": {
          "id": "f5057ee6-8dec-4125-b4a9-451fb7b402b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1f6b88ca-66d8-4df0-a290-ee08b157973f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5431fcdc-421f-4cb4-ae18-8647f276fc46",
        "cursor": {
          "ref": "d9065d31-a03e-4d32-9264-f80a290d81b4",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9aa00315-9d35-4b03-a0fe-9a00687f54e2"
        },
        "item": {
          "id": "5431fcdc-421f-4cb4-ae18-8647f276fc46",
          "name": "identifiers"
        },
        "response": {
          "id": "bc1150b7-5093-4054-8b96-ff7cbbc17d68",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab83f17-7fb6-4106-bbf3-40aa2b0b98f7",
        "cursor": {
          "ref": "ff092461-a7a7-4de9-b6b0-14727f2da6d7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fcc4fcd5-c5da-4cbe-a023-e25c955c6d2c"
        },
        "item": {
          "id": "0ab83f17-7fb6-4106-bbf3-40aa2b0b98f7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3c2d780-52d8-4cab-8e08-b0e82c54e470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f0da4-5980-48ab-a2c9-4030b809b6be",
        "cursor": {
          "ref": "d67e7661-0f10-48dc-8c00-ffe40ad6b570",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "258e6b1c-888b-4c52-b9a7-4c86fc1bf222"
        },
        "item": {
          "id": "7e3f0da4-5980-48ab-a2c9-4030b809b6be",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "66a21535-25c8-4b76-9bad-63d9a17c935d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dce343-5b00-4dd5-b848-cf0171d72726",
        "cursor": {
          "ref": "56718f7d-4c8b-4a0c-b75e-2991327d4a35",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6f8abd59-55d2-4de9-8e8f-6cb720a0cb59"
        },
        "item": {
          "id": "31dce343-5b00-4dd5-b848-cf0171d72726",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b018b218-60e5-4da6-bc39-04344a7cf07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f957367-e681-407f-95a7-d62b98a24ad9",
        "cursor": {
          "ref": "dcab8136-3e40-45c0-bbcd-cca64d8b68ec",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f866489b-3ef7-4e6c-9b51-854020c3532c"
        },
        "item": {
          "id": "3f957367-e681-407f-95a7-d62b98a24ad9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cb882d5f-2fce-4259-9262-430e07ec531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c113c144-5c3d-4a53-bb88-eed7b5f81a11",
        "cursor": {
          "ref": "123aeeea-238d-4297-9a93-d443b430f862",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e83b7b8-d544-44ae-b394-f9ee82fb313c"
        },
        "item": {
          "id": "c113c144-5c3d-4a53-bb88-eed7b5f81a11",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ad422ad-dd5f-4384-a012-e1a6156d9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e98b572-0630-4271-ac50-ec84b061bf09",
        "cursor": {
          "ref": "6129f1d2-05d8-42d7-b1e5-a6be6c2c8153",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c806314-0414-4b4a-940a-46ade74c3ffc"
        },
        "item": {
          "id": "1e98b572-0630-4271-ac50-ec84b061bf09",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2746e9f4-5691-4e03-9f12-6b2089087cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c22a0b-34f1-4ee2-bb5f-5e1e99067fbc",
        "cursor": {
          "ref": "5ce63904-143f-436a-a97b-afef0c932e6b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "332504a3-de34-49cf-8700-265b3f01036a"
        },
        "item": {
          "id": "d1c22a0b-34f1-4ee2-bb5f-5e1e99067fbc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5cd02952-21ac-4ce2-86a9-0af26afc4a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c988131b-467a-4a11-8305-36ef2d395e79",
        "cursor": {
          "ref": "840e46f9-178d-4547-a17d-28841fff6e50",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1090e809-4f4e-435b-ae48-d9118e7f0021"
        },
        "item": {
          "id": "c988131b-467a-4a11-8305-36ef2d395e79",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3e7bbab3-b260-48fa-bdc3-770d72dea7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe812c88-4899-4b5a-a7b2-bc7db27c60c3",
        "cursor": {
          "ref": "0376c57c-1e00-4572-af85-98d2c2388634",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2a3b95a1-2611-473b-aa77-dfaeeca220c3"
        },
        "item": {
          "id": "fe812c88-4899-4b5a-a7b2-bc7db27c60c3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "da94d83c-b9d2-4482-8476-8a4c7c4565ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa5dfdd-fba1-4d75-90d1-00e8ba6eb1cd",
        "cursor": {
          "ref": "2245ec18-6ad1-4ec9-8a69-ce752af251c6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0adc2067-34e2-4019-955e-6a30238e4e77"
        },
        "item": {
          "id": "afa5dfdd-fba1-4d75-90d1-00e8ba6eb1cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "812d5c83-6e7c-40bb-bbdb-f07b1c8187ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382af64e-558f-4293-8c3b-2fa6a132f759",
        "cursor": {
          "ref": "be78741d-cb8c-4b82-bc5c-652312377d6c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8fb8937b-372e-4a4a-af81-0feebb166235"
        },
        "item": {
          "id": "382af64e-558f-4293-8c3b-2fa6a132f759",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "66b2c42e-f1e6-4419-8dc2-92715c515a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2bfd9-a2f0-49eb-997d-7db64ed2bf97",
        "cursor": {
          "ref": "1ea73e62-9dad-4021-bca2-2a1b88d5ad48",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3038e0a9-bb54-4cb8-88e8-3a86f3adbf4a"
        },
        "item": {
          "id": "6eb2bfd9-a2f0-49eb-997d-7db64ed2bf97",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9c269e3e-18ce-4586-b5d4-3627dda69225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37caf808-79ba-4ce8-929d-2018826b3c69",
        "cursor": {
          "ref": "8f54ef98-0550-4d4a-a5c4-57c040e23467",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "28779a6f-4481-449b-a252-cd181f5331ed"
        },
        "item": {
          "id": "37caf808-79ba-4ce8-929d-2018826b3c69",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb74cbd2-9ac3-4873-996d-71dc129ba357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57556883-1a09-4ca7-a184-a77234b7846b",
        "cursor": {
          "ref": "4e02b30b-549d-4e2a-aa64-37fd0522206a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ffde92d-c46c-4bf5-aa8c-a03d86574681"
        },
        "item": {
          "id": "57556883-1a09-4ca7-a184-a77234b7846b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b85e5f03-54fe-4d0d-9d40-03120d3ae213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea69b63c-9c01-47a6-92e1-18e73f46078e",
        "cursor": {
          "ref": "7a7e8431-2930-49ff-a6de-39832c2c495c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "777ead47-b159-4680-b9f4-b731b698f426"
        },
        "item": {
          "id": "ea69b63c-9c01-47a6-92e1-18e73f46078e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "67a9d36b-75b7-4adc-8473-8f97525b9fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb3e7f1-2dde-4b18-bcc3-02433e67cf62",
        "cursor": {
          "ref": "87861577-3c5b-417d-9eef-d174837375fe",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cc3b8a84-c144-4f18-9bf9-39780805343a"
        },
        "item": {
          "id": "5cb3e7f1-2dde-4b18-bcc3-02433e67cf62",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1d367419-b3e2-48a3-9e99-99a76b8f41d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe4e4b-5752-4930-961d-753d59814b69",
        "cursor": {
          "ref": "414b6079-5d86-4753-8d62-acdada5256e0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9abec9df-11ea-49b9-a0c5-d60bf3ef1507"
        },
        "item": {
          "id": "68fe4e4b-5752-4930-961d-753d59814b69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "19b93480-2751-44a8-b884-2a55b33ec54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd48dd9-209c-45e6-ae6e-e1726e890311",
        "cursor": {
          "ref": "2897406a-72a0-40ee-a9b8-d637ba5eb72a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6544ee9c-131c-490d-8a5f-266591a295e8"
        },
        "item": {
          "id": "7dd48dd9-209c-45e6-ae6e-e1726e890311",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c073c3be-ff5c-4a00-b308-72ae88a240f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363d6fa1-0253-4401-a601-26c5d1176a27",
        "cursor": {
          "ref": "c75c119f-39a6-4c21-a3fa-f5a6136b7dae",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "46755b1d-7c2d-41c5-bc75-8d677be57108"
        },
        "item": {
          "id": "363d6fa1-0253-4401-a601-26c5d1176a27",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "948c393c-7d5c-49e4-9e26-fe09766d00f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c73e513-e984-462b-8d66-5abd56ef6552",
        "cursor": {
          "ref": "60383557-4605-4151-ac75-cd05969a0f38",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "77ecf573-4e13-45e4-9669-14fae2a8e0f9"
        },
        "item": {
          "id": "8c73e513-e984-462b-8d66-5abd56ef6552",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "08347fe6-3ad0-48d2-9435-067fd4aa0afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ebbf32-5303-494b-91ec-9bca81b618e8",
        "cursor": {
          "ref": "f9710b26-cc53-4b86-ab0c-44cc59384b14",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "277ee451-ba7a-4600-9f0d-74ed009d9c5d"
        },
        "item": {
          "id": "a8ebbf32-5303-494b-91ec-9bca81b618e8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "776b56b6-90af-4cd3-9350-01b33b712ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0286912a-7d96-4630-955e-8ecdc1182880",
        "cursor": {
          "ref": "2f5b818c-9938-4d10-8685-2768c5064a42",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a5506d2-9b88-4864-8f4e-3c4dc505013c"
        },
        "item": {
          "id": "0286912a-7d96-4630-955e-8ecdc1182880",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8a10dcb8-01ab-429f-94d5-58bda5fee948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5489a951-2ff7-40d1-b5f8-13d83f897f7f",
        "cursor": {
          "ref": "19bf9819-0d87-41a3-bf51-c3e4c69de5e6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8b52649e-0ed6-42d8-a808-87060b0bb174"
        },
        "item": {
          "id": "5489a951-2ff7-40d1-b5f8-13d83f897f7f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "87cf35b9-7fe7-4a4d-a419-e8b4c0879fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048c533c-1ec0-4312-9041-751dad6281f9",
        "cursor": {
          "ref": "f0b87647-7b31-4820-ac76-366afbd8511e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9b050f7a-e6e7-424f-a15a-de0db63ff0f0"
        },
        "item": {
          "id": "048c533c-1ec0-4312-9041-751dad6281f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a8aac291-400f-4a66-b58c-6a433b1c9687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b8d823-1354-4ad6-a33a-baf6c8a21b1a",
        "cursor": {
          "ref": "456ad42d-b7a8-4803-9a7f-a4ac3b17f4ca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "55a613dd-5618-4273-b7c3-f139a6212adb"
        },
        "item": {
          "id": "83b8d823-1354-4ad6-a33a-baf6c8a21b1a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5275bee2-e3d8-456a-aa67-dd7da8e668c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68f286f-9ed1-4ea4-b6fd-0739ba8b32ee",
        "cursor": {
          "ref": "ec2c6e5c-e9a9-4a54-9e05-1d3a3313badc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b5420458-7fec-4d98-bb1a-17eb8a505ec3"
        },
        "item": {
          "id": "d68f286f-9ed1-4ea4-b6fd-0739ba8b32ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c657e58d-d077-4756-a348-64b2ae8c7879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dbbbdf-0d32-46e0-baf1-2e06a121fe1f",
        "cursor": {
          "ref": "b3b0112a-3e80-4b04-8e48-aec229612e0b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "96da9c06-3111-41fb-b4d5-fae59d0ce951"
        },
        "item": {
          "id": "27dbbbdf-0d32-46e0-baf1-2e06a121fe1f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "602ee935-2fd2-4333-b432-7cb20e20723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67681767-e448-405b-95d4-778551592e0b",
        "cursor": {
          "ref": "64408e41-ed2b-4900-a62c-73fb1c2bac5c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bdc84eae-b7da-4f96-8906-563602ae9184"
        },
        "item": {
          "id": "67681767-e448-405b-95d4-778551592e0b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "be0328da-7454-4158-a3eb-65afb03c6f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32826f49-65d5-400a-8dd7-70cc5d4ec759",
        "cursor": {
          "ref": "1dc1c53b-581f-42fb-b2b7-b05aee2e8db2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b184c91c-ccb3-416b-88fc-6c96540bcfb3"
        },
        "item": {
          "id": "32826f49-65d5-400a-8dd7-70cc5d4ec759",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7cc78960-43a4-433a-8421-688f7f131d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6068630-b966-499a-87d7-67b10ebf0d55",
        "cursor": {
          "ref": "4e7d809e-4b7d-4f29-a164-955d30824596",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a709d48b-8780-4008-95a9-f3ac8ea82184"
        },
        "item": {
          "id": "a6068630-b966-499a-87d7-67b10ebf0d55",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "58d61759-8fc2-45c0-ae57-91c036232edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c053a2b4-0f53-4d9c-96d9-151f251a0f0f",
        "cursor": {
          "ref": "82a5dae5-9c4c-4d98-9c42-b12f996a3917",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2d78327-1e0f-4562-a101-4daf7f70de68"
        },
        "item": {
          "id": "c053a2b4-0f53-4d9c-96d9-151f251a0f0f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1297d8af-2055-4c8d-b33d-ba6eec22231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9c5090-619e-44d8-8754-842f019c94f0",
        "cursor": {
          "ref": "4363c175-ca60-47b6-b1ab-ade973232cd1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9c4c68f4-da64-483e-83e6-1267386fbd56"
        },
        "item": {
          "id": "0e9c5090-619e-44d8-8754-842f019c94f0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7de2de41-0082-4193-b668-c86a0536eb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0544d831-9cc6-4974-89cf-6b8edc2f0044",
        "cursor": {
          "ref": "a15400af-0084-4c2a-b16f-de5c699bc3c4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d91d1d04-3c7a-4bd9-a551-7296fb820287"
        },
        "item": {
          "id": "0544d831-9cc6-4974-89cf-6b8edc2f0044",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d7488893-28b4-4807-9a31-235ea5c0e2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4dea6e-e3b2-4920-be0d-56a6a7f705ee",
        "cursor": {
          "ref": "6c2ba471-acd3-478f-b801-16312cc5f99e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b57d041d-f1be-4350-a954-8b3367c49dfb"
        },
        "item": {
          "id": "7a4dea6e-e3b2-4920-be0d-56a6a7f705ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e212d460-b5e8-4fc7-bdeb-de49b16d3a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506a7101-3085-4c97-a9f7-627789315484",
        "cursor": {
          "ref": "1e50954d-3c04-4b8a-91f8-20d986dc74b7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7ac53112-5dcf-45fb-a517-2f48024a7528"
        },
        "item": {
          "id": "506a7101-3085-4c97-a9f7-627789315484",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dc58582c-5244-47a7-85b4-afe32d534fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe95f2-0d7d-4b0f-8dd2-788a70942c98",
        "cursor": {
          "ref": "b303d80d-ebec-4dd5-b75b-cfc7cf40c828",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "df94a2fe-d1f4-404a-9121-55b15b8eaaa7"
        },
        "item": {
          "id": "cabe95f2-0d7d-4b0f-8dd2-788a70942c98",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "feb727aa-e70e-4531-97d5-1c920156fc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f330e-e3d1-4d0d-ae77-5e4b3387081d",
        "cursor": {
          "ref": "abb214aa-392b-46da-bfc2-0218c67d7af4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dafbd39c-e2fd-4597-9e02-bfd8cd0c89e9"
        },
        "item": {
          "id": "518f330e-e3d1-4d0d-ae77-5e4b3387081d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "729a882a-6b62-43bc-8ea3-6053a3be530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b8ac9-a6a5-4753-a56b-1a9f5090d6f2",
        "cursor": {
          "ref": "a6da0871-916b-4c0e-9077-4c84ccb780df",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3784ebdb-a6a0-434b-b938-67f8810c75d1"
        },
        "item": {
          "id": "479b8ac9-a6a5-4753-a56b-1a9f5090d6f2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3ee46de4-e6ec-46ed-9e9a-97d8628a0de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fa10a8-6687-460c-b64e-19db26204546",
        "cursor": {
          "ref": "ee513eef-32f2-456a-8884-f79bcd438133",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2ff8a0ca-abbe-4e02-8efd-148dd6e0890e"
        },
        "item": {
          "id": "69fa10a8-6687-460c-b64e-19db26204546",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a069a052-1f3f-41f6-8cab-09a9cf26e69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca60d7b-5d3b-4630-a9c1-a8ee2fb467ce",
        "cursor": {
          "ref": "b735c791-7dd8-4941-a9ab-4848ea2ff8f9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3d3754ad-d7ca-4e9a-a2a6-0b026e432573"
        },
        "item": {
          "id": "9ca60d7b-5d3b-4630-a9c1-a8ee2fb467ce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e603ef87-829d-4035-8f1d-9ef39f7dc1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ad9f03-cc5c-442f-b17a-d974c1881f7a",
        "cursor": {
          "ref": "c24fbb84-578a-4e43-85f4-eecff47c98cc",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "35ae516d-e54b-49d9-9bb2-d56ca812ee85"
        },
        "item": {
          "id": "64ad9f03-cc5c-442f-b17a-d974c1881f7a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e2a2264b-a57e-4617-9f46-479ecd68aa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f17840-1ddd-409a-b8c7-361c9ac7c7d3",
        "cursor": {
          "ref": "99d6da26-6cb5-40b7-83fe-e4cb79fc50f5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "100772c0-4fa3-4554-a031-ce639ae88365"
        },
        "item": {
          "id": "79f17840-1ddd-409a-b8c7-361c9ac7c7d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f47c7510-2b46-4f2a-a9bd-606e4f4c2820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c107d9c-b5fe-46d5-b353-1204068473a9",
        "cursor": {
          "ref": "d0ae95cd-5488-46e4-bfe5-48bf7da1b56f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a0d0cd8d-5f34-4325-8758-5b995a4ff321"
        },
        "item": {
          "id": "6c107d9c-b5fe-46d5-b353-1204068473a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "593552c2-c4f6-40bf-b852-8df4357d51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f855ccc-adc9-4470-8236-4197fd09e6b4",
        "cursor": {
          "ref": "2ac8bdd2-7099-45d7-8dfb-96de58b7f6c0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cb43e08a-712f-4a96-89e0-2a9c259c87a3"
        },
        "item": {
          "id": "1f855ccc-adc9-4470-8236-4197fd09e6b4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4c9c5b25-f077-420b-9447-c37ea88a2af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2d4064-1575-49f3-89bf-6046fc6b388a",
        "cursor": {
          "ref": "653457a4-e60d-421a-8e35-80b0ba4b770b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "45833977-8850-4a6f-88db-3fc559ecf359"
        },
        "item": {
          "id": "dc2d4064-1575-49f3-89bf-6046fc6b388a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ff2f1c7-5a44-4820-8ec5-853c3970aa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62da83bb-9f05-4dfc-aa4d-356ce0be8a9d",
        "cursor": {
          "ref": "4ebb6aef-2f74-4d2a-82ff-26f903f62327",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fa86925f-1b6e-48b2-b720-23fb2ed8147e"
        },
        "item": {
          "id": "62da83bb-9f05-4dfc-aa4d-356ce0be8a9d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "24dfd8b4-000e-4ff8-8761-7721b886da60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b3af55-1a65-4e16-93e7-f2cc4f891c37",
        "cursor": {
          "ref": "c9334cc9-5941-4614-98db-8432e4a15dba",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "83f85fa4-490a-4c1f-aef7-87300746a006"
        },
        "item": {
          "id": "e5b3af55-1a65-4e16-93e7-f2cc4f891c37",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fbb883f3-fb18-4206-b3f9-0861aa36b173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b884f44-4a82-489c-a8f6-8e6f391618f9",
        "cursor": {
          "ref": "4e40fa5e-3336-40ba-ba8b-c29b948d34f1",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2f21525a-7f36-4921-9a88-4e7c9ea88088"
        },
        "item": {
          "id": "5b884f44-4a82-489c-a8f6-8e6f391618f9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "de9da6bf-c7eb-4984-8d80-e761512cbc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803afa6-8b82-4fce-9488-0e7423934011",
        "cursor": {
          "ref": "f6bd4dbd-0b4f-4bde-ad3b-2ecebdc270e6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "12eefbb6-e619-4577-84e2-264f20a8b977"
        },
        "item": {
          "id": "9803afa6-8b82-4fce-9488-0e7423934011",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26249857-ba70-45a9-ab36-8479f30d75ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad95910-a370-4ca9-b6f1-aae9af93b937",
        "cursor": {
          "ref": "31c83580-d63d-4490-aa9d-8b4b79eb15d1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "599c20fc-31ed-42a2-bb8f-3eff3d1971dd"
        },
        "item": {
          "id": "4ad95910-a370-4ca9-b6f1-aae9af93b937",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9640201f-3582-40ab-b58b-c0ff3c64763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93c5cc4-601f-43cd-969e-960d3a594ace",
        "cursor": {
          "ref": "abb4e0d9-6e90-4121-82ad-db9d11293dca",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5a737e79-c696-4845-b61b-39a2949e3dc3"
        },
        "item": {
          "id": "a93c5cc4-601f-43cd-969e-960d3a594ace",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4efdd2f6-3800-4a10-b8dc-095408a668f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a2cf8b-5f73-4b7a-99c8-737ecb821248",
        "cursor": {
          "ref": "d1611c57-b765-469e-a931-99cc43e5fcdd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f2f667d6-87a9-42a8-bc5c-374ab70e2162"
        },
        "item": {
          "id": "94a2cf8b-5f73-4b7a-99c8-737ecb821248",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c223666c-062c-4988-a0e8-cd37d1412bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdc3654-55e4-49fd-92df-b917a7e3ae3d",
        "cursor": {
          "ref": "73b93ea6-5923-4a22-8777-6f0f95770533",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a6927e6b-c1dc-45d7-af0b-6d37c8f08be8"
        },
        "item": {
          "id": "1cdc3654-55e4-49fd-92df-b917a7e3ae3d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "baa0b29a-dcad-477b-b588-69a1d5703f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6bb2c3-cd82-4d59-8a3c-1cb9bdb11b96",
        "cursor": {
          "ref": "ceb81863-085f-44db-9bf9-4abdbb2953fd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a042cfa7-a6c4-4b67-bccf-8a4adc14c8f1"
        },
        "item": {
          "id": "fa6bb2c3-cd82-4d59-8a3c-1cb9bdb11b96",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c293a279-a4c7-48c9-8a74-2e5d3e265fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35414248-887f-4615-9946-4d6df1336e94",
        "cursor": {
          "ref": "d99f19ac-9d33-4d34-ad14-71b514982a72",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3a098e8b-59ac-43f7-9934-3b8d7f47ead7"
        },
        "item": {
          "id": "35414248-887f-4615-9946-4d6df1336e94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5b0ee026-8830-402c-94d6-659722236c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebe10bc-d7a2-4f0e-8c39-57d1328fa4f0",
        "cursor": {
          "ref": "9a530034-976c-4d2b-a008-fb1d12898c53",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "93cb250e-94eb-45f0-b959-20be288367df"
        },
        "item": {
          "id": "1ebe10bc-d7a2-4f0e-8c39-57d1328fa4f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ebb0f0ab-8d37-4bd7-ab60-3ba7427c4dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9545b8c7-4f34-4d25-8bfb-a43058ceca69",
        "cursor": {
          "ref": "8e9e6539-a25c-4a7c-8851-13276d6f3e87",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fdcb8ed1-5614-4e1d-b087-1552078c2645"
        },
        "item": {
          "id": "9545b8c7-4f34-4d25-8bfb-a43058ceca69",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0932eaab-4496-4962-8651-4d68459613f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f42ac7-a4c8-4338-845e-1ca757b55991",
        "cursor": {
          "ref": "d54297b3-3dc8-4ade-bb42-e4329190b38d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "810a4fb2-6149-43b8-a013-427ad1810f19"
        },
        "item": {
          "id": "24f42ac7-a4c8-4338-845e-1ca757b55991",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e8ac17a4-293e-4b39-a01f-66e686b1a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a40ca95-39fc-4e3f-adf6-9e957cceccd8",
        "cursor": {
          "ref": "ae4efdca-abb3-4952-abfd-2e4416c98c34",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bb349a32-c4c2-49e3-9425-d4f63fe32f21"
        },
        "item": {
          "id": "3a40ca95-39fc-4e3f-adf6-9e957cceccd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4bc8ae76-a5d3-45a4-b4ff-5f79c8079e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ccf194-9c6e-4bf0-a09b-3565234ca131",
        "cursor": {
          "ref": "01b2ef2c-2145-4f5b-973c-3dde95b46e13",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2eec53fc-9080-4999-86fe-75ccb272be5c"
        },
        "item": {
          "id": "30ccf194-9c6e-4bf0-a09b-3565234ca131",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1c7a4238-2803-45f0-8e85-ed1d9b7efe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe7cedd-2c80-4715-a4f6-b3f6b84a6d52",
        "cursor": {
          "ref": "7e0060c4-04b8-4ee0-bb2c-fac416210806",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b1546ba2-7bc4-4053-9b2b-0b40dc672a6f"
        },
        "item": {
          "id": "dbe7cedd-2c80-4715-a4f6-b3f6b84a6d52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "74f6984a-84b6-41f1-b9a7-2a6c47ec48da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afe9466-b503-4a57-9597-7765283e91d9",
        "cursor": {
          "ref": "ade5760e-8131-49c2-aff0-900c780e9a01",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7f3b2518-ca86-4baf-982b-169e2e848d26"
        },
        "item": {
          "id": "4afe9466-b503-4a57-9597-7765283e91d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d9f094d7-9398-4d3f-9cf2-60f8142bb9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48a8cb7-0317-423c-9720-829ad68d606e",
        "cursor": {
          "ref": "afd7c322-e5b3-41ba-8614-965557b5a3b3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "847cfa18-8c48-4f4e-bab3-2f43c86ae71d"
        },
        "item": {
          "id": "e48a8cb7-0317-423c-9720-829ad68d606e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a1f63688-05b2-4187-b85a-7fe267fdaeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ceefcc-071f-446c-8952-04f22daa81c6",
        "cursor": {
          "ref": "5193515e-054a-4614-a994-9e824ab92561",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ea6a19c7-4440-45e6-8d19-cad97d43d88c"
        },
        "item": {
          "id": "65ceefcc-071f-446c-8952-04f22daa81c6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4d79e22e-cc45-4fe4-9b00-50e8ba0cbb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef72405-aec9-4d18-ba3d-5fcfad489464",
        "cursor": {
          "ref": "a971fbf0-8440-40c8-b998-e02c2969a8ee",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1bca4cfc-cc22-4cd5-be64-575049aa270a"
        },
        "item": {
          "id": "8ef72405-aec9-4d18-ba3d-5fcfad489464",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b594e892-5c76-48db-b8f2-3121cca5b355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0468e69a-f1f6-4c74-b2c5-4a7d407fee82",
        "cursor": {
          "ref": "1b42b57e-8323-401b-88f1-3eecdf36e079",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93539705-b7e1-4afd-adf0-bb3bdc4add8b"
        },
        "item": {
          "id": "0468e69a-f1f6-4c74-b2c5-4a7d407fee82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "28ca6dd4-ef1b-43c7-b211-01a832466faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1249,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8b14b8-fc68-43fa-99c9-331f3c46b6c3",
        "cursor": {
          "ref": "b17ce877-25db-4e60-ae4d-4419f4083a02",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9c581bdd-2105-493b-8e2c-3b77e45b01d4"
        },
        "item": {
          "id": "2d8b14b8-fc68-43fa-99c9-331f3c46b6c3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5367ce8e-1c29-4e73-b5da-bd6962f74010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fff204-9735-4488-845c-5fcfcd41761c",
        "cursor": {
          "ref": "06216a92-cabe-4205-9dac-1c488a034cb2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bf182e09-2756-4d1f-b37c-8a3d69547afc"
        },
        "item": {
          "id": "20fff204-9735-4488-845c-5fcfcd41761c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6cea9a1b-c4b0-4b95-8460-364f1a7f8b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd51eab-a7c6-428e-8364-1ce2acd23116",
        "cursor": {
          "ref": "6ba234df-6a8a-4b54-ada0-dc51f1c20db8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6d3a01df-7427-4a11-b4de-f5e1154a1d94"
        },
        "item": {
          "id": "bbd51eab-a7c6-428e-8364-1ce2acd23116",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e500d560-6efb-4f31-b40a-6168ddf0951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd00065-f7b3-47f5-a583-85ad1a6d6f2d",
        "cursor": {
          "ref": "0938de3c-c697-4b63-b09a-35b6346f10ee",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2e1cbc4c-ee97-46b9-8cc0-236b2e7a481c"
        },
        "item": {
          "id": "0dd00065-f7b3-47f5-a583-85ad1a6d6f2d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e7667117-e5db-4bd0-8651-815bd90f2076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b41ed75-1870-406e-a1d9-da3b2500e1de",
        "cursor": {
          "ref": "27789656-bcfc-4c2e-bd0d-bcaf804cb1f1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a9dafd91-095c-4b69-a18f-4c81150fd70f"
        },
        "item": {
          "id": "4b41ed75-1870-406e-a1d9-da3b2500e1de",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "33038d55-b3d0-4d4d-8ff8-d05a8548b88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b445c5-3da1-4f44-b96c-6b8e0eff3d6a",
        "cursor": {
          "ref": "346f4d0c-97cd-47d4-ab58-afdabb9aa62c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77da9f73-afb6-4448-ba3e-0f83144f4178"
        },
        "item": {
          "id": "76b445c5-3da1-4f44-b96c-6b8e0eff3d6a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0a16e41a-a567-4fe9-a3e2-17871c8f7c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e366e239-1427-4d6c-adc8-e2eabce0454f",
        "cursor": {
          "ref": "312d71e9-0c0a-4b16-bd13-b480af2bd2df",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e25ccd0-42bf-48bf-b05d-83175069c185"
        },
        "item": {
          "id": "e366e239-1427-4d6c-adc8-e2eabce0454f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "32e58e62-5d5a-45ca-9fd7-4270e0fd8748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f74ce23-89ce-478b-a07e-e3828b8c0ac5",
        "cursor": {
          "ref": "217ea770-6f74-4074-a317-56161711ebd2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca53df63-c22a-4489-9fcd-cc87f197a046"
        },
        "item": {
          "id": "0f74ce23-89ce-478b-a07e-e3828b8c0ac5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c2b72a6-fbe8-4e29-b990-5052b439191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7da197a-0767-4d5b-bb60-5adb7b84cc9c",
        "cursor": {
          "ref": "e10ca433-5d81-4e34-8e16-0d1b4534f2a1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2cb9bbdb-0b62-4bec-beb7-f60eb4aa6aad"
        },
        "item": {
          "id": "c7da197a-0767-4d5b-bb60-5adb7b84cc9c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dd5dadf5-457f-44c9-bc57-e887e68bebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f548d494-5e4c-4605-98ff-a0382bc68993",
        "cursor": {
          "ref": "de77e148-450a-4f5c-82ce-b06f6320844b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "88c67196-a5db-40d0-9674-2a3c7a81f7a9"
        },
        "item": {
          "id": "f548d494-5e4c-4605-98ff-a0382bc68993",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7058b3d5-37df-4177-9329-bc4d2c40ffb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeed4bc5-f22a-47b2-b82c-982dedd7f300",
        "cursor": {
          "ref": "efa7b140-2968-4c50-8429-2d1130f356fe",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "615df38c-7570-4c3c-b76d-2d711d46a16e"
        },
        "item": {
          "id": "aeed4bc5-f22a-47b2-b82c-982dedd7f300",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b2eef97a-7346-486c-adbb-ba9d884bce6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35a9972-cdbc-4fad-9653-4d233dba9d40",
        "cursor": {
          "ref": "7f6f0677-c6e7-4405-8171-a9f5e2b95c2e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "af9f4c6a-8541-4922-95b0-6625d09e5647"
        },
        "item": {
          "id": "b35a9972-cdbc-4fad-9653-4d233dba9d40",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "998229b6-526d-4719-b928-d4c5e1b58aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e8d54-7117-4bbf-9d01-bfe2851c2630",
        "cursor": {
          "ref": "9d030159-f97a-4845-aa3a-3a410643158f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "30696f3f-8f4b-4b8d-9967-ee93dfd2121a"
        },
        "item": {
          "id": "7b5e8d54-7117-4bbf-9d01-bfe2851c2630",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4a72c52-682e-4e68-8062-3594c3dbbf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d358255-20b9-4c33-8bca-e976a5845fe7",
        "cursor": {
          "ref": "5d3a700b-274d-4e7e-a138-0e6899bd7fe0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "27208b9c-f0df-4bd0-bb06-5693ef497710"
        },
        "item": {
          "id": "0d358255-20b9-4c33-8bca-e976a5845fe7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d5a15163-b1ff-4ff4-8784-ccb094e66fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6916abf-bc84-42f3-a604-646431a61724",
        "cursor": {
          "ref": "8cdf335c-19c7-439d-9d8b-d58345028810",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34e39209-ff87-4db1-858a-f493f0b4c838"
        },
        "item": {
          "id": "c6916abf-bc84-42f3-a604-646431a61724",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2b127a68-2e08-4ffa-8294-75b9acf166c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fcff36-52dd-46d8-8a9e-ac4a332ce656",
        "cursor": {
          "ref": "e37fe303-7e6b-443f-9408-fc98a094c20e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5eb380ee-ad7a-4eab-87eb-9af6d688e621"
        },
        "item": {
          "id": "02fcff36-52dd-46d8-8a9e-ac4a332ce656",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ef0a2884-455b-4a96-9a0f-8028c7a89f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1245,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b0a355-1cbf-4704-ad65-f474780dc268",
        "cursor": {
          "ref": "a006ed2c-f5d0-4704-b16f-06130dd71a3c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4b47b05a-0ca6-40db-8e92-1b35b269fa11"
        },
        "item": {
          "id": "a5b0a355-1cbf-4704-ad65-f474780dc268",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "21973ba1-c472-4c24-b768-3577cc087baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8aaca-2175-4fb8-93bc-e32a02dfebfc",
        "cursor": {
          "ref": "ce1c1637-6921-49cf-b1b8-31cbe5305108",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4dec29dd-91ed-41e7-9cfb-bafc35598008"
        },
        "item": {
          "id": "3de8aaca-2175-4fb8-93bc-e32a02dfebfc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88ad7092-b03b-4738-9d4a-b8c63430403c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa66316-710a-4ee7-af9f-335f53323354",
        "cursor": {
          "ref": "5d0b301e-77a7-4d4d-b73c-5a24712c4368",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2348bbb7-77e1-463d-831a-44a0a6a1f6bf"
        },
        "item": {
          "id": "4aa66316-710a-4ee7-af9f-335f53323354",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "00aeccb0-1a97-4f96-ad4e-cbf0daf0ceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217bb986-3ef6-45a2-9c5c-f2ece637d3a2",
        "cursor": {
          "ref": "2a7b67c1-8ade-4107-8734-cb938f7536f7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aefb5d80-2910-46cc-8e26-8142078fe552"
        },
        "item": {
          "id": "217bb986-3ef6-45a2-9c5c-f2ece637d3a2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00dde3d3-5f08-4800-acac-b91038d6dd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff88dff-2f6c-4057-a71a-4ce6694b6d02",
        "cursor": {
          "ref": "0fa64183-2a7e-49a0-b090-da67b5d8d7cb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c57f3562-d3b1-4b83-ba84-bb0f5ea74e2a"
        },
        "item": {
          "id": "3ff88dff-2f6c-4057-a71a-4ce6694b6d02",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "33ad1d22-7533-4985-b43f-2fee6fbabdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5eb95-c07a-4e39-92d7-3af75cd94449",
        "cursor": {
          "ref": "ee09a5b9-6302-4aed-a5bf-32580f76d4ac",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4765ffe8-52b6-4f62-bef2-8cf47d6f6fa3"
        },
        "item": {
          "id": "83e5eb95-c07a-4e39-92d7-3af75cd94449",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2d5d6ac-06a4-46af-aa3a-a1c2f81d00f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aa5315-2d89-4095-8e8e-e9f1446b7077",
        "cursor": {
          "ref": "41ae80da-68d8-40d1-92ef-8a1a5ac5608e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0a2ef1a8-5e54-497b-bb19-074d5e4caf12"
        },
        "item": {
          "id": "11aa5315-2d89-4095-8e8e-e9f1446b7077",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e7f13091-74ce-4443-b504-4db1fdd95516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c365f541-e28b-4e48-ab06-8ad2bee2e695",
        "cursor": {
          "ref": "75e3bf3f-b806-4f6e-bfd1-ab88d00cdcfe",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a85d8fe5-2e47-451e-a2d6-5270831ee613"
        },
        "item": {
          "id": "c365f541-e28b-4e48-ab06-8ad2bee2e695",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a53d78be-b588-4dc4-b098-1f0eeb3b88fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b08861d-72fe-43af-bd87-b6a162355014",
        "cursor": {
          "ref": "e093c34a-6383-489f-9889-7804dc741f7d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0b355553-eb8f-423f-aa8c-ab9bab43e19c"
        },
        "item": {
          "id": "2b08861d-72fe-43af-bd87-b6a162355014",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d9d3466-b551-44de-91eb-4fbbd8472d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55c4ed0-f4da-404a-b736-04844cd20843",
        "cursor": {
          "ref": "a502ac7b-f7e2-4181-a968-7df25f7cb1bc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bc3a4520-949f-4efb-b31a-252959d38742"
        },
        "item": {
          "id": "c55c4ed0-f4da-404a-b736-04844cd20843",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1832f15e-4c78-43f9-8e63-00fcc2ca9993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f371104-e6c0-4f5b-bf87-b0ea564d88c9",
        "cursor": {
          "ref": "a4177df4-95c3-4b8e-9eac-745df74b586a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "74ab95ee-b8b5-4b74-81be-cce08597e217"
        },
        "item": {
          "id": "7f371104-e6c0-4f5b-bf87-b0ea564d88c9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cde406dd-9623-4c83-a6c1-f7e12ed3132d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac460f6-613f-46b1-b882-6fa509ff606c",
        "cursor": {
          "ref": "716d4882-ac41-41cb-8ba1-1cc1802cbc08",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "636e6333-dac2-4525-99ed-0f9d0530da6b"
        },
        "item": {
          "id": "9ac460f6-613f-46b1-b882-6fa509ff606c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "892a43f5-355b-4e68-915c-5fa54a68545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d2ce708e-5427-4c72-87ac-c61b3158ad84",
        "cursor": {
          "ref": "2fe3dcef-6fc8-4148-a50f-8a43ea9ebb4f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33c16974-8c21-4577-80da-c79dc378e841"
        },
        "item": {
          "id": "d2ce708e-5427-4c72-87ac-c61b3158ad84",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc2e87d1-4626-48e0-a2ee-140a00825be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0455b5b9-e50e-4907-9b2d-616a32e3c2ce",
        "cursor": {
          "ref": "77810c0c-b677-4422-b002-c02db7c7826e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d1a7f3ba-8291-493f-950b-3bbfab94eb1a"
        },
        "item": {
          "id": "0455b5b9-e50e-4907-9b2d-616a32e3c2ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "da7bc3a6-2be8-45ae-8ca5-c29d34c4470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6ac05350-567d-4d5f-a4e8-4ca9743b1993",
        "cursor": {
          "ref": "7e106d71-b889-46a1-87f3-4d50979a15b2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "db4dd652-ccee-4734-a452-b76f784333aa"
        },
        "item": {
          "id": "6ac05350-567d-4d5f-a4e8-4ca9743b1993",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "131e203a-a013-4551-b2e4-78d45159069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0f47742f-5951-4f92-8f3a-3332065fedd7",
        "cursor": {
          "ref": "29c01010-aef8-4552-a786-2604a98e795e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "07e41675-3350-4de2-9e81-570be8cfbc19"
        },
        "item": {
          "id": "0f47742f-5951-4f92-8f3a-3332065fedd7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "88b767e9-3ade-4e69-b055-6625099c5c86",
          "status": "Created",
          "code": 201,
          "responseTime": 15220,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "444b208e-7cb1-4d5c-9957-066be32e5dc5",
        "cursor": {
          "ref": "56222b95-18f4-4355-a005-b5acd51051fc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f87301ac-e8df-4fbb-9197-b8b0298cd86d"
        },
        "item": {
          "id": "444b208e-7cb1-4d5c-9957-066be32e5dc5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8b2f756e-d64a-4fdb-8de2-876e167b1804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1dd73ba3-88a7-4842-b32e-2731a856e4b4",
        "cursor": {
          "ref": "a4d45011-0ff8-4728-8f58-07807b78e7b6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4cae1aef-d084-4867-9e6e-0fc69e1b4e48"
        },
        "item": {
          "id": "1dd73ba3-88a7-4842-b32e-2731a856e4b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b29f5661-dd00-4054-8f54-fb709a4fd09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2eb0e389-734e-4a59-a5fd-571995f69d1d",
        "cursor": {
          "ref": "7475cc33-116a-42f3-bd1e-428e9b8e7276",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8548ccb9-d58d-4ef2-ac08-08020a8fcdc4"
        },
        "item": {
          "id": "2eb0e389-734e-4a59-a5fd-571995f69d1d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6fd39739-b6ac-4399-a7b4-03f88bea920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9cdd4f-3896-4de5-9e50-e5435ac9f2ce",
        "cursor": {
          "ref": "205f1f59-8e39-495e-9f44-5ee3a63222ce",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa380058-277c-4163-accd-be3d32a480e0"
        },
        "item": {
          "id": "6e9cdd4f-3896-4de5-9e50-e5435ac9f2ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2741476-54e4-44b6-9f5b-1ea3bcd889cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb5be0-f78e-49ae-baf4-6ad662e5303a",
        "cursor": {
          "ref": "b94db0e8-6745-4573-8f6f-06cd292b65a0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b86d159e-2a86-416e-9b4c-a6a61afcbc88"
        },
        "item": {
          "id": "17eb5be0-f78e-49ae-baf4-6ad662e5303a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67e25c74-3c55-43af-85fb-979978b0b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075961b5-303d-4862-91b3-887fd1e1a2dc",
        "cursor": {
          "ref": "1505d903-bcf8-4a90-979d-da82ec8ae85d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b19b6842-3e83-40e0-9879-52eef0ae2657"
        },
        "item": {
          "id": "075961b5-303d-4862-91b3-887fd1e1a2dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0a8e4da-a7c5-4f5c-8768-de9740c07e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c60e519-3bed-4690-bf77-2bc4c2fc1f20",
        "cursor": {
          "ref": "c04a0d50-6b78-4987-9964-2c00b5f302b4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6579e04d-4219-4f60-8682-5375bb37191d"
        },
        "item": {
          "id": "6c60e519-3bed-4690-bf77-2bc4c2fc1f20",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42e0f767-7d77-4ac5-b9de-3e378af1a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7971401d-b262-40c9-bf20-4ff2a87c8dce",
        "cursor": {
          "ref": "3fa682ae-8514-4dba-9952-218ee23ca144",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "28b609b4-1bbf-45f2-a795-ef63ef3c5a09"
        },
        "item": {
          "id": "7971401d-b262-40c9-bf20-4ff2a87c8dce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5715471-8edc-43ff-a0cf-0977805740d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b5e15f-838b-4803-894a-7f7b89aedea5",
        "cursor": {
          "ref": "e11d00de-4b5f-4ef7-b0cd-28232e37213f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cf52057a-7ea0-4db6-bce8-325fc5c8a6ab"
        },
        "item": {
          "id": "38b5e15f-838b-4803-894a-7f7b89aedea5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba3355f9-a76e-4aed-8ad2-d922cbfae210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccf1a6d-9286-4bfb-bdd5-e2e00429a8e8",
        "cursor": {
          "ref": "84777f72-b906-4893-a788-35d2d13671ce",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d982cbca-9989-42c9-9083-38e1cf444623"
        },
        "item": {
          "id": "eccf1a6d-9286-4bfb-bdd5-e2e00429a8e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7a84ecf-bd27-4f98-98e4-42ad93b5434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c965dd21-1959-46a4-86c7-f53024c49987",
        "cursor": {
          "ref": "bed9011c-1f02-4f81-911c-44214e2f6c0d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "70b482b2-5313-4bed-bd10-2fcfed7cd5aa"
        },
        "item": {
          "id": "c965dd21-1959-46a4-86c7-f53024c49987",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f7b446c-007a-4b7c-b824-87ee0a27a6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86718d8c-dd8b-41f3-86d0-f9d5aa1ba4e4",
        "cursor": {
          "ref": "ed26bb43-129c-4e86-9bae-2b5440c386c5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9deca6bd-6103-4502-ab28-f071ce815b9c"
        },
        "item": {
          "id": "86718d8c-dd8b-41f3-86d0-f9d5aa1ba4e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df36c1ce-4e6f-4f18-970c-fdf9b8b28bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621af0e4-ab71-4bb2-bf84-6e709b6793ac",
        "cursor": {
          "ref": "9ff0a02f-2715-4ffc-b77a-1741cf063cd2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b5e74a5-0070-4119-934a-ce33843a5a14"
        },
        "item": {
          "id": "621af0e4-ab71-4bb2-bf84-6e709b6793ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7423a965-f3b5-4e25-8121-6060588f18fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e59b8d0-e3a1-41f8-a1f5-25697b03e37d",
        "cursor": {
          "ref": "68310afc-b8f2-416a-939a-a6e25b102a54",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5abfaa48-5e47-42f7-8b2a-8dadd156913d"
        },
        "item": {
          "id": "9e59b8d0-e3a1-41f8-a1f5-25697b03e37d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "88f5ccff-c27c-4e55-9ff8-d212291e93e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57899939-41dd-4d04-aba5-a4383ec1ad55",
        "cursor": {
          "ref": "b8880a09-a272-42c0-984c-d70c744dfb79",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cefe49fe-e8bf-4c63-86bc-60fe1db1e747"
        },
        "item": {
          "id": "57899939-41dd-4d04-aba5-a4383ec1ad55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69b06a94-7639-4e15-b118-0662eb044636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f02f3-815f-4482-9667-fef5382a35f4",
        "cursor": {
          "ref": "3b6453aa-fdaa-47d7-afe3-09ddcedba855",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3934827d-b6ff-4b9a-9d49-2a9354febc5a"
        },
        "item": {
          "id": "aa1f02f3-815f-4482-9667-fef5382a35f4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "87ca9adc-5bbd-49b4-9614-4d255a4da8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c4667-ccc4-456a-9dc1-a5fb072b4429",
        "cursor": {
          "ref": "72371da3-23ca-4753-aa3b-dca9e6dbb4ec",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "77351c81-7c30-4066-aaca-826cc9be8dc7"
        },
        "item": {
          "id": "ad1c4667-ccc4-456a-9dc1-a5fb072b4429",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a93c3674-3005-46bf-be93-8cc6829630db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd466ac-417c-429a-b5f6-74c95ee9876f",
        "cursor": {
          "ref": "10436776-9b15-4251-9f22-0b46328d7959",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c2ee98e2-a46e-4012-b7f1-07cc6a0ee84c"
        },
        "item": {
          "id": "0dd466ac-417c-429a-b5f6-74c95ee9876f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5c21b473-6ba3-4abf-ad57-e28f0a2e3d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e042d51-9f79-4b02-9776-47868368aae9",
        "cursor": {
          "ref": "dd89141b-a364-4d22-a4fb-deb75a6b2f06",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b48abe76-a83f-4b98-afb7-9b9c9f6e9488"
        },
        "item": {
          "id": "8e042d51-9f79-4b02-9776-47868368aae9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "377fde26-e970-43c0-a6ff-e412f39bbbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73b9164-80f7-4de0-b876-69a85c8765f0",
        "cursor": {
          "ref": "c2a5f4dd-a5f2-494e-a035-dae44490fd1b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be5fe6f9-72b6-4d8e-a742-97b208f4354a"
        },
        "item": {
          "id": "b73b9164-80f7-4de0-b876-69a85c8765f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "caa24c9f-1f72-4cd2-9844-fc45bfb0d66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48b6bf5-88a2-4a8d-83d2-43353053bd86",
        "cursor": {
          "ref": "416b0c7e-2489-469c-8d5a-927379688830",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5d0703a9-f2e2-44a4-bd69-74433727fed0"
        },
        "item": {
          "id": "c48b6bf5-88a2-4a8d-83d2-43353053bd86",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5b03bd9-10f6-40f8-865d-f046033d2b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5dac1e-e8d6-4911-8e29-ebaed96aad3e",
        "cursor": {
          "ref": "8bd5cd03-8e4c-4c44-98b6-ad07e87c4627",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "162e9b59-a8ac-425d-8220-57219bd0fcb2"
        },
        "item": {
          "id": "db5dac1e-e8d6-4911-8e29-ebaed96aad3e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1be352f-57fd-4418-83dd-4e3b560b89f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36517d0-5c5e-4e14-9023-af502c621fe5",
        "cursor": {
          "ref": "6e2c1259-8970-46fa-9f7a-b1dd2730faf4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f301dc58-fb56-4e4f-83b5-e7ec4bd8ccd0"
        },
        "item": {
          "id": "c36517d0-5c5e-4e14-9023-af502c621fe5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5d6fdcc6-31c7-4f10-a037-7d86b96d71c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af45e36-7cd1-4160-87be-3270a3b2bdfd",
        "cursor": {
          "ref": "139776df-cca2-46a9-a748-5853ad49f81f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e3695cdf-d223-4738-ae0b-1cb366d16e89"
        },
        "item": {
          "id": "3af45e36-7cd1-4160-87be-3270a3b2bdfd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "096826c3-dcd1-49b3-b686-ef335d360c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d70de24-99ce-4bb0-b206-f8607749a966",
        "cursor": {
          "ref": "918705f9-f6a8-4c87-80e5-00be1c334845",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42e1fc0d-abe6-47f5-a2af-37251e4523bf"
        },
        "item": {
          "id": "2d70de24-99ce-4bb0-b206-f8607749a966",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "976bd279-e332-444e-a7f2-475429ccd054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e81c398-7653-4156-ad68-1aebd387a275",
        "cursor": {
          "ref": "6ada92fc-e6cf-45b4-a257-266b4f74b9ec",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6e186d6e-04cc-4f6d-b025-a5924dcd65cc"
        },
        "item": {
          "id": "0e81c398-7653-4156-ad68-1aebd387a275",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0506fa56-970b-432b-8ec7-79f3bf78fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f18929-1099-4025-8dff-f0c39321df9d",
        "cursor": {
          "ref": "7fd5a56d-2578-4974-bdde-aae8b1621782",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ae6ce790-9ab0-4997-a5f8-7740c978a203"
        },
        "item": {
          "id": "c0f18929-1099-4025-8dff-f0c39321df9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "423b7c51-66cf-4932-bc91-45ffd13ed54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c484dc-2998-411e-8242-36b5791d27ab",
        "cursor": {
          "ref": "36499913-4c4d-4816-9b5e-f63153645b3a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb0281db-fced-47d6-afd9-b1e8571c69da"
        },
        "item": {
          "id": "c1c484dc-2998-411e-8242-36b5791d27ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "baf415fb-12d7-492a-99a9-edd316a70b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bbaffc-8576-4acd-b46d-2aa0ff57cae5",
        "cursor": {
          "ref": "e1b83799-0ebd-4adf-b741-c11c2168974a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9830bc33-5a2a-4f9f-b3e2-fff23513a619"
        },
        "item": {
          "id": "35bbaffc-8576-4acd-b46d-2aa0ff57cae5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bf5400c6-9ee5-42e6-849d-b0c63b34a535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbc7b96-cac4-4e89-b59e-2977ecc8d3d2",
        "cursor": {
          "ref": "51df9589-3f3f-48c2-bcec-59aff8ad425a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cb847e1d-487e-4d15-bd5f-b3694d09b84c"
        },
        "item": {
          "id": "6dbc7b96-cac4-4e89-b59e-2977ecc8d3d2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32aab31d-df6a-4731-b553-98a88feac7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f277dda-5bd7-4be8-89d1-a554c85ad7f0",
        "cursor": {
          "ref": "90fc7a76-58d3-42bd-8789-f101a7501a53",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d9a70090-e67c-4a58-899d-f4d49b1cd26a"
        },
        "item": {
          "id": "6f277dda-5bd7-4be8-89d1-a554c85ad7f0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7c7e6e1-44e5-4aa3-888e-a61d4b3ef014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35166c7c-da0f-4ee1-8333-0d5222d9b1f9",
        "cursor": {
          "ref": "dbb8c831-277b-4ea5-9589-b6f9935a3cfd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fa380424-80a5-458e-b85d-f46e56669820"
        },
        "item": {
          "id": "35166c7c-da0f-4ee1-8333-0d5222d9b1f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a2a3a67-7943-4ef6-b57f-8b67d5badfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1cbffa-9869-489d-b8f9-25b3f7c0125e",
        "cursor": {
          "ref": "55634ff6-3959-40ef-8c90-1802650fb2e1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7f043509-1d16-4bee-90f8-c1f083979c4e"
        },
        "item": {
          "id": "5a1cbffa-9869-489d-b8f9-25b3f7c0125e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4e4ca8c9-da37-4ef9-a01b-17c98e94f54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ca80bb-bbb9-49fc-8324-fe56fbce7123",
        "cursor": {
          "ref": "cd24455a-1f0e-402b-968a-d733519336e3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "838868a5-628b-45af-9797-bbd46c536283"
        },
        "item": {
          "id": "37ca80bb-bbb9-49fc-8324-fe56fbce7123",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e7d722c5-434b-47c4-a4cf-d612f12e2f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b7449b-c869-4e3c-b1e3-aab8c12a5b74",
        "cursor": {
          "ref": "65932b2b-a014-4998-82fc-6df2f00e1c3a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c7ff0e23-85bf-4f0e-bb28-52954850fd75"
        },
        "item": {
          "id": "75b7449b-c869-4e3c-b1e3-aab8c12a5b74",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4097caa8-8d19-4731-93aa-89dffadffa36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea4faaa-8c25-40b0-af46-98edb01de82f",
        "cursor": {
          "ref": "fe52bcde-d4fd-4c5f-a798-c473f37c307b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "642b5eda-4644-47e1-ad2a-18c3405ae4fd"
        },
        "item": {
          "id": "9ea4faaa-8c25-40b0-af46-98edb01de82f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5fc2a8bf-df2e-422e-a64b-d3691d28f2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0586e7af-0bbb-495f-b59c-171bb168e1db",
        "cursor": {
          "ref": "54df23e1-f801-4128-8625-8f368c0b88bc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a1eb9eb2-51ba-477c-a6eb-75b6af017b3b"
        },
        "item": {
          "id": "0586e7af-0bbb-495f-b59c-171bb168e1db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a3d8871f-d8fe-4e56-bd2a-475680de1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9ed5c0-e8ca-48f4-9f3b-9fa7cf489d18",
        "cursor": {
          "ref": "72f73f6a-da53-4ebb-b3a5-8f3b85f04c49",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "346090bc-4940-468e-b22f-00045ef64d74"
        },
        "item": {
          "id": "4b9ed5c0-e8ca-48f4-9f3b-9fa7cf489d18",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e0e0e7e4-5960-4aec-9b8e-7fa5c0f2cb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191cf091-db27-4fa2-836e-efe35ed8eae9",
        "cursor": {
          "ref": "77976287-d79a-4ba4-a333-62ec2be934fe",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7ecd2fcc-d742-4c80-b62e-6c610eb6ed64"
        },
        "item": {
          "id": "191cf091-db27-4fa2-836e-efe35ed8eae9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73dab67b-0a0c-4650-9cc4-9eee2b5092d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d38220-e2c7-4de5-8799-6e6ce4ed18f3",
        "cursor": {
          "ref": "38f8e5ed-9d1a-4d89-80d0-3bdc8c1f046f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b45663c7-299e-4fee-b253-2885088708c5"
        },
        "item": {
          "id": "98d38220-e2c7-4de5-8799-6e6ce4ed18f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7741f1a-eb17-4fa2-88ea-d66a313ff4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c7aac5-877a-47d8-8d47-8b7a883c8df8",
        "cursor": {
          "ref": "d9bfc8ad-d8c2-42d1-8212-32614a5e0c6c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "663e2347-a3d5-4a10-be10-a9dccd0fceb3"
        },
        "item": {
          "id": "58c7aac5-877a-47d8-8d47-8b7a883c8df8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a988726d-e8d2-4de4-b2ee-40fc149c0299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8081fb3e-a614-45a1-9206-8bf3f74a886d",
        "cursor": {
          "ref": "99ea6058-c180-4f49-bb1e-1c6eebe8ff2a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f5c055c7-ca75-4995-921f-b79962d825fc"
        },
        "item": {
          "id": "8081fb3e-a614-45a1-9206-8bf3f74a886d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c711bf5c-c1d3-4cea-be24-212d5a995c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1036e6b-e246-45fd-9e7d-65044d2d892a",
        "cursor": {
          "ref": "d922c2e2-860f-4665-b432-4cc924f04efd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d2e14695-0a37-404c-abb7-444d0a6a391e"
        },
        "item": {
          "id": "f1036e6b-e246-45fd-9e7d-65044d2d892a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8e8d671e-7f67-4890-8f80-634c1bc94999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca3dc69-d714-4d94-b836-3aad83a513cd",
        "cursor": {
          "ref": "92e2787e-82f4-450b-921c-5f066bfc1484",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d4ab894-5d72-4aaf-a1fa-fffa95b6f017"
        },
        "item": {
          "id": "6ca3dc69-d714-4d94-b836-3aad83a513cd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa7075bf-3b7e-4d8b-bea4-838f97ead3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9ceff0-795d-46c5-96df-4e727742b2b4",
        "cursor": {
          "ref": "7ec1d314-5c4d-4e3c-9432-502d4e81e7e1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "68a1e174-d45f-44bc-b354-abb168854708"
        },
        "item": {
          "id": "7b9ceff0-795d-46c5-96df-4e727742b2b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21f8b45e-14ba-4d63-9b58-6adb132d6139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1780dd6f-5961-4cb3-9abd-f2b1a1662de3",
        "cursor": {
          "ref": "8f0bcbaa-0155-4d46-8954-db9c5245d492",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "524f0a1c-c380-4507-8312-6037e5e2730d"
        },
        "item": {
          "id": "1780dd6f-5961-4cb3-9abd-f2b1a1662de3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b54991b6-eefe-433c-b237-c8166873ffc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4207132d-85ad-4f46-95bc-6907aac9d0c0",
        "cursor": {
          "ref": "e82d9ed6-7ac4-4869-8b65-ee5454d30efa",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "353a0a7f-4f44-4a1d-8871-2b237f14cfd8"
        },
        "item": {
          "id": "4207132d-85ad-4f46-95bc-6907aac9d0c0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "842f8087-5c40-42e5-8f4e-be4672729727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63399e53-77ab-4d16-8a96-14e4b579f00e",
        "cursor": {
          "ref": "19f34643-3ee8-4ef8-a96c-632dc19a2e33",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d7ce778-378f-4ba2-9562-add821243740"
        },
        "item": {
          "id": "63399e53-77ab-4d16-8a96-14e4b579f00e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9301cf1d-e83b-4c45-b877-9279056633cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6c95ea-1a62-4f95-8502-f716a00a19bb",
        "cursor": {
          "ref": "ab3e1a95-8c00-4851-8a4c-0a5e6a99e1ae",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2cab6c1f-5d57-4cfa-959c-ad599ed7622c"
        },
        "item": {
          "id": "ff6c95ea-1a62-4f95-8502-f716a00a19bb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac31d414-363a-4c83-8d79-7f8f8dc9c998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98d3b3b-bd8d-4e9a-a5cb-08e98c8738ce",
        "cursor": {
          "ref": "a9e1e4e5-4057-4e2b-88e9-5e4f043dd3f7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "13c5a39b-981a-4b71-9083-7d2d33c5b059"
        },
        "item": {
          "id": "a98d3b3b-bd8d-4e9a-a5cb-08e98c8738ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b5a173b8-3d2f-4577-8ef9-b8a9079b6f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada78f2-a556-4fa2-a1fe-555e837d4d5b",
        "cursor": {
          "ref": "803f08cb-fae5-49aa-9abd-9f20a1a4ae5a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "66c332ee-71bf-44ee-a737-f9257a733398"
        },
        "item": {
          "id": "1ada78f2-a556-4fa2-a1fe-555e837d4d5b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a1d5f4d-a1a3-4f6c-ac1e-02888fe0d5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a2bed4-bf99-4664-aad3-c22a0828497b",
        "cursor": {
          "ref": "835d1c27-9ac7-4b2f-9999-8f7907e314a0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0afecc3a-c5d3-44bb-9096-8836aaa2b719"
        },
        "item": {
          "id": "30a2bed4-bf99-4664-aad3-c22a0828497b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b6d8121b-4f02-49b2-9621-828e251ecab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b289d-25c0-4e51-9366-7ad28e90d6c2",
        "cursor": {
          "ref": "39672b2a-d437-40a7-beb3-8b2dd18f7350",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39bb4e34-8bf2-40b9-9aa6-c12f4ab9949f"
        },
        "item": {
          "id": "1e3b289d-25c0-4e51-9366-7ad28e90d6c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8c6cfa5d-3af9-401a-a4f9-551deb6ddc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00e9762-bdc4-4348-900f-17009c40851e",
        "cursor": {
          "ref": "30dbb7b2-bf15-42a2-b437-d67dce58f753",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b1963c19-123a-4942-8d7d-090b98f393b3"
        },
        "item": {
          "id": "e00e9762-bdc4-4348-900f-17009c40851e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd11f4ed-b1ce-4ee7-a979-9357808de15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1394ff3f-29c5-41e1-bb6a-42b1c91a8e0f",
        "cursor": {
          "ref": "853b4bfc-7193-4bf5-aa36-edff6e2c8171",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3b77f29-2984-4b25-b7b0-543e0b701472"
        },
        "item": {
          "id": "1394ff3f-29c5-41e1-bb6a-42b1c91a8e0f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a6a237b7-cb17-484e-b05b-52ab06606d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e0bca8-fef6-44c6-81cb-2b13b62f2432",
        "cursor": {
          "ref": "2eaedea6-9371-404e-aacb-5f172141aa01",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "170e6ef9-25d5-4950-bade-7ce824bf748b"
        },
        "item": {
          "id": "44e0bca8-fef6-44c6-81cb-2b13b62f2432",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c6a1c483-adae-4312-89f0-ce66b89c1c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9015585-85f5-4e58-bb63-ac3a0ce211e8",
        "cursor": {
          "ref": "9de5c2c4-ff6b-4e6d-9574-d7c2bae41400",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18c15778-b8bb-4629-8c32-77952101809c"
        },
        "item": {
          "id": "c9015585-85f5-4e58-bb63-ac3a0ce211e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5245bc2d-6a38-41d3-a07c-b0e0c0abd7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19240564-7fe1-430c-8566-736402554bc7",
        "cursor": {
          "ref": "d105307a-d522-4902-9a59-386f8cc04761",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2c648ea2-6ba5-4d10-891f-8e1caa9fca2b"
        },
        "item": {
          "id": "19240564-7fe1-430c-8566-736402554bc7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c295ff0-6600-4235-8e82-485c0b44c667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d0a0c-411c-4bb5-bb00-163d0ea3de3d",
        "cursor": {
          "ref": "3b8456f1-68ed-4e32-9689-16fab6955a9e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "621aaebf-e212-4df2-aae2-3a1786411f19"
        },
        "item": {
          "id": "c38d0a0c-411c-4bb5-bb00-163d0ea3de3d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc34899d-fa6f-4f00-a8f0-fc565a8a4935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a622f92c-b129-4956-9937-8c508e6ab97f",
        "cursor": {
          "ref": "e73a2e34-876a-483d-a0e0-17398f9e9cc1",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6bc226d-f6d7-430a-939e-f3492ca48c33"
        },
        "item": {
          "id": "a622f92c-b129-4956-9937-8c508e6ab97f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d961d4d5-da48-4ce8-b72d-c52a7a1a7ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b8ca98-8b40-49db-970f-bbb4b296d5c1",
        "cursor": {
          "ref": "99c0b243-2faf-4032-ad44-564391892aea",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6dd8c7b2-3517-4e37-950a-3b309a86faa8"
        },
        "item": {
          "id": "f9b8ca98-8b40-49db-970f-bbb4b296d5c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c41c4827-44fc-4e8d-b4c3-4fb70afa69d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01687979-09ed-4279-85a3-9fc99c199abb",
        "cursor": {
          "ref": "d3bdbf75-1d21-4210-a00c-12762edfc5aa",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0a260ab2-ca58-42bf-9f41-07c06699c9e0"
        },
        "item": {
          "id": "01687979-09ed-4279-85a3-9fc99c199abb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "49d2d74d-d610-407e-aa9b-ed3f220e8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12255b7-5e75-46a4-aefa-08a32f9bd5ac",
        "cursor": {
          "ref": "4da0073b-7dc0-40d3-89c6-4e5d57456053",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60dd616c-24df-4efa-a04c-8017dffb381a"
        },
        "item": {
          "id": "c12255b7-5e75-46a4-aefa-08a32f9bd5ac",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e0594172-e97d-4ad4-a73b-9fce3d5f9fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a267cec3-1e8d-4f84-ae71-302570e00600",
        "cursor": {
          "ref": "6d57f2fe-994b-4baa-802e-768705e74201",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8b933d0b-140b-4b71-8d80-9f185bde998e"
        },
        "item": {
          "id": "a267cec3-1e8d-4f84-ae71-302570e00600",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52225c07-2bab-4442-95b0-f75e31b5a41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3253ae7-b7c9-4515-a070-eac33ab848af",
        "cursor": {
          "ref": "7fbdc0b8-8700-49c2-9269-18d65b162398",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "782dcfd1-4e91-488a-8f25-6783308986b0"
        },
        "item": {
          "id": "a3253ae7-b7c9-4515-a070-eac33ab848af",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69641eda-5fc4-4414-ae94-0ca8e00e3110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb16e26-a0e8-4e29-96ef-5bb49e5eda73",
        "cursor": {
          "ref": "00cf8168-0190-4a8f-9eaf-41edaf8ab634",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f6339340-e59a-4800-a12e-f94aa91987c3"
        },
        "item": {
          "id": "afb16e26-a0e8-4e29-96ef-5bb49e5eda73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0370038-f3d3-4f1d-ada8-06a5887e218e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30baa681-116b-476b-90ce-41a8ac52357d",
        "cursor": {
          "ref": "6881c0cf-5ad3-45fe-99e1-c34c8dc2295b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "26190e31-21ff-4a80-84d1-d35d7189c664"
        },
        "item": {
          "id": "30baa681-116b-476b-90ce-41a8ac52357d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1163cafc-9e9f-45e4-a0fb-95d53fb79f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c82229-5fba-4232-815a-620a89584acf",
        "cursor": {
          "ref": "4a575975-f662-431a-81d5-0098b867222c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d73750b5-a7ab-421b-97cf-95dd2229b9de"
        },
        "item": {
          "id": "e5c82229-5fba-4232-815a-620a89584acf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "44451591-caff-441b-8092-b0ba4ebeb43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849a1126-714b-4846-a125-6d246743f25e",
        "cursor": {
          "ref": "3fd9b8d7-f0c9-4389-acf2-f265e3ff93a8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "799c8bf7-7e6b-4b67-87c3-25a37fef476c"
        },
        "item": {
          "id": "849a1126-714b-4846-a125-6d246743f25e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "661b7f25-1384-4733-b340-ab8c98e46e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99937a33-84a8-43f3-8161-bc47a0573b67",
        "cursor": {
          "ref": "902c88d3-c8b7-4d49-9924-4ed25708426d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "70864a58-5c97-4bfa-a8f3-e6f76282cd58"
        },
        "item": {
          "id": "99937a33-84a8-43f3-8161-bc47a0573b67",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "121adfef-ddb1-4a85-b994-4d040120f9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c8df3b-e93b-4d32-80bf-c004d3215a89",
        "cursor": {
          "ref": "59c8462c-e71e-406d-9b82-b59224cd720f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "37994b75-0a70-4c95-8934-dc73caa2f8b1"
        },
        "item": {
          "id": "59c8df3b-e93b-4d32-80bf-c004d3215a89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b97dcc86-574e-48a7-a194-fa487ba0f0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5552c1fc-7340-4525-bbdb-10a13e7a15b5",
        "cursor": {
          "ref": "2b46a393-f54d-430f-9fc0-2b7cd98308bb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e700e7b2-0d5e-4e65-8c5a-f326f0c7e352"
        },
        "item": {
          "id": "5552c1fc-7340-4525-bbdb-10a13e7a15b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d7786af3-de4b-42e4-9988-913bd32da7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf40b7c-5b73-4a4e-8e88-0862b6053fac",
        "cursor": {
          "ref": "7196d404-712b-439c-b7d4-19ba164f526a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "db193e1c-0e95-4669-ab00-af38dbcad8a2"
        },
        "item": {
          "id": "3cf40b7c-5b73-4a4e-8e88-0862b6053fac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43301ee7-9703-40fa-9725-00f3b961eb54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07e8f3f-2ebb-4351-88e9-8e4bd09a581e",
        "cursor": {
          "ref": "81890797-a6e0-413a-bb4e-f2b094ec2242",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3e9f766f-715d-4b53-8dee-3f30d4b4d7e5"
        },
        "item": {
          "id": "c07e8f3f-2ebb-4351-88e9-8e4bd09a581e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea0f1a1f-3f00-4cf9-b842-537f0f8724e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428d23b8-429b-4518-88e5-71d71bfa5956",
        "cursor": {
          "ref": "06e3ba01-0ea6-484b-83dc-0139107aefa1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e48ebeec-6cf0-4b7a-9332-9a14ffc2ebdb"
        },
        "item": {
          "id": "428d23b8-429b-4518-88e5-71d71bfa5956",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2a045e7e-d070-43c1-bfd9-ad5a04afb610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4987a9f-3632-491a-8827-93fe1bcb4680",
        "cursor": {
          "ref": "7e2b37dc-d37f-4b7c-8c08-679a1b947b10",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50a0bd64-c8e7-464b-b937-9a95a43c8859"
        },
        "item": {
          "id": "b4987a9f-3632-491a-8827-93fe1bcb4680",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "298882cb-b233-4b59-a9b5-f47719bf9941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad4e8f2-1df8-4231-bf0d-6c264e2134b1",
        "cursor": {
          "ref": "706ee4c3-e5db-42eb-bb6d-88ba27739332",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c93929e1-d7e3-4f44-b714-cd26111d54d8"
        },
        "item": {
          "id": "8ad4e8f2-1df8-4231-bf0d-6c264e2134b1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dbbb6072-97be-4217-a7e4-2d92fc99f424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab28433e-0298-4609-a0eb-72ff14d9d1d6",
        "cursor": {
          "ref": "088147b4-2412-4eb6-be89-83331cfaf50d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "018a6da3-bfc5-40b0-8566-9db4b8260820"
        },
        "item": {
          "id": "ab28433e-0298-4609-a0eb-72ff14d9d1d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ab83c4d6-a2a7-43f4-9ced-1c4f7959fad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea865629-333f-4a11-b13f-b9fc0776242b",
        "cursor": {
          "ref": "2e2d2b80-1b8d-4336-988f-b28d76b060b5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cb34c324-d8ff-4a9f-b6f5-a422f4470905"
        },
        "item": {
          "id": "ea865629-333f-4a11-b13f-b9fc0776242b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7fbc2ee-ae3b-4a4e-b982-a6ad21cb071b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab324ca5-8024-4152-8a97-1d12b5ef6048",
        "cursor": {
          "ref": "c9a652e5-22ac-4697-a3c0-0d3bf0fa137b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6a709667-f519-432b-ac2d-afab0a4b777e"
        },
        "item": {
          "id": "ab324ca5-8024-4152-8a97-1d12b5ef6048",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "840baf58-2b6e-423f-99d0-f887b059915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55c597-0198-4b8b-a83d-288c72c21eea",
        "cursor": {
          "ref": "0edcdfc5-cec1-4fdc-b855-1148dea1c976",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7e053a92-bdf6-4845-b8ae-8079c31ebae7"
        },
        "item": {
          "id": "6f55c597-0198-4b8b-a83d-288c72c21eea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "caa01f82-e0c5-497f-94f9-3b729eb0905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adf016e-391e-4002-802a-73f0d5f5f308",
        "cursor": {
          "ref": "748eab5d-3764-4b89-bac9-df7a74a6b63e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d5b1d5de-fa85-4d99-b88a-68ae8bb052aa"
        },
        "item": {
          "id": "5adf016e-391e-4002-802a-73f0d5f5f308",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2dd64045-5b76-4eb0-acbc-2c28ffca7045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec50f78-7497-49f1-a8a8-e44283f59ea6",
        "cursor": {
          "ref": "a43ba037-1ea2-422e-8d8e-2d7d93d37c30",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b1730dc-3290-4dd9-8809-ca2d0aaf02db"
        },
        "item": {
          "id": "0ec50f78-7497-49f1-a8a8-e44283f59ea6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "376ff0d4-c793-4ec6-9f9f-6cb51978e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8341ecd4-29d2-4e2a-9e5a-3e066baab784",
        "cursor": {
          "ref": "a438a7cd-59ef-4a00-b5bb-34fcd86317a3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "41cd6a3b-c265-4126-a336-a2d4c734980e"
        },
        "item": {
          "id": "8341ecd4-29d2-4e2a-9e5a-3e066baab784",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "65e17e19-8770-4ef5-8537-99e53fbecf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91082990-c118-4250-bbae-76a4f5538717",
        "cursor": {
          "ref": "4a933827-497d-4780-9fa5-a4c275c7df3f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7e42e25f-a401-45b0-9cb3-52294bd57a6b"
        },
        "item": {
          "id": "91082990-c118-4250-bbae-76a4f5538717",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "965d92bc-975e-4990-b716-705133da7270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925fc39-962c-4c85-86eb-bf7c153a3291",
        "cursor": {
          "ref": "5b6eeda3-2ee5-4b75-acba-8f648e4f2c16",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b950032-8dba-41b9-ab5b-23524a454e5b"
        },
        "item": {
          "id": "a925fc39-962c-4c85-86eb-bf7c153a3291",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a8f05c98-abf1-4f65-8bf3-6f278beafc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311aba8a-d3bd-4220-be79-9cc740d9f551",
        "cursor": {
          "ref": "d61c2fc3-ce31-4795-8e57-36b5aca4543e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1a1cb634-6375-4c30-8275-a9af7852bd7b"
        },
        "item": {
          "id": "311aba8a-d3bd-4220-be79-9cc740d9f551",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67244e6f-642c-4dd7-95df-59c97b6c7862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4357c13f-89a2-4e75-9705-ece8b5242b72",
        "cursor": {
          "ref": "894fa7fb-cb97-436d-854d-79b9d2e1c4f4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e3523dc4-d076-4da0-8c6c-c3e148062129"
        },
        "item": {
          "id": "4357c13f-89a2-4e75-9705-ece8b5242b72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "54be0e00-0036-49e0-a968-c6794676b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6b2e91-424b-44cb-89d1-bfe2c73f19c0",
        "cursor": {
          "ref": "e953ef04-0c9a-4878-ab48-6336538a8457",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "092aa1cf-b295-4f27-945b-3849132bf18e"
        },
        "item": {
          "id": "9a6b2e91-424b-44cb-89d1-bfe2c73f19c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bdbc267d-fba9-476b-96f0-e128cd2f3e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff498ff-6b80-468b-bf86-5516d93bcd4e",
        "cursor": {
          "ref": "898d742d-7f43-45bd-9a4e-0ec9a3fce769",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "61b1cca2-cd77-49c1-9aec-df1052cd1fd6"
        },
        "item": {
          "id": "4ff498ff-6b80-468b-bf86-5516d93bcd4e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7c771218-a5c5-4310-b4c9-17a9e3251960",
          "status": "OK",
          "code": 200,
          "responseTime": 182,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ea429af5-0919-4b96-9d01-fad90cfb5208",
        "cursor": {
          "ref": "b660b58b-689a-4dab-964a-c974ce0a0ee9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd52bec7-b867-454c-bd02-20405bb5c042"
        },
        "item": {
          "id": "ea429af5-0919-4b96-9d01-fad90cfb5208",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "11e50120-81ac-4d29-b695-e3d1623d6b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5101b4-49d2-4d13-80f7-f4a1ea133dd5",
        "cursor": {
          "ref": "3a8161e5-35ba-430f-8a62-3a19e50a1697",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4e05e09b-1d0a-498b-b460-d66608e6dfea"
        },
        "item": {
          "id": "cc5101b4-49d2-4d13-80f7-f4a1ea133dd5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e5daa431-2a20-47a9-b821-8354228ce800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78268555-e37d-446f-9605-54e9e8570e19",
        "cursor": {
          "ref": "34b89fd7-1c3c-4b41-ac77-c70fbfbddcd2",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2054c29e-7ae3-4755-86b3-ea77991a97e7"
        },
        "item": {
          "id": "78268555-e37d-446f-9605-54e9e8570e19",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5bbbb0a-cbe0-4644-a430-9b7f66d34d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12d9cc3-a2cc-4aa3-8bab-347e58699758",
        "cursor": {
          "ref": "b3e78862-9525-4119-a62e-921e432b7eed",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "681d381d-850a-4803-8da8-c681004d0d8e"
        },
        "item": {
          "id": "b12d9cc3-a2cc-4aa3-8bab-347e58699758",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "34458678-7555-4c9f-a5ec-e11e52a2e81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d431c6-63a9-4fb8-86ba-2bbbff93f824",
        "cursor": {
          "ref": "7e875417-333c-4e9d-bc97-9c9d7be497ff",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "798b7492-c3c7-413a-858a-fb43e7af40fd"
        },
        "item": {
          "id": "f8d431c6-63a9-4fb8-86ba-2bbbff93f824",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d4737fe3-42b0-4283-ac80-570be0985e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a745a9-319c-4c6c-883f-41b4b3ba627b",
        "cursor": {
          "ref": "de409d6c-4155-4e29-81f4-1a6b4f2fc827",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "85fe0645-5f93-4d52-9f05-9e4d0a25226b"
        },
        "item": {
          "id": "02a745a9-319c-4c6c-883f-41b4b3ba627b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53e7fa4d-4b6d-4594-87b4-f1e4496b3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3914a2e7-f7db-4e49-91f5-efe766267113",
        "cursor": {
          "ref": "8c59a260-24c4-4841-bec0-d7213466216c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d7bb408a-9003-44a2-9971-13fadbea622f"
        },
        "item": {
          "id": "3914a2e7-f7db-4e49-91f5-efe766267113",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a5eaeab4-7d48-46b1-9524-4bf37e3d6862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ba6ca-41cd-4664-9c1c-2471ed5b2c83",
        "cursor": {
          "ref": "0b05a1ef-1b54-4659-90f0-3ad0fafd5567",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "76c7df9a-58d0-46e4-8cea-d5c4621ab424"
        },
        "item": {
          "id": "680ba6ca-41cd-4664-9c1c-2471ed5b2c83",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a7f2244-a30d-483f-9a27-ed534e95f839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690352f4-2cc9-4937-9354-4cdf547439a0",
        "cursor": {
          "ref": "fb20619b-75dd-406e-ac73-7bceebe1a120",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d968c58f-053f-44e9-9c29-7bde70e90cd4"
        },
        "item": {
          "id": "690352f4-2cc9-4937-9354-4cdf547439a0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4181be67-412a-4277-9c62-446c48798b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dcc88c-8bf6-4ea8-bfc0-6b2aed4d4e24",
        "cursor": {
          "ref": "21d67ec2-21ab-4c29-b87c-d54e1f1809e2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e4d489ca-1323-4c0d-9442-90033b031553"
        },
        "item": {
          "id": "10dcc88c-8bf6-4ea8-bfc0-6b2aed4d4e24",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9edf3f24-cad1-4750-ab58-85066d344f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b78a8-0cc6-4e8c-8738-7acc62a22a46",
        "cursor": {
          "ref": "00a04ce4-25ef-4873-a782-da4ff92f8a18",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f7b4f751-3737-4057-8129-60349a49fada"
        },
        "item": {
          "id": "902b78a8-0cc6-4e8c-8738-7acc62a22a46",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "073fa790-1974-408e-b718-640600c0dd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afff2917-ccdd-4883-b915-5db1dd726cb3",
        "cursor": {
          "ref": "473d3b67-57be-4d8f-ab3e-75fe8962ce2d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ddcac812-ff9d-493c-97e5-dce8d227eda7"
        },
        "item": {
          "id": "afff2917-ccdd-4883-b915-5db1dd726cb3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "77a0d956-6359-48bf-aa2f-bad22ea0a465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52e2ccb-a379-4630-829c-275efbf88733",
        "cursor": {
          "ref": "813853b3-576f-411d-9109-dcba03933644",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d6d1c8f-7ba8-4eaa-ad7a-2390f3c202be"
        },
        "item": {
          "id": "d52e2ccb-a379-4630-829c-275efbf88733",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c5d0dcd9-979d-4aa0-a8f8-aec6409a5407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c67ad9f-e0e0-4995-a013-89598f667c4f",
        "cursor": {
          "ref": "1f1a7b43-b67d-43af-bf05-ac3d5647afa5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8a06dd7f-7454-49e9-887f-e9eaba673891"
        },
        "item": {
          "id": "9c67ad9f-e0e0-4995-a013-89598f667c4f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77780e92-3a66-4a3c-bc12-2873520db74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4553c2-7381-4832-b7c8-5e49955e098e",
        "cursor": {
          "ref": "f8278ca7-f8f3-4a29-9710-17d4ec7a82d1",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2369a4ee-46d8-4f55-b81e-809b6721f5d1"
        },
        "item": {
          "id": "dd4553c2-7381-4832-b7c8-5e49955e098e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0c6295c-3cfd-4d8b-a30d-f2984cae6476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6f7970-b0de-4ed5-9a5c-2a69ce8f4d2c",
        "cursor": {
          "ref": "7f2f745c-3045-432f-896f-59ef227bcfd8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d904830e-e32a-480e-ae7c-175c9e28a0f4"
        },
        "item": {
          "id": "ae6f7970-b0de-4ed5-9a5c-2a69ce8f4d2c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3b80a707-b216-413a-90c8-e022e1a5e707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78360831-13a7-480a-afcd-59a4495cd1cc",
        "cursor": {
          "ref": "6475c2d5-355d-4a8d-a1b1-8d6be5609b42",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "115138ce-c9d6-487d-b440-323dbc40fcee"
        },
        "item": {
          "id": "78360831-13a7-480a-afcd-59a4495cd1cc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "782de19e-d9f0-4011-804b-289cc8fa4370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22b2a46-ef08-424c-9215-d71f929afa9c",
        "cursor": {
          "ref": "58561d12-f427-4e7f-9ac9-5d834c630b50",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0165d848-69f0-465e-9769-beab8d1d9ef5"
        },
        "item": {
          "id": "f22b2a46-ef08-424c-9215-d71f929afa9c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e9e67b34-e370-438f-952d-6a3216432b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dade297-515f-4417-a8e6-5473455cf2b2",
        "cursor": {
          "ref": "6defa526-1974-46f5-b263-a95cd931957e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3c99d1b2-0749-431b-a672-770b8747e714"
        },
        "item": {
          "id": "6dade297-515f-4417-a8e6-5473455cf2b2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab94e998-3700-4143-95b5-4faaa681fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e73df-f3d3-4441-88f3-383f45401776",
        "cursor": {
          "ref": "de1631a3-604a-4500-8767-e6dbb07c7bee",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc743422-8d0d-4fa1-9a83-86402cc83b2a"
        },
        "item": {
          "id": "fc9e73df-f3d3-4441-88f3-383f45401776",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7997308f-59fa-49f8-a0f4-d0cee88b7135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3524c74-7d5c-4260-acae-77d7aa8e40b1",
        "cursor": {
          "ref": "e67bc65a-140f-4742-bd53-475ce349b2a8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "99165cb9-820f-4401-825c-ec2220dacb3b"
        },
        "item": {
          "id": "e3524c74-7d5c-4260-acae-77d7aa8e40b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "078f5885-d3a3-4da8-8cf5-5fe9f626ced2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da227ad-2a87-4db9-ac01-de0d95c098cb",
        "cursor": {
          "ref": "3d814480-be46-49a0-a388-308356a8a12c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3d245b66-aafe-49f4-8844-2954a0f038cf"
        },
        "item": {
          "id": "1da227ad-2a87-4db9-ac01-de0d95c098cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a33cd71d-dc4c-4bb7-b0dc-3b761b1677b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c52d5-d0d6-42e6-989a-c244ba6d5046",
        "cursor": {
          "ref": "4ded1191-700c-4750-9f77-3985ad73dfc7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "78e7e961-2168-48fe-964e-f04140e9dadd"
        },
        "item": {
          "id": "683c52d5-d0d6-42e6-989a-c244ba6d5046",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aacebcf7-c4bb-4da2-b987-7f7d897668ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a6a280-c462-43b4-b888-5bb09c74cc74",
        "cursor": {
          "ref": "3d7c4ab3-d3e4-47bd-8960-1134fb333cca",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1770d3df-fee0-4604-b3c5-de5da24555a3"
        },
        "item": {
          "id": "09a6a280-c462-43b4-b888-5bb09c74cc74",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d484ebb9-c8be-4660-b3c4-21aac2f6168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102ad8fd-e8dd-4a5b-a2f8-a4b1b2adfd6d",
        "cursor": {
          "ref": "c3392518-9a6d-406e-8fce-061df7a5eaa5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b35e576c-57ba-4145-ae8f-19df1b44edf7"
        },
        "item": {
          "id": "102ad8fd-e8dd-4a5b-a2f8-a4b1b2adfd6d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df1cdd6b-3b4b-47e9-9e25-c05a705809f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6f41cb-3d18-4140-bf02-fd5f2c910980",
        "cursor": {
          "ref": "d69715ba-89a0-499e-8e24-76886c6ac46d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fd819ecb-e232-423b-b55e-20fcb5b648a8"
        },
        "item": {
          "id": "3b6f41cb-3d18-4140-bf02-fd5f2c910980",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bae6a884-f531-486d-9369-3029e7fc9463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a76fa4-26a4-45a5-a8fd-0ee888b37c79",
        "cursor": {
          "ref": "f0cc8c04-56a1-4f8c-a307-c40f71034269",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d63590a5-636c-4e72-b7eb-9a8b5287f60f"
        },
        "item": {
          "id": "f7a76fa4-26a4-45a5-a8fd-0ee888b37c79",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7c0746c7-5d6e-475b-a362-baeb48da188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220a1c7-2931-43be-8b65-bca7cd68656f",
        "cursor": {
          "ref": "fa5fa24d-5f3c-4c4d-abf1-0c731c50aa0e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ac2c452d-73d1-4382-8297-23cc9778b6e8"
        },
        "item": {
          "id": "3220a1c7-2931-43be-8b65-bca7cd68656f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cfbb3e48-4264-4b55-9286-bf2aac947d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38273137-9182-4d5c-9c9e-256e52435b57",
        "cursor": {
          "ref": "d5938045-6410-4acd-9077-b6f2997ff26e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6978d015-3d1c-4701-8dbb-e950cff51b53"
        },
        "item": {
          "id": "38273137-9182-4d5c-9c9e-256e52435b57",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99b5e8dd-5638-4510-a006-10a6c68d8c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebed364-18d4-4dae-ae8e-143db5cac430",
        "cursor": {
          "ref": "265244e7-866b-4669-9f2a-f1f2b03835e9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9eb87ff-69f4-4fb5-850b-4c280217555d"
        },
        "item": {
          "id": "2ebed364-18d4-4dae-ae8e-143db5cac430",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63838a32-e046-43d3-82f3-f44e4e9d42b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a207eb-2641-4273-8b06-f68de29d7a73",
        "cursor": {
          "ref": "cecbed20-fbc4-40eb-ba8c-7241554b9a21",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a6ec1ff4-be82-4003-af02-5bc839e716b6"
        },
        "item": {
          "id": "85a207eb-2641-4273-8b06-f68de29d7a73",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "76a00b96-4a44-4e3d-9aa2-dd08c22d26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e31932-c6bf-4fd4-8f04-40fffb79a0e9",
        "cursor": {
          "ref": "6d0766a7-54fa-4db0-be14-3c56adb4a33a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f8575466-4c86-4204-8f42-b248b1bdcb42"
        },
        "item": {
          "id": "95e31932-c6bf-4fd4-8f04-40fffb79a0e9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "259f6d25-530b-445d-8e1c-8ee62828d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f11297-f5ad-42ec-b43d-7cb6564425ce",
        "cursor": {
          "ref": "b92104c7-910a-4db4-9556-41ca8fd73b26",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8942e1ad-dd4c-4371-b791-5178d39cd236"
        },
        "item": {
          "id": "06f11297-f5ad-42ec-b43d-7cb6564425ce",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c0e6f538-4043-4cf4-9f9b-9498c0188f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ae4de2-a7b1-4813-b0fd-1862fe281a64",
        "cursor": {
          "ref": "05fb2cac-2111-48ef-81cd-dd8a287330c4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bf053efd-6719-4cd8-bf4b-5003552ca5ca"
        },
        "item": {
          "id": "e9ae4de2-a7b1-4813-b0fd-1862fe281a64",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9fb0cec5-7cbf-44f3-8019-d7a3c553d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d5154-edb5-40d3-ad30-da8fde2a4e3d",
        "cursor": {
          "ref": "8250883f-f81a-4aaa-8ad6-296d06df0567",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "efd00b24-eceb-4edb-b101-e8da3de581eb"
        },
        "item": {
          "id": "141d5154-edb5-40d3-ad30-da8fde2a4e3d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "418bd2cd-89d6-4897-83c8-408c3f002228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6987fa-502f-4c70-b899-4f13854d8268",
        "cursor": {
          "ref": "f19bf716-acd9-4749-a982-2eb543919103",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5d6b959b-bf5a-4036-93f1-9ab459d3b6ef"
        },
        "item": {
          "id": "cf6987fa-502f-4c70-b899-4f13854d8268",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e8655cbf-96df-4ea5-ba8e-9eedbfc04c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558dc49a-a7cb-4af6-8fe1-77492af712ea",
        "cursor": {
          "ref": "1e1bb963-d33d-4df9-9e8a-aa41ad6f24ac",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1238416b-3991-4547-85eb-4b52549faad8"
        },
        "item": {
          "id": "558dc49a-a7cb-4af6-8fe1-77492af712ea",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0554137f-e38d-49e1-85c7-d7469e805576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7770a3f-6ec2-4787-813a-9f6955eabbcc",
        "cursor": {
          "ref": "df914470-e692-4ff7-923c-0bb0f58b1a7f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f6924ffc-3fe6-403f-8b40-13896aabc5fe"
        },
        "item": {
          "id": "e7770a3f-6ec2-4787-813a-9f6955eabbcc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b6a827e3-5917-4c85-9fd6-b8ebecce8311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dd805d-fca9-4a65-bdc6-d695128166b3",
        "cursor": {
          "ref": "042fb594-19fa-4c8f-a703-f536de8d1d87",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e60d9a92-0ebd-4556-a012-2175a8ab2821"
        },
        "item": {
          "id": "20dd805d-fca9-4a65-bdc6-d695128166b3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1c6bb7af-5ec9-4d67-b842-c0918ac6c456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada86cba-b3c7-4c74-b192-5882b5754050",
        "cursor": {
          "ref": "4ed317a7-eef7-4234-90f4-ceae6e18ac04",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "11cd946f-5762-46b3-ba83-bf0ffca8427c"
        },
        "item": {
          "id": "ada86cba-b3c7-4c74-b192-5882b5754050",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e0dc9655-86f3-4e1b-b236-9a0ce24fb7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b711ea-25b3-4969-bb8d-28e31d89cf9b",
        "cursor": {
          "ref": "c319b457-f972-4d88-ad81-de036493f195",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa34cc37-e4f6-4722-9ecc-935dd1ff5d5c"
        },
        "item": {
          "id": "d5b711ea-25b3-4969-bb8d-28e31d89cf9b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d044a355-83e0-4e1a-8f3b-51ab50347334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7280393-3e0d-4b5e-bdcd-22c8e6989ceb",
        "cursor": {
          "ref": "d4fcc7ce-2cc7-407d-bf75-dff1a2bac83f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9fd6436b-0be6-4d0f-8800-cd02c993b145"
        },
        "item": {
          "id": "b7280393-3e0d-4b5e-bdcd-22c8e6989ceb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8d6c51a2-699f-46de-82e5-96f87ac968d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f2a6e-635b-4af2-afba-91403eb443af",
        "cursor": {
          "ref": "433205b2-4efb-4a10-adf1-08d8fbe383fd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f2d25c86-3ffc-4b61-8c24-4ffd71d1fcd5"
        },
        "item": {
          "id": "778f2a6e-635b-4af2-afba-91403eb443af",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3834d8f2-426e-47fe-925b-1e56ea305f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be998b89-15be-4ce6-88c3-1ea7820cdd94",
        "cursor": {
          "ref": "f0706fbf-f7fa-457a-a6a9-65bce05ae5d5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7ae14b82-100f-41e4-b532-cede24c6c546"
        },
        "item": {
          "id": "be998b89-15be-4ce6-88c3-1ea7820cdd94",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eedc40ff-413e-405d-8b60-d95b7c9e71c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da65944-c0f8-4c9c-ae64-66b197234558",
        "cursor": {
          "ref": "be9d450b-2bc5-4c3d-b853-131fb938cb0a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d854e32-8eff-4a7d-88fd-6a1227a7eece"
        },
        "item": {
          "id": "6da65944-c0f8-4c9c-ae64-66b197234558",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0dba99ae-90de-413d-94ce-7c823046802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38206cdf-5b15-4578-b26e-5979c562624e",
        "cursor": {
          "ref": "ddb349a3-69ef-445a-9612-a4c822ad6cca",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c496a72c-6ba0-4f4f-84ab-d836813c0c2c"
        },
        "item": {
          "id": "38206cdf-5b15-4578-b26e-5979c562624e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d717d532-8385-445e-bfa7-580b1e7b6a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeabcec-5f1f-4e1d-a41f-eca7a43901b6",
        "cursor": {
          "ref": "845aef5a-d8bd-400f-b1a9-1168b546da8d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c90050c6-edb2-43b4-8a4a-1fe005e9aee9"
        },
        "item": {
          "id": "dfeabcec-5f1f-4e1d-a41f-eca7a43901b6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ce7cc456-057f-4ca5-bc06-c970aebd62b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e705053-0716-4b24-ad25-43c9e72ac5d2",
        "cursor": {
          "ref": "28e2b0ee-a8de-4340-ad21-e1bb7477dcf0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "063f60b2-1752-491f-b43e-fbdf8605e555"
        },
        "item": {
          "id": "5e705053-0716-4b24-ad25-43c9e72ac5d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4c53d427-2733-45a6-bc65-21d119ad55cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb618823-b5ff-473d-880f-6082c77c6844",
        "cursor": {
          "ref": "d0aaad7a-4e25-45b3-acdf-1fcbb7df2fd2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "95281dc4-e65a-42e8-be98-59d6d65514b6"
        },
        "item": {
          "id": "bb618823-b5ff-473d-880f-6082c77c6844",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b75f2ab8-c17b-41af-ac6a-9ab4fb79eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace61bf3-70a4-4137-984d-b0617886f3cd",
        "cursor": {
          "ref": "89b2e83a-0101-4f61-9cc3-be0fd93556a8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f58a7439-ea67-42ed-badd-3269e1314d34"
        },
        "item": {
          "id": "ace61bf3-70a4-4137-984d-b0617886f3cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f76ab852-d8db-4938-b9c7-f60917a73f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ea20b1-042c-4234-b853-c9e100245a52",
        "cursor": {
          "ref": "e214dbea-7165-40a1-9d43-bedb0e331f9c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6f120ef-e56b-4bce-a97e-0965f23201a1"
        },
        "item": {
          "id": "05ea20b1-042c-4234-b853-c9e100245a52",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8dff2a03-5df3-4bef-9078-146f2a8d7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c4a77f-2033-472f-a880-47a7d8167217",
        "cursor": {
          "ref": "242791db-1ecc-4614-ad14-6e026fde13bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c26c1c25-0e2f-4df9-8ee8-dc5abeacfb6d"
        },
        "item": {
          "id": "40c4a77f-2033-472f-a880-47a7d8167217",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d1e9e5c5-d815-4543-8e1c-5a900aa90d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c287129c-1247-47cc-9e86-09d70b1c5944",
        "cursor": {
          "ref": "952cb0ca-5cb0-40ce-bf8a-200f52460654",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "15c81b65-804d-48f5-9c9d-c5bf25a03c78"
        },
        "item": {
          "id": "c287129c-1247-47cc-9e86-09d70b1c5944",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8719f2b3-b813-4267-be25-178b69f8474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bba489b-cb19-41d4-b8d8-1a39c01e2007",
        "cursor": {
          "ref": "1c11eef9-1525-4018-ab6e-99920a129aa8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "77163bc6-4d59-4f3d-9db5-fcf5b26c7043"
        },
        "item": {
          "id": "8bba489b-cb19-41d4-b8d8-1a39c01e2007",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "585840e0-8bc8-4e8c-a71f-9d5b7265e27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce2245-21d1-498a-981a-bbf2966792dc",
        "cursor": {
          "ref": "250dbe34-2da9-4ea6-afbd-0933c0468523",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9cc2f522-16d0-45cc-a076-eac704e9cb80"
        },
        "item": {
          "id": "35ce2245-21d1-498a-981a-bbf2966792dc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "02b51f4b-0131-4869-8ec8-cd0f9b6a993e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49171a-afba-4c57-8cd2-2d476403ad59",
        "cursor": {
          "ref": "1db80760-77f1-4fef-8e87-727f782b8129",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "162e294e-8237-466f-b5eb-0ad4d150f432"
        },
        "item": {
          "id": "5e49171a-afba-4c57-8cd2-2d476403ad59",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "417c7f6e-d86b-42a4-a42a-a710dec00edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42379312-aa24-4572-a84d-481ce21423f8",
        "cursor": {
          "ref": "6a7e84be-6d08-4100-be21-0bb882fd4046",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a59adaec-3980-4a02-87d3-85d021377074"
        },
        "item": {
          "id": "42379312-aa24-4572-a84d-481ce21423f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "75af1757-570b-4b97-a7b2-18da34866e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb0cf3b-8025-4f8e-a0c5-bda1bb4aec78",
        "cursor": {
          "ref": "b23e9636-53e8-4287-8dc0-26cf214a8a5e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e781979-c629-4f58-9c9c-26a127327fb5"
        },
        "item": {
          "id": "5bb0cf3b-8025-4f8e-a0c5-bda1bb4aec78",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "243ac380-27ce-485b-b5e8-f8cd85fa75f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dddf3f2-86d2-4a66-b78f-e8fd1fb4f799",
        "cursor": {
          "ref": "265d6265-4b3a-45b5-8d91-84e74365b81a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0b7647d0-5664-47dc-86cb-d45288c7d0cb"
        },
        "item": {
          "id": "8dddf3f2-86d2-4a66-b78f-e8fd1fb4f799",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "af803e3c-32da-46dc-99f2-a8c4b71f30f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4b1de6-0322-4173-b3f9-7f9bc7e2f228",
        "cursor": {
          "ref": "d46a270d-8913-450c-b403-3bea944a0ec2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d3ee6e3a-fb94-442e-80c8-2f9c6e853af3"
        },
        "item": {
          "id": "4c4b1de6-0322-4173-b3f9-7f9bc7e2f228",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b786ea8-fb09-4ee3-91cc-b65e514af7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6e3508-9569-4c62-a98c-6e5d91a6df33",
        "cursor": {
          "ref": "b43c2cff-7173-44a6-82d1-b730b072314d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7f1dd89f-4f5c-4670-9fd7-7b7011df5e8d"
        },
        "item": {
          "id": "ba6e3508-9569-4c62-a98c-6e5d91a6df33",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ab0e27b7-2697-4a16-b3e0-fe4992a51553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b09e2c-4e1e-4dc0-90ae-e541aad21308",
        "cursor": {
          "ref": "09605b41-6cc5-4bda-a8b9-5d52eaff7bf2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "13c1f9bb-0ca8-4e6a-bb4e-01fab381bedd"
        },
        "item": {
          "id": "71b09e2c-4e1e-4dc0-90ae-e541aad21308",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44ba66f4-4d9d-407c-ba6e-38c35646573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d030cb-cf39-421f-951b-24d779506e30",
        "cursor": {
          "ref": "cbd6a51e-ca59-4e99-8f52-e7b47b4579fe",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "44db1aeb-796d-4a47-b650-c332d34c2209"
        },
        "item": {
          "id": "e7d030cb-cf39-421f-951b-24d779506e30",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e66091ce-845f-4c2d-ad04-7b6817914906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98687980-5e98-47d7-8189-db704d5db648",
        "cursor": {
          "ref": "5310ddf8-afa4-4f64-a63e-d9388bd020de",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "105e893f-180a-46af-a15a-5dbf025e9b11"
        },
        "item": {
          "id": "98687980-5e98-47d7-8189-db704d5db648",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "88b6e2e6-2691-4c54-8936-c850a367ce92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e61773-7bcf-4d3b-90b1-7071d4dbb0a7",
        "cursor": {
          "ref": "e3b662eb-83db-4374-862c-0addf0c5d19d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "11429c3b-ba94-46cc-9c8d-ae659c36a7e7"
        },
        "item": {
          "id": "e4e61773-7bcf-4d3b-90b1-7071d4dbb0a7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b8b2e4c-f1eb-4e65-9903-a7e56401bd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515be9a4-dc56-44e2-b64a-fe21f16f17b0",
        "cursor": {
          "ref": "20da98e2-6c4f-448d-bccc-cd071a56cfe7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2bd68dc6-ee66-4af3-81df-4350763e80c3"
        },
        "item": {
          "id": "515be9a4-dc56-44e2-b64a-fe21f16f17b0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a219ab1c-9351-4a45-9b9d-7c5d3a2e3cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6e49ff-ec69-44ba-b511-72c20aa9b1db",
        "cursor": {
          "ref": "fe9ed9df-6efb-45f4-b2a1-9f67a2e80121",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "561586ea-f316-41ee-bde8-91f559d69ed6"
        },
        "item": {
          "id": "4e6e49ff-ec69-44ba-b511-72c20aa9b1db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f7197338-1e4c-4261-a2e5-437e5f50ca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a86f038-748d-4acb-9444-fa57acc5b428",
        "cursor": {
          "ref": "2451f75d-2321-483d-bd8e-47e2652e6b1a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0a526e44-8ef2-4398-9a77-8699ba2529fa"
        },
        "item": {
          "id": "8a86f038-748d-4acb-9444-fa57acc5b428",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bbd8caf7-1f70-4ebc-9bb2-7e8b2ff4b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c214752c-5fc9-4e74-bfa0-8e3226cdd643",
        "cursor": {
          "ref": "55baed20-c864-4d5e-9a03-596df1b07429",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b62ab030-c25b-4e1f-8591-c9da477a0044"
        },
        "item": {
          "id": "c214752c-5fc9-4e74-bfa0-8e3226cdd643",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5846538-6453-4520-8b22-e3f86398946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e672a850-8dbc-4cb0-ab69-3d27e443ba22",
        "cursor": {
          "ref": "4e4497bd-2c83-4763-90e0-d8509268e22e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "be59ce60-2dcc-4027-af59-ca4972934ae1"
        },
        "item": {
          "id": "e672a850-8dbc-4cb0-ab69-3d27e443ba22",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bdef2042-6c13-4bdf-a89d-460dee23644c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd6cab-553b-4e41-952e-5457c8d0b0b0",
        "cursor": {
          "ref": "d372a9a5-f229-44fc-93ee-461f64ba1037",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "52bf95bb-b3d8-4b29-8014-8ccedfc6d6fd"
        },
        "item": {
          "id": "b9cd6cab-553b-4e41-952e-5457c8d0b0b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22db22da-6dae-4d05-baec-c391faa56fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619064f0-a63b-4e30-ac05-ca6bea3fbd11",
        "cursor": {
          "ref": "6867e3c8-72f7-452e-8638-5e69d591b475",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f0251167-0e1e-4f60-94d0-d2347a1a50eb"
        },
        "item": {
          "id": "619064f0-a63b-4e30-ac05-ca6bea3fbd11",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "def29210-ac24-4a0c-b8db-86be48e12209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b333e8ac-3fbc-438c-8ce6-da7b669febe4",
        "cursor": {
          "ref": "8d4c355d-1fe6-4dcb-9878-59d6e6c09b72",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "073bf7d5-fbce-490f-ba3e-5e6448e3ba22"
        },
        "item": {
          "id": "b333e8ac-3fbc-438c-8ce6-da7b669febe4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9f8ff852-7d4d-429d-b049-592e2a5655ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e718f0-8bb6-4776-9fcb-3444c8def7e3",
        "cursor": {
          "ref": "6d8b5fcf-c721-428f-92fa-7eacc0a6647d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "78983c50-81a7-41b7-826a-4bd6d929535e"
        },
        "item": {
          "id": "d6e718f0-8bb6-4776-9fcb-3444c8def7e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "29cc626e-910e-4e5b-9de6-44fbc2c3f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a479747c-49a5-4636-b6fb-61d68d84db3d",
        "cursor": {
          "ref": "59e5742a-dffc-44a0-82f0-061fbd0f58b4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e4808161-99e3-4937-82b5-ff10235065c2"
        },
        "item": {
          "id": "a479747c-49a5-4636-b6fb-61d68d84db3d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7b26053a-3095-49eb-99ac-ad553f9154b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d6567-fe62-415a-95b6-a04059ada77b",
        "cursor": {
          "ref": "06f90fef-4841-4cf6-9762-3e032ae772d0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e952543d-9f6e-4006-9fa4-879c9100f7ce"
        },
        "item": {
          "id": "d50d6567-fe62-415a-95b6-a04059ada77b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d8d154f9-f72a-41e3-bb7c-c292079b50dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c5ca1-c12d-421d-9a51-92185b30b2f1",
        "cursor": {
          "ref": "2826d2b7-bb4b-46aa-a40a-1e3449bfff26",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bc730219-26d4-479f-80a1-5b3d2a4a0eee"
        },
        "item": {
          "id": "c97c5ca1-c12d-421d-9a51-92185b30b2f1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f8a3775a-c379-4733-82e6-d80127c0318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc34d3-314e-4e5f-8b6b-63bb8fe13812",
        "cursor": {
          "ref": "1d2b1d5c-15bd-4f01-b26a-d59d34f6e56b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "45176a2e-69a1-437f-b64a-f09be3b0b5eb"
        },
        "item": {
          "id": "88fc34d3-314e-4e5f-8b6b-63bb8fe13812",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "01cf9315-a707-4ce0-9d25-594b36c307aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdedd295-004f-4a47-9bfa-f396841ffa0b",
        "cursor": {
          "ref": "cd24843f-6f09-427d-8d62-3696400cb452",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fb297bd8-ebee-436a-b878-a38f2b91f7cb"
        },
        "item": {
          "id": "bdedd295-004f-4a47-9bfa-f396841ffa0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f64ce891-3b66-4f53-9dee-87cf9b49ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973153bd-8edc-4d41-b267-2842bd7c9112",
        "cursor": {
          "ref": "6927efc0-32af-42dc-8358-44079dfad25c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fc351354-7e99-4ae6-8e65-29902cb0787c"
        },
        "item": {
          "id": "973153bd-8edc-4d41-b267-2842bd7c9112",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6556f22c-82ea-4c51-9567-c970f4ff060d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e1c928-f4ee-4bd0-a190-1f0fdbd5f3a6",
        "cursor": {
          "ref": "052be421-3bec-4d78-ad3c-785825f20f2f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a7f90244-7ca5-47f8-a3db-a6183b43c0d7"
        },
        "item": {
          "id": "d1e1c928-f4ee-4bd0-a190-1f0fdbd5f3a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34edd4e2-1035-44cc-ada6-290a7b372c73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37096eb-58e0-40ec-8389-847dc98a4ca7",
        "cursor": {
          "ref": "ef9ed9ed-a3f7-4de4-82d0-668ceaed134f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2d47f15c-753b-41b8-820c-e9c4fea9373b"
        },
        "item": {
          "id": "f37096eb-58e0-40ec-8389-847dc98a4ca7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "edd47f67-1ee2-4666-b3bb-8e91f9da4e9d",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee638562-a85c-4074-98fe-a5a113e486a0",
        "cursor": {
          "ref": "20c3abfb-d7dd-4857-99a8-f9d4bd1d382c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0382556b-afd4-4402-81f3-e6394817c393"
        },
        "item": {
          "id": "ee638562-a85c-4074-98fe-a5a113e486a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "86b76258-16c7-4a28-bcf3-76f8cc63571b",
          "status": "OK",
          "code": 200,
          "responseTime": 4394,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "668a3182-0ee4-4c9d-a700-27f9f6dbc4c0",
        "cursor": {
          "ref": "b7299af7-19b7-4386-bda8-e5723a1bd846",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "88dda6e8-92e5-43b1-aee1-0401fa8bc9ce"
        },
        "item": {
          "id": "668a3182-0ee4-4c9d-a700-27f9f6dbc4c0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "aba99c33-365c-41b3-ae80-02da0b995907",
          "status": "OK",
          "code": 200,
          "responseTime": 1954,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9489356-adc3-4ddd-8ab4-fd284d964aad",
        "cursor": {
          "ref": "20ed20e7-8a1e-48c4-a908-b420ff6f4405",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3077179b-606c-4608-a8af-3922f66e82a4"
        },
        "item": {
          "id": "a9489356-adc3-4ddd-8ab4-fd284d964aad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ccaa108-f61b-4be1-ac1b-cc1ca04d785d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9489356-adc3-4ddd-8ab4-fd284d964aad",
        "cursor": {
          "ref": "20ed20e7-8a1e-48c4-a908-b420ff6f4405",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3077179b-606c-4608-a8af-3922f66e82a4"
        },
        "item": {
          "id": "a9489356-adc3-4ddd-8ab4-fd284d964aad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ccaa108-f61b-4be1-ac1b-cc1ca04d785d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a28dff8-411d-4b8e-9f43-5ba8c40198ff",
        "cursor": {
          "ref": "26248b3a-2c34-4d6a-b03d-4a42742b33d4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0ea3241c-9a23-4cd9-a757-04ba97a467b6"
        },
        "item": {
          "id": "1a28dff8-411d-4b8e-9f43-5ba8c40198ff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c13f4169-a9e7-4e7f-b90f-5ae678c8bb20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70849760-7126-49e0-b86c-131f159be4c9",
        "cursor": {
          "ref": "7258a421-5ba7-4246-82c8-64a585a60199",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "25fe2334-e1a2-447f-8845-e4a32cc588cb"
        },
        "item": {
          "id": "70849760-7126-49e0-b86c-131f159be4c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c1adf2b-b4b1-4458-b9ca-fd62ee042f81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}