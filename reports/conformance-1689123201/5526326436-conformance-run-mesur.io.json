{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e4718271-f275-4a29-a03b-3c55037a77eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0e63d069-7675-4e30-b38e-ac367b3f3210",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffcacc81-004d-4ad1-aae9-3db3e7379cb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5b3c83c-0033-4e77-b636-f4afd52b1cfb"
                }
              }
            ]
          },
          {
            "id": "6c3614fd-87f4-4cc0-9458-2f24666fc0de",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "875aa074-b635-48eb-a6b1-acf7be0cea32",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c4fed966-53c7-4032-973e-0fed0d4c3b33"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8d343244-d41f-4ae3-a5b1-d1572b8bd079",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0aee1f4e-fa5c-44c0-bb10-dbb63f2274e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fbda4f4-e47d-4ca7-b141-8a010b249529",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23e1f326-bc35-44b7-b6cd-3d787908556b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7f0ca5a-6037-4656-abda-787b07c98044"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8cf8d1e-93bc-46a3-894e-aab667422e37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c8ce8be-38dd-46d7-87ce-9bbb7426d9b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13a81ce1-fa96-4fec-87c4-05cc025df142",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49bdec64-7f94-4533-b805-ce581dd63fce"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f7af804-ed31-49b8-88f9-1de0bf43b9f1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "56bb6579-bd3a-40cd-a2d7-6b49a1b91678"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76b12b2a-0732-4fb1-b969-6960045fef27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f357207-ce74-4aea-b419-425f8cc8ff4b"
            }
          }
        ]
      },
      {
        "id": "366ad7ba-1cff-4f4e-bcea-1c8742c08224",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bbb8801f-0910-49ed-95bb-dfe51a2d3e46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c69ac1c-a0e3-4ed6-965d-f52cce572578",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3fdc4ed7-fd28-4649-a476-75fd88aab011",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cf2c54-dbc8-47b3-b700-bfa988a85bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24052b4b-fbdf-4aab-bf4e-02f1adcca06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4495df-e62b-4689-b15e-5c8048e2d7f1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55053ef0-4d1f-4f2c-af7c-d37b08dffe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae6a7ada-e536-49ce-9b20-3b8f8ff987f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999dc3a1-e9fa-42ba-bb4d-094426d4c447",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51653da-a1de-4255-ac82-eec64c21c052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "263155cc-ed7c-428c-93c2-b5fec638970d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edcb91f6-09f5-481a-8040-906fe7f5fe9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f0f477c-1020-414e-8880-296457e7f295",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33241fbc-6de3-4aba-8f78-ef1927a927d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52243e2a-d6ec-45e5-b044-20071aec3723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b94cbf5-5e0f-4216-9efc-829e43f50c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5626ecfe-7561-4c7b-9291-a6e05dfb1fda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f413d80-6ab9-4089-8c22-86b6fd647d8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b675ed1f-02d4-436e-abf4-1449d6a132d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff9768f2-34ea-430e-bda9-2e098b4905e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3c7eb46-2828-4724-a6d6-b337fb7ad873"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ade4499-57b2-4333-a388-71bea23f777d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e8f2a603-bd3a-40f4-ae3b-4cec5cf37aca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e772711-1803-494f-bae8-60e4bd5d6f09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "242632c1-36a4-4872-bb66-145e038af21f"
            }
          }
        ]
      },
      {
        "id": "594156d8-4a9a-4908-9fa8-7be42a2b14d1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8a39a9f6-ff7f-4de4-af9c-1f2ac2a4404f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd5c6810-0627-4b3a-90ab-0b1921be2e27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cd537c7c-f043-4194-8b09-9b8c849da385",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff8ae18-d565-4533-96a5-87166bcc0b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f091ab-5b0e-415f-838c-4547db5215f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a42dd12-f563-4e76-bfb2-4ca37aa38726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b924ad5-ea7d-4504-a6e9-f51f8147835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01008377-96ce-4561-9b06-35a47bb23b99",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca020a10-1b6a-4882-949c-725822b511a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a7f80e-1a37-4be3-8b21-002c63bdbcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba25bebc-770b-4cc5-9ae8-681330a640c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb2736f2-c500-4dfa-9414-35174cefe811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90baa1-9e8d-4c3e-aa8d-5eaac5bc39a5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4d0e60-64cd-4dc2-8707-1205ffe68f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8515c1-4115-4996-9573-a18b9dc347fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d3db0-b600-4f4a-9f14-2457d97e9a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fcf599-e7a4-41c2-bef6-72761f47321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc35c6a-5030-47fb-8a51-edcff1fa38c6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ea8860-6d29-4fe2-b9bc-7ae50e5d7bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65109d58-cf8f-4cba-a388-fa2a5f90eea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf356a-07cd-4688-8dd7-95571be9a6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0deefd0c-7f0d-4b55-8d85-f4876f87f747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5596f24c-867a-4854-8e94-d09d53fa5590",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb1bb02-89da-43ac-86b0-bdbb84b5c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90427ca0-517e-46f6-a5d7-2971284ef5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ded0fd9-82d5-4fcd-b65e-f2826bcc13dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ff34f7c-2d78-49d8-9ef1-50d887aad13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dd4f4d-c2dd-4c56-bc4c-0589f9b60942",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a8b755-22af-4d43-a3a5-dc9bfe6f0c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbe4423-ab04-4b61-aedf-2f5d66a58803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5328aa9-ad81-4b36-96a8-c021ada86ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5924b4d0-77ae-4f4b-b56c-df5c7f3546c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa656b2-c8f5-4c3f-bdca-21433bd9df5f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89135fd5-d5b9-45d4-a2ce-fb55c3a143a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bfeb75-f836-4d5b-b8a6-57bbcdcca73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7829e05-b0bc-43bf-a162-99d4bb19042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6af7d1f-419a-4d9d-bc10-9d89dd456f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a7c83-85e8-4a24-bd1f-95fdedaf1036",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf5dc9-f50d-4120-a8e9-e4d2a8b696f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80665a8d-9f83-4faa-bd30-0e759c7457f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ca5c6d-52e4-4c04-bf35-1778603fae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec78909-197d-4059-ba10-67b569e808a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2860ce50-89f7-4885-9540-44f3edcb1248",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ca2c4-6ea2-4290-8aca-ac5e6f2a9f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ea0170-8fec-42be-8b83-63d8c84bd20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59b8d1e-4b5e-45e2-80d5-43c7d4494a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17743c56-90e8-4699-b363-6718e9295198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146bb4ec-2407-4dfc-9125-902accb6318e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b999a5-3925-411c-a835-03292adf5471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a266e0ec-2844-4127-b589-6e5f73e8deb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7521c6e6-3839-413e-8916-03cbba250cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "807b3d9f-2698-441b-9c4b-3a4b7f7b9c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eed75c-1ed6-4157-8513-014075bc5e80",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c721ba-be2c-4319-97d2-e1818cdf3ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442a26a0-eb62-40c4-9c5c-5d1b22ce9a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8b418-5d0f-43dc-ad4c-71412499daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1511ee03-a51f-4957-8728-617fba9f3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32bd754-f024-449e-8b9c-7f318db76235",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed6bae7-cfd7-4507-adde-6b07e46f5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8112a7c8-3ae7-4471-9372-48072f044ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f96731-eaa6-4789-942a-cac6154eb65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2918eb21-5d75-4d0b-ae95-16d548378d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e835196-84be-4668-be37-e97f7479e83b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911bb848-cdc8-4732-afe7-c29a28ed0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c61d531-78d7-48e6-b943-a4636fded2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df72da6-2c52-4f36-a73d-ba9d46a1b1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8a21e5-4a88-46e8-8438-e43cd6d4d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa1cfb7-68a8-40bb-b89d-f99ee6a0b132",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e337acb5-e352-40a4-9adc-f7fe0cb8c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b19959-6e89-4906-9c9a-a4b5495448f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303a3000-65f9-41ca-bd2f-c6261f41863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c325cbdc-9e76-452c-b1d7-aa3590e56eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f594917f-bd45-4ab4-9bc1-a582ae505c49",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a70d4d-591d-4b23-9933-6f0dbe9c7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8684ad-b203-4851-9aa7-9a3411b62863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4f8b2-aae8-428f-aba8-c636e100aea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92365333-9e99-445b-ab3b-39f747c4381e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5045fa0-25b9-4dbc-a9b0-9d7d58155a37",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c96e190-5a28-4fdb-b598-de2ec76b0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf955b6-1198-402a-9b9c-5b6e0414de5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340367b0-ae53-4b57-8202-49ef7f496de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f4ae2ff-a95f-451c-a317-8fc2700d74cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7135f5ee-08c3-419d-bbf5-90a3dde18d81",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d37efe-faa6-4c5e-8593-a7e50b102c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d576c2-0fdd-42e9-bafd-7161902a166c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf66338-c53b-4393-9566-259cd7685d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "982bb7da-e810-4e8d-b66e-6fa131a4f311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e2ba2b-2e9d-450f-b6d1-c6b59678312d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7521df66-f06a-41e8-95dd-c4258860b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c16e06a-97f2-49c4-bffd-3cda87bf687a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb815a90-301f-47d0-b503-88a2fb18cbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c61417-0444-463e-8a53-12e295848c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c50d0-3002-4b75-ba14-4ec56eb33340",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9ebe82-7187-416b-bfc8-87f51ec9b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91258dd3-fa39-4410-b38e-c468f6524c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8370bd7-2c54-43cb-a479-5c4becfeeaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84108fa-cdce-4659-b8bd-403ad63aefd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b787d4ad-186f-4bb8-97ac-5fb47d49cd44",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa0eaa-67f2-4f25-bfdc-922a9b6cc859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa38d94f-453e-401e-be3f-6a9e2ea14971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23450381-69dc-4273-aee9-d026bf2ce9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dd90bb-5d91-426b-8212-14e0df387317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb72d37-d45c-4fdd-ab14-6924780ec28d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c2709-ef5a-4c52-8770-30b5fdfb2c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e115c467-891c-4391-a8a3-10c6d6b07bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049f1fda-4058-4804-b396-69091e2ee05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6e5280-cd0f-4a5b-a99b-110abb730744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88ffca7-e0b3-4254-8426-103e15c1f06e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e8f6f-5e03-4703-b186-54773d672e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca5b270-c37f-4012-be06-bb12c4721dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e05f53-3391-43e6-baae-8084728fb66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adda8715-d4c5-40d7-b25a-fbf381b5b3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d94aeb-edb7-4b4f-93e2-4b908e692d02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10575938-fe45-4c15-827f-bd9128000f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaaddbc-95d3-4c82-bb1d-674a985f898e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8faec89-c747-49c9-a663-f410b2edac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b72a8e-f3ba-4670-9528-39b9a1a2c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d31972e-f99c-421a-9e85-b6dbb1c62886",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a108003-aee4-42c1-876d-d2dfaf159f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e1237a-d23a-4ea0-80fd-1d32d6ac0ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b3e4e2-3ead-4256-b65d-cbcf4cc04813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3afbed54-5fa9-4ce4-afef-1df12bba264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931a3519-9191-4a59-bba3-2a9cacc775bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caab0bd-5e7e-4d85-bae7-2917cf6d75b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630e7f67-58c6-40ed-8f62-03063e806202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773af891-8906-4df8-a942-dde4b5decb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a289509-0645-461a-97f5-8577db1f926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec720b9-5893-40f8-915c-dd59a142b80f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5f7b70-dfe3-448a-9e4b-6169969d8c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d7c2e1-91c5-41a3-9ee3-abe7c5bf6371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7775c809-751c-45f6-af34-5d705217029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc590120-554e-48f3-ad41-33bbb3b06eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de6323f-ae90-4e4d-9109-b761d14019f8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cb071f-c173-4a8f-8784-f8b81044d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1236e6b-adde-4862-a75b-57490fdeeac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133c62e2-46ee-4cfe-b7fa-7d998bbc527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d3e165-b4d7-4374-a60d-546ca31520cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a312cd4-98fe-4caa-a603-cb4081d8ba17",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3648f944-df71-47bf-b097-a2870ce6106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a31065c-76ca-4b37-8caa-f73e3aa6eaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cefef6-6dd2-4782-aaf5-a56f5d4b708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9f0bee-8f6d-472a-b466-60a4af318553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f9a9d7-5f2d-47b8-8fa4-4b68ee8e0fc6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49310a4c-e44b-46eb-b133-871de9941900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695a1f71-be24-492c-bdf4-b99e737e74f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac501c-c166-4383-9897-c1397d008c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3281eb-8cba-44b3-9aa9-61fc27116685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d32040-ede7-4a09-80ae-9fd4b63552e8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1e320-9788-4379-8f6d-87bf08179424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00f0958-412b-45f1-b38b-38a738e52fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a92474-7e8a-48eb-ac56-31ff95f4e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee818361-b196-41c5-a9d8-1f171779ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faf0bdf-0f47-4863-b9fc-9111af8144ed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71cb4a1-d612-4030-9c45-2d73782e8acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf0f87d-198a-4b19-a6e8-b76a04aa0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b27a1-b50c-49fe-9cd6-92970ca53bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e507d0b8-1d5a-403c-9e1a-c8ab69c42225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaaea82-79ed-4940-b8e2-49a3b9054493",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd6b01a-d0bc-4026-84c4-c0a664212025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa348d93-f067-4da4-93b1-9748215cc798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04eb8cc-56ee-4e3b-a15f-ec428a44824e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07f5a252-6882-4339-bb16-23acf606aa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6f78f8-9ef9-4f38-98f8-76cebde5d4ff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1597d5d6-8cac-4a19-a249-77406bc0a31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a197d33-82fe-4d6e-8468-6875c722a72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ccaec4-d10d-4531-94de-3ffbfdf6aa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4137f3fa-5b77-4187-bbcd-0d242accd4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fd34e6-41e7-4927-8c99-9d866978a029",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d47ca0-cabe-4570-8c93-68e3517a47f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7fc63e-fa28-4b22-836d-bd3221f9db91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bf8d0f-8233-4607-8d3e-91896554aa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2085ab4-9ebc-472c-820c-724c32cf995f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801834d6-0247-41f1-9e5a-124522b9dcde",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ac39f9-cd82-460f-a258-e2ee1d7dfeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ca72ac-a941-4c4c-9239-44f86ddfa723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba5fe1d-7f89-421b-b28c-396c736c02c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b42ed3a3-4dd0-4ae1-9272-b77d1d735c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337d4259-30c2-4755-b614-d0de67a44859",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c9f77-07d2-44ea-8534-619655e96007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5f3c11c-c844-4fb8-93b5-9d77002c8e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411605c7-6eab-4c78-bac8-eb37b0be479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "201c8f49-586f-4163-ad5f-9a785267dda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f3a7e-9986-468a-8543-528c6487c6f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eeae35-bf34-40a1-a9d4-cfc12aa78ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f5869-deed-4411-8015-3c13d2d5c015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7848d7-d65b-426a-b2ef-4e7d4e8a7986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "003b67d2-2747-411d-994e-13f4c8e9fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea61655-19f3-4399-96b3-61c6f4024649",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046203c2-9110-43ab-9357-b66ac4009485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5803f080-9fd5-4e52-ac5f-96f3fdd28337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e620b0a3-604c-40ef-b233-04b30224cfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b56acb5c-ba60-45bc-bf59-48c0841ccae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94bf3f5-2514-4a86-91af-1ec9b74e7201",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73d202-636d-4f13-9fcc-87f552622014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f968647a-f08c-46f8-809d-8e6dab5d3975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a9abf5-3979-4e3b-b5c6-cb1b47247296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a97bba-2a69-46cd-abb3-6338940d2abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb93c72-74ad-40a5-bae2-6505f3abac9c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af8d7a-ffae-4103-b703-8320194d9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92c973b-1d60-4881-993e-c6d692b6a301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67565ef-30ae-4e6c-85f2-310862f486c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e909d2-4193-4c55-b299-602d46467dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9668cda2-de9f-4522-ae3b-92ffe97b6aa0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8860a99-8794-4f72-8a01-135c07d7f9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ca2bb4-ac45-4785-86ba-bf6d47902855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dab1341-208f-4d2b-9360-a3901a586e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "934d36cd-bdfc-42b2-8d8d-7cc9425e270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bb593f-5102-42fe-8438-5eace95118a2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3063f20-a019-44cd-8503-ca20f43f6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaf23d8-42e7-4bb7-894b-105bdddd5671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c400783a-3d64-49e3-bcc3-df2ae393c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "411bdd16-1c72-43f6-848b-34309dad8c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5cd46-f945-43bf-aa3f-d1ef60f88cdc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a1d5fb-d25d-4992-b75e-1fa4d7ea8011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60827ff-f773-43ca-bfba-ff2a754c1360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf2b01a-8697-4b24-97da-88f1cd1c369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "46ad493d-820f-44d1-abfd-e8c48971aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8592fddf-95aa-41ab-9c3b-4a42f8eaa095",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e0138-98ee-4987-9622-9d1d441bd696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f03989-3ab0-460c-9488-4a1df0f9f7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2155b42a-353e-44bb-9cfd-c1d0993e2447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5154f860-f021-4fca-bda3-653a8043dcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61714d06-2848-4cf4-9037-6ee7ef9633a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0b5474-9e07-44d0-9703-c7f47385dcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9685be57-7a87-4a20-b6e3-e6650217c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202dbe29-4f79-4040-b14a-2d72ba965dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0773b226-86d6-4802-abe0-0dc5012fd108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d2cc0b-5ddd-4d1f-976c-735b572b3b54",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395d5741-93e8-4eb1-bd0a-009b11554728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64aabfc-979c-4aed-85eb-ae9e6b3786ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a48369-f038-4667-b291-cd94d7b3cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15f41c5-708b-48cd-b230-90787cfe4f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0fe03f-14e8-46f3-a359-f009dd53eb05",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a84a2b-4018-4ed1-8056-394cc6cfbe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5a270f-9337-4b2f-9058-82958d9005c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f600da-445a-46b8-8bb0-463075beed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a8ca76-6747-404f-a3a2-928ef71aedc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe9bf77-0a82-4d12-89c1-10ff1eeec7ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891449d3-530f-420e-abb5-747e030e80c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8d5d96-3acc-45fd-8b82-07ae0cadc919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ab04a5-c928-4401-b0d4-456fcaf4ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d2a110-7110-4384-9a55-20931b39b3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cf2111-0b43-4e67-93c5-d57b522c965a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b0ed23-a0cc-4e1e-a3c0-d147adb6d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbdb8d4-2169-414e-80d6-58b14e673468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842be773-117c-4a94-a3aa-f70b16597051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0715f5c2-47f1-4815-9cf0-f3f35044bec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788597dc-fb91-4bf0-8cf5-7c4b1fcb94ec",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5102c7b-145f-4d39-a3bb-b8f3566d9fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c67a9dc-a6bd-4646-9953-da759f20994c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a71b639-4ae9-4010-84a6-66ccd9889165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96bc9931-62fa-45f4-b319-b84449d47629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d862bf3-96e5-4a50-b832-20ecc9a98dad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12423f0f-ef9b-476c-9967-668553777ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4b40b5-c30e-4f69-bf86-004b22e1ce00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c2295d-78f0-4b44-9156-577e5c08b8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b330eb93-af08-4fb8-9908-87c3137c6e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae62fa94-3438-4ca1-bc43-d69f410960e3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2867b4d1-93f2-4754-8446-513edc11894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b7812f-fa33-4b8f-af2b-39dc95186453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6dc8f3-a093-4a1f-a82a-d8aac6a307e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97147aca-aab6-47d8-b177-69ad0c86e654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6305519d-e801-4cc2-a344-79dd32b9f7bd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06888399-da50-4bc0-bdd5-93bdc56cca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daac6f6-42fc-4a42-953b-dafb410e8436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7549ad85-2856-4e13-928d-90244d5eca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b50e7a-d200-49b3-8589-171c799a1065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721be98c-3b17-4d1b-a387-c3202f76adb3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc7038-15bc-4ab7-842f-47f4349c115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa0fb2-0c78-4b72-889c-53535ea15ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148fd3ad-afc1-4af7-b31c-87aa07749a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57244e2c-59d5-4f15-a69a-9b545ac48e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d9962a-c332-476f-960d-198eb115aa37",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e4d209-9402-4898-9c6c-d16564859e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992a85e7-458f-484e-b821-ae8f612fd78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac00e244-9b86-4f7f-96fa-462e1d00c48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2701f549-ac43-4f26-8107-cdd65e0f0fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b6388f-90d5-4fde-98d3-f79ac9c5a659",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7521b125-bb57-4b17-abf5-18337c62742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9236edd-cc57-48a4-8a2a-8df6b7aede9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0573e92c-4f15-452d-9f56-435428cce002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "13c81457-1418-4d4a-8a00-5c73559e80c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d6e495-d50a-4df6-83ff-d84e965d2953",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8c73dd-b510-4d23-8193-87d924a1b800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c422528d-75f5-444c-8f1c-e111634894fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13458eef-424b-4d33-a09c-0db909ec4594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0843488-3949-4b50-9765-24e10e0b0f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa995cf6-9aed-4aa3-aef6-4105f6f2eb15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afa8d1c-00cf-42cf-9e9f-f65ec804113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6e3480-2588-48e7-8527-15d21b36779b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02ad349-eede-4d15-a774-fbe463c84fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79b62bbd-8668-4096-9d4c-a686aa87d66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9d0180-9b34-4f57-a6e0-7eeba371e94c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2848ced-ded5-41b1-9565-1c8c419bc208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1794be0f-d6d0-4487-9876-298ef9369330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d256b82-6dbd-4566-b0de-ea739c1ed369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2313a8bd-87d3-4e15-b20c-7022f76a8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1941eb4-7c59-4bb2-85cd-6efde0d4f208",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c77fe96-9bf7-4a5d-9211-13b965be9cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4090ee30-78ab-4955-9917-5e6635706e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0624e079-5df0-458d-9f71-7f0ab1c970c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42fe187a-7f4a-4dc7-8164-1455797376f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a90e9d-cdc8-42ab-a41e-17f4109d00d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80e48f-6873-4db6-bfef-b2d0c297c04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c94d6b-5964-42ac-a639-f0e0bb948720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e9f773-5b64-450f-8a29-61e5047c6a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d412cb8-c65a-4a6e-9af3-2fe9063048db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f977e-2ada-4b14-a228-c958731d3be7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e407bb9-584f-4742-8eca-ba7b5bbef2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a5754b-15cf-4812-9bda-f7d6da35a00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e37fe62-4b9a-4ba2-a5d6-c4d6cdd22c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8ef32c-b5ea-4d96-b52b-9acd72acba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b2997f-4abb-4a83-af08-6ace0b37b0bf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd2e1d1-3b8c-4ea1-b127-2a148c67f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2717e09-c8fc-4c2d-bcb9-1b15727a1f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887b846b-8270-49bf-bd24-29510b2d1605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb51c11-569c-437c-afc0-5a9022f34721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953554a-fe93-4494-a60b-122eb2a5bb68",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bdc72b-638d-4bff-93e5-a16ee160288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7e9e5c-bbf9-4ed0-b419-01e7f785fac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d04f85-2526-40cf-b3a0-b6a2ef01e6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88994b6-5bfd-45da-b2f2-99fb202291e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f170568f-d1d6-492a-a36b-12a94be0e4f0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07ac55-009a-4165-b397-5df344ad7609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a194e0-caac-4b95-b869-e6c3b58693e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a708d26e-506b-4c66-862e-e40f256d5cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e51361a-c766-4695-bda4-a4cb85d756c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa58b50-3d36-4422-8683-c6da6531ccd2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1838af-5690-4c22-8ef9-05a4f32ccf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ed658f-69ac-41c6-9f9b-6285ca690e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba47c709-579b-486b-b641-aa274124b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a09ac96-bfcf-4311-b9bc-48e44fc159e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed69ff4-d440-47d5-b9ed-aeca7509a010",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e540a2-5ec5-4f53-8d91-a522482d0ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6e8ea5-12e9-4f04-8aef-3540adeb21ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad3cbd9-fa3a-41cc-9209-2f8f98926c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "079fbeef-6c42-4982-b30e-fcd267bb0645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ac0e4-bdd3-472a-844a-c46133e9577f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70f68b5-c166-4645-a70f-6f7d21e093f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c809a991-565f-4db2-8b11-0667148eb2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bc491c-5df4-4476-9f63-a38a0551b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bfdd77-70d5-4982-ba8f-ba8e33239dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4221028f-6439-4232-9c1e-cb9790de9557",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e31a5a8-7180-4bf8-a472-720b6e30cf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229300e0-62e8-4ca7-82dc-22b874dc9101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dc836e-bea6-4495-bd49-31cdcf6f5ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bedefc7-966c-4aa7-bd07-2f2d89249ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f264dca-c964-4aa6-80d6-e62fdaf212af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee6e74e-dedb-41a5-93e7-6051e582cbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5010177c-3547-46ba-aecd-d6681aebe7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54006742-a0ea-4f23-a399-9efaa8e776f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d20fb72-f464-48ad-b013-58298a39b9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae75c4-d8d9-4b01-b529-dd2a776f6ce9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d351e7d3-c3cb-4238-8bb2-84f190810be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f440cdb-a546-43a4-9050-77b8a6cfd5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe74938-dbae-4060-a886-9f6a8836d91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ad4a03-8640-4883-9d20-fc445ebf55cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6dc5b4-4039-4550-b828-db9f2d823d44",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94918bc9-3aa9-42c3-a395-2343c11a3dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ff7094-8902-4390-b1ef-b03a66ac45e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5ae4c2-09a6-4759-8469-df6c1dcdfbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0765cc7-707d-4c4b-a5ad-03ca9307fe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33742c1d-e92e-4594-bfee-b0c239a06fc1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc7af0-1970-4782-b0d9-e9d265837e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fea176-a8a6-4e45-b9cb-dd9281e00fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1befb0-04c2-4dd6-8689-6606be2d7380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0774c2-f7d0-4d02-b5da-47e32eed3bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14546d5-6d2d-4b62-96b8-030b505cf157",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18aa6e2-2eb7-44e0-8144-90506554484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba5836a-f9d3-4105-9ca7-84f18c4f9232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3c7ed8-ea97-44a1-b054-add0b35f18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b199e54b-b4a2-48f8-b38a-4114ff26b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e1f2f8-c8b2-4261-a77a-6fac2f631dfc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd091e-521a-4f4e-a8c1-571c35c5bc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa8252c-7767-4022-9afc-84460673df26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a914d2f9-b24c-48ef-b266-6d7f1594fc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d1ff07-9cc8-47ca-b260-8371d0242343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82907a30-8ac6-4fba-8ca8-746890170012",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d519e0e6-8a41-40de-8fa1-e823e26e28eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a155a1-8747-45a2-a866-fc2ddab55393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bf48ce-8166-4b04-917a-bcc3d30e5a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19a96c0-4def-4bfd-9958-5c605d158480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c33698d-905e-4297-8414-ccd2fbd8e227",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d347bc13-3995-44ab-ad93-706eeb2f13f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253e0562-d6aa-45ee-ba90-1ab84c082836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ff8817-a535-4006-adf1-1e85751ae4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cc835c-4af6-428c-b4e0-b54dc7f87d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c09e33-0b30-4a5d-b3c1-8d3f1606e157",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de43f87-f853-4128-81f9-a850c68d6a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbf459e-7a4c-43ff-b517-34cc2f1e75ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e8f12-aa7b-48c8-9292-ed08b7b97cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22ed194-1ad3-44a5-a157-7b8c26ee1aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0993f4a-1878-4f26-beb8-bc327d0d33e2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a967df-cc1b-457d-a374-e1aecf4b79e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53ab481-3719-407a-9293-26269ace5e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62879adb-0e4b-4f62-93f0-7cdbd5d35b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac01292b-588b-48ee-93bc-4b00a509d88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad961ea-9c8c-4071-8a8e-033ceef461aa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cfb514-5c75-406a-9c68-2cfcae32e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9f4929-afc5-40b7-82d7-6c604a8009fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b9ba3-5d18-4fe7-a37b-7025e81ac4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4df6ea02-1e25-4677-ad6f-6e86488e3eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cad732-d5e3-4a31-89ef-3d1845994748",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09e154f-be46-4c5f-a760-09e437484048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6827f2ee-417e-4e55-9926-92cbffc133bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe3e55-3bc1-457d-81eb-cae22cc75a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bb2ad5-ad83-4a68-b4e8-d79b70d1ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63e4d59-90b3-44fb-9db6-f5f057518702",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f75b9d-5b08-4187-993a-52db923fe6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a9373b-3cd7-41f0-968f-964c35c5ffaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abec7a5e-2bbb-4258-a003-e5be1e5f9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1bbfce-ae11-4046-8b8a-fcf0c7497603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac42560-782b-4002-adaf-4bbfec09ecbc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bd2d11-4929-4341-ae7d-1932c1a63908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33380fd-e768-41c4-a5a9-834bfcdacfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e1f963-648f-49bb-a6f5-27ea90a01787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c83c0f-11fd-4db3-8de9-12220c0bdf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05eaa49-3361-44ce-aac6-f4299a5f6a43",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e672f755-3446-4784-b298-fc15bed7b7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51585c87-9616-41ed-a0e6-e2057de7a037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d3e1c1-93d3-4c46-91d3-332354fad4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cd6593-ee97-478b-b32f-c38c5679cb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b1fc14-0dab-455c-b377-37d0c2cf0469",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d296f642-c174-47de-a1a9-f979503770cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d8d5f2-c122-47a0-b60f-a7a18536ed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d189c1-3598-4ee6-bec0-c3b94ca7c4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c131f4-9a9b-4654-b74a-eb38fb0d49e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74e4e85-833e-454d-a7fd-048c685a0a9d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b34bac-ee15-430b-8927-6eb524ea0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ea0a01-e778-4d7f-b49d-19ffc5b0e66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b599c-85ab-4e65-a531-2fb685b5c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d709b9bd-e424-44a4-82ec-0b96c0408d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8596ddf9-99d9-4047-84c0-4b3782812667",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffb944f-e14a-4f7e-9f87-14c89612510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d15265-5394-4b75-8eaf-12da2d2b4ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12517fb0-15be-4416-8e67-de5b39f70d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4afa8437-f47d-4ee0-ac88-6cc62b01c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f543479-113e-4a31-a499-eca673032fa1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bc1607-c7ca-4007-8e55-a0bdf5340e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7beb91-5ae2-4e43-855d-06c3ced672ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4af2c1-585f-4879-9dd3-46a53e44d5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31ee044-e0d5-4153-83a9-091d07e0e8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd6958e-0ef5-4490-b27d-8d55f2ff12a3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e0eeb2-803e-411f-9a42-cd39d0252407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a56f32-3e58-4814-b049-0438a01190ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6ecde2-9ae7-48e8-9602-cf07f18e6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7ddcbd-3705-4a9a-97d1-59ff5b79de25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8d1119-d262-44d9-a1a7-c391b6dfc56c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7274fd-1fce-424f-b0a2-c26750027799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75934de-fc33-4066-87b3-e4da6a491f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc07435-eb8b-43fe-b114-f835df9ff4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76b8a931-0d01-40cb-8b70-1af48e6e188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc7ecb3-3919-4095-be2d-0ec9bd56c3fe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef8ed3-b6e6-4a2c-bb9c-933c1e2d3a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59414807-888f-4d27-a402-fc1dbcb24b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb4b9d5-038b-41a1-8203-b45090fb02c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2ebfd0-90bc-41ae-879a-05a9753b3ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d8bf85-4a7c-45fa-a5f9-2e64576a9816",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53347fc5-4c84-4781-8680-717b49c2ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "26663e26-8d28-4c25-a4ec-91341201981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd21087-7762-48f4-9c3c-17685cbd16d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e18a6f-6186-4c36-94fc-1c9d589feec1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eaea20a4-3f17-41cd-9956-ae4a9557f81e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adca1c8f-5ddd-4b3d-9d00-208cbe91d195",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cb2cdf-9b39-474b-bff2-f209cd5c22d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06a5491-12ec-413d-ba24-13ef22a65ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a40c5e4-d7e8-4aba-bc21-69ae56f331a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed09e0b4-da65-4e44-a388-127c738951b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ec76ac-c3a5-4fa6-9a57-1020ee51c2c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdbfc848-d7fa-40f1-bb96-bbf4a1f77fd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e55cf496-0709-40d9-82e5-ab357050dbdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08d78962-79ae-495f-ac61-a6ad6cdcd42b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d83e5d2-b21d-4a6f-a49c-38bd2636fbc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91d13add-3a80-456e-8685-811a48ca091c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f404c8de-e671-4c64-818b-22a93d899b33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f443e667-5707-400e-9685-763d2ebb2654"
                }
              }
            ]
          },
          {
            "id": "a83a7d2b-61c8-47cc-858d-956ff0d28d50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab572940-619a-4c05-a82d-65ded63ec2ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15d0373-3b3b-4178-aae5-6496ce41094a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e33fbf77-1c46-4198-8fc4-4d0fc2408c5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2500f18-a5d2-4630-9a2a-7b373349f83b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1336ba3a-6aea-49a7-895c-784e48a8d48f"
                    }
                  }
                ]
              },
              {
                "id": "ef9bbc18-50d7-4832-a225-f05d19e37983",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd5a56bc-6a48-44d9-ac10-5451d0c4292e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "690604e4-d94b-49a6-b323-9aa2808e4967"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d364b0d2-d9ee-4eab-8fc6-163c7ef09bbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56fd3c3e-2957-40aa-819c-fb9532ca47a6"
                    }
                  }
                ]
              },
              {
                "id": "15bc626f-8db5-450f-b915-992c5c788d9d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "910b4910-328b-4a06-b36a-abb9344a6231",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b992077-9de2-460d-a83c-df527b285475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b821cb0-29f1-406d-8545-943c46ea5f53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa903264-3846-4699-848d-0ede671e121d"
                    }
                  }
                ]
              },
              {
                "id": "ba0a3c69-41b5-4ae7-a52d-c4b1a28dd81a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65f1c738-d669-4359-9383-2682ab156451",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "295fad3c-d2d7-4833-8d38-32048851df8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e149318-e4d6-4457-a382-992f053943c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0f98804c-8856-48ff-8d85-ad97cde6e3f5"
                    }
                  }
                ]
              },
              {
                "id": "8eb071b0-c520-45eb-96d8-ad3797971a7e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b1f64f6-6467-4cf8-8c26-2d52e1841e65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "510a5873-5962-4807-a66d-4cdba0e5d98b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc65029-00c6-4d95-848f-288f06236963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c53b8790-bd9a-4383-94b9-1f65132036a3"
                    }
                  }
                ]
              },
              {
                "id": "9cee5c6c-64fd-4428-a499-509031a5a1bb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f6efc1-5c41-4cb4-9e1c-c575a8a8fe6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35033e0f-2b8f-4c60-b3a0-264a182c8aa0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5075871-a293-48b2-a146-cd2a8a16408d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57cebbb3-a39a-4c7a-ade1-711e02e9defb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ac18235-5a50-488a-a8ad-97c9de572f19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ef54944-d511-48fb-9242-4377e3910067"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aec1c07c-3ec8-4825-b4f3-c742d5d89b2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a41a1dfe-6538-4ff3-825b-7a1a4e8250bc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44802000-76f3-4134-acb8-02d2cfe17032",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8799f12-ee23-4ca6-b9f3-b8f768d2c1ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0c6b7ff-0e65-474a-a35e-fad1405d1939",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfbbf5dc-cbee-4531-adf1-8a30689f5187"
            }
          }
        ]
      },
      {
        "id": "ae36635c-4b09-4474-acea-5b4070399938",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0f999242-3485-48f6-b911-e7fe4e0ea029",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bf9bca1-b1a8-4016-81e3-f2cc563cbcf3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eec4047a-084f-4a80-9c0d-c077fb30f3ba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8f722e-05bb-408e-87d7-a61bf0c9957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e17b7e-472b-4871-98be-f0b1d1e7f977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd336611-890b-4d12-a3fc-9d95cb22642e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b358450f-b028-4066-8c05-062c62dda93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f561be-e9a7-4467-bc88-afce9d22b380",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb56a28-21f4-444a-bfb6-81156f705381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92014433-ee76-405f-8b8e-419b04845fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed17a8-2868-421b-aa4c-3bbcb8611cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dded3e-1872-4b83-945c-3ffc254159ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb6573e-7381-4016-8ca4-3c77653f9479",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5ca955-06af-4440-81b7-7fc6883c8de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e045e85-3523-4638-8dba-3dd86556126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee17ea36-6b50-472e-9b0e-7ddb410548bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c7ce40-6f24-4761-aa1a-71e7867ca8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0103fddc-32d4-4e7c-9b88-9270794ceaf4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a515f-509d-4e0a-99b6-7061c6655fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98f3b72-5daa-47f1-b605-25b361ff8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2237a0-17c2-4ed7-a6ea-ee17b4dcf562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f36190-a939-41c3-bbe6-6354294c0120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853425ff-7e7d-47bf-a97c-e647885fe474",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cedb311-102d-4b1b-8ddf-09f723f0744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08119b81-422f-45cc-9c96-9b3844dab6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd4e45-7b94-43e2-b02a-d86fe574c960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c740cb-a468-47d7-af57-f0f0bf916ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856574aa-71c3-44fe-bd28-bafd0fd0267b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7eb3aa-f88a-48c2-894a-29f0d4c756dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb0f13d-b3f7-4091-8914-436f11aa691c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504649ce-e0a4-4c54-8215-0efda8458ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72401ec6-e0a4-4a08-874a-7201c29a5c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc47143-55cf-4f3e-8449-e75f68360c7b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a89a75-7fe9-4d74-ac9b-a8dc01c50f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caab597-4764-483f-b25c-75aa630f6383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aabe82f-22e4-45f2-beeb-5b621a5b787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8c4834-491c-4008-a4f5-0aeb7f560e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e472f-d34d-4136-aff2-3aa08962742b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913ffcc-3e30-4e6f-9671-3b975cea9160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6af308-9e7e-42cb-8dd6-2b4ee2cffc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ef5351-529a-4562-97a1-b11c49b10a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "548bf416-3d8b-4624-8ba9-e6d7f9209e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b8002f-b24e-4b46-b720-830733b0e6f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eaacaf-f72c-46e1-8246-f717b25beddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dccbb2-b489-4eda-b119-7b852caa292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4459f5-1282-46bf-a898-134abe4d7983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72f46ad-5ed5-4095-8e33-468ffbbea8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e976d5-df85-48b7-aff0-e8ba7319bfdd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459f9e9b-ffcc-4db6-91be-49707d51e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a89e0b-11d5-498e-b497-6894351c068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900783b5-834b-47ef-bf15-e1c856dd6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02b3eef-7759-46c2-a582-3abd4fc9a0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef25071-9e1e-4739-ae96-79110179e4f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4bf995-c6ff-49a9-a8a1-48af7bb4157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad564b8c-5976-4248-9230-84fb4f351ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ef2aee-9d1a-490a-aeac-9858b47c1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3882f-86c3-44d2-8d56-ef631be3c3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad64dea-dfef-4988-9da9-8a62b8800a28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0444cd-c059-420f-aec1-21f1fc742415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da02573b-725f-4971-a5b8-ab5e9761ce66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d04cf9-34d9-4ffd-a200-021e6906200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7baeff7-8cdc-4892-8c47-5b450fc8dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0566c1f-dd7a-4e08-bc45-4ecabc3f83c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26558381-7dbe-4394-a315-a1df850dbe6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8222a87-6b83-4f3c-b0bd-a2363afb7b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3080cf65-ba2b-4faa-b293-d1e2aa561811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e79e79-92fc-4420-b24c-1c25e4a9c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcb1534-8908-4924-8f37-872c13efc67c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce4f878-a009-4981-9e0e-f3d5c591c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c937f47-cda9-487b-9310-17e679578d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ccb229-eaf0-43b0-bd6c-4f751999ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f910b41e-d9f7-474d-959f-bafb9f4f5894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9cd3a2-fa40-48d1-9e3a-e07d6d31b0cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790067dd-6787-425a-ba07-a41a1aff5449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22069f0e-2b1b-44f3-88e8-587508930195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64649435-d241-4da6-b7dc-104d0d6dddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7ddcbd-493f-43a7-9133-755341615a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d99559b-4e4f-47b6-bcc0-29fe9bcb16c6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b535bcc-0eab-43e0-b642-e938085dcb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4d8f1-e165-492c-8041-90f137d06072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8bb74c-4c0c-4eda-8046-0ff9a0eb4a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c62be1-a58e-4ccf-8efa-ab6bd840ef86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f2ca42-231d-40ad-9130-d92161ee1fa7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb919b8-0c0f-4bbb-bec8-7d39b7094f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc09be84-e9fe-48b4-ba01-754d00d47481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c326cb61-e007-41c5-9156-4c4ce8d75bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3f846e-ad69-46bc-b425-7a8d0f81d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db27ab2c-cba8-471d-96e4-d78644e7f830",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184554d9-0a64-4508-b975-b1b0c1af2fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0291f32d-13e6-465e-a581-fe16aab229ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7394ecda-d7af-488d-878d-56d85360efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1892295a-d0d2-4c2f-bf57-dd6d8b44cf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e7a30e-c927-4605-a052-254e93bb20ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4e8db-fce4-435d-b4a1-96f9bf8dcdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54661c25-c70a-497e-a32c-24992f487263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926b49bc-1692-4483-84fd-b18af8a740ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2a254d-f2bd-4a1c-8e60-2722c489e3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884832b8-37fe-4c83-80cb-42136f18512b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8749f38c-1901-4b73-b531-867f242e2285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad64478-ab29-4cd3-b8d7-0e87129e9fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8d3a31-e7cd-40fd-b07d-94e381855cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31db4f34-f231-4465-95b3-4c73bcb68d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb61a90-e537-495a-9d5b-58caa52fa291",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6c00ed-efde-4e92-8768-2dd51aab9fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc6dc11-0ee3-43df-be75-a4eff2de6a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab6575-07d3-4db1-a985-90c71984b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f15359-3f73-4ed3-b6d0-62bb24fb16b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50018a70-26da-4c4d-9a26-eeb513924072",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faae224-bb9e-4caa-8c5c-dfab4260a599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a85f4d-fee8-490c-bcfe-ad87d928d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae69c711-d4e7-4df9-a0d8-0a4505467f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f03dce8-371a-4b2a-a782-9278b0265877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be6e5ef-bc5b-4cf5-b9fb-f57a686bb03b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d958951-02d0-46b2-98f5-9e1eff35b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e9e93d-8e3b-473f-a874-fcdc93bf114c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824e945b-8969-481a-9c4c-6b5eff3ca30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2b2f79-8013-4fd3-b9e2-7f0bf7a6d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c0fdc6-e446-4a3d-9419-3a8101cd92de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de49ce8-5ca6-4468-830e-ae3d67863617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b1c6df-6a3b-44cc-852a-8abaf5d47e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555e4487-a908-482f-955b-dbc596c56fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68acb4e2-0b35-4941-a0c9-61e153a62d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355db674-6e15-40db-b746-011a9ad93d7a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97be7446-50f7-474a-8bf3-11fbf924eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae52d935-4e9e-4d14-ba69-b976b0b023a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e591ef-fd7f-4d2e-ada1-0e68fdf80c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cefa807-83b0-4746-a51b-eddfd1d107c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62929df0-a754-4d76-bcbe-cfe0fc82a6c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f4ce0b-30cb-4acc-b37c-89d5ddff1b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c870ad-5ddb-4ee5-8aed-9fc76220599d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b8a451-b816-491a-8661-e06242533412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3961ffde-94f0-4c1d-82c4-f253e99066aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e669439a-ce64-4cc6-9eca-b288d3107b6e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66f61e2-aa03-4817-ba05-a138629f13e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad9b25b-a511-4b8f-87fb-a1de18591ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef6f2f5-f780-4e4e-9db5-45cff8b873d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e3a45f-f187-4e3d-9138-9a8b78a4c5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62305c01-87f6-47a5-8542-791c3d13e53c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e09e063-f721-42ae-9a59-7cd1d1588eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2102b36-e5bf-4674-9f67-4b9c0f53de9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f0cb0b-7c5e-4a6f-b41a-640a900465d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee52d72d-2549-4f3e-a9a4-ddcb9d1cf04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bff1566-bb52-4b5d-b0be-03da36070663",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e803b3b-de56-4324-80e4-4a6dd2e1f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b20239-78c8-407d-a392-a992b27499c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399c028-1ea3-48a8-90a6-4612593ca3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cf7092-7f9c-4c8a-a682-524d15f43b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c743c63-9f98-463a-955b-3809b486bd3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c1d243-054e-440c-a8cf-fe8fb0224325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a539b7-9b1a-487b-9fa9-a5c8493c6f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e29fd0d-205b-4230-9a39-42425c83db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f328afa5-7c0b-4d35-9374-c75c8101eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742dd949-f2a6-4f49-b223-b9b4cb1228a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a2ad8e-f1a5-42c7-964c-ad8f5516a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ec9d23-6da1-4b2f-bad8-d5aa7a38ff7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9d0508-9e1b-4138-a301-4c2108cd16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b60278-4a46-4c00-8ff3-dfba5a1021de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb28b5d-270b-4acc-8635-5c06b3f8f473",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c09f9b-cf58-4401-bb53-c0f5a543911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cc2e84-6584-4bce-9b90-73b4ebb6f011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d2cb16-dd85-438e-98e6-2617e926a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15e63df-fa70-476b-9851-b8e86527e11d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9518b7d0-ece1-4272-baf5-9f5cd009bbe1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f8f66a4-73f1-45c4-89ae-ccd912eedc6b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f40fdb-ad1b-4e9b-baf8-38a849bff83a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47b07f60-3d65-4855-8d80-706733e61e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa096b95-cf15-427e-9fcb-091c01efe429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a3108a3-f677-4359-aefe-3cb4613747ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea711aff-1c86-4754-992b-f567d4a301f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d47f457b-76e9-4e51-a996-b24f0788bc61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b663ad9-7603-4560-bce4-818a2ba2c280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fef83db-ce8e-446f-8787-bdfaf47ab991"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "527a5de1-4c5a-4b10-a21d-7ed47d8d887b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1dab723f-7f2a-4f70-a585-e8f3f01f0fb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e76662f5-5446-4e16-97d2-7789af706d72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b1d6f3e-bf8e-47ae-be69-5e1dae743969"
            }
          }
        ]
      },
      {
        "id": "2d6ace69-35a7-43d9-9bc5-7274e8ecc3ef",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "21f7e381-4869-47fd-81c1-8c8337d0531f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dba88dc2-ebb6-4d59-b17c-aaf51f3c325e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1f01b48-5b2f-4331-b433-d6651d0ac20c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9f656d-2df7-459f-a8c1-f3d8a3f722e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ada5df3-2765-4fb7-925b-dc14a46c7606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae618202-b46a-4aaf-b624-a940d1a5fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "614eb29f-cb6d-44c6-8d2f-836e1e4a957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7556eccc-7278-4614-b8ab-f3813acfc789",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad3618-c492-431d-9b48-9b14be5b7eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65729041-15ec-4415-b1ec-c66a2212b5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb938f2-d99c-4295-905c-7a80098a08f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "240bc828-832b-4510-b585-774e504238c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cdf1fb-4298-441c-b7f2-0d86ba03c595",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4f7413-7ac8-4831-a886-0741b678b8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753db172-b1dc-474f-a10a-9a338d403665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21bf1cb-8eaf-4225-be1e-3fc0b1adff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96aec31-a250-4ab9-96dd-189ac3772fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6822a30-4151-4e56-9d77-ae51beed60e4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7b93b0-cc56-4c76-ba0a-b267103c5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f52387-b385-4402-bac1-26104103adc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3651bd8b-ea0c-421f-b04e-386540be5737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2f5e61-8549-404d-b396-d5f70577d779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a1618-b1c1-4300-a203-4bf5683f6764",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd5f5c-6332-475c-b10a-43268374679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d22c379-11a8-4f69-86f7-58c4b7c15119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b587625-6867-4453-9cd5-eda4fcddf360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abaf7125-0ea4-49ab-b095-6e0a7da6118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518b5934-988a-4a26-9dcd-005b1b03ac7e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0045459-c2b5-40b7-87d8-c229425f7e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f718a9-16d6-40ec-93cc-a9c15ccdcd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a2a3ca-5ba2-41b3-87ad-f37ea94c4324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a72aed9-87c3-4724-a591-d6fa1c0df829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f88785-965f-4e9c-beb0-ddc8a34dcaea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21ef0e3-09b2-46e0-a294-fdbdfeb84920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efef798-cd64-4a5f-b8be-52c60d9777f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95527a60-1c10-4c44-8833-fc40567437c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "652f7caf-44fe-4aac-9b45-c059ff455e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e59e363-193c-411d-84e4-57a0e03ec738",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494eb5cf-43d3-4afc-aae6-c442f1e0c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12df2b9-e89e-4b06-a220-bcd17cafa4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe72d3e-f614-4af8-9319-8be03b449dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd12dba-a43a-4905-9d8d-4f019cf85c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57854f04-062d-4954-9741-00e5ee56ecaf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b23e584-5c48-4a68-b4cb-cc621b0be81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03133fbb-89c8-4240-9a65-b378fce9d4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f2bb1-6c82-4c7e-9b4a-d4dd75332626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21fd297a-51dc-4e06-bcb7-cc94bfebf906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c4b811-e380-45bc-8e01-07b0e361471b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323ffe97-619e-44cc-9fa9-e9e5e7b12831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec18205-ae20-472d-97ea-a5f92455a753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac6f99-6d11-443f-a99e-1d50bf13bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e322eed3-4f0d-4d04-b19a-675f849b8c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f10072-9454-4f73-bca6-37dc45950e1e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526464cc-92bd-4412-ae28-c805967096bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef3acc1-7fa7-4d2e-a2fb-ab848185d765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9888d547-067a-4c4a-8f35-da564d5c7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "13b4b6fc-d3a2-42dd-a74e-0c7e8de9837a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a06ff-6805-4e78-b07a-70746aeb8e38",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8b147-3f22-4f72-8a7f-6a7bed4995fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a8288d-af32-48c2-9fb2-3522ffa588ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e57635-f6a2-434d-8590-85df61a0bea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "257788c8-3800-4425-9802-914f1d685a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c6654-ce23-478a-924d-1a0aa218ceb7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c4cf6-92e0-4368-9736-71b4d5412104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d1326b-e9b3-4b0a-9824-46c633ba4b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573709df-3bc6-4f0b-9c9f-c3e20d4e90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99fe9fb-4f47-4432-8bf9-5265afb91c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a5282-22ef-4be2-839d-db592f166ca2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2189bc2-b6fa-43a9-9a9d-6e6bc2b67a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c66d6a9-7f42-4bd4-9186-778227d87fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0915aaa6-452f-4a0c-95c6-86dbf93629fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "912af559-87cf-4294-a13f-04a9d1215b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb54f07-1b30-4a41-87d1-7872902e7222",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da39109a-5c0c-4d96-9c6b-81a7a971e195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81a5c24-79c4-46f2-bb09-81e5f8880010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da50101-620d-4d2a-9274-b90f2d8f6c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4be4148-b739-4391-a7b5-19e21b30f7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e55032e-a0f6-4751-8f63-0132b5146615",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2df194-cd77-440e-9240-1110de4c510f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdac47c-02a2-490a-973c-7517f0c438cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a08d7b9-8cbf-46e4-a006-e75b129923ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ada25a-48d6-4e76-bdb7-39dd76de4815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9c486c-2b00-42e8-86c8-a17b0b203428",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20630a7-1060-4097-8863-eaa76c6a13ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ec1ffb-8fa1-4d28-bfd9-d9d4f6a21adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4029b44d-c0ff-44ac-8491-e6573558ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "99640a60-3030-416e-b772-44f519b45588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194e5893-4dbd-4533-9d96-0500b9c3e1f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2124c4-6063-4f75-a106-5db63ebf11bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5b600f-0d20-4bfc-8545-d842d11d5e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc7ffa7-3ec9-446b-93f1-09ba63183ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed6fbf0-8f5e-4cd3-816b-9622328e6475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe9f710-76b8-44d4-ad84-ecbb3d3ee3a0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbb4f62-627b-46a0-aa7e-1ce1eef0c4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ce1162-73b0-4588-8509-cecb35e941c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed23417-192f-4899-acc7-e17ee9afed42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffa37d9-1170-4439-8224-cb7be8e7d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6765f2a4-5935-4571-b4b5-03e53a28c91a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a52b62-9f7e-42f8-a975-7049bc4e116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9856a864-1e03-422e-baf7-fab8f5b8b0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a98d0cb-0b01-42f2-8106-89bce27751e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48715915-5ebe-43ed-9915-8dccc4f139bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9df2c3-6c38-496c-ad1c-a465cfbab217",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1adc9b-0007-45e3-a728-ff33bebdc885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe05be0-a057-4354-82df-871e3e7a634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f862a47-462c-4341-a034-cbfda300ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa70b683-2d17-4d8d-96a1-eb724aa3b9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89f1ceb-6d1a-44f8-91b0-4ffb3e87a9d0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7f2d76-81ff-4c9b-9772-0791aad588e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9019757-8ca7-4998-b5c6-b6996ab6ed22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0623cf-cd87-4320-a8c2-625fc16b3ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda1e731-85fa-4ceb-a482-aaa61b1342ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ec779e-3710-486a-96e5-e6a75219629e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77bf1a5-76d2-48df-9ec8-8bf8badf77c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d71e384-1ec7-41ec-9acb-7c98deff01c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b8bc21-96f0-49e7-bb08-c8a18337e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86ed380-7809-44fe-ac8d-f06cdc58d1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483d1c6f-972a-421e-be53-e719f65d1fbf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9869cbbf-1730-44eb-b47a-bbe4dfb6e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722302ea-7527-4a6d-87d5-6f30fe73a829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0e5f0-9dfd-4edb-b513-d009794fe2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b4626b-f279-426b-9ec7-50c129f9f5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2629950-4fa1-401f-83e8-dfa11a41eb51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0aa1ea-0a25-461d-8d5e-6297a6dd91a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c4eb49-39f7-4b6f-b29d-831cc5f9a67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3d9af5-bc5b-4408-92e9-98355e64ecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "102ea2d9-1b61-45d9-84f3-2cd4613eecd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4bc4c6-1117-40e5-801c-88d7bb046180",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a61f6-5d53-48a9-84ec-aa00bb8c034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc01a33a-8e2e-485b-9447-f58f4b655bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c785476d-9566-43c9-9fe7-755af3237bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86b7011-bd52-40b8-b8cc-9683d33ccd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c38ae3-d066-4da5-88e5-3906d03c35af",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaba7dc-ea16-472c-be53-a005256e5963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9c61b3-2473-4b30-b07a-33486cc69daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813caf00-8c9f-4b69-a969-ae0a71d832fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb233fa-9df4-4d5a-a04e-bfde1e8891a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c17bdd4-169b-4300-9bf6-17874879c475",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cb609c-67a7-4a73-a13a-d291b2c7feb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf64637-e76f-4445-a305-64fd1de1ea70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b08b8cc-49cf-4aef-8dbc-2a87a797a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85c06d4-e86e-4894-8ac6-9868db40ba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6722044-7711-4938-942f-4f5657f9cb24",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e5b833-1c30-4e8e-9456-a611a6562733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73707427-feb7-4b58-a8f6-aac925bb44e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0623c4-923c-433a-b628-d15b4586ea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4258835a-2dc9-453d-a101-f1a1f8c7bd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809480d0-47f0-4e23-aee2-1ee97fe1300d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7220f-fdf9-4891-98d7-e9fa96db6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5c2fe1-1436-4ef6-8908-50bcde348d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7305bdf4-45a2-4f2d-a439-4dbbbe4fd6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b189f2c-381c-4d89-8953-8d413b823bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba111560-ebd3-4c27-bd4b-60fc2ff4bf3a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda462cc-c856-4065-80b2-7bdff1ed8ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4e46fe-6a23-4757-be9e-b8f472ede89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0dcc34-7a8b-446c-b30d-07cb5d80e4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40387830-b77a-4f2f-b3f2-8a0402052258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073c2e42-96df-40c7-a055-d1bd00bfc007",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e851418d-8dee-4dea-b47c-a06ab2919faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c0f591-6445-4e2e-865f-7b09f305f174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee054a7-cf84-4562-9b31-e973e82b471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6769ace-22ca-41f4-869a-fcd1270618af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd3c501-a650-4844-87d4-04611a86cd45",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc4f30e-2ec4-48a7-aac9-c1c3dec77668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61f014c-2c55-48f4-bf53-fc025933765d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf300b8e-daca-4292-b3d0-eda7a7e90396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0002239c-f19d-4cd2-a926-badb5b325785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d536257-560d-4843-b132-e3b4a044847f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c8318-ab61-4824-bbae-ddb02d15e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed068566-6f6d-44c0-92ee-2cea34b86b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3ea7e0-d1f8-4f79-8580-769f73ecac1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780a215e-565b-4de3-ae58-94aa7b6ec31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5556c18b-c0a0-4c80-ab4d-0672dc6f059f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547caa63-2c9b-444a-a70d-817fcd9fa7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb249282-de37-4e31-ae04-8fe98b16e618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc21abd9-6d38-4849-ac0d-6033357927aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b67875-7eae-4b57-89f9-b3ede00ca71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24cb78d-e7e9-4523-99a4-c83199cafc6f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b54355-cb6b-4aeb-a357-9f43f617ccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58ece26-4fed-479a-b663-3e0be6cbd048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281f97aa-9d49-47bf-bc1d-313360a48bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d59e758-943f-4257-835c-f423cc74c205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d61d16-028d-46b8-b7e5-1f3597b54ec6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73d2718-2f4d-47fe-8841-d46bd9d47327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6940c4d5-e563-4ce5-804f-a3328f373794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cbb94a-35b4-4827-98b9-9a2ef681f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b551e839-de10-4406-95cd-c6d3225c2b76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90ab6f3a-f636-4dcb-a813-78039be5f754",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e0e9004-37f0-4c1b-8de8-8e5c8c2b6441",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fabb285-64cd-4bf1-8821-2526261ecd0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7350f0d7-5d71-4eb6-803c-b9fb11f25288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c915f-13b4-4933-9366-f4031162219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e58bccc1-92d0-43c8-83f8-90ecdc1fd6f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de12062b-a722-48c0-bebc-1064df3e3e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d0b213-afb7-4772-9971-9af85dc44a85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b351e8-5b73-427a-8d9a-ccd117f2c794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d64f5a0-b3fb-4f5d-8290-234626903905"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b1b83e2-63ec-451c-815f-4292a72609fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "110bd64e-2d0f-49c4-94bd-46286caeb2f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6de84eea-c73a-4db1-88ae-5e0602cb05c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca6babf1-87ea-4299-8cc0-4c5ca26928b3"
            }
          }
        ]
      },
      {
        "id": "16b4e131-3714-4522-a659-025dd05462c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e98c97af-3d2e-4161-b56a-7a6581194178",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8163101e-0062-4934-a52a-9c862e42935b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fe4be63-c478-4a51-91f7-2cc6a4695eac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a99eb78-01ca-4c6e-81e8-5504d5014896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbd1636-8973-4196-bd4d-1de520c9379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86221f58-e977-40f3-a368-e03f3f02cc7e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b927bf-dd53-41e3-9884-809a59600ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db0b211-dbad-485e-ad7b-42fd994b47c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fefdadf-8ea1-4ad5-96f8-64c384952234",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff0500d-ea11-4ced-bc62-1d82be90ca28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f15df4-3674-4dda-890e-e18a44fc087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a22b8cd-16c1-4a81-bdd5-703139d4d767",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142dd8fb-41c3-4ca8-b74b-ba8fd9ba99f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafb483d-f8ec-42bb-9d3a-4282d92bad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0b374f-3dbf-430a-9469-207bea132f12",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7952c46d-046a-4842-b493-dd21dbd090f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd8f88f-142e-4a41-9cfd-c3915bf2531f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4991fee-39c2-45ba-8a93-df10579a47c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2215224-4a81-454d-8749-adc80b2f9c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b695c3-a5a0-45a4-98b6-4d17957a7a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c435d4-612f-4fd2-a98b-bdba9912c2f8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9979920-64fe-4d96-96c8-4c3a35354f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5dc0fa-977c-400f-a616-b663923b1c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d92ef9a-24b0-4d56-8397-9f8b28f95948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb00cd-32d6-4418-9bfc-ddcb900c5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce0e974-db3b-4f05-9b8d-c628133d22a8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a933ef7e-3828-4aad-bbbc-f3f6bbaad74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ba6904-6c20-43c6-948e-5bf5f6c3da51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc61cf-8bc9-4b43-a09e-b59c95e66ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a4c1c0-870f-48b3-9f76-ca50014ca623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8ac963-6787-4f20-8e92-e8d8914a44f4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4a7746-1b83-4b3f-89ef-256d1bded882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b989ad0-d5bb-40e3-b76d-c090c451fb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04774dd9-bf2f-49a3-aedd-7f33e680d24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dded6f91-cdb7-4fb7-afd6-121b7a0cdb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abef7c43-30b2-425d-86fe-87dfee2b7a03",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd59f23-7963-4b4a-9d7e-33720bf96b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a194012d-ffb4-40c1-b1b1-9d925d6dd8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b540859-0fc3-4e69-b85e-27e0976b0d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45ef614-656d-4b93-9f6f-ca5dac9026e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a778ce5-5ef7-43c8-8621-1d6b3f45cbe7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791a0132-9fa1-4cbf-adaf-8f1e616c0473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7393ef4-b43a-4698-9374-cc505cb2554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24324b3-253c-4e26-ad54-95e66405667a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5d3ed1-4bcb-4dcd-ac9f-cdef9bb5a580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f7050-b1ed-494a-b7fc-6aa4eb1a76fe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffaa025-2ac3-439f-a2d2-f021dd706720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9e86e9-583a-4deb-8344-fbbf2076c058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318e4699-291c-49de-9b57-ffa11b26f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02b290a-b7b3-4a9c-8a63-cd6aedfa63d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1916834f-2810-4836-8553-597f8392aeee",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f56796-7372-47a0-9c6b-b14664a8953d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aba0102-4da6-4b39-87a7-df3652a44e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800f9099-d163-4e3d-9bbf-f043968b726e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9077729f-b0c7-47d5-9dba-6f62106447b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a4b31b-4af2-47da-88dc-71ed0b5d2bf0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b7d7c7-63e4-43ac-b012-0278e8cf892e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1b5c59-961a-46bc-ae19-dce3ab57fa7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1161853-0ec7-41f3-8d02-6f4c119f42b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861fe973-ae3e-4013-a761-2fe51ddedecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cd113f-ab6e-4334-aa3c-04f99ae2204d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d3c1df-eeeb-4aeb-8706-f5156413fda9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02218a0d-f3e3-4b60-a845-1b00bed7ea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134db79-9d2f-4c47-a14e-f832104f160b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6560fdba-6e8f-436c-bf8f-893240f7e1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae88991-798f-4516-924c-afde4fb935f0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409eab16-405f-4470-b5f3-ac0540152575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f67948e-5e76-405e-a9c0-85aa21ae28ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb91249d-f673-41ce-9720-72457640177d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de207c-28b7-498c-a7f3-911684046841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e95f4-ee93-484e-9cc0-2a9b94dbf55e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2931ea-5029-403f-86a5-518125df9806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246ba4a1-a5ea-40f7-839b-428af00e6de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d4bfc-d4f8-437e-a09e-da2462fbc9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8abe6af-984f-4826-906f-a0a026c99670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcfe423-060f-472b-92df-41d565d08de6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f8bad7-cc23-44c8-8e59-a6710fea4433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2080c74c-cc15-4708-9b36-14f9f11bb8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba9968-cd52-4aa8-84b9-225615377705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccefc19-3641-4fea-b2f2-43813123cbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6896d34-9204-4cc3-9c4d-324f15129c2d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a0010d-7cfe-4b8d-821f-0210b3d6557f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6565de8-6ebb-41b5-87e4-90dd57a9cd22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dd3199-677e-4020-beb4-1b700f573e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d185f349-283a-4189-908c-117e4db3d87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a03dd6-e834-4989-8f48-f548e0663a79",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3eccb5-4a98-4cda-94f0-1b4701ec5c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bfe42b-450d-41f3-b4c8-893febe11944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79249195-c094-4397-90e6-bc0a17fd4ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32ceb95-4b3c-4779-baef-fb763ac60213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248a5f90-9021-4bb8-b69a-190a6d7ba1e4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d644bb-9c71-4a71-abaf-b3d89fb4beb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85442d81-ac18-4437-9b91-672bc45ad6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b875b6-8e6c-4258-a9a2-d5ed832bc8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8173f7c-90f5-46c8-ad3f-fd17199b8bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da79bc20-9182-4e24-8ccc-48a094b8b3eb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f923a6-e192-4cbd-89e1-6d868fabd375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df22ba66-4ce0-4491-aaf7-47501785dd1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00b8556-d1e9-4d4d-bcaf-129b9d39f0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ec006e-23dc-47ed-b9ee-b49aaf09a053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed12c6c4-b54a-4844-86fb-a1885532cf97",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fafe13-6878-4f76-a2c5-e2ead0cbaeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df90398-61e3-4ca8-b7b9-c9156a2dfdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1d4fcd-2ed7-472a-a251-2414515b84c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56a70f7-2ba0-4101-9a4b-8ac2b1eccca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d2e698-a6e7-4f44-9bba-45c6f31d22ad",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8455819c-466f-49b8-a10f-ac46f0af4d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eef7839-ad0a-42b8-b477-cb824611c06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab10a5c-1502-43cc-aa66-755076e9ac83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cd23d6-ce2e-487f-8c88-c5cc65053e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a74ecc-e636-4ad1-8c6a-e07ebe06d637",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d33f07-3fba-409e-b239-d2d2a349c995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bb3947-fae0-45d0-936d-ea2c2f2d3a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e06c25-1ada-4f6a-b19a-20529be361c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13cdcac-a876-4b09-a227-b2b5f288d84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600cb13d-a0a9-47e2-a805-9363b4f52f62",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e594eaad-4c1d-4145-bb94-cda19cd272ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdddaa07-26ea-40a1-87e5-6b5b616b047c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32427bad-f896-4f83-9e4c-a074f165d4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285ff43d-0759-4a8f-b1d5-14ee2f25b22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925d1750-903f-4d35-a605-b95947ac4659",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d53751-a645-47dd-9d9c-26b7905cc1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504007e1-22dc-403f-960f-6f13a1ac6fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916cfb77-420e-420e-be7a-1411a0920a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd4a818-416d-436c-9bcb-23d3d056a65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1041440-0894-41a6-89b6-ab655784375d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbc4043-0f41-4253-b429-2eb25ec8c736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6136ba-7975-4772-8283-92140bef9b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd83c316-96b3-4b01-9109-0fbdde0ec6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474dcef3-8cc5-41f3-bdd2-c59703f227d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48965fe6-a937-48a4-8ff7-fc57ed732992",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee2adf2-1b78-43f6-91bf-d1fe92cbfd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799e0507-2cb4-45f5-b8df-9b128d833fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26852836-9cb7-43a7-9b13-b26362e015fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd06d680-6f08-4b69-b456-f6dee5f89f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0826fb41-e130-4ca9-8e7d-aeaf18edbf26",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba67a2be-927a-45e5-8db1-05c6b5b4d719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e03238-c772-43ed-8032-e2bc9b757d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f3db4a-0e8f-4b81-8d9b-377c3cceffc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533c536e-8226-42e6-a892-c60acdfa7eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c033e84-ae8b-443d-8ea1-2b6bd724c957",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c76c8-b319-43e6-9112-441527d39c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc630b4-6ac8-410a-80ef-d25f4677db37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ceef76-0a7a-4a8e-8506-37e3449cab78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d5648b-3d9c-4fdf-8bd3-63faa3beb2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da80e6c1-44df-4066-8bd0-7bae1c31b66b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29d987-d9a0-44aa-9f12-fcfb999111dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b7a477-b79b-46c4-9960-19c869035c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70250be0-9db3-4d9b-bfca-dd6181e7584c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fbbc15-90a1-4367-a3c9-a0ac7f41f653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590469f1-b453-4d7d-b676-fffca2cfe477",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f6af7-c59e-4e25-b118-cbc2634a2500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2988d8f7-88e3-4418-bdec-2d7edd0ed583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2af92b4-3e07-427a-b0b2-8353f424eaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efec05a3-9e53-4b9b-8dc3-67c998539b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7802ef3-6838-4635-9401-0ada71f084f0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59535e8f-16ee-4d9a-9509-fd1f23b712bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79eacfb8-81f3-4e47-b822-b6b62d5b280b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f93af05-5831-4838-8c08-7c7664ed7f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d7b027-949c-47ac-bffc-40237bfc85a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7bfbe8-8108-40cf-bf30-0f2f3377c731",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227fe26b-22fc-427c-9692-0bcf7229c37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaa8f37-519a-4130-9079-e5422f625d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623420bc-3b19-48db-96b1-22975671d7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e05117-b180-4f62-8926-ff704f48f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d32120-a8d4-4704-8712-be193f632a9f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb04bb6c-3cc9-4f26-83c5-e642e4268740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41994958-8d1c-499b-b527-595642470ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f0b3c7-f80b-46b1-9688-da522d9eecf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e46893b-cbae-477f-ac8e-961f0c122191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e265a5c-e58d-4fde-a941-6f1ff4f9ca20",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57fdba7-7751-485e-bb21-ba31b3989ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19664903-f536-430b-b5c7-39d478dc1b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50f3446-0672-455c-b8e4-8af9b676eff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1f3780-e153-43a1-b485-0eb0d49ffc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462cc5f7-a8cb-4733-9f98-4f6a9a19593f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd7fbc8-2b0d-4be8-9d92-f8df41e760af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2aeebc-ba86-456a-b134-fccafb7a1c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcbab1e-e1a1-4b06-a3d6-be8936832522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5d483e-a0b0-4150-9abc-1a9dc001fb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d0c503-57a7-4a08-a545-b6ad72289d5a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9553f1a6-c9eb-4274-ba83-5ceff6b2879b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e169aa87-8641-44eb-8a96-e697fa9b0fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf3be99-479d-4073-8481-00b271bc03e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ac7789-f667-4a42-bfb2-5a46f3b8453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e12652-7c50-4c57-8e31-3803bdb91308",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf7ca1f-806e-4297-862b-e9bdc0692b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094e2253-c1f6-452d-a0c7-948120cd20fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86856a2-34cd-4da6-bdd0-54c692c6f0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ff7528-cf91-4009-b9fd-7e64b62afbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc5aa85-db7d-41ad-81b0-445b892b3b15",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbbf28a-a65f-42fe-9512-0b567aaacfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4221ec8f-e387-4782-a897-d14258f4272e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5096c180-fd40-41bc-ae73-e15d43047cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693f301f-391a-4824-9756-f0b5c7c86503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab572dc-a90f-4b2d-8161-e6c1951fb05c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a374f-5b3c-40a6-8aac-7955f1000ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce54329e-a4db-4f97-a96f-e5c83f5a5b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11001060-b67c-4fa3-868a-38b5ea632804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bd052f-76de-477b-84a3-f86eace7136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a73f61-65f5-45ee-826b-c345a0b29a39",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224aedae-e0a3-4e75-bbe4-6d572ffe8f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc474991-eb39-4575-b4bc-22effdeb86c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497b2234-e861-417f-ad26-4444c809778c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a907af-daab-4c6f-861a-1cb8f2afa9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8126d-0e27-4497-b863-460cb1917581",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795335fc-7d64-4d15-8a1c-859cadf1a322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553efc69-0119-45d6-8f10-6d0926833a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a27f49-1473-4e0f-bf3e-1f3a4428c850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6756d762-f539-4b09-b040-e9ec25a097f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2f3b18-2815-43f9-95c7-d3598733ddd7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e02df34-8f22-4554-8d71-aa2318900357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c7e638-3264-4507-a77f-93028b6267d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd50ada-affb-49bc-a43f-67693d1efb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f629c81-091d-4d4d-8f76-db6d49922bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69c5dbc-3b67-47cb-8df9-09255f2d8815",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003c6550-7f53-4ea7-b606-7ee6fb4aeab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4e5f35-ddfe-47ab-8b4a-7db131b35751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ca96c-7f6b-4eab-a550-15d3dc7579dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f893e94-a06d-444c-817b-1a051d51dba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f36e1-85a3-4685-a3d9-dcf26418ae4a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8b8c93-444e-4f13-80ab-c9ba21054f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4243b3a-4191-4e38-a145-a252f1bfa9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c1d13-c392-4eb3-9c9b-0210736081c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a0bb55-b950-42c5-b91c-2cdfb754f201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca208eda-2f12-4322-8d98-c34b4febcccb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1fce17-b190-41a0-a738-2c406f7fdb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fc3e15-1a1d-4f25-8c80-248c18923545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb176d7b-2846-4907-8825-7e7ca04d85b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95878f6b-eb7f-44d8-a437-57a9c20ec73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b278fb65-4896-4d26-bdca-164d86ba0992",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871678f0-5525-499c-9a3f-06c93c4f86de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b737f41-6d96-478e-96cf-a59297249f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4eef14-7ee8-432b-b68f-70f36ffd248d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4c52ce-df23-404d-8db5-03424e81dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b37013-02bd-4b98-80dc-1051c8383b3d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab653ef-99d9-4adb-b233-7befbf414425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60205e4d-c8c6-4be4-b24c-7d5b2690dc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1876b7-b2c6-47db-80f7-537437e0c8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac82b2-75c4-43ca-b158-e863207008dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04c6195-e0ed-4b2b-89d3-d8d38f50e8fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cece05-5d9d-45d5-abe0-f8a1f83527a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8ec213-9393-43ea-974e-ea360ecda2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6427b647-9829-44d2-941e-2f32833ecd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861baa6a-8e19-413d-aec9-677103d6ed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e694c9b-0ca9-447e-88dd-e2093f853d9e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62a8c1c-ed25-4ac7-bc4b-75760a35c619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258d212e-9437-4d29-8cad-86e6dbb35a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d24e60-1dc5-480e-813d-21608fa7d543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbef377a-f063-404f-bec8-07de4066ed80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f531a165-117c-4505-b6a3-a8a0944c36af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0af13b-4bbc-4225-9472-9f89a3275660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85a2531-6635-48c2-aac5-f48064f9351a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b662e-5460-4bd6-9054-36a9ce0d7cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0dd784-8d68-4422-a118-03cc850716d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6ec044-f7db-40a6-b00c-88e08b31a095",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ddc62-cc53-4bc3-8fe2-272d21cc6b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20990db4-a79f-46c1-92e0-c953100ebe99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d032dc1-ad78-4b68-aae7-e252b7b67f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6e19e5-5100-404f-b7ee-17eb01f7bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532217ae-d2a9-4d27-98e3-8a7e8cbc2238",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f243c7-99a0-4898-9f09-aff94b3fa475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d410b5-d867-4036-b31d-2d234259ccc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25500d8-14a2-4c1f-a226-a324b5553d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4364008-53e2-4858-a65c-3b3a41d3e765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8954cbf9-65f9-43f8-9198-1a9c1ec6c373",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804ff42a-6aeb-49a3-9919-7dd42a2a36c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b53261b-e029-4c79-a46e-e3ecdd24e00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfaa7b7-d6f3-4754-8764-9237664af9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9157f12-3dbc-46db-b0db-272bddb754cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aed994-f32b-425b-865c-71914dbd9e81",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cc018b-806a-415e-9b4b-673cc4104697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da24f61-b174-4c80-a22c-29f80320835c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48621afb-456c-400c-b843-79f283cd53a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b0bc44-ba83-4e3c-9f03-fe650a364d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a3d19-0d4d-476f-85d5-d51b0995c6d8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8461699-4d8f-47b1-b712-8571575711a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f04ddff-d91e-4fc7-ac5f-031ee21fca4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744f707d-7623-4349-b4ec-35950e871fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d27183-4541-43e3-85cb-7cb1fbabbad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2352978-5267-45e4-8e29-55118bb541b7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12cd148-ce7a-4935-b717-2258fcc6e689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc03c5ef-2735-489c-932c-b80b4d77aaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff844ce-8de7-43e3-9a43-0929a8371e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee053fc7-468d-40d7-b512-ffaba065fa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d2cce4-7689-4b58-a1b6-6de63c12e230",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3d5829-3152-4a84-a941-d55c6791d6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cd758d-8f9d-4bde-a802-7cd1fdfde879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776f4e85-e8aa-4f02-90ef-49927a034cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b60aa2-d2e2-459e-84ea-dcc10d1d5a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b8604e-3ae7-4e78-9719-e84b42c3901c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b484dc62-26cd-4198-b9c7-06d5f2feefda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44693c31-0ce8-4588-9c42-e7f7c75dc457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d576d9-8593-4013-a802-ed0388c9f05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feac6ac0-8914-4088-828d-7e517d5317cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa6a537-297b-4437-8afe-c0031032c010",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bde4e2c-7c00-46c2-a6a7-180cad6ddc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2517e24e-f817-45f9-ba33-93c629120d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d989ec50-bb51-430e-aedb-63b3abb876c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caa6d22-a968-4c1b-b836-d218147e5022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2193c985-01f8-44cd-817e-9028f637e633",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa11e22-fb09-41de-98d3-ef256a77998e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bdd6c2-f0fe-45cb-8358-a0d4cffbfc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574cb15-abb7-4294-a916-6892218d9f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850c574a-83a1-43d0-a17b-e4c7b6e5fb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b812223-cfc2-47bb-84fe-c563256089f2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c33ee-6c43-42b5-a4c9-2abc04f4d7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e696b5-e8e8-4954-9476-e8469b832b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ffbf1e-ff1a-4c59-afaf-aa3ddda7b472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daede52-d5a5-4dd0-824b-21d275c07e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94461ecd-005f-4cdc-a439-a909ac86988b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36987bf0-872b-4a09-b445-f17c78522ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da55d72-acd2-4929-905b-32f431a53067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851b6c90-c5e3-4915-8438-ba711b1e04f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93371153-48bf-422d-ae8c-187c872bec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce0e169-7aaa-418e-9901-25411d9b9d90",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aef4644-e5e2-407f-8d0e-833e450bd8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe900ad-5c61-4afa-bdf6-f1edbbc0d9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8183b01-0171-4ab1-beee-28b18ba61ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af69b57-2a5c-4243-82f7-350a732ebc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100914c-2951-429b-b1b5-379c71eee191",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123777d8-eb69-44d1-8f6c-a21eb257f2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e400190e-b145-4a03-89ae-6b5b2b877cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e226a9-3937-4ada-a991-ff481908f3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b037775-3746-4210-a49c-610566a6d838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed18b483-851f-45ec-a5ce-31aab6e1a0ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacd9a0d-ee9f-4f66-b8ab-180804c0e3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f1ce2b-e051-47c4-9217-e8fa5794fe67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8bd599-d378-477f-a3ed-d5364a1eccdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a59508a-f684-4a6b-afc4-aa13fbb2d45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3418d5-c28e-428c-8e13-f845530452be",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69099e2f-69c8-4219-8674-49129f67911f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825d5aff-9614-4576-a25a-6288e53639bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba15247d-c535-49d3-b98a-3029131d76ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f02c33e-4f3f-4e5a-a608-ee677de42d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b74a2b-6255-4d89-b4ea-9f62daa9c46f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00016361-a572-4654-a524-c799c09de94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206670d2-95f6-49b8-a2e4-9d8503ff31a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b399b-5aad-413f-85e3-1c6eb877097f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f905317-29f1-4a76-8d8f-0b47d7c26258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76833aa-deb8-410f-a4c8-93ec05a462a3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2870d9-2759-41a7-a8e0-0e6ab97b5fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4d8a8a-a5c9-4e25-ad1d-1820cfe3e230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce88d345-95cd-41f1-9588-86193c71aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b51a549-f6ef-4069-a9ca-fec3ad85ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21366d41-637a-4f62-b79c-888ee8c7c056",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953bbdb5-cbc6-47b7-9f84-516d70a11bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c7a901-b051-4630-9ad4-c2e30010456d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dfe1b3-d243-4e12-89cb-ad2703f3f630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09597775-3081-4b2f-911f-584f83390d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c4c26c-06c9-4105-9b0b-2ea693929e5d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef7d7a5-ea1e-480b-8ca6-66e14d928546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6291db2-4aa1-4569-bb4e-f41a769d7ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf39d69e-fd6f-4f23-9a23-f60203611bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af535662-6d99-4a10-ac49-60cb4ca3e987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc73a8e-1ccd-48db-a8fd-798fa1c1b5df",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f36e89a-8360-45f9-8649-6f49c833a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5dbc77-86e2-48b1-85af-c2f3e8197bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258cee06-1409-4d5b-b2b7-058f5c77d800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e64e8ff-af87-4519-a459-2144438a2b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679cf166-6f33-463d-bf5c-46047aee201c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed72eaff-fa3d-4f91-8fde-66d15eab97df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34339877-6a18-4d20-a1a3-b1bb03bd0db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49fe58-0c79-4de0-b0a0-e6cc4ef7f09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1d3dc3-8074-47d4-ac17-696feb1caa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6096d6a0-bb42-4ca1-93e9-d69bececc928",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43308140-adcd-4f3e-9c16-23a52a5949b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9f01c4-8d13-4298-ae65-649784937639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cfeaaa-7fed-41c6-9ef8-85139d14bae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f120e5-3ef9-462d-b398-b44e58806f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccf4199-a311-4170-b901-0381672da0dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5c6596-4323-4937-b1af-de728b6c656a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2518201-b2b4-484b-8234-83a30e9625a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b5d1b4-44d5-4bc6-904d-cb725fa78904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff84f3b1-8045-4b90-b2fb-f71fa48f671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9bbe67-b1ca-47a4-85fb-2d3622ae26ce",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5503ab-f855-42f6-8b6d-b1045a125f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4f06bd-4e63-4884-a8ff-ebe873c4fb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1e2f9c-32f7-4bba-ac8c-8ab5669e335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab6ea49-340e-499a-bc7d-dc17b7f1ff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2848823c-9641-4a04-87ee-ecb5a2b2dc2a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a42f1-94d6-4439-8152-67d61d197152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a013e18-9fac-4077-90ce-0f1ef511f0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12897d12-6ad0-4239-a8d4-c6c61b1b628c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ad1a8d-fe3a-4076-99d5-90ebc7c1acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2cb9e6-287f-41eb-a73e-f340e38a68ca",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4f9a60-7f03-4f19-a342-9d002691aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ffd401c-215b-49df-a5ca-ac94d4866dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7242dc-f5c5-43f0-87b5-4a84a48bad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b898ef0c-1e8a-4859-a6b2-1d46ad4aa3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39469d7e-b608-466f-80c0-13f37cedca63",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a254232f-a4f2-4c62-9586-6d7b7af8250f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e063e66-8887-457b-857b-265161b84391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af3b53f-e9b3-4be2-95fd-b2ff82169201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b178e6-0053-43f6-b3ed-357aadeeb129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7e5f61-5314-4782-a7ea-a8e8427fcaea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe26f1-6c37-45d5-a537-8612a6c25abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f348cf-5b80-4578-83c0-5ce2cc2e9215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c617892d-a895-4104-8453-d0b9381733a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94066c3-cb32-4b8c-8158-f9a7868cb026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b592e2-334e-4d5d-89f0-0d1273afc238",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af377245-1ca8-43e1-819f-fe5ff6af22ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab3fa52-94dd-402a-8e13-d577258b3401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d17ba24-8557-4486-965e-a5990e429704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d671c92-0a0a-4669-aae2-097f25398b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7293d079-1c2e-45cf-b909-74619164c404",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c22874c-6708-4374-bf00-e3ca9ba4d51a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eebc538-f24d-415e-bcb1-a17bfaf68f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b33ca8-8a65-40f2-9d3e-7ac515629b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a9653-5e36-43e2-825f-71aa91b27eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54ad727-88f6-47ef-b8c7-3d4994b3a9d4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9aafa70-566b-4474-bc99-01c123302b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133c479b-2be0-4b89-98fa-7d58bd794604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecefdb33-a273-4a01-bc1f-2a6e33ca4fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a4cf90-a93a-4078-98ff-cd0be9869064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea6fe6f-b020-4f30-8eb5-e222325889ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af96b33-a2ec-4595-b85a-9d9f71829b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88b645d-9b4c-4829-a13a-b811b8375b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b1a171-19de-486b-8fc3-11babb5010ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd88f163-8454-4179-aeda-5c9dae9e379a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e367da-b4ed-49d0-bde6-9d897fff94e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d6f4b-320f-43a9-b332-eea9860cc991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f85c14-7d99-4738-b853-267e5987ab63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09922b81-59af-4db8-963b-e9717681ba2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cd616a-5fbc-4cca-96c0-f021e7132a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee7973c-e3c3-4976-a455-6df189a3f530",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37a5840-27fa-45ca-a404-30660b61cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d17dda8-684e-48af-8d6b-0b1b559d5035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0947f8-1067-4d4e-990f-22e95515e8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b53a82-4d50-42da-a471-c677d0f3798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35b1da7-5518-47e8-9d81-45ebeb56a079",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c597f12-cc58-4cc3-8f48-912f036f1dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a6065c7-5b09-449b-a04e-6027073e19cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83563c2a-f7f6-4ceb-98ff-f209f983c93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7714630-1a37-4f28-af5b-f633cf730077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431b6587-50d4-4ce6-a28e-b2d65cecb2bf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3839b5a6-8261-4bc4-83a5-8f7345bc5650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02206f2e-3e86-49c3-b88d-83e990444fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1529d069-fe19-4365-97c5-d807c019180f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586dc06-47dc-4f10-b325-bb4d6d6ea7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15df1e42-287d-4403-ad36-c3b55d35243b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db92b113-4059-43c1-8bd7-b92e416fc0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fcc8ab0-07f6-4464-8dce-b54e52cb2686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6092d0da-f08d-4000-80ee-b6bf660d1e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e41521-4884-413b-9d1c-5e1156ad5436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe798ad7-f610-4a8d-80aa-37d7154d40cf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b905fc-00bf-4221-b217-3d1a3a6186b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91009e11-0668-49a2-9af4-1f87a8352209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b844db-15d4-4a2f-a680-400cd3dd37a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d60407-91fa-48cb-8a02-16131cf99c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936ffe08-0fb4-4210-9ca7-16c267b7d15f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56941195-29db-4f6a-b3a1-5fd698b0a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9fad24-3b1c-42e2-85d1-4782ebea752f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db50fe8-6753-466f-a781-81c3d53e68fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5ca676-c414-4891-980c-6ad7110b6f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3ca993-feac-44ec-80c0-e22e7ef704f7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b8ca37-1b67-4526-b2ba-0722c92444fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd40045-b6a9-4dc8-aeed-b13ab804c860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14234bb-c2b2-4552-8b2e-04a3e2678266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e8ab7a-a9d1-4c82-b6d5-fb7d8acda08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05736e6e-2c62-465c-8ed8-7505e744623e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79333054-31d2-49a5-b5fd-065113509cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f723ff88-b587-40d3-8482-79d5aa264aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb9ce49-7821-42dc-87ff-e77c42d26b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554ea44e-ddfb-461d-81c6-34f208185263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec3bfe-b557-4051-9b35-599b8a0f913b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6065b45d-88ab-4bb5-a0a2-8225e8ed8075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7d3e4f-f038-4fa4-a408-9d3033c18868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99145965-59a0-4f14-9088-85d0c83c3edc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658415c9-2812-4b1b-b740-3d28c577d4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3386b8e1-649e-4219-baf8-6edd0f3c4665",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5648fe-02ef-433b-b984-40d664733819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c451276-5a23-4756-837a-2b6667797856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3248bbba-f199-4521-bc10-369a4e65138d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd9f2ac-2dd0-4dc3-803f-b77a44fa1f64"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31645eff-e954-4ccc-a90c-469c08163393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a85b6c29-de99-49de-bc08-68d81ba396ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfb7482e-3215-4532-ba2f-83dd484efa02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5e006be-8f3d-4d05-b167-4087b7eef9dc"
                    }
                  }
                ]
              },
              {
                "id": "eaa3d123-f44f-407f-9e56-6c74c72aab8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "737139ef-20eb-4f42-a14a-409222c5b3dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e38133-8ec7-409b-bdc6-2953270caf0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9b6670b8-0053-47c9-9f03-6856b25d6e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1debd47-32fe-4520-9816-53c0bab20d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc3cc912-a59c-478f-895b-faf4c6af2e88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df806be6-fe07-45a1-bac1-426d32153f75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970d647d-8731-48c6-b9b8-a567a9bed0a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94e4fab2-03b8-4bab-9b85-27b02960efbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d152aa11-742f-4d44-ab8f-a88ec4697fb9"
                    }
                  }
                ]
              },
              {
                "id": "92c5c187-17f7-404a-8638-541fd2a22250",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "57e60817-db93-441b-b2ff-75ac1bd7428c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665f821-e8b3-4f7c-8511-e050bfb803a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2d2377b7-064b-4833-8daf-780f094cd86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e623d957-d920-4dd8-acd2-7ecedaed1e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56adf867-2b6e-492c-91ee-b7f13eb410e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "209aaa0d-2721-41d9-aab2-612aa4a1885a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "638c7fe0-761b-4fb5-9218-0e72ef296d64",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b219e419-4367-42fe-9568-3b349f4776c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "557a2c94-2808-4e82-b700-f15e0aac6f82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c050a3a-558e-428e-8fa3-800045592f7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3880a434-c567-4551-97ea-917b1a51a125"
                    }
                  }
                ]
              },
              {
                "id": "949a3c22-b655-4d97-9bb4-4ec6506b3b2f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e17490-1231-4506-a475-334653170595",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57818c68-56f0-4e77-85bc-0b4d48c5406a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bbe813d-f06a-4766-8b79-a84094dae9c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "296bfd88-98be-470f-8ee3-b02cb545df3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23338f20-c385-4f95-b372-d6469d4b3683",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "557c8bc7-4db9-4c4e-a762-e642d855a8f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ed2e06e-1bf9-47f3-968c-745c6a73698e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aca650b6-1dd5-4a26-b2a1-47e3ec8b1fdf"
            }
          }
        ]
      },
      {
        "id": "89d22e33-e364-49c7-9678-879a2e08cc12",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1c6896c7-0a05-460f-acdb-52828f16d271",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c609f2d1-10e9-4e97-8588-b87591393469",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af382333-3c3a-4426-9fb3-9bfa4127ef17",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a77e6c5-c6df-4ccd-a5a4-3ffce221c876",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6f0ccfcd-8738-4fb1-ba80-f609077a7e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36730031-bd72-482a-a180-91ec3ff3786f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "157ccb3d-8f39-4396-83e1-c50ba2e28e8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552de99a-1310-4229-9842-98f0d15a67b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a7b99c6-0411-40e0-91e0-1ce6d08e2322"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7134b2fb-273e-4a38-9797-949183f919b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "047bb7c7-289e-41cd-b348-05e0ccc1c8e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "137161d6-3b5b-4c21-b43a-775480f19a77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "086fb9f0-7b84-49d2-b429-d19ec5d4536a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f9f9ea3-8c47-42d2-ac19-5702c57b11e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2265e88b-d5cc-44f5-ab16-068c17ab69e9"
            }
          }
        ]
      },
      {
        "id": "ae86269a-7dbc-40b2-815b-766c66800872",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d50de780-9feb-4993-857d-2841754f3ab1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d767bcb8-84d8-4afc-b0f0-8ecba0481fff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56b5805e-8f1a-4e27-93f4-44368b8bd328",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f807ca-f374-49ba-906d-5e718c35f125",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a070ae33-60ab-4fda-bde1-60a65ea43e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d580b3ba-01ad-435a-8517-f235c23371bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b9b63bd-ebf0-43d4-a278-72ae5308e72f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c848d05a-0a38-443b-805e-aa79ba7e4023",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af846ced-9953-404c-b5e6-8b7232ad3952"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7e19383-862e-485a-a9ac-3a46d11dec9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ce7eed-12d2-4fce-b977-64ffbd1b21f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "602df639-5b17-4635-b84a-d61e48290aa8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a39a5237-9ee7-4770-be0c-6d3f06b42296"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6b84b5f-6b9a-401f-8a7e-9b4f490480b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02823ef0-18f9-45e3-9343-63a6c1347b64"
            }
          }
        ]
      },
      {
        "id": "41289302-a365-47a7-b5ba-0cc27197f52a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "93064f2b-27de-4517-a6c6-f909ea94e627",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0ec0ae1-477e-4a27-abd0-22030476e6ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bacbb2c6-26ed-481a-b16d-7810f36a9bd3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1f28c-83a4-485b-aaa0-fa2747967706",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4499b00-1fc2-4649-aaa5-c98535424884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ffc1a9-be01-4dff-abe8-5b3ea216a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2104a6d1-f7d1-4f16-aa6d-75e369ff4c04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f7d679-e51b-4a71-8794-a0092aa70752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82a2b71-e3e0-441a-a943-7a4fbc7e2b53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "513ea3c3-6ca8-4a79-bc5c-212d6532d8df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb14ce2e-4fca-40fa-ad47-f9d51ca280a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e64357f5-1eab-4dc6-bfa7-83b36b28427e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60859ad2-6797-4ad1-a6cb-2d446ac1e623"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb5681ec-840f-4f9e-9682-4f1f0cd49254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49bd0a12-90a5-4179-8c8c-27a8b0259a00"
            }
          }
        ]
      },
      {
        "id": "633ab003-9366-4e69-8134-279f1c39a697",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eefeae7-5096-4cf4-b88b-703adfdb1a73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "821c0c31-dea2-430f-bacd-463b1966edeb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b3ecfa19-5f14-4a11-9b2b-493c1d4af288",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a58707b6-adac-4e2c-ace3-881cc00854c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08dba02a-20ff-4fca-a0ae-0886ee6e9848",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.739436619718305,
      "responseMin": 11,
      "responseMax": 283,
      "responseSd": 23.79184366615404,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689122916375,
      "completed": 1689122937595
    },
    "executions": [
      {
        "id": "0e63d069-7675-4e30-b38e-ac367b3f3210",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32e6d440-0952-41a1-8d44-e68cb8931369",
          "httpRequestId": "b656de6c-72f5-42ac-957f-9bd5927c46f4"
        },
        "item": {
          "id": "0e63d069-7675-4e30-b38e-ac367b3f3210",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c3ab899b-7ab0-4f34-90d1-eec1e6fffcde",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "6c3614fd-87f4-4cc0-9458-2f24666fc0de",
        "cursor": {
          "ref": "021f4132-5e80-4ec4-a9e8-794f00ffbee0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f47bf16-5f84-477f-8da8-71c124f5deca"
        },
        "item": {
          "id": "6c3614fd-87f4-4cc0-9458-2f24666fc0de",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ce755fc0-42d1-4d22-bd94-f787782fc657",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "5fbda4f4-e47d-4ca7-b141-8a010b249529",
        "cursor": {
          "ref": "170fdef5-7438-4f45-ac21-39eb5f26f1be",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73def769-2eaf-4439-8bd4-ca68bf2c0e35"
        },
        "item": {
          "id": "5fbda4f4-e47d-4ca7-b141-8a010b249529",
          "name": "did_json"
        },
        "response": {
          "id": "8754f99e-b381-48f2-8d80-cf02b460c0a6",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdc4ed7-fd28-4649-a476-75fd88aab011",
        "cursor": {
          "ref": "1d448a60-0f96-4861-8005-1a9958ebb6fa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8bc9967-3498-4665-9970-8873345f380f"
        },
        "item": {
          "id": "3fdc4ed7-fd28-4649-a476-75fd88aab011",
          "name": "did:invalid"
        },
        "response": {
          "id": "f67f4c8a-33fa-4bd3-b743-aa4f0cff2de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdc4ed7-fd28-4649-a476-75fd88aab011",
        "cursor": {
          "ref": "1d448a60-0f96-4861-8005-1a9958ebb6fa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8bc9967-3498-4665-9970-8873345f380f"
        },
        "item": {
          "id": "3fdc4ed7-fd28-4649-a476-75fd88aab011",
          "name": "did:invalid"
        },
        "response": {
          "id": "f67f4c8a-33fa-4bd3-b743-aa4f0cff2de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4495df-e62b-4689-b15e-5c8048e2d7f1",
        "cursor": {
          "ref": "2aebb1df-6f6a-47ac-8a48-d9484a27e2f0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0166e30e-2135-4609-8633-976560a41792"
        },
        "item": {
          "id": "aa4495df-e62b-4689-b15e-5c8048e2d7f1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "18a73e06-7bb8-42c5-a836-c7af21129fd0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999dc3a1-e9fa-42ba-bb4d-094426d4c447",
        "cursor": {
          "ref": "8eb4fd0e-dc83-4e31-9558-31c219bf273d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7fd8870e-a7a3-4d60-9bef-a9785587e570"
        },
        "item": {
          "id": "999dc3a1-e9fa-42ba-bb4d-094426d4c447",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a904885-e447-46cf-b369-f98bb62340cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0f477c-1020-414e-8880-296457e7f295",
        "cursor": {
          "ref": "be62dbba-1ad1-4a55-a1f2-afbd9f28cda4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88196130-e5ab-4fe5-b85b-090ce80fe2bd"
        },
        "item": {
          "id": "0f0f477c-1020-414e-8880-296457e7f295",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ae089700-22b0-43eb-955f-d5cd2b93b671",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b675ed1f-02d4-436e-abf4-1449d6a132d5",
        "cursor": {
          "ref": "4ef68a05-f6c9-418f-8e0e-57fff0d5a52d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e798d70-3c66-4236-a956-bcec14cd503f"
        },
        "item": {
          "id": "b675ed1f-02d4-436e-abf4-1449d6a132d5",
          "name": "identifiers"
        },
        "response": {
          "id": "91734643-6166-44c9-b8bd-3888509d3ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd537c7c-f043-4194-8b09-9b8c849da385",
        "cursor": {
          "ref": "67ea6801-b987-4256-8b67-fd5ef42a7d9c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "23663c39-e58c-4af5-b3bf-d51b7b68904c"
        },
        "item": {
          "id": "cd537c7c-f043-4194-8b09-9b8c849da385",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "24abda25-727a-4eff-9672-48d7c71283ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01008377-96ce-4561-9b06-35a47bb23b99",
        "cursor": {
          "ref": "ff61c4d7-0e83-4a67-bf97-321d65e6f8c6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba6e1877-67c5-47ea-a098-cf37225a39a5"
        },
        "item": {
          "id": "01008377-96ce-4561-9b06-35a47bb23b99",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "31a52cfb-8b35-4e29-bcee-d07290fea123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90baa1-9e8d-4c3e-aa8d-5eaac5bc39a5",
        "cursor": {
          "ref": "f5ad32b4-17e8-4d57-8d9e-09f0335bb77a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "11259a90-0b6b-4e6d-886a-c1c9c339d302"
        },
        "item": {
          "id": "ee90baa1-9e8d-4c3e-aa8d-5eaac5bc39a5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13f01348-5551-4854-90d0-bec05f9fc9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc35c6a-5030-47fb-8a51-edcff1fa38c6",
        "cursor": {
          "ref": "b5fe0ebe-612a-4eec-8d0c-49d43a7ce71d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "845595e0-2d55-4b24-afcc-ab45ec344f8d"
        },
        "item": {
          "id": "2cc35c6a-5030-47fb-8a51-edcff1fa38c6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3a748b12-84a2-4363-8055-de880837cd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5596f24c-867a-4854-8e94-d09d53fa5590",
        "cursor": {
          "ref": "401d2e82-b22f-4476-80a3-aa34e106f3a3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ddfaee64-ab69-435f-8ee9-6a48eae45060"
        },
        "item": {
          "id": "5596f24c-867a-4854-8e94-d09d53fa5590",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a4dee3e8-edad-4dea-ac3b-64638b756d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dd4f4d-c2dd-4c56-bc4c-0589f9b60942",
        "cursor": {
          "ref": "406d34c2-0d8d-4427-be28-fef797e1d580",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8873b42a-e927-4859-90c6-302bc988c81d"
        },
        "item": {
          "id": "b8dd4f4d-c2dd-4c56-bc4c-0589f9b60942",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d33d030-f969-41ce-82b7-d9d223c30115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa656b2-c8f5-4c3f-bdca-21433bd9df5f",
        "cursor": {
          "ref": "77945d46-f2de-4535-b19f-b54dd75a1563",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cb85e531-5c73-47ad-99d3-5fc7713d9028"
        },
        "item": {
          "id": "eaa656b2-c8f5-4c3f-bdca-21433bd9df5f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "63327c8d-7d81-40ef-97be-c7d2864b7266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a7c83-85e8-4a24-bd1f-95fdedaf1036",
        "cursor": {
          "ref": "539c0cff-330f-40c4-9684-abe892ee7f84",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ddc3af7f-67ae-4867-98f5-50f70e0ef0c6"
        },
        "item": {
          "id": "038a7c83-85e8-4a24-bd1f-95fdedaf1036",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24f1fd01-7009-4633-9aa0-8fff2cd5ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2860ce50-89f7-4885-9540-44f3edcb1248",
        "cursor": {
          "ref": "1b35d22c-919f-4846-8c80-6fe86a7a5581",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9ff983e0-f518-4fd5-ad8d-e48d2891c444"
        },
        "item": {
          "id": "2860ce50-89f7-4885-9540-44f3edcb1248",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "63d2febf-8ff4-454d-aafb-e66dabeffd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146bb4ec-2407-4dfc-9125-902accb6318e",
        "cursor": {
          "ref": "44bc735c-b389-4a6a-bfd6-6e963d2ffec0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1aee2d43-1e6e-4c7d-bb71-ec43a3462184"
        },
        "item": {
          "id": "146bb4ec-2407-4dfc-9125-902accb6318e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f19e5c02-8a05-465e-96a8-d957b706241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eed75c-1ed6-4157-8513-014075bc5e80",
        "cursor": {
          "ref": "85648569-59ae-4802-b745-d67063dcd1a2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7c6f62e-d737-4c93-b36f-4855195165d3"
        },
        "item": {
          "id": "d7eed75c-1ed6-4157-8513-014075bc5e80",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fdb619f2-9ccd-4ff8-b4b6-a6def51bf2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32bd754-f024-449e-8b9c-7f318db76235",
        "cursor": {
          "ref": "45a41f48-61b2-4834-a8f9-01d35fb44620",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fe8f02ad-2409-4a91-99ff-873fb89f5d79"
        },
        "item": {
          "id": "e32bd754-f024-449e-8b9c-7f318db76235",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b023eed-0445-4274-9c81-e45765742774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e835196-84be-4668-be37-e97f7479e83b",
        "cursor": {
          "ref": "13a07614-d67c-4249-a3de-fbee48a8f08d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b8cc8870-26a7-473b-a002-537376bb21e8"
        },
        "item": {
          "id": "8e835196-84be-4668-be37-e97f7479e83b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "85592ba0-927b-461b-832c-e405e0d42a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1cfb7-68a8-40bb-b89d-f99ee6a0b132",
        "cursor": {
          "ref": "28577f20-ddc1-4dc8-89ec-82f61630d004",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "db16dcc3-2186-4f27-b982-9960af5f0de0"
        },
        "item": {
          "id": "7fa1cfb7-68a8-40bb-b89d-f99ee6a0b132",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eb7c6100-780d-451e-bc07-f46683487fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f594917f-bd45-4ab4-9bc1-a582ae505c49",
        "cursor": {
          "ref": "5bd44b23-2bb2-4541-a8d1-09ee1dfa0a29",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "212c9995-880b-4098-a9ea-ddba29f76cc2"
        },
        "item": {
          "id": "f594917f-bd45-4ab4-9bc1-a582ae505c49",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a7475e4c-cdce-420e-b786-c118d346bc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5045fa0-25b9-4dbc-a9b0-9d7d58155a37",
        "cursor": {
          "ref": "cb31d0d6-c615-457e-a91b-1bdc1080b418",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9485919f-cd8c-40aa-b53b-fdcb63a7c4f0"
        },
        "item": {
          "id": "f5045fa0-25b9-4dbc-a9b0-9d7d58155a37",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "400829ce-4dfb-4c50-bd51-66ed0c4a90fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135f5ee-08c3-419d-bbf5-90a3dde18d81",
        "cursor": {
          "ref": "f1168f10-4db3-4637-ad47-e1f2c3ad2db2",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e8b53cd3-d9b2-4695-ade7-dc20a7f70ceb"
        },
        "item": {
          "id": "7135f5ee-08c3-419d-bbf5-90a3dde18d81",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5acbe99d-55cd-4fcb-a5e8-be4f8d84fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e2ba2b-2e9d-450f-b6d1-c6b59678312d",
        "cursor": {
          "ref": "49736c05-46eb-49b7-9f2d-164006eb1d47",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5fc10015-7f56-4b52-8707-439746069273"
        },
        "item": {
          "id": "88e2ba2b-2e9d-450f-b6d1-c6b59678312d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8194db4-cc06-4814-bd8e-46ac6e927be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c50d0-3002-4b75-ba14-4ec56eb33340",
        "cursor": {
          "ref": "71190660-870c-4972-b4ed-1b3240758927",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a4f22348-f37b-4b3a-99db-bc2338a0f5e0"
        },
        "item": {
          "id": "046c50d0-3002-4b75-ba14-4ec56eb33340",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2f2e6277-5a53-4f88-acfd-57f06908314b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b787d4ad-186f-4bb8-97ac-5fb47d49cd44",
        "cursor": {
          "ref": "2380d3d9-56c0-4b7a-8d98-ca4d39558059",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "13a82e7c-705d-4fe5-a037-96beced62ff3"
        },
        "item": {
          "id": "b787d4ad-186f-4bb8-97ac-5fb47d49cd44",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "700c1ea8-67c5-4e49-9383-5422b742e5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb72d37-d45c-4fdd-ab14-6924780ec28d",
        "cursor": {
          "ref": "7c6ce7bc-c38c-4102-806b-3e3b91be4071",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6011dcd7-ea49-4a27-be02-60f6cd526241"
        },
        "item": {
          "id": "ddb72d37-d45c-4fdd-ab14-6924780ec28d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "72ee1381-9cf8-4237-8aa5-947e45fb8b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88ffca7-e0b3-4254-8426-103e15c1f06e",
        "cursor": {
          "ref": "3b95dae3-7c2a-4af9-b46f-363a522a6fcd",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bf67c502-c4ff-4bdc-9fb5-5899d9c543ff"
        },
        "item": {
          "id": "e88ffca7-e0b3-4254-8426-103e15c1f06e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ba89a532-f653-4a0f-86c2-40f54c2225b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d94aeb-edb7-4b4f-93e2-4b908e692d02",
        "cursor": {
          "ref": "52f1549a-68bc-4347-8b52-d0fc5d9cd47b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b065d4a0-a771-4546-a20b-43ac39269e91"
        },
        "item": {
          "id": "86d94aeb-edb7-4b4f-93e2-4b908e692d02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2da713ea-c4c2-4973-b0bf-1ff088ab6ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d31972e-f99c-421a-9e85-b6dbb1c62886",
        "cursor": {
          "ref": "43a7d925-2b77-46b1-88c0-7fd766655aa3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0ba1e454-4fb4-4586-952b-fdf4e4b625db"
        },
        "item": {
          "id": "3d31972e-f99c-421a-9e85-b6dbb1c62886",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "19fa5b9b-6744-4fa5-b7ac-b4491031c3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931a3519-9191-4a59-bba3-2a9cacc775bd",
        "cursor": {
          "ref": "4e53e17c-dea6-4d96-94bd-fcba47086a3b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "700fb2ef-09ff-4ec3-90d2-9a8449b9c07b"
        },
        "item": {
          "id": "931a3519-9191-4a59-bba3-2a9cacc775bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a51d971-91e5-422e-8ae8-e7f1f4acb376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec720b9-5893-40f8-915c-dd59a142b80f",
        "cursor": {
          "ref": "ca3a3c2d-895b-4d0b-b484-d8f7705151c7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2bdd43bf-cc91-48a6-942f-624eedb0d5fc"
        },
        "item": {
          "id": "6ec720b9-5893-40f8-915c-dd59a142b80f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c3557973-0395-4c74-ade1-85113d38de2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de6323f-ae90-4e4d-9109-b761d14019f8",
        "cursor": {
          "ref": "b7622371-7b63-490a-a660-c5bd6c74197d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "08d3e4fb-e48b-4759-acb2-8022965a77f2"
        },
        "item": {
          "id": "6de6323f-ae90-4e4d-9109-b761d14019f8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4846e6c4-6415-46ac-a336-3561fa4de60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a312cd4-98fe-4caa-a603-cb4081d8ba17",
        "cursor": {
          "ref": "7fcd703b-2292-4c26-9921-dd2605747947",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8aa23529-0245-4fd0-97d4-617f7da8ccf2"
        },
        "item": {
          "id": "4a312cd4-98fe-4caa-a603-cb4081d8ba17",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b8dde088-2653-47e5-8657-72c3bcfc4244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f9a9d7-5f2d-47b8-8fa4-4b68ee8e0fc6",
        "cursor": {
          "ref": "fa360329-e6f9-4d24-a12e-ab8e52fc67e2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "58aa5d22-f83c-426b-9913-dd38d6249253"
        },
        "item": {
          "id": "b7f9a9d7-5f2d-47b8-8fa4-4b68ee8e0fc6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "615a8dc1-27bf-49a1-a170-e0d102db3187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d32040-ede7-4a09-80ae-9fd4b63552e8",
        "cursor": {
          "ref": "c64a5450-e84b-4e52-8229-79d87414e563",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a62a6c40-dca5-4fb3-8134-0983d8027919"
        },
        "item": {
          "id": "e5d32040-ede7-4a09-80ae-9fd4b63552e8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aee02eaa-1cac-474c-995b-ae781e2af6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf0bdf-0f47-4863-b9fc-9111af8144ed",
        "cursor": {
          "ref": "faff77e2-a3e7-4a8f-be28-c1233981ee39",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "78c88a4d-9b17-4585-8972-5ff3726b31fe"
        },
        "item": {
          "id": "8faf0bdf-0f47-4863-b9fc-9111af8144ed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6447956e-deb5-477c-84fc-1c6a63409bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaaea82-79ed-4940-b8e2-49a3b9054493",
        "cursor": {
          "ref": "26a0bbe1-3362-45b1-bbed-045fad60ac56",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13e74ac4-2879-42d4-be29-f98b7e36011e"
        },
        "item": {
          "id": "aeaaea82-79ed-4940-b8e2-49a3b9054493",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9fdc038b-2c92-4565-9967-874d800900b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6f78f8-9ef9-4f38-98f8-76cebde5d4ff",
        "cursor": {
          "ref": "0dc63257-7510-4900-a93a-4bd928001541",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "77f0f91d-660c-4ffc-8a90-4d28e9eed702"
        },
        "item": {
          "id": "fc6f78f8-9ef9-4f38-98f8-76cebde5d4ff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "79a7f2e1-5f53-4f37-89b7-b33b53b0ce54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fd34e6-41e7-4927-8c99-9d866978a029",
        "cursor": {
          "ref": "16215ea2-cf58-43c5-8f2c-650b51dfeaee",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d1e8badd-2b93-4447-a7be-d19b562772e0"
        },
        "item": {
          "id": "f3fd34e6-41e7-4927-8c99-9d866978a029",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ccb681cd-fbdb-470c-bf90-5bc727e89f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801834d6-0247-41f1-9e5a-124522b9dcde",
        "cursor": {
          "ref": "ecdf71ef-5db7-4843-a522-1f36f78e6d2b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea2af8d9-d045-412e-9c3d-92a85b9f83f3"
        },
        "item": {
          "id": "801834d6-0247-41f1-9e5a-124522b9dcde",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c60d6915-a120-4223-b6bd-24df10df3442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337d4259-30c2-4755-b614-d0de67a44859",
        "cursor": {
          "ref": "365b8f3d-a51d-4c22-b5c1-8ace2e4c9f91",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ede8622-219c-48d1-b06e-b562df4b66c4"
        },
        "item": {
          "id": "337d4259-30c2-4755-b614-d0de67a44859",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e0e3ff20-455a-4c11-8b42-632818a85d73",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f3a7e-9986-468a-8543-528c6487c6f5",
        "cursor": {
          "ref": "805623cf-8916-4157-8566-b0d3c2755a9f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9687705d-ae73-4596-a268-ff308bae225d"
        },
        "item": {
          "id": "256f3a7e-9986-468a-8543-528c6487c6f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4555851a-c74b-4cec-a88a-87f824aabcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea61655-19f3-4399-96b3-61c6f4024649",
        "cursor": {
          "ref": "18782077-38c4-4495-ae3a-1f5a3c002b68",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cd1e37e4-2589-49d0-bb03-24bf4ddb9d7e"
        },
        "item": {
          "id": "aea61655-19f3-4399-96b3-61c6f4024649",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "264407c3-c3a8-4299-8bc6-0d9481321a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94bf3f5-2514-4a86-91af-1ec9b74e7201",
        "cursor": {
          "ref": "904ec281-e93b-4908-b2df-ef617cd0ce6f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a545e708-5cc8-4c26-b840-53c741a5a47c"
        },
        "item": {
          "id": "e94bf3f5-2514-4a86-91af-1ec9b74e7201",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bd325e11-cd97-42c7-8eda-882e7493cdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb93c72-74ad-40a5-bae2-6505f3abac9c",
        "cursor": {
          "ref": "5093e513-365e-4a05-bb4b-34fcbcd0aaa3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6e142ca7-6b2b-4830-8d36-936519ba3fe1"
        },
        "item": {
          "id": "0eb93c72-74ad-40a5-bae2-6505f3abac9c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cdc10f62-2045-40b1-85fd-2a1c294e3f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9668cda2-de9f-4522-ae3b-92ffe97b6aa0",
        "cursor": {
          "ref": "262af5aa-2592-44c4-98c0-ab82f54acdc7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "566df6c7-4de3-47d9-bad4-b7d646907b43"
        },
        "item": {
          "id": "9668cda2-de9f-4522-ae3b-92ffe97b6aa0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0f0c17cb-3ee7-427f-80de-be5c5e652800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bb593f-5102-42fe-8438-5eace95118a2",
        "cursor": {
          "ref": "58a8b5cf-16f4-4297-9ed5-d513816596ae",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea8500f1-bdb0-4f53-b013-ca497f5c47d7"
        },
        "item": {
          "id": "85bb593f-5102-42fe-8438-5eace95118a2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f7a8afe5-f911-4952-9564-61c036f76dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5cd46-f945-43bf-aa3f-d1ef60f88cdc",
        "cursor": {
          "ref": "00127bc5-7d27-4bfb-8c5e-951e0072d7c7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "973f6c47-02cc-447a-9865-ebbbabdb4b02"
        },
        "item": {
          "id": "edd5cd46-f945-43bf-aa3f-d1ef60f88cdc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a4c1a3e-51bf-4563-af3e-0d5b3cf73008",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8592fddf-95aa-41ab-9c3b-4a42f8eaa095",
        "cursor": {
          "ref": "692689d2-f351-42fd-8362-6cfa03d9cff8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b5516160-0720-42d7-8b45-8a284d30bb67"
        },
        "item": {
          "id": "8592fddf-95aa-41ab-9c3b-4a42f8eaa095",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "60d1c46c-6ba9-4066-bdf7-eb7e1d6229c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61714d06-2848-4cf4-9037-6ee7ef9633a9",
        "cursor": {
          "ref": "011f1089-33cf-4bb7-a2da-027847c8f4ac",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "980fc8fe-3ae4-48bf-9dc4-9c9fa713de99"
        },
        "item": {
          "id": "61714d06-2848-4cf4-9037-6ee7ef9633a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "05974aa4-5510-4a92-9b49-06b7e7cc027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d2cc0b-5ddd-4d1f-976c-735b572b3b54",
        "cursor": {
          "ref": "97beeff5-ee5b-4eab-8d00-643e01379d42",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6ba7cf84-699d-4533-80a9-48d6af4b60da"
        },
        "item": {
          "id": "c7d2cc0b-5ddd-4d1f-976c-735b572b3b54",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d12b653b-0611-4f1f-a7ae-63e52b1adf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0fe03f-14e8-46f3-a359-f009dd53eb05",
        "cursor": {
          "ref": "d7c040e6-dac4-4c5d-b45b-3b407f21ceec",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a835d292-5ad4-498d-9920-17f0b2b6e586"
        },
        "item": {
          "id": "2d0fe03f-14e8-46f3-a359-f009dd53eb05",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73be5b25-409e-4c00-a361-32e24fd0ff60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe9bf77-0a82-4d12-89c1-10ff1eeec7ce",
        "cursor": {
          "ref": "e2f7c975-a403-412c-b87a-33477816d349",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b9d5b110-8ebb-493a-bf71-41d1be372bab"
        },
        "item": {
          "id": "afe9bf77-0a82-4d12-89c1-10ff1eeec7ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c8727c2c-d95a-463b-84b9-ff643fde887b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cf2111-0b43-4e67-93c5-d57b522c965a",
        "cursor": {
          "ref": "bd2df812-8c95-4cef-9488-de026479100d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "86e2c82d-8b91-43a4-bad5-e7a6bba8c65d"
        },
        "item": {
          "id": "c9cf2111-0b43-4e67-93c5-d57b522c965a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2d4b1b2-fe04-4556-b05b-d0bd8a9e6564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788597dc-fb91-4bf0-8cf5-7c4b1fcb94ec",
        "cursor": {
          "ref": "e040bd19-e1a7-44c8-8919-1e92caf1d6e6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f94aeb3b-e98d-4d08-a034-fbae720092b3"
        },
        "item": {
          "id": "788597dc-fb91-4bf0-8cf5-7c4b1fcb94ec",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4e0af959-86ea-404d-880b-de06465c7b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d862bf3-96e5-4a50-b832-20ecc9a98dad",
        "cursor": {
          "ref": "16907ae7-b153-46e8-aade-4491deb1ac9c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3388d91a-9da2-4918-9989-1a56a66602c6"
        },
        "item": {
          "id": "6d862bf3-96e5-4a50-b832-20ecc9a98dad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc79dc32-2f2c-46d4-9b41-d022f3659900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae62fa94-3438-4ca1-bc43-d69f410960e3",
        "cursor": {
          "ref": "f1585e7b-7afe-4218-844f-7f2f5d995dc8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "362f6565-04be-4466-982d-bf5d4134cf22"
        },
        "item": {
          "id": "ae62fa94-3438-4ca1-bc43-d69f410960e3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b413e35f-3b1e-4c0c-8e4e-3c5a19b0be64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6305519d-e801-4cc2-a344-79dd32b9f7bd",
        "cursor": {
          "ref": "ee6c4566-2da7-482d-9262-267491a89a15",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2a02a6c5-8258-4d38-8160-7c1f35a384a2"
        },
        "item": {
          "id": "6305519d-e801-4cc2-a344-79dd32b9f7bd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1457dacd-b06c-4c65-8155-210d3276f08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721be98c-3b17-4d1b-a387-c3202f76adb3",
        "cursor": {
          "ref": "3cdd3f97-367b-418d-8c7d-326b3960993b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9d98c430-0867-41ba-ad2f-d59c219659a0"
        },
        "item": {
          "id": "721be98c-3b17-4d1b-a387-c3202f76adb3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "21b1cbb8-0648-4208-babd-965b576da4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d9962a-c332-476f-960d-198eb115aa37",
        "cursor": {
          "ref": "83c8ccc7-fc92-4afc-8e06-0c92566d591e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6af495e9-ac38-4f40-b67a-01a133b5d2db"
        },
        "item": {
          "id": "e0d9962a-c332-476f-960d-198eb115aa37",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dd6ee121-eabf-4547-94d0-608548ecc600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b6388f-90d5-4fde-98d3-f79ac9c5a659",
        "cursor": {
          "ref": "18ccfb36-240d-421d-9bfc-f1ebcc8d7953",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e782cf3-52c7-40d6-9a4f-c03bb06847b5"
        },
        "item": {
          "id": "71b6388f-90d5-4fde-98d3-f79ac9c5a659",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "abf43b41-0393-48eb-b851-6b137180a729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d6e495-d50a-4df6-83ff-d84e965d2953",
        "cursor": {
          "ref": "1ede1194-5bb3-4c97-b387-789b67a3c496",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ab4180fe-8c12-46b2-9071-4508420fae1f"
        },
        "item": {
          "id": "d9d6e495-d50a-4df6-83ff-d84e965d2953",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a694bb82-c07f-437b-9c87-671764f2a19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa995cf6-9aed-4aa3-aef6-4105f6f2eb15",
        "cursor": {
          "ref": "8c5bf160-3476-4e28-84bd-602e637b6fcf",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "963933ba-172b-4e65-b1db-5ddc57f1c587"
        },
        "item": {
          "id": "fa995cf6-9aed-4aa3-aef6-4105f6f2eb15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d26e221e-3155-44ec-83e2-1292e260f1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9d0180-9b34-4f57-a6e0-7eeba371e94c",
        "cursor": {
          "ref": "c138ddc3-91fc-4c6b-8281-a881d375b50b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd8d51f3-3951-466a-a6e6-4ff82ba7c59b"
        },
        "item": {
          "id": "9c9d0180-9b34-4f57-a6e0-7eeba371e94c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "87d0662f-6ba4-48ce-b228-66818127edf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1941eb4-7c59-4bb2-85cd-6efde0d4f208",
        "cursor": {
          "ref": "2822b753-617d-4346-9ff1-e596d661464d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7a754b58-9256-490e-8e93-b63a87da3329"
        },
        "item": {
          "id": "c1941eb4-7c59-4bb2-85cd-6efde0d4f208",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c9cfacac-a23d-40ea-be81-88270a8a66a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a90e9d-cdc8-42ab-a41e-17f4109d00d9",
        "cursor": {
          "ref": "4fecf2a0-4c3c-4a14-b9c4-1d010c83a6ed",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0e3bdd1a-f769-498b-98bf-9928cce5aad5"
        },
        "item": {
          "id": "64a90e9d-cdc8-42ab-a41e-17f4109d00d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aaa7d9ec-8f28-425c-ac48-f0913ed7fb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f977e-2ada-4b14-a228-c958731d3be7",
        "cursor": {
          "ref": "4e648043-4e8a-4e9d-bf30-f511d12185b5",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5f7cdfba-5579-42e4-b978-3c196adf4e54"
        },
        "item": {
          "id": "ae4f977e-2ada-4b14-a228-c958731d3be7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "78844f17-bf7e-4e2f-ab11-58716087ac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b2997f-4abb-4a83-af08-6ace0b37b0bf",
        "cursor": {
          "ref": "db6e2fd0-98d0-44b4-8a1c-2f2d21dd22c7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "866acb6e-9861-44d3-9c62-bfd6e7eead16"
        },
        "item": {
          "id": "54b2997f-4abb-4a83-af08-6ace0b37b0bf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e265c6ce-ede1-42f9-bb09-d8631f5e2001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953554a-fe93-4494-a60b-122eb2a5bb68",
        "cursor": {
          "ref": "f59540b7-bb7f-44b2-b4b7-99696b97099a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3b578602-6332-457b-89a6-dda5267389b4"
        },
        "item": {
          "id": "5953554a-fe93-4494-a60b-122eb2a5bb68",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2861d557-2805-48f1-8760-21720a7f8fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f170568f-d1d6-492a-a36b-12a94be0e4f0",
        "cursor": {
          "ref": "22e94e57-c680-4517-9157-525df160ff3d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "34fc8bcc-0052-42b8-8c33-9d2c608285e0"
        },
        "item": {
          "id": "f170568f-d1d6-492a-a36b-12a94be0e4f0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a30d339c-ce8c-4d72-91b1-ade9ee0a408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa58b50-3d36-4422-8683-c6da6531ccd2",
        "cursor": {
          "ref": "06fff080-fdac-41da-b29d-d1df7552741d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3afd4b7-2875-4a6c-999b-9138f1fcc98f"
        },
        "item": {
          "id": "daa58b50-3d36-4422-8683-c6da6531ccd2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9184efa0-2370-4d73-84b7-b1cd0c05be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed69ff4-d440-47d5-b9ed-aeca7509a010",
        "cursor": {
          "ref": "0c3593fb-97bb-4ad3-b435-b8df0a78f24c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "026d8b77-67db-4366-902b-b77c1c7eb0a1"
        },
        "item": {
          "id": "3ed69ff4-d440-47d5-b9ed-aeca7509a010",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ada6df5d-0c1f-4788-bfb9-d8fd209e8c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ac0e4-bdd3-472a-844a-c46133e9577f",
        "cursor": {
          "ref": "fbf0fdb0-4d2b-4283-a7ec-ece0ff150670",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "27fbee13-af9c-4ad6-b2b0-2dfb9dd792c7"
        },
        "item": {
          "id": "7b1ac0e4-bdd3-472a-844a-c46133e9577f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d54a4261-bd82-4418-98f3-57acbf2d779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4221028f-6439-4232-9c1e-cb9790de9557",
        "cursor": {
          "ref": "b247c3d5-43e7-4e02-aeb8-c7ba4dbc580f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1bf658ea-93c2-44b4-b871-32458ed8ea9f"
        },
        "item": {
          "id": "4221028f-6439-4232-9c1e-cb9790de9557",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8c14066d-1ba1-4be9-9e66-ccac945bc071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f264dca-c964-4aa6-80d6-e62fdaf212af",
        "cursor": {
          "ref": "5a6d703b-9b2c-4640-97bf-1cfb9022d807",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f3bc34d5-5c0d-4f4b-bafc-e10468dc38d3"
        },
        "item": {
          "id": "3f264dca-c964-4aa6-80d6-e62fdaf212af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "847bd850-f26d-40f4-be1b-d3e21132dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae75c4-d8d9-4b01-b529-dd2a776f6ce9",
        "cursor": {
          "ref": "4c7440b4-0a2e-4b0c-bbf5-9ee64dc83017",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "26a48293-1661-498f-9ce7-00636b982851"
        },
        "item": {
          "id": "36ae75c4-d8d9-4b01-b529-dd2a776f6ce9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8e7a9c72-5d58-49b7-bf81-1cd882a8d766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6dc5b4-4039-4550-b828-db9f2d823d44",
        "cursor": {
          "ref": "6c2f3ccd-2db1-4ab4-a046-28d6e7acf074",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fae47b25-7bdf-43df-b769-918a4c364502"
        },
        "item": {
          "id": "ae6dc5b4-4039-4550-b828-db9f2d823d44",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "898e1731-2475-458c-b767-53580ff1831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33742c1d-e92e-4594-bfee-b0c239a06fc1",
        "cursor": {
          "ref": "3c06f02d-9b1a-41a4-95a4-8ac7e1e74bae",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df9b3f3a-e2ad-465c-963e-0220efaf953c"
        },
        "item": {
          "id": "33742c1d-e92e-4594-bfee-b0c239a06fc1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea2e1e39-de41-4f3f-b9dd-960c3e17e7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14546d5-6d2d-4b62-96b8-030b505cf157",
        "cursor": {
          "ref": "e9549d2a-9a01-4bf9-883c-1fbe17af987a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c0f69c1a-0f51-4c5e-a945-1597f3c06756"
        },
        "item": {
          "id": "c14546d5-6d2d-4b62-96b8-030b505cf157",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "160de284-89db-48ea-887d-91400da0b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e1f2f8-c8b2-4261-a77a-6fac2f631dfc",
        "cursor": {
          "ref": "d3dae1cf-5f8d-4988-9f08-95a52b6347c9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a57afbf7-7d9c-43a9-8140-3b279bd1aeec"
        },
        "item": {
          "id": "27e1f2f8-c8b2-4261-a77a-6fac2f631dfc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "99de44bf-a894-457b-813f-aca02c22b7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82907a30-8ac6-4fba-8ca8-746890170012",
        "cursor": {
          "ref": "4d50464e-3d6b-4977-824d-7c5d978e6fb0",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "82000cc0-94da-4df7-8dcf-4f32b5f74873"
        },
        "item": {
          "id": "82907a30-8ac6-4fba-8ca8-746890170012",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7c724ea0-a0da-424f-be5b-b0d147e513cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c33698d-905e-4297-8414-ccd2fbd8e227",
        "cursor": {
          "ref": "d607a1e6-7adb-44b6-a0b9-c980fb175f54",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e4bfa4e7-985d-4440-978e-24e558514111"
        },
        "item": {
          "id": "7c33698d-905e-4297-8414-ccd2fbd8e227",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c50455b7-4c25-4556-b861-b058ff20c724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c09e33-0b30-4a5d-b3c1-8d3f1606e157",
        "cursor": {
          "ref": "5e993932-d03e-4f29-a832-6201b7d73334",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "472ba5aa-cc59-4a21-9729-e33b9b127f4b"
        },
        "item": {
          "id": "f0c09e33-0b30-4a5d-b3c1-8d3f1606e157",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "180b29a0-d182-415b-8209-af5814a163d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0993f4a-1878-4f26-beb8-bc327d0d33e2",
        "cursor": {
          "ref": "23d6b8c0-1220-4354-942c-c40daa38f887",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ab0d8f39-64f6-4218-ac01-54f4beb83852"
        },
        "item": {
          "id": "d0993f4a-1878-4f26-beb8-bc327d0d33e2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "60f1d494-3d9f-4f01-95d4-78352e35a960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad961ea-9c8c-4071-8a8e-033ceef461aa",
        "cursor": {
          "ref": "d10e8a00-3484-4d2d-8e10-654b8ea7119a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "145d9659-f35e-4462-ae9e-97bdfb069c84"
        },
        "item": {
          "id": "7ad961ea-9c8c-4071-8a8e-033ceef461aa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e2b43d4a-226d-4aee-8eeb-03889f39bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cad732-d5e3-4a31-89ef-3d1845994748",
        "cursor": {
          "ref": "072beaf1-eab1-402e-b9dc-ef1c0fe4dbc2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7d16132-8f8e-4000-8799-7d9f1a047947"
        },
        "item": {
          "id": "28cad732-d5e3-4a31-89ef-3d1845994748",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7af050c6-d232-42e6-b2aa-452994bb6a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e4d59-90b3-44fb-9db6-f5f057518702",
        "cursor": {
          "ref": "dd69dfba-1e59-4ae8-a196-b5c3ba8a2d96",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad23101e-c5a9-4598-ba81-76ecae27fe4a"
        },
        "item": {
          "id": "d63e4d59-90b3-44fb-9db6-f5f057518702",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f40cd97e-08e2-44c9-8b84-ed76ff5c6105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac42560-782b-4002-adaf-4bbfec09ecbc",
        "cursor": {
          "ref": "5c7c0b87-94de-46c5-8a36-69a263ae2776",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "032913da-f515-442e-8685-3697fd8e1151"
        },
        "item": {
          "id": "9ac42560-782b-4002-adaf-4bbfec09ecbc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b761d116-914d-417f-b21c-3c0d3f641e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05eaa49-3361-44ce-aac6-f4299a5f6a43",
        "cursor": {
          "ref": "0030539d-f9ab-44f3-a008-d4d265196f6c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d5dc3364-5298-43f1-a1a9-1a357f8b09f8"
        },
        "item": {
          "id": "e05eaa49-3361-44ce-aac6-f4299a5f6a43",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "430a6ee0-442d-4dbf-ae18-87060db1dd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b1fc14-0dab-455c-b377-37d0c2cf0469",
        "cursor": {
          "ref": "a43f0bf7-7744-4662-b6fc-38196445e215",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "11c073fa-cdd7-4a04-bcef-ff1931a42702"
        },
        "item": {
          "id": "d8b1fc14-0dab-455c-b377-37d0c2cf0469",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1ded0839-e6be-49cb-938a-01244b4e6cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74e4e85-833e-454d-a7fd-048c685a0a9d",
        "cursor": {
          "ref": "cbfdf0a9-c417-4947-bfd8-76eae1d47999",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "84526e63-726c-4094-b3d4-1877723d4d91"
        },
        "item": {
          "id": "f74e4e85-833e-454d-a7fd-048c685a0a9d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea885623-3228-4674-997c-9632e6e9eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8596ddf9-99d9-4047-84c0-4b3782812667",
        "cursor": {
          "ref": "807e5d3d-62a6-41b3-8f1d-d936312b3727",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c4ee3cfb-47c1-4d21-9d83-0bd6defa8893"
        },
        "item": {
          "id": "8596ddf9-99d9-4047-84c0-4b3782812667",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eef7a7bb-9479-409c-80e4-4a73861c542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f543479-113e-4a31-a499-eca673032fa1",
        "cursor": {
          "ref": "31df9273-5c84-4b2c-8300-2fb0de4a7f58",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f97101d2-e6fd-46ab-b1b2-7264c1b0bd4d"
        },
        "item": {
          "id": "7f543479-113e-4a31-a499-eca673032fa1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "26ee0ccd-3474-458a-b522-9bc024aa4e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd6958e-0ef5-4490-b27d-8d55f2ff12a3",
        "cursor": {
          "ref": "f7a7042f-0863-4496-a9e6-f1391e9560cd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4717e502-dc98-4d7a-8052-4a8e390c775a"
        },
        "item": {
          "id": "5bd6958e-0ef5-4490-b27d-8d55f2ff12a3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d737ecc3-3b4c-4979-89be-5c532ffc9aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8d1119-d262-44d9-a1a7-c391b6dfc56c",
        "cursor": {
          "ref": "bcdf6b68-1fb6-4ddd-bd9f-57ec7e61a9f3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8670d4cd-f5b6-408b-86ba-23678a8cb948"
        },
        "item": {
          "id": "dd8d1119-d262-44d9-a1a7-c391b6dfc56c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1be1c6e4-c670-4911-98e3-401e5561a80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc7ecb3-3919-4095-be2d-0ec9bd56c3fe",
        "cursor": {
          "ref": "aba9410b-e75b-40ba-b3f9-5da2a1e2725f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3b3974a3-d86f-46ce-b35d-b083031f9769"
        },
        "item": {
          "id": "2dc7ecb3-3919-4095-be2d-0ec9bd56c3fe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5e4d44db-f435-4a84-a254-f34398f3f2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d8bf85-4a7c-45fa-a5f9-2e64576a9816",
        "cursor": {
          "ref": "d620935f-a8da-4e06-a81f-d949870874fe",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9b729db8-fa22-4f0b-a250-3622dc74a12c"
        },
        "item": {
          "id": "06d8bf85-4a7c-45fa-a5f9-2e64576a9816",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "238af6b5-9763-4112-a969-e54d088a4d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adca1c8f-5ddd-4b3d-9d00-208cbe91d195",
        "cursor": {
          "ref": "6e88109c-9ec0-4269-b30f-9a86c085d64f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b8e05a54-26a8-4637-be07-3b90aa479288"
        },
        "item": {
          "id": "adca1c8f-5ddd-4b3d-9d00-208cbe91d195",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e1fc22e4-eb9c-4177-b1cf-8ad05e054f5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab572940-619a-4c05-a82d-65ded63ec2ec",
        "cursor": {
          "ref": "4c351a57-1860-4af0-9058-3fba84b75934",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b88a2022-4f7c-44de-a0ef-926f7d0f31e0"
        },
        "item": {
          "id": "ab572940-619a-4c05-a82d-65ded63ec2ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7d6d67d2-4c88-4eb9-9867-12122588c630",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9bbc18-50d7-4832-a225-f05d19e37983",
        "cursor": {
          "ref": "1e164aa5-c5e3-4190-8e25-4a41fbfeaa7a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b070df0-18e0-40ea-8289-60bb9dfccfee"
        },
        "item": {
          "id": "ef9bbc18-50d7-4832-a225-f05d19e37983",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "817aac32-94eb-4ba6-870a-5963678aba68",
          "status": "Created",
          "code": 201,
          "responseTime": 269,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bc626f-8db5-450f-b915-992c5c788d9d",
        "cursor": {
          "ref": "55287476-5e9d-4bb3-a613-724d625e95ef",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bdc9bcaf-37eb-47e6-a5f5-909b37539620"
        },
        "item": {
          "id": "15bc626f-8db5-450f-b915-992c5c788d9d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c69ae035-a56b-4276-9872-83364e9bec0c",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a3c69-41b5-4ae7-a52d-c4b1a28dd81a",
        "cursor": {
          "ref": "4b84108d-9f06-467c-940b-3a2d82ac7c87",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2de74efd-56fa-4fbd-a5e9-2c7f27139c1a"
        },
        "item": {
          "id": "ba0a3c69-41b5-4ae7-a52d-c4b1a28dd81a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d99e76e7-add2-4009-88d0-fcda9c85f0bd",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb071b0-c520-45eb-96d8-ad3797971a7e",
        "cursor": {
          "ref": "4540c959-03d5-449a-a151-b99eec2cd1c3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "49f2f7f8-6a9d-4c3a-92e7-cc21f049b25b"
        },
        "item": {
          "id": "8eb071b0-c520-45eb-96d8-ad3797971a7e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c6daf074-aa4c-4cbc-8889-df3aad00c92c",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cee5c6c-64fd-4428-a499-509031a5a1bb",
        "cursor": {
          "ref": "effac9aa-a07d-4ec2-ac3e-95d1cc69ebe9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f99d9f6f-ec7d-43d2-86b5-7ad651d160bc"
        },
        "item": {
          "id": "9cee5c6c-64fd-4428-a499-509031a5a1bb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e5f5a859-85a0-41e1-9ef9-ceeee88e0bd2",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec4047a-084f-4a80-9c0d-c077fb30f3ba",
        "cursor": {
          "ref": "b9043f4b-a67f-4520-b2df-ac2891c4067c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1d4e2080-e272-443b-8565-ec2a8433c041"
        },
        "item": {
          "id": "eec4047a-084f-4a80-9c0d-c077fb30f3ba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7cb40bfe-ee10-45f7-818b-11dc62f47927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f561be-e9a7-4467-bc88-afce9d22b380",
        "cursor": {
          "ref": "445a3c24-320c-4ed7-bd47-8017ccbb3f8d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "749401c6-8d22-4aa7-ab19-34da8cc68d66"
        },
        "item": {
          "id": "d4f561be-e9a7-4467-bc88-afce9d22b380",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a56e806a-1f9c-442e-8514-61353d0a26ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb6573e-7381-4016-8ca4-3c77653f9479",
        "cursor": {
          "ref": "a860e523-8dbe-40fa-8d58-1cd4464ca540",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1f514e15-9105-4331-9212-fa1a489a888d"
        },
        "item": {
          "id": "5fb6573e-7381-4016-8ca4-3c77653f9479",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f105d84-0e7c-4837-a7ed-834d7471dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0103fddc-32d4-4e7c-9b88-9270794ceaf4",
        "cursor": {
          "ref": "5559cead-4452-4a59-97a5-01148bdaede2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26574d13-b20c-4acc-897e-cadb8c96c45c"
        },
        "item": {
          "id": "0103fddc-32d4-4e7c-9b88-9270794ceaf4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "12555687-af1a-4f7a-96c7-50814f6614ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853425ff-7e7d-47bf-a97c-e647885fe474",
        "cursor": {
          "ref": "fd4a7a24-eb8c-4aab-8634-c7fc5ca72bd3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8a719348-bfd9-443e-8ccb-3d6d26d195a0"
        },
        "item": {
          "id": "853425ff-7e7d-47bf-a97c-e647885fe474",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1c70857-3ce4-4ddc-a8f4-e4f9fcfea92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856574aa-71c3-44fe-bd28-bafd0fd0267b",
        "cursor": {
          "ref": "48bd5f98-3364-43fb-955c-a91f20073fb7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c958e312-c10f-4734-8e5c-2092210367ba"
        },
        "item": {
          "id": "856574aa-71c3-44fe-bd28-bafd0fd0267b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a009bd5d-81ab-4cd2-a6ad-225324c1a89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc47143-55cf-4f3e-8449-e75f68360c7b",
        "cursor": {
          "ref": "2504867b-149b-44c9-ab2a-211989c02574",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33c8d800-d421-4a8f-90ba-dc69bb0b3fab"
        },
        "item": {
          "id": "1dc47143-55cf-4f3e-8449-e75f68360c7b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ad6c84e-5036-4876-b315-0f4c5345554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e472f-d34d-4136-aff2-3aa08962742b",
        "cursor": {
          "ref": "16515726-b641-42ed-899f-dc02a5035304",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c9730fac-4632-4d31-9ffe-f8fae08e62a7"
        },
        "item": {
          "id": "c70e472f-d34d-4136-aff2-3aa08962742b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "44270dbd-a3ec-476b-9ab4-2f28c7e5061e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b8002f-b24e-4b46-b720-830733b0e6f1",
        "cursor": {
          "ref": "ebd222ca-2ffe-4783-929f-27044e18ade0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "66101815-d690-4276-a776-8da6dd0e3c2a"
        },
        "item": {
          "id": "e9b8002f-b24e-4b46-b720-830733b0e6f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "07b1f4f3-a3dd-4904-a607-4d065e25fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e976d5-df85-48b7-aff0-e8ba7319bfdd",
        "cursor": {
          "ref": "bcb0be3b-6a2d-4b35-bc6c-5cce920e95c3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "509ae1de-9df8-4924-9ab8-5a2ac6ddc782"
        },
        "item": {
          "id": "f8e976d5-df85-48b7-aff0-e8ba7319bfdd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "00ed9522-b315-4b32-a2fb-0a1a018d5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef25071-9e1e-4739-ae96-79110179e4f4",
        "cursor": {
          "ref": "da4930b1-c94b-44f4-97cb-c90becb20f2a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "567cbe10-e222-4214-b96e-20728ad4324e"
        },
        "item": {
          "id": "2ef25071-9e1e-4739-ae96-79110179e4f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d802416-c565-444a-a975-426d5ac74994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad64dea-dfef-4988-9da9-8a62b8800a28",
        "cursor": {
          "ref": "f0b28622-c58f-4e96-ad23-e0d52439f60f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5c923613-41ec-43dc-8083-3e7663744928"
        },
        "item": {
          "id": "aad64dea-dfef-4988-9da9-8a62b8800a28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2dc6ec52-e3cc-4b58-99c9-f9e35985a3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0566c1f-dd7a-4e08-bc45-4ecabc3f83c1",
        "cursor": {
          "ref": "32213b58-260e-449e-b91f-aed01c496995",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a4d37923-056c-4c2b-988e-ed1a8fc71204"
        },
        "item": {
          "id": "c0566c1f-dd7a-4e08-bc45-4ecabc3f83c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3489fbb0-9af0-4659-a0ad-2d8981b3f323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcb1534-8908-4924-8f37-872c13efc67c",
        "cursor": {
          "ref": "416eb33b-a2e6-4606-83ae-6be9f10c00a4",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0f2dca0e-45ff-4174-bbf6-d2aacce1be7a"
        },
        "item": {
          "id": "0fcb1534-8908-4924-8f37-872c13efc67c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cddd25bb-d864-451c-a7a9-6da64abd9b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9cd3a2-fa40-48d1-9e3a-e07d6d31b0cb",
        "cursor": {
          "ref": "e82c10ef-9790-4f2b-99e6-f71e894d5411",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c34ba4f-b44c-49f8-a989-7cfc51b10309"
        },
        "item": {
          "id": "bf9cd3a2-fa40-48d1-9e3a-e07d6d31b0cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6a4a6728-9a6a-4c7d-a8f8-a798b7f19399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d99559b-4e4f-47b6-bcc0-29fe9bcb16c6",
        "cursor": {
          "ref": "2c5c84d1-01ee-49de-9b1f-be9ad71eb19e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bcf0952f-2dc7-4882-ab36-4289e93e0d12"
        },
        "item": {
          "id": "0d99559b-4e4f-47b6-bcc0-29fe9bcb16c6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "38773e03-188a-4dd8-8cb4-4bd3800487db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f2ca42-231d-40ad-9130-d92161ee1fa7",
        "cursor": {
          "ref": "b98d9dbf-8d1d-432c-82d0-ea945bdb5013",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "128c17a4-fd3a-4712-ae04-7ea94c5308e3"
        },
        "item": {
          "id": "35f2ca42-231d-40ad-9130-d92161ee1fa7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d752437-c783-422b-84e3-274c92ba5b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db27ab2c-cba8-471d-96e4-d78644e7f830",
        "cursor": {
          "ref": "0f001fdd-7ae2-48b7-9721-f44d46e9d3c4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c027e481-5dc8-45a9-9cfc-e9b64172a4fc"
        },
        "item": {
          "id": "db27ab2c-cba8-471d-96e4-d78644e7f830",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "400f3e43-9945-4b82-b0e5-554841bd3a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e7a30e-c927-4605-a052-254e93bb20ff",
        "cursor": {
          "ref": "415f8908-a6c4-4775-9221-27f95e4db527",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7ce4d015-1967-4175-a963-6eb8895f7fe8"
        },
        "item": {
          "id": "c4e7a30e-c927-4605-a052-254e93bb20ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8030c150-16d9-4598-a55d-5e8add808068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884832b8-37fe-4c83-80cb-42136f18512b",
        "cursor": {
          "ref": "2c764b89-b94e-4e4f-947d-3e3ab54f32c3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "50583ac7-ac79-41f5-887f-e12690da45aa"
        },
        "item": {
          "id": "884832b8-37fe-4c83-80cb-42136f18512b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1184b28f-4504-4f76-b2bd-5d5c29b048de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb61a90-e537-495a-9d5b-58caa52fa291",
        "cursor": {
          "ref": "114ed08e-4d4d-46e4-b858-a30a1885a685",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16e12459-8684-4a8b-9b7b-b5d3d8e61686"
        },
        "item": {
          "id": "0cb61a90-e537-495a-9d5b-58caa52fa291",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64fd54bd-9e2d-46d6-b453-991581a02828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50018a70-26da-4c4d-9a26-eeb513924072",
        "cursor": {
          "ref": "ee835501-25c6-4189-8bbd-b841000a327e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0ecbac8-323c-48d9-8e38-a732b450ccee"
        },
        "item": {
          "id": "50018a70-26da-4c4d-9a26-eeb513924072",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d52ff40d-8061-42fa-910c-d8148f7ffa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be6e5ef-bc5b-4cf5-b9fb-f57a686bb03b",
        "cursor": {
          "ref": "35482b02-6182-4e7f-bf54-98e5d5544e2e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2cffeaf-a9ae-4747-9003-6610d77af179"
        },
        "item": {
          "id": "9be6e5ef-bc5b-4cf5-b9fb-f57a686bb03b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fe68e92b-0dcf-4ad5-82f2-664de3f33253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c0fdc6-e446-4a3d-9419-3a8101cd92de",
        "cursor": {
          "ref": "dda33c82-515c-4114-9f87-267e9233f296",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "76ee6cfe-3040-4747-8345-27a385115108"
        },
        "item": {
          "id": "b1c0fdc6-e446-4a3d-9419-3a8101cd92de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "37bc9550-518a-4436-9d10-66f4b7df8543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355db674-6e15-40db-b746-011a9ad93d7a",
        "cursor": {
          "ref": "5dce68dc-4741-4ce7-9a14-63615b5a84af",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7114a65a-a93a-4865-a4dc-f41531119ad9"
        },
        "item": {
          "id": "355db674-6e15-40db-b746-011a9ad93d7a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ecba930-c0f9-441c-9d11-09210d350b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62929df0-a754-4d76-bcbe-cfe0fc82a6c0",
        "cursor": {
          "ref": "beff88b5-a639-4e84-85aa-9aa5402870d7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c184a457-1d8c-46d2-bb6d-93e04eff35e6"
        },
        "item": {
          "id": "62929df0-a754-4d76-bcbe-cfe0fc82a6c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68a0c7c5-70ca-4485-98eb-33b1db1a8c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e669439a-ce64-4cc6-9eca-b288d3107b6e",
        "cursor": {
          "ref": "bc934fc4-3d3f-49cf-a162-8d25ea3515f2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "265965d8-6d8a-4856-8c84-9e09d4ec99c6"
        },
        "item": {
          "id": "e669439a-ce64-4cc6-9eca-b288d3107b6e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "673de1cf-2bcd-4d90-87aa-bb33d05c6498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62305c01-87f6-47a5-8542-791c3d13e53c",
        "cursor": {
          "ref": "1142b457-2df8-48d6-bf9f-0cdf732ba5c2",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7745e1ad-d4c9-404a-8daf-07654cfe3e18"
        },
        "item": {
          "id": "62305c01-87f6-47a5-8542-791c3d13e53c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aed97b68-9307-4ee3-80fb-6e6c40f2db0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bff1566-bb52-4b5d-b0be-03da36070663",
        "cursor": {
          "ref": "a4ba6c52-3e61-4a17-b9f7-8822dc699869",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7bc0e39e-1616-4e2b-852e-0498f6a958af"
        },
        "item": {
          "id": "9bff1566-bb52-4b5d-b0be-03da36070663",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6bb5f978-0172-4bee-88ea-bfc14dec58fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c743c63-9f98-463a-955b-3809b486bd3c",
        "cursor": {
          "ref": "c5d4a8a0-e954-4198-a83c-31af1eb6f011",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "07c35359-ea19-42d9-b2d3-99771ef694ce"
        },
        "item": {
          "id": "2c743c63-9f98-463a-955b-3809b486bd3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "779ef1dd-33c1-40a9-86c3-cbbef401483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742dd949-f2a6-4f49-b223-b9b4cb1228a9",
        "cursor": {
          "ref": "aa04559a-4de9-4bd3-ac95-373e73a93191",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2d9b448e-9d4b-471c-bc21-eaa0a1b323f0"
        },
        "item": {
          "id": "742dd949-f2a6-4f49-b223-b9b4cb1228a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f4cb3124-42d2-49a4-9745-72fe1010fb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb28b5d-270b-4acc-8635-5c06b3f8f473",
        "cursor": {
          "ref": "7eb326cf-06b8-4c09-a32e-90a27866b97c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4b80060f-99db-420b-8f77-8b709d487c1e"
        },
        "item": {
          "id": "dbb28b5d-270b-4acc-8635-5c06b3f8f473",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b3a0cbf3-4974-455a-87a3-3af87c2e7c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8f66a4-73f1-45c4-89ae-ccd912eedc6b",
        "cursor": {
          "ref": "815def54-c41c-48b4-8fc3-761115af16b9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f70844d6-730e-4ae6-a5be-df1e4f357812"
        },
        "item": {
          "id": "2f8f66a4-73f1-45c4-89ae-ccd912eedc6b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ea4fc880-95b8-4123-be00-9265f34fe306",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f01b48-5b2f-4331-b433-d6651d0ac20c",
        "cursor": {
          "ref": "8bb4357a-cf6a-46e6-b0d8-2f35baad56de",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ec7d3de6-d9cb-43aa-bed7-c6c6f4ba6c54"
        },
        "item": {
          "id": "c1f01b48-5b2f-4331-b433-d6651d0ac20c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c5bbac8-0426-4add-a845-aa97c0ec7ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7556eccc-7278-4614-b8ab-f3813acfc789",
        "cursor": {
          "ref": "9b9ab619-19ef-4f71-be84-d7d88d6448ef",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bacd51f1-b92e-48e8-b17b-4876f3f783bc"
        },
        "item": {
          "id": "7556eccc-7278-4614-b8ab-f3813acfc789",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "481278fa-847b-47aa-8d17-88d441556c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cdf1fb-4298-441c-b7f2-0d86ba03c595",
        "cursor": {
          "ref": "4a64ed20-adad-46ac-b9ab-59cf2f71e657",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b975fc54-27a7-4418-bbaf-95af92a22873"
        },
        "item": {
          "id": "10cdf1fb-4298-441c-b7f2-0d86ba03c595",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "047d94b1-71ea-4d80-9d82-896f7de66057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6822a30-4151-4e56-9d77-ae51beed60e4",
        "cursor": {
          "ref": "46a83e02-587a-45e8-8efd-b6533f0cd55c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f931b562-cc2c-41c6-b46b-38ec1c34befc"
        },
        "item": {
          "id": "c6822a30-4151-4e56-9d77-ae51beed60e4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "86941144-f957-4b3f-b7ba-920802649ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a1618-b1c1-4300-a203-4bf5683f6764",
        "cursor": {
          "ref": "33cbe16e-1a06-4fe0-bf07-3cd92f1a3d73",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e5109144-edd9-43c3-9687-961a4cf33555"
        },
        "item": {
          "id": "936a1618-b1c1-4300-a203-4bf5683f6764",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14cff48d-8ef0-42ec-a374-d17b1fb62ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518b5934-988a-4a26-9dcd-005b1b03ac7e",
        "cursor": {
          "ref": "937a5af7-3f51-47e9-8b7e-93709dc7d280",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c245da6e-c983-43d1-a30d-a06f37779709"
        },
        "item": {
          "id": "518b5934-988a-4a26-9dcd-005b1b03ac7e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "661c23cc-31e4-49b8-b19e-baefaf5c05d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f88785-965f-4e9c-beb0-ddc8a34dcaea",
        "cursor": {
          "ref": "e6d9ba3d-121e-4a6d-8db3-954987c3998a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db04f84a-e5a6-4794-af66-35156b83e68d"
        },
        "item": {
          "id": "73f88785-965f-4e9c-beb0-ddc8a34dcaea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "556754ad-5a26-474e-a927-2b1cd96926fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e59e363-193c-411d-84e4-57a0e03ec738",
        "cursor": {
          "ref": "9ef5d99c-09c1-4abf-9fbe-36da56b73c92",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cfc4d90e-ee16-4d03-9ded-afe1df5e91a9"
        },
        "item": {
          "id": "9e59e363-193c-411d-84e4-57a0e03ec738",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4342359f-967d-49b6-b6b1-f94b6ad1da15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57854f04-062d-4954-9741-00e5ee56ecaf",
        "cursor": {
          "ref": "83af0348-8b49-483b-a43f-69074924d22d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27dc3984-f34b-4fcb-9f13-6b7319cde6d5"
        },
        "item": {
          "id": "57854f04-062d-4954-9741-00e5ee56ecaf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f5bb5cd4-8927-4bbe-a131-a23b385980ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c4b811-e380-45bc-8e01-07b0e361471b",
        "cursor": {
          "ref": "4a7d634a-29d3-43bf-a64a-663c9e570afb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4120b667-e28a-4686-8d4f-8845c6ef1a3c"
        },
        "item": {
          "id": "03c4b811-e380-45bc-8e01-07b0e361471b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "154a138b-3ba1-47e9-aad5-564db0e99b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f10072-9454-4f73-bca6-37dc45950e1e",
        "cursor": {
          "ref": "d440f2bb-e8dd-4ede-9725-7f82bcdd3053",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "50d841c0-3b5e-417f-8410-aeb9eb4efa28"
        },
        "item": {
          "id": "26f10072-9454-4f73-bca6-37dc45950e1e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b8eb53a-78ae-42bb-b280-17f30105497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a06ff-6805-4e78-b07a-70746aeb8e38",
        "cursor": {
          "ref": "2dbaaf8f-431c-4c8a-92e8-ce363dbe5f61",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "319a8d90-10ec-4bf9-abfd-b714e16f252e"
        },
        "item": {
          "id": "752a06ff-6805-4e78-b07a-70746aeb8e38",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6ffe303c-7124-4b60-912f-33798c72ac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c6654-ce23-478a-924d-1a0aa218ceb7",
        "cursor": {
          "ref": "bc496efc-129b-4234-aa3f-900cfb927e5a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "20076496-82b9-4fc2-ab1e-d7a069910ad7"
        },
        "item": {
          "id": "ba9c6654-ce23-478a-924d-1a0aa218ceb7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b25e3b74-6c65-468e-81ad-698f2e4ce7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a5282-22ef-4be2-839d-db592f166ca2",
        "cursor": {
          "ref": "1fed009e-f7db-4398-9c90-d1c26ef33d61",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d8c3bd5a-36ed-4141-ae63-f8cf552fb958"
        },
        "item": {
          "id": "ec5a5282-22ef-4be2-839d-db592f166ca2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4c5241a-0e6b-4796-80d3-ac5e4edc9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb54f07-1b30-4a41-87d1-7872902e7222",
        "cursor": {
          "ref": "0303f6f3-f20b-47dd-9a50-13929c89711b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "684e2e59-5eb9-4487-ac1e-4e5c9b494b76"
        },
        "item": {
          "id": "beb54f07-1b30-4a41-87d1-7872902e7222",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "822a569c-c13e-4ca2-a9ef-3e577815ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e55032e-a0f6-4751-8f63-0132b5146615",
        "cursor": {
          "ref": "7b502c8b-0dbf-40b3-b3d5-551612b2bddf",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e552ded3-c9a9-4a19-b552-a98ce087262b"
        },
        "item": {
          "id": "9e55032e-a0f6-4751-8f63-0132b5146615",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43eac1dc-5e04-4e1d-a2be-36a789e0bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9c486c-2b00-42e8-86c8-a17b0b203428",
        "cursor": {
          "ref": "82007bdf-43f9-49a1-8e54-b58289c820a9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7f6804b-c1a1-496b-b28f-e1b73dd7b6db"
        },
        "item": {
          "id": "3e9c486c-2b00-42e8-86c8-a17b0b203428",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fb73b409-b649-4fcf-9027-dc2b682ea7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194e5893-4dbd-4533-9d96-0500b9c3e1f5",
        "cursor": {
          "ref": "fb36d730-3de2-4578-ba48-acda843ddf66",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc52a3a1-ceb7-42e2-908d-d7be060c4919"
        },
        "item": {
          "id": "194e5893-4dbd-4533-9d96-0500b9c3e1f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2ace2b5-f81f-44c7-9bd3-3cfdcd3a0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe9f710-76b8-44d4-ad84-ecbb3d3ee3a0",
        "cursor": {
          "ref": "c68cea0a-0f2e-48bb-82f5-592c013b2ba3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e7691d59-3e4f-480b-8cef-013a064b58a0"
        },
        "item": {
          "id": "5fe9f710-76b8-44d4-ad84-ecbb3d3ee3a0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "44e0d9e6-c2ae-4ef9-bde9-d653681d8fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6765f2a4-5935-4571-b4b5-03e53a28c91a",
        "cursor": {
          "ref": "13755989-5d69-4ac5-8ed4-0e79225a815a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9723d9ec-e76a-49fc-bce8-76f15258124b"
        },
        "item": {
          "id": "6765f2a4-5935-4571-b4b5-03e53a28c91a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5b45c4a-bd04-46d7-87c2-20f1803f44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9df2c3-6c38-496c-ad1c-a465cfbab217",
        "cursor": {
          "ref": "47d98a79-dcf1-4846-b2de-d1f9aca9dfc8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "45e7587f-f6aa-4fba-97fd-41743c4146e6"
        },
        "item": {
          "id": "fb9df2c3-6c38-496c-ad1c-a465cfbab217",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac7acc54-7675-46ab-b454-6a8ae05ee935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89f1ceb-6d1a-44f8-91b0-4ffb3e87a9d0",
        "cursor": {
          "ref": "a0ad3c17-a24a-4593-bb4a-9c58698e43ac",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "04999ff5-ebf1-4f23-8c9e-ec936d4fca27"
        },
        "item": {
          "id": "b89f1ceb-6d1a-44f8-91b0-4ffb3e87a9d0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d18ca2b8-5ac3-4028-8b43-00faacf36fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ec779e-3710-486a-96e5-e6a75219629e",
        "cursor": {
          "ref": "68cdb1a1-172a-4e6b-a76d-e6febf68aa3c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8b835503-16f5-490a-bd71-617020df6fb2"
        },
        "item": {
          "id": "45ec779e-3710-486a-96e5-e6a75219629e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dc80b2bd-9399-4aea-a1d6-593ec150e116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483d1c6f-972a-421e-be53-e719f65d1fbf",
        "cursor": {
          "ref": "68ba2e46-c5f3-4fc3-b3d5-93cb1fed94aa",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1255700f-d203-439d-bcad-533393d7f778"
        },
        "item": {
          "id": "483d1c6f-972a-421e-be53-e719f65d1fbf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a61dece-1ee6-4b0b-9a11-51efff1b0a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2629950-4fa1-401f-83e8-dfa11a41eb51",
        "cursor": {
          "ref": "f2a6022f-49ca-4a07-a513-21d8470034f2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1998e474-a2b2-42dd-80a5-ca23a6a8ab0f"
        },
        "item": {
          "id": "c2629950-4fa1-401f-83e8-dfa11a41eb51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b7df9110-46d2-474a-a7ab-5f72470f4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4bc4c6-1117-40e5-801c-88d7bb046180",
        "cursor": {
          "ref": "9b51631e-5000-4dde-b20f-da1c55dd4474",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b17c5ae1-b851-40af-8200-dfc365853adf"
        },
        "item": {
          "id": "ea4bc4c6-1117-40e5-801c-88d7bb046180",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50fd1ed6-2e94-43ab-a698-584d585be915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c38ae3-d066-4da5-88e5-3906d03c35af",
        "cursor": {
          "ref": "fd27f21a-beda-4dfa-8a03-1758773e12a9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e785a083-8c90-4a25-90db-45daf2d18470"
        },
        "item": {
          "id": "a2c38ae3-d066-4da5-88e5-3906d03c35af",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afc5d83f-d1f2-4206-9ee0-795306bf3d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c17bdd4-169b-4300-9bf6-17874879c475",
        "cursor": {
          "ref": "0c775446-45c1-4f51-bdcc-3fb43b7fa487",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a3ba80bc-061c-4503-ad03-5d96f37f4c96"
        },
        "item": {
          "id": "9c17bdd4-169b-4300-9bf6-17874879c475",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "066380bf-015a-40fe-bd28-9c116e4e9fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6722044-7711-4938-942f-4f5657f9cb24",
        "cursor": {
          "ref": "bba80631-1880-4965-9f7c-331f1b390cc5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "033db890-1315-46d8-a9e1-438cc614106a"
        },
        "item": {
          "id": "a6722044-7711-4938-942f-4f5657f9cb24",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8b87ffaf-1170-469a-9453-68ff7082b535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809480d0-47f0-4e23-aee2-1ee97fe1300d",
        "cursor": {
          "ref": "380c56c3-a787-4923-bb53-a024b99f7741",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e0aadc15-3818-4004-8c21-bd0de999f78c"
        },
        "item": {
          "id": "809480d0-47f0-4e23-aee2-1ee97fe1300d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84473392-9cf3-43f1-b79b-d07c546d71fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba111560-ebd3-4c27-bd4b-60fc2ff4bf3a",
        "cursor": {
          "ref": "ad17d406-5074-4bd4-a332-6801db676830",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86d60dad-c76c-42f2-a15d-485dabcf4671"
        },
        "item": {
          "id": "ba111560-ebd3-4c27-bd4b-60fc2ff4bf3a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3daf24ad-0d85-4a57-89cb-a8bcaa1eaeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073c2e42-96df-40c7-a055-d1bd00bfc007",
        "cursor": {
          "ref": "7bbc5381-3a42-49ad-98fb-ab7fad56ddae",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "126134e7-8bc9-4c1c-911f-20b8f6e084b8"
        },
        "item": {
          "id": "073c2e42-96df-40c7-a055-d1bd00bfc007",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e3d46e92-f750-46de-891d-7b355516a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd3c501-a650-4844-87d4-04611a86cd45",
        "cursor": {
          "ref": "53f90435-35d6-441b-af08-9f322a2fcf9f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3190ae27-71d0-4bdd-b9b0-d78ba666153f"
        },
        "item": {
          "id": "8cd3c501-a650-4844-87d4-04611a86cd45",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce73a7cb-48d2-4533-ac9e-4989628f3212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d536257-560d-4843-b132-e3b4a044847f",
        "cursor": {
          "ref": "28288866-b8bc-4243-b441-246db0e7e27c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d6cebac-64b3-4ef9-a44b-2a0ba4aeb69b"
        },
        "item": {
          "id": "9d536257-560d-4843-b132-e3b4a044847f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cbf7f635-3890-4bd3-a45f-35bfa0e199c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5556c18b-c0a0-4c80-ab4d-0672dc6f059f",
        "cursor": {
          "ref": "6c20f39e-534a-495d-b9ef-85a1659bdee2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "df8b7ace-f45b-48e5-a765-60157c9478d2"
        },
        "item": {
          "id": "5556c18b-c0a0-4c80-ab4d-0672dc6f059f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ebfef76d-3bdf-4c48-95c8-c2a9ea8875d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24cb78d-e7e9-4523-99a4-c83199cafc6f",
        "cursor": {
          "ref": "e2f9d3bf-45b8-4b51-9aa9-bedba698642c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2f59481-bed1-4744-89e2-d4db4debc107"
        },
        "item": {
          "id": "d24cb78d-e7e9-4523-99a4-c83199cafc6f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "08ffff42-8586-42c6-b7b1-9b805eef9f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d61d16-028d-46b8-b7e5-1f3597b54ec6",
        "cursor": {
          "ref": "b1993c5e-b82d-48dd-88b3-97ee92b5d263",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3fe6c0db-8bd6-4240-9ecd-43c907a8183d"
        },
        "item": {
          "id": "00d61d16-028d-46b8-b7e5-1f3597b54ec6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f5478d67-8491-4abf-b438-54a41f2af6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0e9004-37f0-4c1b-8de8-8e5c8c2b6441",
        "cursor": {
          "ref": "06eabde3-c09b-4e29-884e-29ddc9c507c7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5aaac07-3648-487b-99b9-351df9a7fe8f"
        },
        "item": {
          "id": "0e0e9004-37f0-4c1b-8de8-8e5c8c2b6441",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c2ff1522-4597-4254-bc18-85891c2de70e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe4be63-c478-4a51-91f7-2cc6a4695eac",
        "cursor": {
          "ref": "ebd33b00-eb8c-4dd2-9b99-ec6ed21ac7ad",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97168e8a-6dec-4a51-aa1c-13dbc5df542d"
        },
        "item": {
          "id": "4fe4be63-c478-4a51-91f7-2cc6a4695eac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ae00ba5-40e3-403b-af37-571a81a1d83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86221f58-e977-40f3-a368-e03f3f02cc7e",
        "cursor": {
          "ref": "d5f926a2-9972-4e7c-a599-277fdb866a33",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2542875d-f6b5-466f-b564-4ee0d6bc272b"
        },
        "item": {
          "id": "86221f58-e977-40f3-a368-e03f3f02cc7e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a13ceb22-fedf-4178-b9bb-b611c82f59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fefdadf-8ea1-4ad5-96f8-64c384952234",
        "cursor": {
          "ref": "0cdf67ba-525c-4be2-8740-f86e5d2d5552",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ff792428-c58b-47b0-a29a-9ea345fc8536"
        },
        "item": {
          "id": "5fefdadf-8ea1-4ad5-96f8-64c384952234",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c5f0c2f2-d7d1-4040-9787-706de532eb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a22b8cd-16c1-4a81-bdd5-703139d4d767",
        "cursor": {
          "ref": "6cd2a085-8c43-463b-866f-a56f2509e291",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb40416c-3bbe-41b2-8d4e-af95b23f6fa3"
        },
        "item": {
          "id": "7a22b8cd-16c1-4a81-bdd5-703139d4d767",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c99f0d8d-2fd5-434a-bb44-274f821dc484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b374f-3dbf-430a-9469-207bea132f12",
        "cursor": {
          "ref": "f06664fe-46ff-4ff2-8968-d73ba6239869",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fbd63a69-886d-4903-9fd8-229f7d9b35a7"
        },
        "item": {
          "id": "6c0b374f-3dbf-430a-9469-207bea132f12",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "97351635-f293-4fa1-be90-c2ce17ac55ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4991fee-39c2-45ba-8a93-df10579a47c3",
        "cursor": {
          "ref": "28e096a3-ebd8-4d9f-afc8-7fc7039e7992",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d1d38bcb-23f0-4e3c-9662-430846f552f1"
        },
        "item": {
          "id": "d4991fee-39c2-45ba-8a93-df10579a47c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "28ff698c-54ce-4a96-8c73-3df29b3d3f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c435d4-612f-4fd2-a98b-bdba9912c2f8",
        "cursor": {
          "ref": "a0b0d998-0f66-4a93-b167-7b34cc234c8c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d17c3876-cffa-48d6-8cbe-ea2b66e5add3"
        },
        "item": {
          "id": "c2c435d4-612f-4fd2-a98b-bdba9912c2f8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3384c069-d55d-4cdc-9c67-36f7aac600fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce0e974-db3b-4f05-9b8d-c628133d22a8",
        "cursor": {
          "ref": "21856dd2-44e8-4ae1-babe-6ad6502002e5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95c3ecce-5890-4f20-8648-96d438bac012"
        },
        "item": {
          "id": "dce0e974-db3b-4f05-9b8d-c628133d22a8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98627b87-4d66-4400-a63f-38d1a79fe3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8ac963-6787-4f20-8e92-e8d8914a44f4",
        "cursor": {
          "ref": "a66a0104-2ca3-4db8-8780-a13da6f9f0aa",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "616d15bb-5e12-4be8-b3da-0d7426b3b376"
        },
        "item": {
          "id": "1e8ac963-6787-4f20-8e92-e8d8914a44f4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "66d6c416-f1b9-4408-addb-780dd4b04274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abef7c43-30b2-425d-86fe-87dfee2b7a03",
        "cursor": {
          "ref": "a1a84239-1ca9-4ce8-9650-a6d4e7f639fb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "11a74000-455f-4458-bba5-3761170d0a1d"
        },
        "item": {
          "id": "abef7c43-30b2-425d-86fe-87dfee2b7a03",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6b6ad50d-18f5-4ab2-9403-3d09d4e9e348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a778ce5-5ef7-43c8-8621-1d6b3f45cbe7",
        "cursor": {
          "ref": "823c14ee-1508-4a25-9be0-af463ba3d69d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2f77512d-7539-441c-8610-7296b795a121"
        },
        "item": {
          "id": "0a778ce5-5ef7-43c8-8621-1d6b3f45cbe7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "94db7857-cc49-4385-ab46-e1e3f062cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f7050-b1ed-494a-b7fc-6aa4eb1a76fe",
        "cursor": {
          "ref": "511f16bc-c046-437d-a6a5-a645eca1ccd6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cd19f500-fe19-4efc-b387-fc46dabf7408"
        },
        "item": {
          "id": "989f7050-b1ed-494a-b7fc-6aa4eb1a76fe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "836e5192-9470-4c0a-9179-46740da44856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1916834f-2810-4836-8553-597f8392aeee",
        "cursor": {
          "ref": "67c5f0f0-9d93-48dd-a5fa-0c121335795e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "734f2323-ad4d-45fb-99df-5a556eb0ca94"
        },
        "item": {
          "id": "1916834f-2810-4836-8553-597f8392aeee",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a164a2d9-5eb5-4561-a3ed-3c4f71a8d495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a4b31b-4af2-47da-88dc-71ed0b5d2bf0",
        "cursor": {
          "ref": "392bf60e-74f5-4086-8278-001834fe41de",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "84d4c1e2-73aa-4515-83eb-c9f932a70f5d"
        },
        "item": {
          "id": "61a4b31b-4af2-47da-88dc-71ed0b5d2bf0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "35fbf75c-2cbb-41fe-8b62-1749ae96044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cd113f-ab6e-4334-aa3c-04f99ae2204d",
        "cursor": {
          "ref": "eccc2ca6-b774-4820-bd79-a588fa546eb8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "606cef45-9f98-4ed7-b2eb-05c2467a5adf"
        },
        "item": {
          "id": "89cd113f-ab6e-4334-aa3c-04f99ae2204d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0504fcac-98ae-4679-b3cf-1ec4d14651b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae88991-798f-4516-924c-afde4fb935f0",
        "cursor": {
          "ref": "d3d0f394-71e1-40bc-ad5c-6e44e5fb91a4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b86fb32b-8f89-48c0-ba63-fe9fa8677036"
        },
        "item": {
          "id": "8ae88991-798f-4516-924c-afde4fb935f0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d3f31875-7bf7-4e83-b0d2-d93a3a6e1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e95f4-ee93-484e-9cc0-2a9b94dbf55e",
        "cursor": {
          "ref": "ccfa88b4-2d19-4bbb-ae80-200b97a15502",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ef83a39-b9c1-49cc-8596-c41ece8ea9a1"
        },
        "item": {
          "id": "2a2e95f4-ee93-484e-9cc0-2a9b94dbf55e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e3c1cc1-91a8-40d7-8921-beb07fa0a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcfe423-060f-472b-92df-41d565d08de6",
        "cursor": {
          "ref": "4fcb7927-a8f7-4503-b867-417e576ce985",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4cc003bc-c1d8-41e2-823f-b8c7bf021957"
        },
        "item": {
          "id": "5fcfe423-060f-472b-92df-41d565d08de6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "deadadf5-9fe8-4c15-a8fa-77db059d61bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6896d34-9204-4cc3-9c4d-324f15129c2d",
        "cursor": {
          "ref": "93cad5d7-93ae-4b30-9eff-0465bfeb239c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2a7c7ffe-6d0a-4165-8167-f7b31f6e5b9d"
        },
        "item": {
          "id": "b6896d34-9204-4cc3-9c4d-324f15129c2d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e840bd6-9b9d-488e-ad42-b0ee0aefd123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a03dd6-e834-4989-8f48-f548e0663a79",
        "cursor": {
          "ref": "6cfc8cc8-7f97-4f59-9190-30bfcb0cdacf",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f6dc2a2d-f9f3-420d-b62a-1bdb86b3a2d9"
        },
        "item": {
          "id": "c1a03dd6-e834-4989-8f48-f548e0663a79",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ac6dc506-04f5-4929-937d-0e370ef0c0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248a5f90-9021-4bb8-b69a-190a6d7ba1e4",
        "cursor": {
          "ref": "5381e4a3-0414-4524-9f60-60502ac6e308",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58d8d4d4-80d8-4480-86f0-c00e3422048c"
        },
        "item": {
          "id": "248a5f90-9021-4bb8-b69a-190a6d7ba1e4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c266fad-d6b4-455b-a6c3-049a3ef01367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da79bc20-9182-4e24-8ccc-48a094b8b3eb",
        "cursor": {
          "ref": "4f272e72-2018-4dc3-a8c8-e3fad15b0680",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7b3a3e69-d5bf-4f80-92d0-d3b8b2939ec7"
        },
        "item": {
          "id": "da79bc20-9182-4e24-8ccc-48a094b8b3eb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "19222c15-3221-4280-bb68-62bd8467743a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed12c6c4-b54a-4844-86fb-a1885532cf97",
        "cursor": {
          "ref": "fd136007-e104-4fd2-ad9a-7984a2e8c83b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e4d26622-f9e3-4c9f-a0bd-c65863cb22c8"
        },
        "item": {
          "id": "ed12c6c4-b54a-4844-86fb-a1885532cf97",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4cd1d8df-e388-457f-8ce1-e8691899c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d2e698-a6e7-4f44-9bba-45c6f31d22ad",
        "cursor": {
          "ref": "0f8f8030-930a-4e3e-8cae-0e303a6ca353",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "14d1956f-3066-4a47-ac45-3144e8ad98ad"
        },
        "item": {
          "id": "21d2e698-a6e7-4f44-9bba-45c6f31d22ad",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "047b4186-5fbd-4931-a79c-d1f3b99f402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a74ecc-e636-4ad1-8c6a-e07ebe06d637",
        "cursor": {
          "ref": "481a3877-aa9f-425d-a485-b61ca01c62b4",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "35ccd662-3ca1-45f4-8aa0-485737f28ebf"
        },
        "item": {
          "id": "68a74ecc-e636-4ad1-8c6a-e07ebe06d637",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1c7c74ba-e839-4aeb-863a-7ca97798282a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600cb13d-a0a9-47e2-a805-9363b4f52f62",
        "cursor": {
          "ref": "f50bc556-c9fb-4d96-89db-fdd7946cddf9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1c38847e-dfd7-4961-9de3-5b0fadb3c37b"
        },
        "item": {
          "id": "600cb13d-a0a9-47e2-a805-9363b4f52f62",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57758d4b-70e1-4d50-b14e-793fec76ab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925d1750-903f-4d35-a605-b95947ac4659",
        "cursor": {
          "ref": "9177783c-e346-4454-8dec-b67c518f111d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f6cbdf76-11ca-40d1-9def-975247baa122"
        },
        "item": {
          "id": "925d1750-903f-4d35-a605-b95947ac4659",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c0d06d5c-879c-4e37-a994-185242edd270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1041440-0894-41a6-89b6-ab655784375d",
        "cursor": {
          "ref": "8953c1fa-532a-4da4-98bb-b131ed4b0ff4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77480942-26f1-4117-a3c7-1920aeafb57a"
        },
        "item": {
          "id": "e1041440-0894-41a6-89b6-ab655784375d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0b6c1cf6-7917-4b40-a81c-0971fb0c26e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48965fe6-a937-48a4-8ff7-fc57ed732992",
        "cursor": {
          "ref": "3014d3b0-4e5d-4b2f-8f79-566d64a333be",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7c267578-4323-4a8d-a777-5c69ce63b8a7"
        },
        "item": {
          "id": "48965fe6-a937-48a4-8ff7-fc57ed732992",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "67957ff9-d323-4810-8335-f476bada4d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0826fb41-e130-4ca9-8e7d-aeaf18edbf26",
        "cursor": {
          "ref": "1c8d6cb9-1964-4d8d-8aca-568aafe17923",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "878c6baa-22b3-4a62-a702-ab2ef43794f3"
        },
        "item": {
          "id": "0826fb41-e130-4ca9-8e7d-aeaf18edbf26",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2dcc41bb-6043-4dec-aceb-3cfbebdddb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c033e84-ae8b-443d-8ea1-2b6bd724c957",
        "cursor": {
          "ref": "369203f1-95a6-4591-8c09-28e669e98909",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c87c1fd-db4e-416b-a2fc-94c9c2e43514"
        },
        "item": {
          "id": "4c033e84-ae8b-443d-8ea1-2b6bd724c957",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6e1aed1e-b6d1-4aae-8475-01caad6000af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da80e6c1-44df-4066-8bd0-7bae1c31b66b",
        "cursor": {
          "ref": "250e78d7-193d-4bbe-b102-a0f6c7dab6e4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aeb553c7-356f-4b1e-9927-f60f7d2165a2"
        },
        "item": {
          "id": "da80e6c1-44df-4066-8bd0-7bae1c31b66b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "588f2bb4-6ff0-4e44-bfca-3d53bf416b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590469f1-b453-4d7d-b676-fffca2cfe477",
        "cursor": {
          "ref": "38aaf60b-d4c9-4fc7-a6ae-593c35e6ca74",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0948b548-06e7-4cbb-823f-a551bdfd4227"
        },
        "item": {
          "id": "590469f1-b453-4d7d-b676-fffca2cfe477",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8618c09d-ce50-4078-98d9-ad3f2b2366df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7802ef3-6838-4635-9401-0ada71f084f0",
        "cursor": {
          "ref": "ef0d7712-9b6b-4d33-ae21-8c4907b96d4d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0339f030-b0ef-4326-b728-f6917d08bf5a"
        },
        "item": {
          "id": "d7802ef3-6838-4635-9401-0ada71f084f0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "589df36c-d63b-466a-be31-25277302faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7bfbe8-8108-40cf-bf30-0f2f3377c731",
        "cursor": {
          "ref": "836b789a-743b-4c72-9edb-423f2255678f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c583ee21-a9c8-4dd3-ada6-0a99819ac777"
        },
        "item": {
          "id": "9f7bfbe8-8108-40cf-bf30-0f2f3377c731",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c8dda982-b067-404b-9623-524fef734343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d32120-a8d4-4704-8712-be193f632a9f",
        "cursor": {
          "ref": "1cdb5867-de08-44d1-9701-a90446c63759",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0e672467-5092-42df-9e82-5b3d2ac607ca"
        },
        "item": {
          "id": "d4d32120-a8d4-4704-8712-be193f632a9f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9571f22a-c611-4a67-a24f-6978f3be2164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e265a5c-e58d-4fde-a941-6f1ff4f9ca20",
        "cursor": {
          "ref": "4c4b8adc-0414-4670-9b69-b6ef67cd1734",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "406d0fe1-1f47-4fe1-af4e-eb6d833c9aef"
        },
        "item": {
          "id": "9e265a5c-e58d-4fde-a941-6f1ff4f9ca20",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e57cb77-6050-4302-aa94-143b821a95eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462cc5f7-a8cb-4733-9f98-4f6a9a19593f",
        "cursor": {
          "ref": "e6c1e1ce-98e8-4103-8cba-ddc45da4313f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de5e62ed-261c-48ac-b549-60550921864c"
        },
        "item": {
          "id": "462cc5f7-a8cb-4733-9f98-4f6a9a19593f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5110fa3d-1faf-41ac-a7a8-46dc3b7937d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d0c503-57a7-4a08-a545-b6ad72289d5a",
        "cursor": {
          "ref": "c9e5a762-9f64-4a41-8ebb-1fa0f542f396",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "de8d1203-fead-4a4d-89ca-3fa79b08a037"
        },
        "item": {
          "id": "b4d0c503-57a7-4a08-a545-b6ad72289d5a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a5c560f1-4dc5-4502-b1aa-eb3cf8601d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e12652-7c50-4c57-8e31-3803bdb91308",
        "cursor": {
          "ref": "1acb9dbd-ebd9-45d5-8935-f548b1be3e5a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3795e44d-eefb-4345-a9d1-fb2a077bef99"
        },
        "item": {
          "id": "21e12652-7c50-4c57-8e31-3803bdb91308",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0fa490f2-e17f-4424-bf35-b15ff175242c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc5aa85-db7d-41ad-81b0-445b892b3b15",
        "cursor": {
          "ref": "bff7e19e-77d1-453c-b6ac-906dc9c92e7d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9454d41b-1822-4580-9d05-7288b9f31b7b"
        },
        "item": {
          "id": "3cc5aa85-db7d-41ad-81b0-445b892b3b15",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7349579f-dc6a-447e-a37a-28eea29867ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab572dc-a90f-4b2d-8161-e6c1951fb05c",
        "cursor": {
          "ref": "45c13b0b-a5ff-413b-ac36-f0c3c54ee6ae",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ddf53f0e-5119-4c1a-b2b9-a5953eeaba45"
        },
        "item": {
          "id": "8ab572dc-a90f-4b2d-8161-e6c1951fb05c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7b6753c-a380-400f-a82d-9a18b483a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a73f61-65f5-45ee-826b-c345a0b29a39",
        "cursor": {
          "ref": "1a5c4b0e-50b8-4f5b-9d0c-fa8964def223",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e294d605-2c33-4bba-be66-79472a18710c"
        },
        "item": {
          "id": "d3a73f61-65f5-45ee-826b-c345a0b29a39",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a3a77590-defb-4c41-8a9c-3642e1757a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8126d-0e27-4497-b863-460cb1917581",
        "cursor": {
          "ref": "f6a246ae-f803-4843-ae1b-6f74901e496b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "61b7e315-bdbb-487e-be0f-cbfa698603ca"
        },
        "item": {
          "id": "dec8126d-0e27-4497-b863-460cb1917581",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "533c6d12-7773-4533-b76b-62c5301bf898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2f3b18-2815-43f9-95c7-d3598733ddd7",
        "cursor": {
          "ref": "95bda1f1-de37-49c4-9e7a-42a2b93da3a1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "48ef77b0-193a-45f4-a051-97c99da39ffc"
        },
        "item": {
          "id": "9d2f3b18-2815-43f9-95c7-d3598733ddd7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a4264ec6-3e4d-4870-a8fb-c513841e2b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69c5dbc-3b67-47cb-8df9-09255f2d8815",
        "cursor": {
          "ref": "66ed2024-0c6b-49e3-907f-9334e531bfe7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dbc36b04-d364-4387-9e01-f22c1f494049"
        },
        "item": {
          "id": "d69c5dbc-3b67-47cb-8df9-09255f2d8815",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bf0bdc4c-6cf4-4e57-b246-e256c3ac36e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f36e1-85a3-4685-a3d9-dcf26418ae4a",
        "cursor": {
          "ref": "0f28d502-5f3d-4720-901f-a0c800ea3def",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "830eeb51-d30c-477b-b478-89ba175c1c00"
        },
        "item": {
          "id": "3d8f36e1-85a3-4685-a3d9-dcf26418ae4a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "756acb4d-8374-4dfd-be16-55e817e21521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca208eda-2f12-4322-8d98-c34b4febcccb",
        "cursor": {
          "ref": "39c1be47-b077-40af-983c-64fbdefb274b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1d7af114-aaba-4ac6-9e33-e94e4c82e056"
        },
        "item": {
          "id": "ca208eda-2f12-4322-8d98-c34b4febcccb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ceffbb0c-091b-4d7c-b870-cf8d0ace388e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b278fb65-4896-4d26-bdca-164d86ba0992",
        "cursor": {
          "ref": "6cdc9597-85c1-41a6-9ad9-f7b17216a6ee",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e4d87fc-1d56-4529-8a6a-ec92ae79734a"
        },
        "item": {
          "id": "b278fb65-4896-4d26-bdca-164d86ba0992",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ccdff398-455b-4880-bb1d-5bad7fcdfd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b37013-02bd-4b98-80dc-1051c8383b3d",
        "cursor": {
          "ref": "401702a7-d052-4c76-8a00-8dab98e3fb30",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f48eb88-7695-464e-a5f1-5a3e5c5cd9a7"
        },
        "item": {
          "id": "33b37013-02bd-4b98-80dc-1051c8383b3d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c0410b4-42d7-4dda-a95e-530610458b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04c6195-e0ed-4b2b-89d3-d8d38f50e8fe",
        "cursor": {
          "ref": "3d86a7a4-337a-428b-8bc8-fa158ba2a06b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5a3d9c04-370e-4fa8-9e7f-cebf3a0b1aef"
        },
        "item": {
          "id": "d04c6195-e0ed-4b2b-89d3-d8d38f50e8fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c0762273-f202-489a-bb2e-abc918a60711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e694c9b-0ca9-447e-88dd-e2093f853d9e",
        "cursor": {
          "ref": "824f0315-ec77-414c-8135-73911836d311",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "674a7644-abe0-4f27-bd63-49702cb96dfe"
        },
        "item": {
          "id": "2e694c9b-0ca9-447e-88dd-e2093f853d9e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1f0efa94-c496-4626-a3f2-3e61003371c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f531a165-117c-4505-b6a3-a8a0944c36af",
        "cursor": {
          "ref": "ec437e24-a379-48c3-b0d3-61692ce51cd8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0fd23ca1-0f29-4477-a024-ec52d008ece5"
        },
        "item": {
          "id": "f531a165-117c-4505-b6a3-a8a0944c36af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9318b57a-ae3c-4d4f-ab22-3ba968be46d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6ec044-f7db-40a6-b00c-88e08b31a095",
        "cursor": {
          "ref": "1be10e1e-2307-4424-96da-180df90f6912",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "38847716-9ec4-4fb5-80f5-6de94fcebbb5"
        },
        "item": {
          "id": "1e6ec044-f7db-40a6-b00c-88e08b31a095",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa6afd7f-62cc-4421-b7ae-9cac7275acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532217ae-d2a9-4d27-98e3-8a7e8cbc2238",
        "cursor": {
          "ref": "d674d0f8-4dfb-4177-894e-edbccfc58055",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b583f081-093b-4e92-a7c5-5c57fa6ed20c"
        },
        "item": {
          "id": "532217ae-d2a9-4d27-98e3-8a7e8cbc2238",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0a269872-aaed-45f6-9d30-2cc1ed3659f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8954cbf9-65f9-43f8-9198-1a9c1ec6c373",
        "cursor": {
          "ref": "3be76c23-99ed-470c-ad87-19693472811c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e4bc09b5-bf9a-49a3-bf7d-b2a7ef324f66"
        },
        "item": {
          "id": "8954cbf9-65f9-43f8-9198-1a9c1ec6c373",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0f45ced5-e6db-4bf0-ba23-c8d467267e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aed994-f32b-425b-865c-71914dbd9e81",
        "cursor": {
          "ref": "af71e315-5977-4aca-9a93-fbbda52b720b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4df81ded-005f-4611-a989-067e07943154"
        },
        "item": {
          "id": "11aed994-f32b-425b-865c-71914dbd9e81",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c9405c63-efa6-4618-bfda-6edddc697889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a3d19-0d4d-476f-85d5-d51b0995c6d8",
        "cursor": {
          "ref": "62f424b8-513f-44ed-9968-7df87694246c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "34f62f1f-8f49-428b-9887-e890ad6c9430"
        },
        "item": {
          "id": "7a7a3d19-0d4d-476f-85d5-d51b0995c6d8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "71b6279f-9ccb-46df-a1b5-342d386bcb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2352978-5267-45e4-8e29-55118bb541b7",
        "cursor": {
          "ref": "2a26e274-5823-4a2b-90cf-593c9b404d7d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8948034d-1bf2-45af-9366-8396722ac763"
        },
        "item": {
          "id": "d2352978-5267-45e4-8e29-55118bb541b7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "89379fa7-9dff-4238-ad2c-255062a3960c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d2cce4-7689-4b58-a1b6-6de63c12e230",
        "cursor": {
          "ref": "8db4b383-a565-4479-9542-117b337496fe",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc7193b8-abaa-445f-90c1-54b0a73887b9"
        },
        "item": {
          "id": "c1d2cce4-7689-4b58-a1b6-6de63c12e230",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "71e3f59e-a5c7-43a5-931a-82fa3087086d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b8604e-3ae7-4e78-9719-e84b42c3901c",
        "cursor": {
          "ref": "a984bf83-dd85-4ae5-b744-6affce5af937",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "665fb808-428d-4765-98e3-b80c01b66a7c"
        },
        "item": {
          "id": "c2b8604e-3ae7-4e78-9719-e84b42c3901c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2ba73f9a-f9c7-4fa5-9fdf-766ba8abe863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa6a537-297b-4437-8afe-c0031032c010",
        "cursor": {
          "ref": "3ecd61cf-31ed-420c-b9a6-eaf36707515a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1fa546dd-2738-4d93-8e75-e32819997387"
        },
        "item": {
          "id": "aaa6a537-297b-4437-8afe-c0031032c010",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eb5087fe-afd0-4d7a-9e88-868cc0a72557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2193c985-01f8-44cd-817e-9028f637e633",
        "cursor": {
          "ref": "b7003522-410b-487c-8c08-c402df7ceca3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30be7221-cee9-4ddc-9055-d352e094fb5a"
        },
        "item": {
          "id": "2193c985-01f8-44cd-817e-9028f637e633",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9f66e20-d121-4a25-906b-15350c11054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b812223-cfc2-47bb-84fe-c563256089f2",
        "cursor": {
          "ref": "c76bf83f-1736-4b9b-b410-3bb90340e155",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "622b6786-11f1-4cec-925b-78c23507af49"
        },
        "item": {
          "id": "5b812223-cfc2-47bb-84fe-c563256089f2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a6b28232-21c2-438f-a648-094da6452112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94461ecd-005f-4cdc-a439-a909ac86988b",
        "cursor": {
          "ref": "0f1ffc83-0fee-4162-8abb-f2381a0cfee8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "54c9db55-4ff0-44f4-820e-df04184fadc3"
        },
        "item": {
          "id": "94461ecd-005f-4cdc-a439-a909ac86988b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "29ad395e-f13d-4d1c-9b94-5514717dae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce0e169-7aaa-418e-9901-25411d9b9d90",
        "cursor": {
          "ref": "1c98bfea-4761-4fb7-b23a-8ecfff4aecb6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "03f185c4-ae2d-4377-a121-af5158122c7a"
        },
        "item": {
          "id": "0ce0e169-7aaa-418e-9901-25411d9b9d90",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6e33ee46-c709-4cf3-a2da-3d7de4f39455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100914c-2951-429b-b1b5-379c71eee191",
        "cursor": {
          "ref": "c30bad3e-b325-4c50-bb4b-57b7c577b499",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c87f92c0-447d-4ee2-a0f4-d7d415279097"
        },
        "item": {
          "id": "9100914c-2951-429b-b1b5-379c71eee191",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "58c1f404-a4ce-4b65-85c1-7fc8a443811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed18b483-851f-45ec-a5ce-31aab6e1a0ac",
        "cursor": {
          "ref": "04133b61-b071-4209-be9e-a625e8da1929",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8bf32ea-48b1-46af-9bcc-e26fa955202e"
        },
        "item": {
          "id": "ed18b483-851f-45ec-a5ce-31aab6e1a0ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fdbee34a-cdde-4774-837b-f2b31abee39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3418d5-c28e-428c-8e13-f845530452be",
        "cursor": {
          "ref": "26d1d7bf-7954-44ba-acdb-287010baabda",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86c919ac-070b-44fc-ae1b-5c42ba897685"
        },
        "item": {
          "id": "5a3418d5-c28e-428c-8e13-f845530452be",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "97745691-a9ea-4ab0-b0ba-3f016ce345f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b74a2b-6255-4d89-b4ea-9f62daa9c46f",
        "cursor": {
          "ref": "49f99787-8c76-4180-9c91-4affe98fd798",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c5850c3-318b-4376-a267-5bdf0379d99c"
        },
        "item": {
          "id": "f3b74a2b-6255-4d89-b4ea-9f62daa9c46f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "700950a7-ac0d-495e-9901-68e1ff5cb955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76833aa-deb8-410f-a4c8-93ec05a462a3",
        "cursor": {
          "ref": "d541964c-91cf-4259-b6ce-265e85cb0d59",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "025d8289-89df-4e4e-a827-6cdf1363b984"
        },
        "item": {
          "id": "f76833aa-deb8-410f-a4c8-93ec05a462a3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fd164d61-4191-4fbb-9ed2-3c56b09638b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21366d41-637a-4f62-b79c-888ee8c7c056",
        "cursor": {
          "ref": "a2296999-70b4-414c-8901-971dfb220b5e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e22e4672-8403-43bc-909d-5d00b5d7eab4"
        },
        "item": {
          "id": "21366d41-637a-4f62-b79c-888ee8c7c056",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f7cfcdc5-3038-44f9-9ab3-8fbd2e1c052d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c4c26c-06c9-4105-9b0b-2ea693929e5d",
        "cursor": {
          "ref": "8685c965-d300-4cda-8586-940157626c56",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "734b63d4-6f75-4f01-93be-f1b5fae2e9fb"
        },
        "item": {
          "id": "09c4c26c-06c9-4105-9b0b-2ea693929e5d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "caf8a534-17b6-4fd2-b3e5-c8aec643b3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc73a8e-1ccd-48db-a8fd-798fa1c1b5df",
        "cursor": {
          "ref": "29dac5c9-ecc5-4a8c-88b4-d9796a6ce664",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "95c83759-9c36-418a-a7cd-2fba219b44e2"
        },
        "item": {
          "id": "7fc73a8e-1ccd-48db-a8fd-798fa1c1b5df",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "231000d0-34e7-4be3-98f7-6b891d77bf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679cf166-6f33-463d-bf5c-46047aee201c",
        "cursor": {
          "ref": "4a707237-1c23-481c-a1cb-332bac94471d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4243bb1a-b068-4665-9f93-20bc4f3ad222"
        },
        "item": {
          "id": "679cf166-6f33-463d-bf5c-46047aee201c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90c270e7-4bd7-447c-85d3-a32ac5a1b9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6096d6a0-bb42-4ca1-93e9-d69bececc928",
        "cursor": {
          "ref": "f772a341-ab4e-4533-a8dd-83d8ed1cbe0e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b1052f1c-c133-4763-a503-62e08b002f94"
        },
        "item": {
          "id": "6096d6a0-bb42-4ca1-93e9-d69bececc928",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "946f26a6-1895-4d77-9c69-f2f9ab5c2677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf4199-a311-4170-b901-0381672da0dd",
        "cursor": {
          "ref": "8f77fbe1-cef2-496f-81ad-c14ac38897b6",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "63a509c7-012c-45dc-9be9-4c28b7325e4c"
        },
        "item": {
          "id": "bccf4199-a311-4170-b901-0381672da0dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "92ccb5b2-944e-4735-97c5-ddb4cada8a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9bbe67-b1ca-47a4-85fb-2d3622ae26ce",
        "cursor": {
          "ref": "de57c2ef-3471-45de-b5eb-c1408e9025a0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f2f71b9f-85b4-45fa-8e52-cb79e3380290"
        },
        "item": {
          "id": "1d9bbe67-b1ca-47a4-85fb-2d3622ae26ce",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b3cc3c57-bf05-432c-ac89-b23e6bc9c553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2848823c-9641-4a04-87ee-ecb5a2b2dc2a",
        "cursor": {
          "ref": "82c41ff7-4347-4637-93ac-6dc414402a9f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fe59829d-4f96-4fe5-9c4e-6746bbb3613d"
        },
        "item": {
          "id": "2848823c-9641-4a04-87ee-ecb5a2b2dc2a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d5bc9aa-b9ac-4f04-a412-c20c1c178a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2cb9e6-287f-41eb-a73e-f340e38a68ca",
        "cursor": {
          "ref": "63f6e74a-fa6a-42f3-a7c0-0ef00763a1cf",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "92e2b44f-77e5-4bc5-a8da-0c6a7d245dac"
        },
        "item": {
          "id": "af2cb9e6-287f-41eb-a73e-f340e38a68ca",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e3656254-1209-4598-a852-d161831e4133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39469d7e-b608-466f-80c0-13f37cedca63",
        "cursor": {
          "ref": "bac3391c-f3ae-44bc-865c-850956b5e44f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e9b9a43b-0015-44eb-b6a3-3ca87a41fcbb"
        },
        "item": {
          "id": "39469d7e-b608-466f-80c0-13f37cedca63",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4fa9877d-6279-4074-a1dd-8c70f11673ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7e5f61-5314-4782-a7ea-a8e8427fcaea",
        "cursor": {
          "ref": "9bb8adf4-97b4-4b7c-aca7-b11b8611cf1b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "64053f2e-9aa0-4e8b-9d6d-d1cbc4ac9ff9"
        },
        "item": {
          "id": "7f7e5f61-5314-4782-a7ea-a8e8427fcaea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d97467f-7bed-49a4-8852-d4d1ca6c372b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b592e2-334e-4d5d-89f0-0d1273afc238",
        "cursor": {
          "ref": "bae85bbd-e0b0-4e65-8f9e-9cde60b1e90b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2cfe3a2e-0664-46d4-944f-808c03e980f3"
        },
        "item": {
          "id": "f6b592e2-334e-4d5d-89f0-0d1273afc238",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ec8cbac7-4261-439c-867f-d33ca420d2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7293d079-1c2e-45cf-b909-74619164c404",
        "cursor": {
          "ref": "56512630-f43b-4402-9bee-e082f26d2dda",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cddf43f5-1b4f-47ab-a384-4765139a88ce"
        },
        "item": {
          "id": "7293d079-1c2e-45cf-b909-74619164c404",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "81586e0d-ccfd-48ec-a43c-c153d538b7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54ad727-88f6-47ef-b8c7-3d4994b3a9d4",
        "cursor": {
          "ref": "980b3451-82c0-49d7-a242-32d9c3fa443f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2f47d85c-dc5d-4eb3-90a8-0a8999614284"
        },
        "item": {
          "id": "e54ad727-88f6-47ef-b8c7-3d4994b3a9d4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9ebd7340-c0f5-41cb-a579-8e7047c53dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea6fe6f-b020-4f30-8eb5-e222325889ac",
        "cursor": {
          "ref": "3eddab2d-f3ad-4256-9395-c4f6b7fcb78e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c9d07f92-9dbb-4a1c-884d-21c65c76967a"
        },
        "item": {
          "id": "cea6fe6f-b020-4f30-8eb5-e222325889ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "31fc5e15-23a2-4822-92ba-0ad6170eb174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e367da-b4ed-49d0-bde6-9d897fff94e0",
        "cursor": {
          "ref": "25b9c94b-c1df-457c-a39e-af6745a0fc92",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "384551d3-a53c-4bab-8708-0d3218a7da8d"
        },
        "item": {
          "id": "50e367da-b4ed-49d0-bde6-9d897fff94e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "63fc441e-9c4b-4282-afff-1edb158371c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee7973c-e3c3-4976-a455-6df189a3f530",
        "cursor": {
          "ref": "c67dbbbb-14c7-4250-8a5c-f2a36254c1a2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "59758c92-b473-4ca0-bdc3-ce207628387e"
        },
        "item": {
          "id": "1ee7973c-e3c3-4976-a455-6df189a3f530",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "14f85662-2821-4601-bd04-eb3953148c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35b1da7-5518-47e8-9d81-45ebeb56a079",
        "cursor": {
          "ref": "9b25d957-4cfe-4dd5-880f-76648a0f5c68",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e31865da-b965-4882-9eac-d9917faa3e09"
        },
        "item": {
          "id": "d35b1da7-5518-47e8-9d81-45ebeb56a079",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3c475ea7-102a-4681-bc23-a83f58bf532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431b6587-50d4-4ce6-a28e-b2d65cecb2bf",
        "cursor": {
          "ref": "bc9f4231-00a0-4492-98c6-faad2ed785a6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "209bbbd4-ecba-4576-8e6b-b9bf6c3fbb38"
        },
        "item": {
          "id": "431b6587-50d4-4ce6-a28e-b2d65cecb2bf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c8188112-98f5-493d-9b6a-a27d3331e082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15df1e42-287d-4403-ad36-c3b55d35243b",
        "cursor": {
          "ref": "b6fabe18-4250-4c9c-9af4-47a3b9d052f9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5d076bd6-3b38-4676-ab4e-dc5f432a3a68"
        },
        "item": {
          "id": "15df1e42-287d-4403-ad36-c3b55d35243b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4581e48d-34d3-4f1b-9768-cd0755729534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe798ad7-f610-4a8d-80aa-37d7154d40cf",
        "cursor": {
          "ref": "dffad1ba-6ad8-4836-b880-6046faf17fbe",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0f3201d6-addb-4589-9656-a07d07e7a690"
        },
        "item": {
          "id": "fe798ad7-f610-4a8d-80aa-37d7154d40cf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "675c0a30-d993-4813-9827-a3457de4fc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936ffe08-0fb4-4210-9ca7-16c267b7d15f",
        "cursor": {
          "ref": "fb15e1de-468f-41af-a964-2c35b873a29e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "67e57723-274b-4b7a-a036-54e24708bc0a"
        },
        "item": {
          "id": "936ffe08-0fb4-4210-9ca7-16c267b7d15f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e07b482d-6e5f-48b2-bba0-984511c4f5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3ca993-feac-44ec-80c0-e22e7ef704f7",
        "cursor": {
          "ref": "ca0a9b38-09d4-48ab-a438-0f496dee0e01",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a8525228-b647-4f8a-bce5-d9ff6b30f339"
        },
        "item": {
          "id": "9f3ca993-feac-44ec-80c0-e22e7ef704f7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6da888df-b2a1-495d-a5f9-d1305fd78e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05736e6e-2c62-465c-8ed8-7505e744623e",
        "cursor": {
          "ref": "e4b5f2df-7942-4c42-9626-0da3457cb7d5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a41aba35-301a-40ae-9e75-b85be9289d58"
        },
        "item": {
          "id": "05736e6e-2c62-465c-8ed8-7505e744623e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "90bb3347-8f56-4f5f-a631-e572dd97b92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec3bfe-b557-4051-9b35-599b8a0f913b",
        "cursor": {
          "ref": "9d4922c4-1fb5-46d2-8c6f-73d193c12749",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "72af2b09-780c-42c7-a38c-a22257185aca"
        },
        "item": {
          "id": "b4ec3bfe-b557-4051-9b35-599b8a0f913b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dcee8831-8299-4748-b905-247c4c9c6902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3386b8e1-649e-4219-baf8-6edd0f3c4665",
        "cursor": {
          "ref": "46077789-2868-42a6-a755-e44de3a73596",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "665c5256-9a06-4d7d-9228-92fd4d7036da"
        },
        "item": {
          "id": "3386b8e1-649e-4219-baf8-6edd0f3c4665",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bcb24451-a9ee-430a-88b6-9ebbbafb3d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737139ef-20eb-4f42-a14a-409222c5b3dd",
        "cursor": {
          "ref": "1dd537b5-a449-4daa-9fc0-f414f09872c1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f747d67c-41ee-467a-8d85-df6d06a86382"
        },
        "item": {
          "id": "737139ef-20eb-4f42-a14a-409222c5b3dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0c3fb9c2-4386-488d-9207-491a9a8e1e3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e60817-db93-441b-b2ff-75ac1bd7428c",
        "cursor": {
          "ref": "f9154d1d-132e-4d31-9488-ff817fd46ed2",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "848c461a-4130-4aa1-986c-9a73b71b77da"
        },
        "item": {
          "id": "57e60817-db93-441b-b2ff-75ac1bd7428c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55cb9cc8-51f2-467e-81b0-cb82bfbd0010",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "638c7fe0-761b-4fb5-9218-0e72ef296d64",
        "cursor": {
          "ref": "287303d1-f178-4dc3-9bdb-445e94f15c32",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0efa2a47-7e44-4656-91b5-63fd06bab4cd"
        },
        "item": {
          "id": "638c7fe0-761b-4fb5-9218-0e72ef296d64",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eeb21002-783e-47a7-9446-e669a949b70f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a3c22-b655-4d97-9bb4-4ec6506b3b2f",
        "cursor": {
          "ref": "8d9f8578-b797-4a87-82e1-1144a2ab27df",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f0670171-0b4e-403c-8c3e-0cfdef663473"
        },
        "item": {
          "id": "949a3c22-b655-4d97-9bb4-4ec6506b3b2f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b90b2c46-222a-463f-84de-d9b2d999f31a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "af382333-3c3a-4426-9fb3-9bfa4127ef17",
        "cursor": {
          "ref": "5550ecad-23a4-4f18-9ae0-39c3f5787fd9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae95325a-c738-4090-985f-45190cea7f13"
        },
        "item": {
          "id": "af382333-3c3a-4426-9fb3-9bfa4127ef17",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef3cd0f1-a809-466b-b498-888c4db355c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af382333-3c3a-4426-9fb3-9bfa4127ef17",
        "cursor": {
          "ref": "5550ecad-23a4-4f18-9ae0-39c3f5787fd9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae95325a-c738-4090-985f-45190cea7f13"
        },
        "item": {
          "id": "af382333-3c3a-4426-9fb3-9bfa4127ef17",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef3cd0f1-a809-466b-b498-888c4db355c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5805e-8f1a-4e27-93f4-44368b8bd328",
        "cursor": {
          "ref": "dddf9070-0518-4866-869b-e470a33d7397",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "313fe04c-6923-460d-8a1c-4e4bd62836bf"
        },
        "item": {
          "id": "56b5805e-8f1a-4e27-93f4-44368b8bd328",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "632ddb2d-8e2f-4aec-abd7-5192eab16364",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacbb2c6-26ed-481a-b16d-7810f36a9bd3",
        "cursor": {
          "ref": "9ec6e012-05c3-4da3-9b96-cdaa7f931c21",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0f13f383-0874-428c-980e-9e64b5c05e84"
        },
        "item": {
          "id": "bacbb2c6-26ed-481a-b16d-7810f36a9bd3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d8085bdf-e47f-4464-bc65-91ceaedcc299",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}