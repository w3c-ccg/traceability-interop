{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "74bcb9e9-cc92-4ba9-a7de-ca75f599ad1d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ea93863f-60a9-4ee3-87e6-5b890fe0b126",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b321e90-8caa-4022-8f28-b48ccaedcc18",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6d72371-9057-4847-96b2-5d06bb825b62"
                }
              }
            ]
          },
          {
            "id": "1f5ff1f1-a7fd-4b6b-8adb-0625565aada6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6902c3c1-a125-421b-9c22-6abca0761b09",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a058b1bc-705d-4e7a-85d2-a26e20cf14e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "771274bd-d627-403f-9151-8c5ce63e1a23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "58115ce5-ba93-4c7d-8e4e-5e23a5e930ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "917585f7-89e3-4d42-82d9-0e915485270a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e38301c-a633-4b38-88cf-b92548ca0ef5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "290c6510-9538-41da-86e9-86ccc2593eea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5add4b55-f73c-4ee2-98b7-12deafd79454",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c83edb4f-c65a-4612-bd8f-9845c1321fee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d93800d-2c97-4bf1-bb22-cc8d0a980e70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81b719c6-23ca-4270-8397-22a18eaabdd4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d202cc4-c6f7-470e-8850-93c3da86435b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a2c90a7a-e561-4395-b2ec-4cb816019691"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400404c9-5535-44e7-91b5-4c4860be9f3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d64781b0-d7f8-4107-98b4-90b02f45f465"
            }
          }
        ]
      },
      {
        "id": "10d1a184-f296-48a5-9bc4-3d9d81691707",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "929a39dc-0f81-4163-b0c5-c03b86e7eed3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cc251df-f823-4975-bdbb-33c9e1db52b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9afdd756-79eb-4a0e-af78-c7536842da40",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd31308-2eeb-4861-afcd-3e30bde4b7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01983509-7143-4446-aee8-2378aab90d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a9379c-c3e7-4690-8c22-cab809622df9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453e8cdc-26d9-48b5-893f-f7adf4f7201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f555c775-12ae-4426-a006-bc9e76c5d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f968ed-40f6-43ff-aca9-f251ebc43c7c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac58c5db-51d6-4e96-85b8-f299d6606268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c1d1f9f-d107-4770-b5ae-9f287cd87b5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92e4d3a3-3a13-4d5a-abe7-e147b6e6d2ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97feaa01-df3e-469d-8d75-9a9d1f13839e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48495218-0907-428f-bad7-20fd7016bfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abaf1e2b-61a2-49b9-87e8-e73d8525d0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0577eaa6-22a2-44c0-a1db-f2406d41121a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dda52ed-b8ff-4a38-8d14-b200e5dc4798"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91f61a62-ee74-451f-a210-fb4ca9364bc6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d419bbd-ee76-4679-add5-887e1571313e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f996feb4-b3c0-44bd-b509-57ce784965b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "348c58c2-645c-4b90-876c-784bb6b5c57f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48154045-55de-4bfa-8a40-5ca35eb2b8a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8f14c885-fde8-4973-802e-1da47c62d498"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8f9915d-9830-4a17-804d-ed3c7ec17ae7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a6478ff-bd18-4071-bbb9-bc5d73a7a5f7"
            }
          }
        ]
      },
      {
        "id": "8c45ec6c-e49f-429b-8b9e-5dabd72e257f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1735acd8-98ec-4a5d-9b9b-a23483c08f76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4032c18-0204-4199-83dc-79e7cd06acc7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c08b99b7-d8d1-419c-bcc2-565300cd6027",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070c2d6-0fef-403d-9ae2-704c45bd06c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c038ace2-c804-43dd-a8c5-f1dc76e603a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505515d1-42e1-4497-aa75-4c8639604abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7438c695-3fc4-4690-9ba7-318124c3f287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b46310-c05b-4042-aa53-1b0e1cfc1ed6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36b6b54-5109-4547-a93f-2f16705c67ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3ba8c8-4952-43b9-a07d-9f2338fd9516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fecec2-d6c3-491b-87c9-f3883633816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33199ced-4656-4402-af22-9ed981682c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3896c6-9eb6-4b9d-9ad9-0ede23b4fe06",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5220ec8-2f3b-479e-b566-c31833f77d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e68697a-dd99-4c6b-b72f-fe8d8adc70eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48084031-782a-4576-b7a8-d37f3e312cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f791c721-d347-4620-a743-7b9d5dac74a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996efb1-b0c0-4130-ac3d-ceb4827cfca2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a68e7a-2149-4580-b279-866eb38109bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff3779b-ee28-44a1-b5a8-6501bd622065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835707b3-c0e7-41c7-8bdf-cb9dc8dc3851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbfa7f2f-838e-468f-a0ba-2f6c23d930c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b7f247-07e5-435e-9320-ca07b429a639",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4e3757-d5b3-4d67-9c88-7024327e6629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df837a67-d48e-4369-b6c4-b033c7c168b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51823209-dadb-44cd-86f7-1d75ba2e2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a1d6136-4870-4c48-8d49-40e9ad30ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549746ea-3b5d-422e-8819-da10b3f206a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86c63f-ceb9-4662-8790-8dd93c0724fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d3ee4-87d6-4057-b964-a75b73ebf5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6be9d95-aaf5-4d2a-8af7-69b9e97bb561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e675457a-b736-48d5-81ff-ce6cfc126ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984daca1-7fa1-4acf-8c24-c586f4ad18f8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8a9555-3258-43c5-b346-e9fcb9f84d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a556a49-64c9-4b7a-bdfa-2869898ad821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2930232-065c-47c2-a9e2-aeae18a6b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b8810b-ef00-47e8-865d-4aef961eb497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4e1f97-800d-4a57-9db8-ae93f16df822",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff892c1d-7429-4f93-8c96-4f5003276d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaf3ea1-8e9b-4199-badc-1b668a6e6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b30f8-c278-40ca-ae42-ccb6e6512bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e76c238-d7f3-450c-8982-c1a700724da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb8cda-3c7b-41b6-bddf-4ed25b8cd423",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd1939f-156b-4b0e-881f-65132489aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f6fc1-5fa6-4111-9e4d-d0c6054a461d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3df3e74-d208-4174-b4b4-91d2e4440565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "456cd537-db02-49c3-976b-6da2e433cdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c8403-065b-4ce1-8972-857fb601976d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aac419f-a180-4669-aa3b-ca54f1b2c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49389aed-33da-4fd8-909b-00fad4a5e5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a33f4eb-bcf1-4c61-8121-916d3f9292eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5d6e403-7bfb-4ef9-bc7f-7046eaa62a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4379ea2-1000-4004-be46-e1f8e6e71f11",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed20c8d-cea6-4f9e-ae83-54c3be7e42de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08146bc4-7928-4357-84b6-8d91b82f6a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18564295-2db0-4870-87a6-53132663c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05f66d8c-146d-46fc-8ee1-822b2c137682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f67739-1ce3-44d5-b990-cf16dd7da510",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6e4963-4f6e-4a8d-9b45-7cd3bbac0fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9001d1-963b-4655-b84a-18c6f4bbca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58ccc9-094a-448e-a651-63fb6bbb45d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c09a5f48-b74e-4de5-9190-8396bdfb08f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f60571-da1e-48b6-85f9-c19d85aa1557",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94532eb-bba3-4212-be4e-5f4034e238a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c892a73c-7403-44e5-9640-202237b55328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be37156c-1951-44db-861b-4bed8138b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5e86678-b175-4a2b-a719-c3d3e9bad688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c1783-1656-469a-9d8b-f823abb0687a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e28728-32b7-496d-bc41-355a72c913ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97178896-4f55-4ba4-a65a-7b8d81dca927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d494d9-6f84-4560-a52b-ab6c628480d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "776a6358-d2fb-43e9-a415-5693f77d7eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f61bde1-afc2-4cec-b261-e5b3be5b8c9e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6858a7b2-18e4-405c-ab18-8057b44d8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3945472-6726-4898-b5a5-9e5da72b6888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49842a91-a4d7-410a-831c-79666f372e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cfd431-eeca-4a30-8155-83880c59c108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f66d87-ae03-4d96-8f39-9d549e208247",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc80c955-953e-4046-8d2f-f1bb68fe6b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a310170-6fbe-4699-a17d-1c30f8025910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05defed-fbe2-4001-b924-f56b47f24cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d927d7-b3e1-4329-88f0-2285e2330bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1d7162-a28f-4efc-a44c-925c49c94705",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e348103f-62e6-45a3-a939-9ba6ac96402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a66054-1b0f-4766-ae34-af0c94a92cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580d1f60-af5a-4e87-9b30-f1f4bbfdb76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fda70cb4-d89d-4f88-a3ae-f8a164d4e511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4c58e5-c42c-4905-bbeb-d043a4c48309",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235e944-1849-4e69-8019-4fe1e898033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab498b03-9dbd-424e-9204-9ff8b568ee00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697f29d7-8af4-4b1d-9c2b-f87468404555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6730629d-f6ac-4c04-baa9-437cc252671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09131dab-0007-449d-8ead-883f9999cd59",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edfe44e-b8b8-4778-8c5c-76094714a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72f381c-625b-421f-963f-ebb052896d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a50b5-f6c9-457e-8105-208bd080ca90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3286339-da43-46a3-bad2-dd054299f863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a5d43-e33b-402c-abdf-9fc743165d8f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce05e8ac-baa1-42ee-a5a6-8104ba5da3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcc81fa-227d-4396-9cd2-889cd5c32c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a6a18a-e26b-42bc-9f10-b789e7b440a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d63743-fbad-4a36-b902-ee937efa358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dd3867-200a-4a68-a36d-ef2d5a4afdcf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8680745-6ecf-4f68-8cd3-736209225137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5dfa8d-c977-4e91-8e1c-4d1e49276e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cd4ed0-1bb7-4fcf-b1f2-5b1841519d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b34130c-6a74-4d12-87e3-30ce549fb525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19ef13-a08d-479a-af6d-26200a23a00c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c470d-9f66-458e-b0b2-362ab33ee182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb96c7ee-f019-4d00-92eb-252a897483a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d9a64-7c04-4117-8c06-392d8997e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d54d75-5535-450b-b773-5700d58342a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24d8558-47e7-4461-becd-7719aaad00ce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68acb2d5-1b8d-4309-9202-099095c8a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84abfb27-cb85-4eab-85cf-99ae548846c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133f1812-a05f-4260-b701-d71693cf257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf31c21-4446-43c5-bad9-08b31bc7dea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e628f6d2-385f-4907-990f-4c0277610974",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472c5528-d0d0-4ecc-a93b-09126ba9dc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ad4810-17cd-4282-9231-73f87f3728f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df780772-cddb-40e1-bb6e-ac96d565c77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf9d9e4-4f0e-4b42-9df3-5f2b771ffdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0142826-2fd1-4513-b8f5-cc4cb1150e37",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e921c1-3d90-4bed-aee2-de2a4ede2cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dba3c3-2e96-4ef2-a85f-30cc7614fd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950101a-e9b0-4da1-8a69-e5fa0399216d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6897f62-ae3f-40d1-b189-ef24601bae0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ebcbb-b750-47a9-8ee2-4c5926665785",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18979d3-bc74-4220-8ce7-da6be326ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153beb56-a279-4bc4-a4bd-0ec20efa86e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6652a098-f3c8-47ae-94c3-dc2cac5e0d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91d030f-008b-4ee9-ac72-786400288963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38ba0a0-84fc-4a29-bfc5-c50fa9284f62",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dc9e10-7a16-47ed-b69c-6fa7b6a1e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8878f577-a55d-4969-968f-8e8394773b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6fed40-910f-4167-bea1-a617f1b4c99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa9c711-cef6-44ca-b72a-9c40cbfbaeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84036c5a-4610-4f57-b31d-e364b3a7e022",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e166d-3dbe-4482-a8a4-be9e110c21a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b784d2de-a914-4619-beb3-5052a19552a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ddb2d8-a073-41bd-a5dd-c34d883dfdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f814e4a4-d2d5-4162-9c6c-256ffebaaa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa00bcb-f65c-414b-92d4-603c60abab5c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5acf245-18f8-4c43-8cda-88ae2fac12e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4190e1c-20ea-447e-afad-50cfb2e0f4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921a48cc-4561-436e-93b7-56979a37a8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff7a711-30d6-46ca-913f-1390d6bd41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88039c41-d219-4e79-9dc4-8295af0f83f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176c52c8-e7f3-45db-a6e2-316fd9b43c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07e13c5-5cc8-4a5b-8d1d-62337ecea0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89650b84-d062-473e-b89b-de41769f9aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc74eb1a-3506-4091-8488-8d0f22de9fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c8288f-6203-46f9-a2c9-2215fefb5ba4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad2acf-11f1-4bd6-bdb2-b83142845bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3317fac4-c0b3-4634-9359-50c9bee7277f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a30b9b-2744-436b-8ae9-44d5792c4298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e35341-1f4d-40a1-a757-b80f35de4b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f8076-6527-4633-9b4e-4d6fbeb94ffb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adca077b-9588-435c-a6d6-cfa347b8c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7019b682-c6ca-4156-a82c-abe2fa8a2581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1551ea3a-8b4f-474c-aed0-af08535f5209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdb30bf-a1b5-4ecd-8ae8-f40a14340963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac5e16a-eaa0-483c-a1f8-c701bbad184b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328b99a0-b61b-421e-b5b9-c16c4025ed6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34eea3f0-3e8a-4e4b-a6e4-854a70627adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36544dc3-47d3-4471-ad3f-5118fb5b2a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c093c91f-ba6b-4470-8dcc-99acb59d09f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12318de8-227f-42ff-81a6-11e1142250d0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1667ac-fdbd-40ab-98de-7415e8588308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a12ff0b-57ef-4b20-91b4-3e17bd00a63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fdce0a-d251-4f84-a82f-76b44bd86942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad9d423-1645-41cc-a4e8-291ab1fbedb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0978fdd0-8d08-469b-b166-869730688578",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e95cc6f-4ddf-4511-8428-8f2ded608761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a100da9-d55a-48f8-b65b-38bd4174b5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8101341d-8c2e-45fa-a403-adbcb63ba426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cacb3d-b303-4d0f-940a-b7b366f6252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a2e568-1e69-4cb7-98d1-4863865816ea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e791f7b3-5174-4b0a-9abf-c69f7316c595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4187bec3-c618-41b6-87e6-076d069d8f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd64011-3eea-4643-bba2-e7bc6cb3bf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15fcdf16-fc9c-469d-be09-5af1f0dac6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6576a407-3863-4f3e-b139-2ca91615acec",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16f152b-4bbe-4d46-acce-af2c4225d14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a9d5b8-1ec1-4b94-83f8-396b7afbc84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1a9637-6f45-497d-b0c7-f611594ae0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1b2f28-1cad-4e23-90b0-6f3e93b78c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd52d314-5726-4c7f-a1ad-5045b35d66b5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e2ebeb-92fe-44e7-89bd-8915da9e6567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af119a8-4000-459b-90de-b42ff54f2e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c412bc74-62a3-4b4a-b3bb-9e530eb26803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4184668b-d8bb-4c2c-a373-ef1c95975c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab859f37-be9a-47cf-9752-57391b3fd168",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2341f1-587c-4b45-a1cf-dbdb0484722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fcbae5-b85b-4650-87a3-64bd50e71a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c712c3b0-790a-4486-bf51-a2a4a740025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5755b017-50cb-4046-9697-714b034b0926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d27509-aeef-4f16-ba7d-db4fded6d102",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b176a0-9da7-43e3-93fd-0a722c142d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f37b28-cf61-4565-a519-f4a1d137df97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce819b4c-3f76-4749-9d79-fc61cf97f3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b258ee-271a-4090-9d66-2bab14fe9e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccef138-3304-4857-8388-ff0b90f6de17",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51242dcb-216d-415d-bd22-af305349be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1841fd1-d9a5-4e52-968d-5a2407161338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6afa3d-3cb3-4bad-94b8-53a7437a6380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5635d3d4-c238-48b5-8f73-5b050438d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef90f116-be81-463e-93da-b8d9623e7894",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba203178-3546-489e-bde1-697547e0187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48179611-d277-45f9-a78f-dfcc12aaefe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1671c66-bfdd-4610-b6db-ebed9f6a7261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "580ce890-3566-49d5-a283-b4f582ec2bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0726d5f4-0f4c-45fb-a782-d28a4e167487",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c23ccf-669a-4c22-a3be-e919fae2cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2051318-bbf6-4aca-a3ae-395de72bb94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a7ac7b-e76f-4e37-8da0-5050b228a7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e05f5eba-3685-46ca-b658-e2dc05ae69b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1baa4f-f741-4926-b263-186ec6a5b1c5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71be4b-7daf-4f85-8f81-a0b2a4787020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ffb01e-a37e-4950-a8f9-9680a6b70d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9455ab0-0964-4f58-93c2-d229e46e1dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "874af2b0-2734-4313-a3ed-2143baa15346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26cd495-f91c-4a7f-af19-570c052a99b7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd868e-8333-4cfa-8132-d6caddaa7343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87866497-5dc8-4462-8033-cb832f200509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a437f5e2-cc38-4eca-83a1-e68660cc4383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dacc9fe4-7e8e-40ae-acc4-864ec8108046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fdb729-3308-40b6-baa4-4c9efd31b898",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c78e48-cb21-4600-9f14-8f90086de0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2896c877-801b-49d0-ab23-3a3252954419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bfce8a-a0fb-44f5-b149-ccacc76d3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7982ab0e-c041-49b7-b328-ba7b72f2a0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7557b974-2bcc-46d1-aff9-38a315d4c3d9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac63ace-bad3-4ba7-8253-9560235c5b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed74963-699a-41f7-91b7-0d48dc1075e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb726fc9-7c29-44cb-8878-107b01320fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc090f71-f17f-47e6-8f53-778f80baf95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea48031-c0e5-4d12-b4a2-fa1b13e99b04",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96ef3cb-1951-45ad-a3cf-3a39f6e61505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907c7489-69d2-4735-a345-4236575d295f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9685a9-57c4-457d-bdae-826a2562c1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a70f2d-8910-48f8-aba8-4cf5a13c844c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f4e06d-5ac3-406b-bb82-55cc54b2b0ec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f1210b-b843-4066-8079-e756d81328af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb44f8a-414d-4b39-979a-719021573fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398e42a4-c15d-4ea1-b2a1-4769a1ff6845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9b1d66-1891-4f0d-942d-c0b1b2a1838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c7108-0517-4200-ba88-7024bb242451",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba64ee27-454a-4d3d-a60e-0c757f92b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be38c171-a61f-4d3d-af3d-b3cf76de3dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebee33f-3418-4c0e-a41b-614a92112bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c779e015-90ef-4389-9951-fbb83385aa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d816a6-97cf-4df2-a1a6-bcefca898dd7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b37db2e-959f-436b-aaa6-e256a5a8b012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f389fdd-97f1-4e42-bfb5-9cd2a4e3a9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf581f-d7c1-41bc-bf72-e97b828ec991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a697507-8def-4607-b2fa-b797dc8e4e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a04a12b-24fb-4e76-8f55-ad521665e0c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d91d20-a944-4bab-99b6-a37892c36e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9c7986-35ef-4f42-a519-1b21f0f76daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27386ea-cd5b-40d3-8655-828c02205d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "843b1526-63f9-49b6-a729-0da1b8010799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52efab17-fc4a-428d-af2b-0af48680ad5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b49b64-5eb3-4443-b7b1-f9bbc0a3b58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9d9025-9e3f-4697-ac75-497fa69f074e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040378b4-a879-43c8-8b1d-e083a4501cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78852a34-51ee-418b-9557-7e079679968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088fccc6-cf2e-4acd-a253-58bee96f702e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc01a78-110d-47fc-b8be-a7eef261d088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b159d10-0c13-4005-b11a-5018fce8de17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201bb1ae-0249-4c68-b404-a9447ea2788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b39a1ed-2d6b-42fa-80ee-05eba7df9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4788b864-b5e6-4e4d-a173-9d036e0ab2fb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18766d94-b33b-4a98-83d6-047a90490120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4621d144-2330-4f49-b576-ffd76c5bba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9a3d5-5f8c-457e-962a-0c4c2ecf31e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffd156c-2998-46c4-b716-c26ab96c8121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5236d956-8f33-41e8-8826-d331932e5eda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927ecb72-add1-47b7-b158-08a1ebd9f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3120f6ef-dde3-40bd-8c29-4b7822a10420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cb49df-276f-48bb-8df1-3a4940af6ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d4baf310-8aa3-49cc-9b6b-df166f007619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3262a9e9-787a-4f5c-951f-ea7e6171ff50",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d91990d-4c5b-4d64-b74e-9ab5e87129b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9f345b-2b22-47c2-8093-416c776beb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e82381-11cc-40c0-92e0-3a71e20f20ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa6a20d-8057-4dc5-90cd-1fab817c1e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b0cbdd-64a6-4e0b-bada-5f1895b4d3d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185b2d97-776d-41e0-998a-fc5900c1cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31409757-de61-4652-9f5f-1ce407b37925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc234cc-75b9-4bb3-905c-5746c2ae2352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ee38b0-9462-466e-bf8d-00c43d735c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f424b0-f4a0-4cc4-8160-448a2c192a20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95e53e2-ac5a-4856-8d6d-7cbf67c7ea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fa9949-c1f0-46ad-9537-c2585c4df520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240b0ccf-4045-4bdd-9846-6db50e672ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4e2257-f0d2-4937-b260-486ef9c281df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3551d9d-e77c-4ed3-8f4f-d956f9335e24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc464d9-729e-4ffe-b9ae-60a53f7c6356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebffe6e-6915-41c0-a109-9b684779dc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc13eecb-91d4-4dc8-b16f-60d3c6edf308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1355f5ae-05a7-48e6-ac5e-a5c87d7629ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef80afb1-b9c9-4c55-94a7-cc5ab46a5fe8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464eb184-b1e1-47d5-a2f8-7bddf91717cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483d0b8-4b68-45ef-a71a-8542a433c974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9338d83-f9b5-4e14-928a-67e3f8bffd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93efb782-bf41-4d5a-9a00-17b2071fc934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cbf05b-f31b-4177-adc5-4731617f81c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0962f25-938e-4ddc-863a-2ea75b143d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c239159a-cfb3-4db6-b3e2-758c891802d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7861d997-c457-4567-b57e-0f2c2a3e819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a01ab59-fc0a-428c-895a-b5b075de84a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b86f1b-4140-48fe-9f28-19fedbdc8380",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457a9ac7-cad8-4fbb-bee5-f584312f7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba017811-f1f2-4697-b9e6-032497fcfc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfd0fde-ceca-4f42-aa0d-e31081e16b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ce72e3-4d38-412f-8407-c100ab04198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744558f-8ad5-469a-85c9-9ba82abad55a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094910a8-f131-43ae-889a-1175b94dd664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c08036-78e9-4c02-a65b-a05f72d76360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a8b780-d628-4b13-bea5-3d46fd8368d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84aad54-49f5-4363-a96c-9b0f6944f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5b894d-21d4-48c9-884e-44f8db4cf6c0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f2277-240e-475b-84d6-d99a921f29d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a816fc4f-6a5c-4e52-a631-1242d42b4952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6fb93b-c3c8-4803-9920-eed1dab28bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2a65e3-6f9c-4d50-ae37-ebb73a1c46b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae218a54-a404-4b6a-bade-04edfa096adc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeecc86-db3f-4f09-aeac-820a0fc38294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76378ee6-77c5-4795-b24a-d2d78a4dffac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d23625-5fc0-4818-b0a9-9153fbe7b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b430705-5364-48af-a70e-74cd8fc0fd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc8a51-67db-42cf-84bc-cf55c1154975",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64d3a96-4caa-47f9-8cb7-054b1c53ce1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1850f36-3e67-4d22-bdba-20eff1449424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6386b999-e699-490e-81bb-65ff5cc47dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73ddfab8-fdb3-4abd-b17a-28f69ba95be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f4c5cd-4292-4539-8af6-b0a1ef1ca60c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32fc7e-9087-46a0-9a1a-8034e94df62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c49bc9f-4a3c-469f-b4ff-cfb603f2bd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf52eb2e-96f8-43d1-8635-9fef026ead54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6ef196-41e3-40b1-9375-9552f85dde9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cbe96c-8aa3-4f5a-ae9b-10f0ccb707fc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9b0e78-d9d5-45f5-b6eb-3f6b765ba99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e1bb1f-e4b9-4dc5-9c57-6a8ffc507d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f405d074-0e22-4f32-969a-0e7668874372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1931be7-75c4-43af-ad1f-62fc515a7c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315aafcc-eb63-4efa-9dc4-94ec9add7def",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d47285b-db07-4e90-94ae-f43bda80c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9293bc-e814-430a-8780-1ffeedd7d784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b050fe-ad7e-4d82-9f86-1171e9746f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d188ff57-1078-4b3e-8540-d71798b9177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67526dc5-1de9-4878-b676-230ec77c217f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedf4c74-478f-48c2-b05b-82c4610c0734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262a7f23-67e2-4713-9422-155b577fe2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d567ee0-a0ba-4997-a90e-8417ef9d53c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae2ec18-3735-4cb0-99c6-1cc73113cafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140612ca-3935-49c5-b50d-a8616ace8b92",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf901e0-4096-49c6-a8f5-8e56eb477437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229aa5eb-178f-4e44-93cd-bbaa8da32807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14215282-9de9-4b41-8cfa-1f5f940a91db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b413d2-c1bf-4f10-89cd-de1b801c8cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04d9e03-1c54-487d-b50d-aba7e79ee714",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794de0aa-47c4-435c-a0c5-4a951a6b8828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f37499-9584-46e4-b133-1109e62f7e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76283ed-1195-477c-815a-e54f6fff0768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "701eca47-7beb-4c8d-8c0f-4a899832a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2d0160-0d80-4a51-8576-03ef0f09023f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d0ee4c-861c-4f40-b13a-5d68dc7fdb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e9d433-8d4c-4cd2-86fb-0e6d61d4201f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5637f0-3438-4739-9714-ceb3a8c0241c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cfd75f-5c2b-4ff1-baad-69756712b095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6025002-f136-451f-a64e-d7eeb47b3d88",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd49887-3416-445f-926a-71a3e7dd9edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03fb05a-ae66-4155-91c9-c6afc66000c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c1fe0-0a12-4b65-a5c9-855309cf640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb68463-24b2-4fba-af4d-0c41912bed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c037ef7b-bb03-4608-8107-6f8a4b95616d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1f2cd8-9ce6-496c-9267-0992daa22be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb8f32e-41c3-45e2-a975-a67374940f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e024f-9e19-4805-9dc4-ac08d6e2ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d31f30d-a627-4551-9fcd-8ba4ab67dcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1472624c-d6a1-4c82-afa4-17e5f94f0fa5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1bd263-6767-454b-9638-7e6342e8bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd27cd36-fad8-47c0-8b3e-30d265aa1d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ced2f8-5277-424c-bd1e-35b2cb86dd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b594b28c-99d8-4f1f-a775-68b841e87ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2654f682-e0d4-4a19-9377-a05878d85cc9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30057780-7c5f-41ae-a3b6-5b5ad184dc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf5b896-50df-4286-bbd8-1f54a9adc68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4b4d78-0549-4047-a72c-7700ed6861b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ba2b9d-7289-4892-9725-913c7447f3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d85ce3-650d-44a1-9e4f-5660d8dde7f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41044ebd-855d-420a-ba36-d8430001b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd79322-db85-4a6c-abe2-162a54629123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f7b99-58a0-4722-b00f-8a0ac046aeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7935b09-250e-47b0-a009-d1e707121f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbde4be8-07ca-4b30-b6d9-16e347fb0b23",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26757431-9d12-4256-8a9f-95167ae8c0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bad45c-9739-4362-8cbf-fb7ee153d1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7779a0c1-0935-489f-bad4-f62e56542886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23695a1e-02d1-4453-b567-2bcee368689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87c7ce2-574a-44d6-b667-2fa376dbc1c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d2683-482e-4d3b-8f11-fade3784294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288e58ab-a310-46b6-9413-496a6c4fd756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966dc88-fcc5-4b43-894c-21ccf3ccfe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a68a3f6-559f-4c0b-b442-a96fa39a2285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8adddf-cf62-49e8-982f-c2213d0169df",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aeb01f-e0f8-4719-a51d-092b377b4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b931558-ebe8-49a8-ab98-2c6d01ef6893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d867bc1-772b-4099-b281-dc21aa394eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcef47c-01dc-423a-8953-eeea1eb7ec6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda4ec64-2365-40e3-be8b-f27586916753",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689ca8f8-7d89-4d46-ac5d-1197ac6c0c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d49545-38a8-4406-b27e-0adfa44a69dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5801c6a9-2802-4765-a56e-5f085280b15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a98ad4-6e18-430c-ba07-cadd3dd30a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063198f9-1d23-40aa-8aa2-e00643c6ebb6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b4aa38-3896-451e-b0f8-17d2c153cfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13e83f1-44b2-4dae-a8df-6cfe81327de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ac526-2ade-4842-b888-86b2acf7dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3084d4-293c-4a0c-b2e5-9832e2539553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd0f60-aad0-4055-b9c9-65da7bc6b0c4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87132756-29f8-4b85-afc1-5fe5ef8c06f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75edfdd8-143a-4163-8125-6cb753ca17da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06220d-e58a-4f07-99e3-82308efd8d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07374c81-c9a6-4b26-a3b9-fee58a4f9f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f9bc0c-3534-4fba-bacf-6fef6cfba83e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e07967-f8de-4832-9416-ef7b7c5e375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8400d72a-1840-40c9-823d-1f78c46745ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6ad9e-185b-49e3-a696-1d978ba6a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f792975-3d49-47f3-8059-59c24ffd68e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e80daf-17f7-424c-b5ef-fad904ca5b7d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db88b29-fb38-406b-ac2c-a39f66570a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b744a38f-1483-47cd-b507-fe95fbbde6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4812e785-1a37-4f55-a6b1-f2c6c86a385f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f25c7e8f-1b0d-491f-ba72-5a3c3fd2e7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c21b621-fe0b-4db5-9ad1-524fc86cad9e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27447bb7-e4a3-4e24-a00f-6631a2984bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e635d2-d432-4e7c-bfd2-307cc97938a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fa020a-c21e-4032-a8ed-59ad8af78d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b75b83-19d9-4567-aabe-cf42c1b2affd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab4f0a1-be94-4244-ac44-9d1490f3cb9e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f407bf1c-f187-4b18-8323-da818451cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88f575-de64-4d61-a1ec-77dd64d69673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aa64c5-1e06-485a-aade-b84ef5f8bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaedf112-abd7-4eaa-ae53-ad0e7a367ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89735eb7-479f-498e-9b6b-6fff20e19234",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1137f847-91c2-4df2-8a2c-f732f15cd422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37f36c-f536-47c1-af31-623240a5b39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f42512-a069-4762-81be-4c8d57ea02c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bef41cb-5975-4c52-a72e-6bd7a1e0dcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19d0c75-e5ed-47d2-a641-8724ac38c08e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc2d188-ef8a-483c-b86a-21cee6f7d162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fe1682-d8e1-4749-b33e-5f17bb3e3588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a5cf9-2fc9-43de-9773-465a1bf42c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "511ed5b9-0f6a-4880-8c81-a5aa43c0e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca9c7cd-aedd-48f8-a88f-17852d63654b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e07e54-b84c-4d4b-aa1d-5121d3fac1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f55601f0-a244-4bcf-bbd8-535f9c79613b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c186117-5675-4a51-a3ab-14f4680b7c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cea360cf-de51-4f90-b6ab-c9c9fb99dfe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64857bc5-0f2c-4327-b01d-426766ac867e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44551b47-3474-47a9-866c-f07933747426",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb51c4d3-0486-4e1b-919e-6e74159e47f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d0b22cd-158d-45a4-a539-74bd6324e9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ae4fbb-50ca-4bda-a90e-8f84f181b7c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee1b8d2c-bf6c-40c9-8609-a6de529823b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bae9024-61b2-488f-9585-5e35b1168249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57f71a0d-f83f-4416-b2d9-43067b019358"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c0bb8f-324e-491c-a230-3a20a473515a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29297458-d111-4307-bfce-3fbfa233e324"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25c9bc3e-9e3e-4237-9912-824d82f5855e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1a8d395-2049-49ba-a961-4ae44921a45e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ca064e5-47b7-4d3c-94ce-476f1b9a9fd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "014966a8-13af-48d8-9e31-6f25099c56c3"
                }
              }
            ]
          },
          {
            "id": "02850ecb-404d-48ee-a680-8b03ff9781d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c07d5076-9b5e-4c49-b2b5-dff6a9bd05e8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "463aad7e-ae99-482f-bf7a-2e2153ebf2d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43439390-270c-46f1-8f2d-2421a278ada6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b53593-8f07-49c9-a53a-878a765af247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "568631c0-e05a-493c-a175-4c2d3d36c5ee"
                    }
                  }
                ]
              },
              {
                "id": "d67335b3-9971-47e7-a5be-54c488aafe61",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0211b02b-7549-474c-a3f5-32dedddd2113",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "752a8ddd-65a3-4cf5-82a4-18b83f4cbd7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6404b145-4853-4013-9b40-7511b907876d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f9f1dd8-5c98-4d82-826e-0b0e614f1c16"
                    }
                  }
                ]
              },
              {
                "id": "28cf136e-0a39-49d0-b67f-230a6c151f4e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c758b4dc-3ad9-420d-8f79-8b2a0adac9df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f97ad095-3d7c-469f-8955-090dafb80bb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4065296c-ab59-4c65-95d0-0725abd033ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "474bac1f-6e7f-4538-b305-f9a95f3de541"
                    }
                  }
                ]
              },
              {
                "id": "4e871474-1938-47c6-b4e6-a1be82e6c9ff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f228bbac-9ca7-474c-9111-f752ad3c9cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f6f39cc-043e-49ec-92a5-8213f5edda48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0b6af31-030b-4820-a5a8-09fa7ab617d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0bddf5f7-d01a-41be-a91f-f7c1826922c2"
                    }
                  }
                ]
              },
              {
                "id": "83903200-43cd-49de-976a-c13bf6736f32",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aabbd30-c55e-4e6a-9bd2-6c69b181cb9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dab17153-4d2c-463d-a915-b1e6b8d576c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16168d76-7802-435d-b6ad-392072a914cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ae0fdf1e-2f09-49c3-a68f-3afe35b814b5"
                    }
                  }
                ]
              },
              {
                "id": "d8faea11-bad3-4c83-9d73-a44f46f0ae8a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab7f703b-91d1-4d06-ab05-65adb92eca61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3be8352f-54b3-4e9f-bddf-8345a1ba230a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04adef47-3ee3-4313-8f82-a6704b477452",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45fbc69d-90f9-4faf-8314-2ad05dc0f285"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "444d37bf-9590-49b2-b47f-e29f337eea16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fc354d6-5395-4308-9a0c-1d478f94d691"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25e4b268-9462-41ac-9fd1-7a0a3d0642d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19fa5854-4bfb-4ef5-9091-49865d95e2e1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15f90d0a-3680-4270-bc8a-e143feaa221c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "de3ff1fe-3215-4ccb-a1cf-8c3d78a226b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43142bad-1ee0-4340-ae4b-2fdf329d6470",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4255eb4-ad69-48b7-bdbf-5585df0784ff"
            }
          }
        ]
      },
      {
        "id": "ba69c8f2-a320-44e9-a5bf-650590772e77",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5b8ad499-49c3-4726-99bc-557208c339bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0e0c365-3015-4c43-a1be-ce37b2135e47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8689f72b-66e5-43da-8838-67a19cc0bc06",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a9042-e768-45a9-a907-3395caad47f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d83aa0d-338c-4ed3-af7e-b4a245b27848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db04a0-b05c-4a2e-8f15-20ade4a502a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ef2b3-feba-480d-956c-5cc856b30daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d5452e-3d45-4241-8f28-2c0ef59765c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7f8b35-407b-4642-bb1b-a3ff73285244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab519124-36e9-4376-a8da-ebccd21d65f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b79e48-f76e-42a8-bcb9-78fc8e283123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4446d1-90ff-4028-b9e6-805470ea5f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a53011-efd2-4e11-a85c-96adfa11531b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ec3e96-3d92-4a0a-8bb0-8ca30cd284fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08394173-2c8b-4b29-90a2-757e066410b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1cf4c6-197a-4dcb-97b4-85c3fb777387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53db99ac-bcd5-4d77-a269-ad2071874c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11126d97-8205-4893-81ee-9ea336b17e27",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5794f49e-3b74-4834-a0f5-5be49a0a4be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e2dac6-e763-42d4-851c-0b07b3a6c94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4b86f3-6694-4886-a552-8b059f8223c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9272d19-ffe1-4b76-8f0a-5d83c4bbcb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4676968a-f6f9-42f0-8235-3e77fedb08e0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e704433e-4116-484c-a9fa-66b8b035f0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fe1223-a059-4e10-9e4d-d792d5e71230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ea908-bd82-41be-b4be-c565d5fa56a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a03ab6-a36d-4eb4-be8a-ba922803f6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc70f17c-6d9f-4992-a5a5-d436c3d2c88b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ffb68-849f-4b79-be51-f9629e415df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a71c62b-482e-463a-b767-e50c42bb785f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7ecd89-9533-4679-b4ba-5633612bc504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51eb151e-66f6-4260-a9c4-1c95718cd994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8970fd-24cb-4918-9e8e-17964968dc37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd9abc-92da-4775-a1a3-da8e6170d33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c9c84c-5a1d-4975-bf7a-1d663594cd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72eff50-6da4-4494-93a7-d349aa515142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0877da59-f004-43be-b873-60754cf8abe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be20fbf-46bb-4aa0-aeae-a1f9f749aebd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453be2c8-ccf6-445b-ba7e-127caf0387b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd895dda-9b68-4c03-b036-9d3bf429beb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a358b553-b849-47d3-bff8-499e734f5789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4006f38f-9335-4500-a5e6-73a91b6b108a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a385e4bc-df6d-450f-9053-f80905fa9cb2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f29c267-fc85-4c76-81c5-de605af01451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc0b044-5b8e-41c0-a5d3-42f4f366c661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6372d760-ad2a-4518-84fb-fea0f57e46a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a5c09a-dc84-4b8f-93d8-ce6ab44825bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c6565a-ced5-475a-a9a3-f1f24250b2b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91256d18-e716-4c49-99f2-a0e246536f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effd5ee7-fdee-402b-a6bc-c4a81f3954d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a567a660-3b01-446e-b981-1a8dc2774851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbe865f-07f5-46bf-908b-c13999f17372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f109b-e2e9-423a-951d-02ae122f60aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35580a83-c516-4b1b-b95f-e477c9fe0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d75cb7-b719-4818-9223-5f96ad41bc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c858928a-bbec-4e0a-b48a-c5b7823a7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "034d13a4-166f-49f9-957a-12ea3cc98fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948fc404-643c-497e-81c1-5e235c51ec6a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0015b0d0-cd26-4a94-8515-cdb320bf1cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab4f786-c878-4a80-a4af-e27e78954d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92adc6d6-1699-4ca5-a0e0-7c942316ab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9d29a1-e6ab-40df-a153-56dc361baa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419001a7-94a1-4097-8bac-860f438ca9fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0488d05-5e41-4513-ae21-8277c8dfd2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6034ad1-72c5-4a66-a4c4-7476eaa23c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f90d04-09df-4e17-beb5-38eeaeb94370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0ab589-b9b7-44b9-b8d4-77fd8e784083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0344548-997e-4670-af33-08d4da9873e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857a94f-f60c-4eb9-b16d-34f90e4ac5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2284a5c2-bade-46d7-9434-4661c4f5f257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5e5861-6c58-43d8-b6ea-d5b025b140f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "284c01b3-6eee-47d2-82ff-c6e479410912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b061180-fbcf-440e-ad67-e91a727035f7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480306d3-b76b-48bf-977e-335b60b9fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9b5f46-a552-4579-8c2c-e4e7f58c7606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2b798e-3ac3-475f-8d3a-b54e288fe4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f50aa59-d14b-4e92-a1fe-b7541afe2779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8cce38-faf2-4b6c-9bb1-d87897558b86",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e9f192-bd69-4846-bec8-b38a92e851fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ab7e2b-c380-4ec9-9e82-4a3b7b993a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3f92a5-85f6-4516-ba52-cd7d4f28150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "327dd9bc-2724-4826-8a37-87fb4917092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956e54ed-36e2-4565-a652-6033e090904c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb6c515-a41a-4a26-804a-6f222b5087fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2dd340-5e82-4063-b7cb-9dca246f990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8258bc98-a31d-4cc6-b11a-68dc711d10be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af99473-adae-448c-affd-2c8b8a693729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0ab06c-f827-47af-8097-e2c217939c2e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccfd3bd-f850-47b2-8892-bcf8976c5925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1ee6eb-8def-4cd5-b9a6-df094afd9439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af543399-be94-4912-b5c2-3ef3df24f539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "924bf630-ff1d-4d96-a8c3-b17a321cecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d3b7e1-fcef-4879-8be9-02a8c1a8e47f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833bad8f-1763-4e7c-a440-10fb14e18113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353bf202-c61c-40f6-ae1d-1a3560c22b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8808ea18-4b3d-4994-b010-6c7817ddfcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc73984-ab49-4f38-a5d1-d3e9eb04f45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690d2dc-4729-4d25-b873-276c776a0dd6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be263aa-96fa-47fd-9922-1ff6f4aa8e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c24d097-0567-43cd-a654-629ee7dee402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0478aa-3db2-4a44-9e2b-3b7a668c55f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd7bcf0-f3c2-48f0-a5e7-c79f3a2ecd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c0a4b-c1ca-4610-9335-0d6d6d6f14b5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3760b-54a5-4682-b1b2-c613921735e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5450ca1-ca90-4850-8e72-01507286f320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50503828-7491-4194-8880-11ca710be382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950d0e00-8fb2-43d4-8360-4b1453c5aaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd918fb-9047-4194-b454-935df43d7982",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ac6274-a149-4557-b1ec-5ad4c12d01d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4accc3-2067-414f-af65-8c13cdd1c02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda6685e-64cc-42c3-a45a-f17e76e4c6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef97cbb-dd3f-45fa-93d7-d2555ce137b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd7b20-6d4e-47e0-b60e-bca353b494c4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d27b70-9d77-4090-83c4-4551700500b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f84304-03c1-40c8-ab09-35ecd2cbc4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365f6f43-b0f4-4e64-961b-d2a3737346aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ab6604-4ed9-461a-aebe-50ebe9bd30ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25813870-17c0-4b3c-8686-5cde9cf144d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875b4433-66e3-4ab3-b0b9-c84542b9b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad96a47-db98-4d85-b0e6-702ed2e75e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3464ba0e-54bc-4b53-8bee-cf83e903a2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd9164e-a2cc-4aca-b978-ba0e76cb09c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822e5f09-8233-4d8a-9395-5aacea951636",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bfa6e1-68d5-40e0-97f1-3b946d600f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66682630-5591-42f3-bd35-7a3a961c02cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff332fb-26bc-45d3-98d0-a8f412fcb477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0f062e-a142-4b91-bacf-34fa7708c2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e2e062-f999-47f6-9a80-55a26cb79829",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e210036-ef7c-48df-b05b-70e8d00b576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d8de27-ed2b-4f90-b8d2-54b1b7799db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d6619-4321-42a7-b477-7a3e7783a6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "517edd01-c863-48c1-a7f1-b65098e7c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797d7da1-4cb8-43b2-9fda-77235aad5b03",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769e41ef-3d18-48aa-a5c3-c251ea571901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e909f12-e397-4be2-bfda-2a3404bf2265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9258e3bf-b8ce-4af3-9a03-5ae2dcfa5701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8496d19b-73e4-4f8e-b239-7487a9d92e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cef871-22b9-4cdf-8f40-f0c4828160b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2de7e4-84f4-43b1-b064-eded55d9ca26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1496af95-30f4-4aea-a76a-dca8fd90eaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1616c1f6-0955-4da6-9c77-d80713462187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a34b31-6e9c-4e19-84d6-264ebd8fc65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a10492d-421c-4d44-b7c9-6441d74972a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf96356-58de-4a9e-846e-174ae746515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a401cd-e1cb-4a8b-9a84-ede7e8057072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3938c88-152c-47dd-a5ab-9d3c5208844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a435890f-08f2-4ab2-a623-190723a76e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23290c2b-d240-41f8-baa3-1e4b78d0c224",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce6005-b88a-4252-ab76-4244ceed7eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a580d02-8392-4e68-8a0f-eb810b29a39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962d5155-1374-4690-8a5c-2e9117268153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03967d1-5c02-4bdf-9b33-e5750ad153ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50777d96-c5f5-45ae-a544-ea9732504df5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f58f0ca-7385-4fb0-9dba-c92f108c91f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63243990-e3a9-47f6-9fdf-65b9340965d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d328f493-da89-4b0e-ad72-1ea9e785869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86e3226-964d-4dd4-9a5c-1bd32e299b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f04a64-dec8-4d53-8e3f-e0cdb01682a2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1a4f4a-f966-4fa4-9a08-5725e7142f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e6c8e2-c823-4e03-815e-c2cf7f011003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8359007e-ca27-4593-b890-62cf1135511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d9d9ad-f7a3-4ec4-924b-3bddca4bb743"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e04fc36f-9b4b-45d1-8a53-ad88fc6fe78a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4db71d45-2e4e-40d6-b162-3695bb97b29d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c63b63-433f-47b0-a336-3aa3abc37d53",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3df07e-41b6-45e8-8db7-31e93183acd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f8a1ca-2d3d-43c8-a290-a14652c836d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d262881b-6da0-4134-9033-4fc7e5b25b80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "744ad1f4-f918-4049-b5c6-52dd9adf9607",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca69db2c-5c17-4f6c-9cb7-5b2881bf1fe7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e04f848-0cee-48b3-b92b-9c2b0ed54d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06f0e4fa-c679-4c06-9c16-0bc473b0e594"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c7112da-5176-42c4-b8b1-315a1dd7ceda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c783477-6a40-4a9b-a8c7-08a344ab958e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72706920-723b-47b4-86b9-027ebbd40a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d330f536-fc38-4430-851b-2f764a655bdf"
            }
          }
        ]
      },
      {
        "id": "6a1f5967-2570-4920-8b8a-048cae0d8b1c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f3ffa7d3-a2e1-437f-870b-4c3e9ca39528",
            "name": "Negative Testing",
            "item": [
              {
                "id": "057ea8bd-d2f6-4336-950a-ca169d100e27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d350dd3c-38d5-4939-9ece-11b071a4e453",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfc30f7-87a4-4c5c-a241-491667c96b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f47681-2213-4c5f-946e-ab81a2f244c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2694f3e3-82a4-4d69-8fdb-1cf234b9222f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b284aa-d8f0-48cb-93ec-8d8d4f16a286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faff148-1c13-4e67-b635-f3d5b2c0d8bf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53cd646-a763-4f0f-a791-d44a085d29c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6052843a-d871-400f-943a-14a438959c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a66a8cb-6c11-488f-b855-2526be16e3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72a95b5-1d86-4b2e-bb32-5716209d8247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8652a35-6a3b-4510-b917-da4ac4fbe947",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13856491-f4bb-4424-aca7-8941fd0d4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf20a49-fcb6-4e41-a9c7-2e1c049de141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a1246c-5244-4a01-9d95-c7db761877b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "734df9d9-c941-43a2-be5f-bb495ff0a6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b495d9-6f54-4c90-a3af-de6028b9d87b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f362cd9-cc9b-4a35-bbfb-a57228e1f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2ddc99-6900-4e6b-a41e-27f551f9cadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fdd709-2671-4b8d-afe3-38194a664f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaa7815-0f8d-426d-83de-289de4febd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c065401-cccc-457b-928c-e35908c0fc21",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02efcab4-28b1-4d75-a92b-54a472f6050e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7664d1b0-ae05-496d-aeed-e81c5a12604c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9472853c-0ccc-4e96-9ef5-5fe5439a4214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcba46ad-f672-445c-bf61-5de335945e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45f2f4-7918-450b-913e-66c3b08723fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbc5eab-9375-4823-8a58-94ec9d17ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1592adc2-82b5-48c2-a4b7-5a9d8b307094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4212324-071c-4a13-b27d-ab1aa9f561a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a694cfc5-46bb-4bfc-bcb2-0baffb64b33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02292fa0-ff61-41f6-a72a-5a72e401edc3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93bc5c5-2ebf-48e3-bdc7-b7628a7a737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed9f720-8aab-4384-9f71-7015f882f8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef69c84a-dba3-45c3-a7ab-11cd709d139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "596e10c4-879b-4dd2-a8db-00ccaab8dacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8dac74-b9da-46d8-9c9c-d477f1e244e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97892e4-76cb-4893-840b-fc1f3ddd6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4816eb-ff64-48b7-bba5-bd635931fba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424a53a6-9e4b-4b4f-9d09-88e7921e4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f410164-ee5d-4563-8526-af8981577a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c982f6-8ec7-4b48-ae55-ccc711c56195",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02660d1b-a871-4615-8527-002a0e680240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8fdbbd-6a6b-479b-882d-67787175e8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a687422-6d0a-4688-b641-815f77e78af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf2dbc0-2c03-4261-bbb3-b7f99917d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c882cd6e-9814-4b4e-bb11-19add92f42d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b384e22-0636-4ea2-bb39-6ab759dc3af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f3ab20-b3d9-4fcf-8fa5-571fa7261aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea60b66-f943-43b0-9966-dc95f5d7fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9a099f-3605-40f4-9459-1047e1191fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2a8aaf-c95a-40cb-948a-02c3cde5a3ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9922b8e0-fd2a-4167-afb0-271b1c56cf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2926ba0-4dd4-4096-a04d-0009bdb052f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b21e36-8e67-42de-8f67-886ddf415df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb13515-42f0-46eb-8e2d-d52801d7ef45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925b1ab0-c0c2-4628-9efb-15a8575ae7e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23861ab6-a16b-4b1f-a97e-3080836bd120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb19a583-2c03-4544-9a4e-967033758a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a75de84-9921-4193-9742-a8fbdcc583d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00ca6e49-830b-4003-8d17-ffed9dc83f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70bddae-8f8c-48fc-82b9-372f8f8a5901",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe1618-bb2e-45f3-aadb-fefd2c7596b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edff7e87-e004-466d-83ce-5280c789619f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89591f2-83cf-4717-a25a-3a76c98184ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c3f5c9-886e-456a-a65f-aff7dbe7cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07998274-9593-4de3-a396-85d0b5a44f99",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd58c5a-7c50-4064-8e16-2a3176452272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb3856c-16bf-4182-b3b8-dc5f431066e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac1f414-685b-4bfd-a905-59f6d08a4b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "850cb323-dbab-4490-b1f9-8458276418c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60efbfa-7369-46a2-8782-a4199f2ee577",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fb530b-3036-42b2-8059-86aaecb7ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9071af-da18-4420-b928-7a799b680af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3c006d-9ee6-4216-b264-bfc1e4801a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "af44aa97-882a-4d38-82fb-a134071ac738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b126119c-22f7-44da-baf9-2e89bdd61b85",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ba71a2-21cf-4713-b301-8ced755932e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6688be07-c310-43c1-bfae-b9de04727294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e6bfe2-1bc8-415b-bfd9-05ca8cdca079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a541fb-869d-48ee-91d3-b7b3f36fc1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9f2e36-08e1-44b7-8ee1-cc5877663854",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45553cc2-6231-4afc-a696-4369cddbd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2711fe-c3da-4d70-90d8-0288dd11daa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f5dc5-52a3-4f49-aa8c-e642d1930891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc9d730-dc1c-4032-93a6-a641aa0bd0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4b6ebb-73f2-4b2d-b2b0-cf2984a62caf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9e337e-5b6b-4acb-981b-69f79690a2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19a41a9-c384-4e40-8d53-86f0467d19e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f784075-e279-4c35-ad3e-772b12d2e46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f225a06-c195-4a21-bb65-147d02e055e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7794a96-7d4a-4000-8a98-9bcda0715915",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3e8f07-c451-4f69-998e-b36c2acc0d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26eec13-05f3-4aa0-940a-1ae54eaa6375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bb0b65-8ef9-43a4-adc8-a150b1d5801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e78cba-0595-40e4-846b-4cfa620856d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf0781c-dc9d-4087-b0d5-0228f82c9497",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b7cfea-21ae-4b1d-89f4-d4b69f5c3335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c212b89-9e58-4a58-a30d-7deb0cf1d349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254787e-7a32-404e-923c-ad0114bf1dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39720e73-a7c2-455c-b048-049df90b7c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad707c1-02d5-4ec1-bc7e-7cdd03caa186",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21fa123-fe95-46c3-9cbe-598296dda882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c12d39c-eae2-4857-b7a0-530fcab9cbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8992b72f-70d2-4220-a63b-5407b8eaaed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef79ccfd-e9e4-4078-a33e-b3fb1140df75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ae05b-3cee-4595-8458-27661c22dc77",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3ff698-91da-42f1-81d9-7471e3aa82b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a5719b-00dc-4bd4-bcec-dac95a41f039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215c5a0e-aa4f-47a0-a82e-023428ddef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4739244-178d-49b5-8fa7-2159b40995a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf7337a-1dd0-46c1-b44a-89ec6aad3079",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208674e2-f3a8-417f-88d6-76787e34445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e65036-ebb3-4c37-801c-81b289d88796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642901f6-45c4-4075-a3dc-2a5648806398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75abfe83-5996-4762-8ff0-3a4a5b191525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d999bc0-f60c-45cb-a8fa-2afdfcfd64e8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163a3531-9cb1-4265-94dd-60ce21432054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b512a11-d5bb-472e-823a-0f8d488ba99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b80cda-e861-459c-8cc6-a635d9aebd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "152388aa-538f-4953-a813-ad2ee01b1c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e898617d-4c5a-4a7d-9623-360c432473b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16255b2d-68e1-4ed4-be43-2da927a662c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b5af10-8276-45e8-8418-3ab36cf4cb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ceb020-252a-4692-ae5e-3e2af9b3bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0937c59c-58f9-41c4-8c5e-bc9221b07184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1235acc-151b-4d66-9238-1a6e4a250540",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7047a9-4559-4d93-9e48-6c3ee0d49529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6e6dd4-7618-4936-9a52-7b953eb82ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4d941e-aeed-46c1-ab5d-a3538e7c8c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "802be0f2-7203-4f0c-8249-ef1319f64459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5dcb0d-a5f5-4738-af97-f9a3d5d7d007",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73917a4-f48f-40a0-9243-67599cbf873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28530b64-5d47-4461-b165-31666c92f332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304fd9f7-98e5-4a87-aa57-6891db6c39b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2ff0f1-5dd2-4281-b2d8-30c1d0a02323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a36879-a5b6-4c63-970a-c98acdddd7cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0d79f0-42d1-42fe-b8c6-904e211d841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6589e1-fca3-4172-bb0e-39e9e44a667d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c5c85c-1f13-404a-afbd-89ff0c7f6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce3cf95-f663-4c7e-97e9-9ea01f4259f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02febb90-e48b-4726-b365-d7470a2f3f35",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c645f886-4c15-495f-9c06-3110b7988d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9d2333-34d3-4e46-8f1a-fb418a95f644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd1ef4-89b8-436b-86af-7be49b88c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fff0074-eb7f-4ce9-b4bd-0404959063d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af5ae71-db86-4619-9e7a-5fd07404cf38",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12ec40d-4855-4b17-aaf8-f8566dec8c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577a8073-edee-44e4-87da-de3c62b9cc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e33c79-80b0-4f89-94f1-3392f4e18877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a023ff-ea74-4885-b315-e3d9becf77d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8035f4b4-4c9a-4abd-afc1-ceb9ccfbc1a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27ad824-728d-4a91-9c35-4855ee0a375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d74a602-43ce-43f6-9e75-8aa5e1ba5f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b30e35e-bf0a-4a82-96e1-0b4fb58671ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c63e0ab-56aa-42ca-890b-f04b9e99bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132f5fe5-9e41-4ee8-b714-4e81680ed367",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610d5f9-055a-4ef3-9db5-5ddf7531c20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb19b247-d27a-4772-b661-863a27c3bc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366eb2dc-fa39-4927-8190-80142b8d0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb43ad99-7f9c-44be-b82c-9e5623d6a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f02572a-7c19-46ab-9c91-573a69166644",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506290fd-5347-4b65-98e7-c0e7441ba9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abac39b8-9e16-41f4-b759-7a83eca3393e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ec24f7-fa60-4338-accc-9409f6f18c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2fc007-edb8-44b0-ac41-0f3c6340581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcde53d-f6d8-4989-9490-710631682540",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6bcd72-fb2b-4938-9e62-fc337657e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91761221-65eb-414d-88e7-84dcb3e2e68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7317a9-c9a5-40f3-86ee-e1871ad70000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf4fae2-cfe2-42bf-91c9-61d3ccae778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ba4391-aadb-408a-8c7e-45d483867cc4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa941521-fb08-498e-b128-8ba8aff7dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b9ae55-ebcf-4d28-aa64-8edf22d9d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1490a28f-6d3f-4d34-a81d-678dc2fe750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d95e38-ee91-44a6-893c-75254c4b2297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f8242c-868a-4224-9276-2fe7cccf6c17",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347651e1-3ad5-49f0-829e-13537a1dd60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360e1e06-07da-4768-9144-1bad42aba1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb83c41-2f6a-441d-949a-f5854efd067b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47957b57-6164-4c7c-be4b-1bed5be33d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3881e46-d4e7-42b0-b619-f5a701488431",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80664a69-48fb-4575-98b9-83e5870255c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff96659-8268-406c-951c-161553823007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b13b84-29d0-40b4-ba05-57d4dcb38f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7affb66e-f992-4ff1-a6b5-9ef6e6499a86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "668c05f5-20a2-4b75-806d-72b4c790e505",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "626f9821-4252-4c59-8d6d-b31323fb164d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5ccd9a-4eec-4ef7-9b53-4b6183be80ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8359e72c-c6ac-49f6-a335-5f7facf1518e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be2c0e-e56f-4768-b3a6-1ae3989fd4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2057a4e4-b4b1-4b04-91e2-2999974144e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2768abf-706e-4cc2-bee2-61b32334a666",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b01e0fb-041e-481a-932f-7ec9e3288c55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff5eabb6-8c30-442c-ac80-eac61df14049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6c2719e-8757-49f1-ac0a-c5b7648399e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce8d3c28-c684-4335-8789-9778088a34a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a7a2b35-46a3-4115-bbdb-2316d21907bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e0ab36f-c86f-478a-bb38-50f84e94d152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "631d4137-a8ba-497d-858e-0df0d1214f66"
            }
          }
        ]
      },
      {
        "id": "ad8983ef-489c-4937-9990-b17c34ef96ba",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1dc7f9a3-0233-4ff6-a2ff-8375cb00f51e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a3e8e30-edbd-47ac-a933-1ebfc239db9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3d79cb1-1db2-47b1-8dd5-95a67b3c6d2e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e432f8-94c7-46bc-96cb-6ffa0f4ce4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf6be75-20e9-449b-b568-87edc446eac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c18ca3-7cc5-40dd-884a-8ad066e4e058",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9954deb6-d69c-48e2-92aa-64d272eac9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515c502a-0ab6-4189-b3a6-0dd2506e744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6288c764-c1e5-4e68-ba79-e2d9cc2049ed",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f64d7dd-1ca4-459d-b86b-e39cb7bbfdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9774d81b-ac95-4c09-8e10-a6ebed70956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509dafc1-f20d-4471-b342-83365b3a2fbd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a4873e-5afe-481a-9f60-d0184cfb98c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60a37fd-2c76-41ec-931b-c0aadf96a55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90531909-b845-4d02-934a-71da865e295b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ef1fd0-c91b-429f-b3cb-337aea265e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d83f780-ca06-41a8-b549-3b0b731c9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5128035a-917a-4024-9d8b-f25d1ed892ff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088d44f-b85a-461f-9724-f40bcd244efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3336163-c851-44b0-93d5-5cf891d46550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dbe55f-6f74-4650-8f18-d2e222d5277c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e319cf82-3bd3-47b3-a38e-f6ed98bd5207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa088d8-20ec-4d29-8860-ae52823e3ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff015ac3-496f-40e8-beee-cd47f38324c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f68bf9c-f465-4d6b-89b7-318105f5b393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec1acd6-a4d0-4a07-ad31-7f0bd8231fff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d86f9-4198-494a-9b18-976bec356af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332d0afb-5b95-47c6-8e5e-4f5b313e990e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df07df-ea4d-43d5-b977-ff5d48403f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdc6572-15a5-46ba-9e3d-cc4d97ddda63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c68944-54ba-413c-9d3c-2ca9222acf95",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca0aa07-e86e-4135-a0a5-b48c069dc7c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4397f7e5-9220-4e53-a57a-ded12275c3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee05530d-702d-493c-b957-ebc114eb55f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dc4d11-c055-4fd3-8642-0aaf82b03d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f645b-8066-4e28-b832-0f8c38b54e9f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317deaae-9105-4aa9-be32-cbf8a0dfc91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce3f85a-ece8-4e49-a734-18353e318c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bfc2e9-245d-49d1-8b4a-80af5a6567ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc791335-daf3-423e-bcea-f22f6fa7a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f47010a-dc68-40d8-824f-0a00cba65e0b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2764d645-2ecf-4bb5-9113-5e833fa0b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fcb659-6ed5-4f12-8b08-d09822b33c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b381877e-a40e-4292-8b68-08fc0b9044c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c767b4-8ba0-4868-8c31-c58fe89dbd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e80c2f-c237-498b-a8b4-5dcb8aef2682",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a921b184-3b96-4889-ac00-c1543a6e7323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91a3bcb-779d-4cd8-a6e1-4758a6bde487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adbb694-4f14-43a2-baa9-d8d0f7ef783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0b19c4-174c-4726-9e7f-f0326f2b671c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1b937d-49f8-4812-9c6e-850f120cf99e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094f786-902a-4764-9f7a-c870ebe5cba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b190e82-648f-416f-9900-b0b0047137aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d406a25-8fc1-441c-9870-1ffcd7891a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf8523e-f540-42d9-a9fd-4ef6e459f82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94d45f6-cbcb-4556-a4dd-df50b49ac559",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48ebae1-68ab-41ab-8ae0-b819823255e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aedc8aa-0599-4421-ae27-8f318a5bff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae51a3-ac83-4b8a-a4d1-959ba1432e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7201a17-7273-4736-84a1-d4a29c132aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05454343-c92d-4991-9f5b-3c032f2d7255",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d2387-93d0-4ad1-ae73-d5bbb3b2de2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b52447-d1ea-4090-afdf-c2c5b47ea1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aced59-7643-4b35-8e89-929844766c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d97968b-8b39-41eb-8f14-6903d48caad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a224512-a9d0-4da6-9653-2aee34d16e8e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580b7e02-e861-4bf8-a56b-84a246ecec78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424df46e-6257-4574-9744-f10e40ed5a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fbec8c-0143-4abe-9596-0024b4ab9653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8a7880-312f-4b15-9169-a59401e8d330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f15e080-c134-4efa-9412-0e1a1118c8b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef79045b-b0d9-4d48-8d48-e42b27d0701c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af437e36-46a0-4caa-9a05-849a6ddb7334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888d433-22aa-4463-879f-030c41495b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232f76a8-fd9f-4313-a23d-485932a9c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663eb76-8936-405d-b00d-a4d0e12b9cee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1eacbd-98dd-489f-b75e-53386a1b8aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ef6361-ac78-406a-86c4-0f53b705e815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27552c46-06e2-416c-95d3-1885da60dcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb2907a-9db4-4699-b756-2e6c49a8e751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9fa00-dae4-440d-b9c7-626688c4f961",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a112f601-b337-4773-a911-3b60f40252d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbd7833-5bc6-4f36-b341-a5b014ae403c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1230fa-c030-46b2-aab5-b2ff7209a819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7b3574-94b6-4d8e-8a2e-fca733a6b5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91621c0a-89b6-490a-aea9-8c206695cd68",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c25d8f-9526-4ee3-ac41-6e88bce98f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cb1a5c-0ee3-4954-b3c7-8c6ee6a2d9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e72099-fc07-408c-83e0-2846bf705369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e53b23-da31-4f12-b5a6-b8fa4064fb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e152b-c463-41c6-81d4-e0be1627667e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f24a9d4-3e35-47e4-8550-795e99a15342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e32d36-5a74-432d-824f-c70f335454e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff7969d-4d4c-4abf-9c5f-1b9ecce72a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26bcc5b-a48c-4a50-8cb0-d98c8a65bc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a255a1c-ce8e-4150-bf82-82d244afb297",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4501eff8-488a-4d0a-b185-4fb9d1366ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485b74c3-e284-49d5-8900-f521ca489fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1762e1-3e34-4732-9878-4c4a56953006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c617e7-43d7-46c3-a326-0cd7f5566ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c822cb8f-6a2e-4cb9-a9e1-ae849bfaed37",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d922e0a4-75ba-4aa1-b518-13b68ec9217a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5387af7-a506-49d7-913e-be6faad2d608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8dd1b-7b76-4177-9ad4-056e43b1c8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7e6aa0-f5d6-43a0-99f1-f7f5deb265f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1522f6-98b6-4627-9bc2-c9b2e7f16f4a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d83f78d-8bd7-4a16-9a8e-aa0eb603bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5729460-1a99-43db-97b3-20705b96c8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2d8295-c77a-4531-bb28-9c94b340883a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870f6151-7fb6-40bc-be22-f38f8e090eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a877a41-6277-44b5-9f92-cd3b175a40db",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc195cf-3ed6-41db-a7e7-0d97305a050e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581aff99-c950-4430-a0cb-46f8b7d41230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6d50a-f705-4aaa-9922-ed956bc72e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c4a197-98e0-4fb9-849e-96c1ee3d0f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dedbead-a4f8-4866-9a85-fb5cc65b564d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f913539-8369-4573-aa51-fb25a4c62693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3fc03f-e964-4121-825f-9c4179865b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeba530-000e-46bb-8d20-f43a8637dc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05458f2-1d30-4074-a75d-fcb9aad08e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0216761-5457-4c6a-95bb-1f514c36c057",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7332f-7d64-478c-999b-5353c596c3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92b0b20-3a5b-42ec-b5f2-7d3ce00741ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472b050b-9f7b-4593-ba72-0cde645d2706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25be6918-5d42-4110-90f2-07c0bd50e373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5431550-2bd5-4de2-aebb-e3305490264e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1333da1d-336c-4742-ac6e-595628beee6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c5089d-cfd2-4663-a289-74caee224133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eed8c6-b26f-4523-8132-979421abb647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf2c9b1-ef28-41fd-a368-47ab9f357a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b980b38b-f68f-4f48-b615-0fae9acc3bb3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8d8b57-0092-4656-ac6f-de0be95d6c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d2d78a-232d-43b6-98bc-d0c28accf7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7a2c6f-40d6-4753-9e8f-d47912ef4ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3096199f-1570-4e01-b0c9-e7a53f2d6adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c069a15e-ee7d-4641-ada2-c460eaff97f6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7276f964-6985-4149-a724-984ce403e894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573e3081-8eeb-450c-befd-e5e17c56ed80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4755a7-aad7-4d72-b82e-9b689a208a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5ee251-12f9-4106-a675-9f08f37c8189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229ba4ee-3860-4b9b-9a65-33f20b1834da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0e5034-68b1-4ab7-bfeb-699959ea2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af075d3c-4440-49b2-849e-b2f715e322eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d57716-be7a-4d21-9776-e56bebd9082c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd536f40-77f2-43bf-a540-d6a6e5cf8c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f278bb-70a5-4bfb-94eb-4fc5613e216a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a58cfd2-3db5-442d-bfae-5ae6d377db46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9bf95b-d32a-4c85-907d-c15e4097b823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017a9071-e733-4f31-8cfb-14b6a4f5055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621ae465-7562-4684-b23f-ed11539ed2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c57287-aecf-4b59-bb0c-a13fae24546b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0d296-8514-4ac8-9168-2b7ac14e12b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ad713b-5a4e-4afa-8bbd-81972502e682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2876d61b-a156-419e-9d4b-e6922302c46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91bce0c-58e6-417a-83fc-e8f593a333f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeefdea1-a6f7-4e84-a574-ea72e3ac1cba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80466b8b-b106-4f9e-9a98-91589b315c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116d131b-77ef-4a12-8800-732734ff67e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8030e82-13a6-4f94-86ca-0927705199c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26266ee2-d07e-440a-bee2-8849fb7c060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85378316-9de1-4589-b696-cac013ee6f82",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c5095-6cc9-4469-8a48-332231cbace2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febd4465-228f-45b5-b72a-5ba85c1995b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436684ed-1fbc-420a-81a5-6e4446039270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f41a87-cdce-4003-bfc2-9f69c346ba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f835413b-c783-4e7b-a577-3355243c9d98",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b54509d-c860-4d5f-9feb-ae16110672cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5b67a5-1291-4562-aee2-f071ba2b4bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c65dda8-40be-4f36-a346-0634f59a6112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819863fb-6531-4394-854d-4043ae61a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b074f7-ca8c-4c9e-a4fb-5ff252d62b35",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d36dddc-dfab-4f3a-917a-c93df241bbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dda70d-e808-4fb2-8b70-9e45b7be141e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e359a6-e308-4afe-bf2f-c7bd7afcd5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9453f20-8a80-4c2c-99a1-ea85a44505cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34044781-1d76-4d1a-ad90-51715cb5ac4c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0475f31e-5e2e-4116-8317-f250f3b99bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca3ba7f-e54b-4760-878f-d8943cc2ecbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46faf9db-51fc-42ec-b0c5-9ba1cb514063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ecd17-8936-4be3-829b-18b593b5150c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac12c6b9-45ad-44f9-86a6-4144149609ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb1a295-fa7f-4021-b98e-95352556efaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a5325d-6fe9-421d-b4c5-ec604de8b6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f99369b-0685-40b9-981d-6df8e0fa5b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be67baa4-1ed2-4f5e-90f4-c1906e6a4310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7e7b6-9415-4c47-96ae-40f379a55eca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10df426f-1868-4c45-90d5-97429126cde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7637944f-fe20-483c-b195-7f689e36d049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42a194a-67c4-4bcb-bcef-310fc625dc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa3269a-490a-40f6-b025-d3b1ccf1b4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524dea27-6bd8-4c9b-bec8-ab3bfaaf6d9c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd23c43-2478-49df-9fa9-801496d59ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b45a7e-a6ec-49ec-b5b5-bee7016c3720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73380c1c-1774-4995-9dcd-e920fa796936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb96c8f-4c9b-4338-b717-39a50ba75751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3deff4-367e-4867-a033-b644e890b6b4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d6f963-4cad-4c9c-9935-141a5a71dfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7db84ce-f79a-4e53-a773-622ab5093687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4d4a05-cf2c-4a24-9dc2-7a07cffbdf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0243f00a-fd31-45bb-912a-91bcbcbb0bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc512eb2-2f80-4a6f-8df8-fb8c6e7c9ef9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31700f37-abd2-4812-9239-0b0ca408400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190ce71c-7da8-4968-bb3e-0490823419d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cc1e7b-70ae-4905-85cc-3e87dd8948af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25483e78-ff31-413c-b9c1-d2be92a6a4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4883348-f983-4071-9284-53f6daa20f4e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cff6f7e-8c40-4f94-965a-1c4ecd13f5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c697d7d-7f26-4d4e-982f-a2855df8f0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5bfc7f-f75d-41ca-ae78-e1dbdf5b9780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4e49c2-4623-4bb9-ae99-80d5714d53f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac20f6-4441-4ed5-83e6-58b0b8fd6fa8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb963abb-7568-4b10-aac0-6b780a012f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793ab831-7437-49c0-84d1-0bba953de365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7a852-6bf5-42cc-add2-ed694ce67e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d20546-0f5d-4bdb-bd42-772213ac40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc80c0e2-b0e2-4b53-b0cb-f45fdef129ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fcbafe-32d5-4940-bbc9-43543d94c9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d719ad8d-97c4-4796-8a7d-6edc1e088eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da8f286-48d0-4f2f-b23e-29ba7723825f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124168fb-819b-40be-84b4-3c7599455a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c4a775-5e5d-4724-850b-79b8b2e6ed0e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c834f4-1186-4e10-aa49-10abe0c98991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56c8bf9-93a7-4eca-b03c-83bd00fd4ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947ddaf6-a598-4e16-8249-55449e2f077b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6290701-4553-40a9-aea3-6eb8d5a475ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937d1358-6147-44b5-a1bb-8e9f643ec679",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd18e45-a237-4702-9091-f1c74c97b004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b20b776-5432-46a5-876d-24db8da7db56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e6fed-f87d-4e71-bfa7-921e11391878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f9495f-99ed-4c99-b7ee-fd9058b6b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ac7b3d-57d8-45de-abac-02c5797348f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567bf747-e09e-414f-a2ae-44344035960d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dec7c0-fda2-4ba5-b644-66e44a0d8c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03c5ea-9431-461c-9ab2-a4333bb6142c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea25592-6270-4bf2-a7a4-720e9c449339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2a1ad5-68ae-4f19-846c-a0af4317930c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ba911b-5f48-49e1-aa5f-f4be04cbdd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22f35f4-c2aa-4994-b2b4-1cf1b6094608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae7dd6-f3df-4b63-944f-dd168ce1ffc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a474f2f7-4ac1-4f29-92e8-4b476072207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03235fe3-e337-4b3a-8335-5d98372ec54f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da767ccd-4ef9-4061-ad78-7c83ff0bfca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9c8bc3-92e0-424e-9567-ccb6c82bf9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c04943-4c96-45c5-aba5-ab6b076b8abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60891004-f63e-433f-90b2-e9136b0a1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0651757f-5ff7-41d2-920f-ed2f7522689e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2ec752-f1f0-4457-bd80-fa2fa0142cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038b4a26-7bcb-4d90-8b87-d06877408ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0466bcfd-a047-4728-821d-31c0ced24867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1529753a-c0e3-49e7-a09d-30bc697d16f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acdea6b-1c62-4141-8f10-296bf56f1883",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b1d497-8a27-4c7b-9658-8ed3dce2d65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9491e51-42c4-4209-8437-f12710d4e08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7812dd7a-5d3c-42ea-a7b6-98ec1f77aa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8895cec5-f321-41fa-bf84-64b953806fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c9eb34-bc6e-4ee9-89b7-943873f39d43",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3ce901-cc3f-49c0-8971-9f04e0411e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb05f8-e923-4730-889e-4cf38229aa53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639fdf3d-5401-468e-a0ea-5625cf93a463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5f42e1-4838-49f4-99d7-6e5b45cf8abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e829ce69-55c2-4d13-b206-2c0521d15718",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14e86c7-8650-4ecb-bdf8-2f9e724612ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1816bc-e7df-4978-bff5-9e19d3180449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1057352f-df9b-4bad-8f7b-eb62bf44bb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd670b15-b790-4b50-a341-50e1c353fff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdd93db-dc2c-4e25-ba82-42f0b57dfc81",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130e7ba-b370-42b1-ad4d-4580e2d2fd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e8bb26-9061-47b4-ae4d-06f944eb6421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6efd35-b8d7-4e12-bd15-0c895573e26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18830190-738c-40b8-b563-8e9fb36840a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290fa4e5-02ac-4e22-960c-ac2d8a3413bb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bb4ed-e671-422c-b5e8-f8f7cf79bd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23e4c2a-ba8d-4f70-94bf-45d3eb007117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b5cb8-dc8b-4a04-9c21-b465523a9113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5493500-cf4f-4c17-b4e7-16e01448b54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402dc2e-7f96-4b06-b628-ad8347f3a41d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f63833-2bb5-4b9e-ac01-91ed0c40139d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0905ac-6e5c-4753-abca-997a4be10e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d35f9-8d74-4295-b7b2-1dcda8c9a959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fff304d-bfae-4305-b6cc-3bc6258eb918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c270ed-e86f-4ae3-9f08-34ee77709e5f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3d96fe-dc27-467f-b16d-f2da7b95af0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c999bc6-9bdd-4ac6-b2ed-a3264c4eb79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80e5886-8410-4fc2-ac5e-0bdf22f671e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb94882-3dad-4fe9-946e-04ff617999f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6182f84-2092-4c90-b109-98309cfad1c1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f01b0-d2a8-4a76-b27f-5945a99d0315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e85e478-55b6-4c1c-a17e-d40f4bcc8b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f74d8b-4026-46d1-b6ea-15fe37afccdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2916e575-992f-44d3-be37-25fa16637555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23130525-5991-4ac9-9684-2991c4f9d8d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d465ebe2-1afd-4233-beb2-35d7c548dd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7971aaf9-ee98-470a-a45e-189b72ef005d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134ef548-984a-4ad9-acec-2187fdb1e65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a8f86-1a40-4e64-8493-04e3edf1689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fea865-d4e5-4779-aed4-3911a1873bd2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aba8c1-b3d4-428d-b779-80883bc3b99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81681961-afe7-440d-baea-77b24ec9e638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd610a2f-83b4-46a0-be0d-9446214396a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f06079b-f40e-499b-a57e-6334316931df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d669a1c7-1a4c-4a62-add2-57822eea8409",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104daa75-ac31-42c7-90d6-117ede6d4b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdebed97-13c0-41eb-84ab-d16aff4ba519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324cf278-ea4a-4361-bf67-362391548d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1f4140-1663-4a77-89c4-82822e86ebec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342996da-74df-4854-9a91-9efe239932cf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8a345-16fc-42cb-9ed6-704616b6a310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6f92f9-4a58-4ab5-9550-4f65c5f99260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409590a1-02a5-4532-814c-53051fd8b1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2290d4-9046-4e2b-b25d-4e507e7333b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1653e0c-4173-457b-9764-7fa40dcec4b3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80da979-ea17-4d48-be7a-9b32668ec64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8dd2d5-0559-4f56-8dd5-5e246e78a6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c407a0-1a47-4ebd-b61b-a207d7937cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906f08f8-1c91-4cce-b6ff-a7ae03c0895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca8cfcb-e44d-4c78-bf01-6035f231e6e6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67f0ff5-e444-4062-b8d3-bed92095a372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76addbdf-ebf4-4e1a-b6f7-2d06f23f24a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1873320-3c1d-4428-b85d-ed2503be1eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bba5559-06bd-490e-9d9d-4aef386db06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b5511c-8e56-45a8-9892-f2b683babe28",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b054ff-02bb-4df7-89d6-746245302b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df564182-ec84-404a-86d6-639efffe0dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea585a1-357d-4c5b-9d58-b68677b3a997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a722c2a6-f924-40e1-bc33-e950b2fb82df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e634d921-1f3d-4b91-9915-90e2420cb258",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67865677-0147-4f98-90df-2e558df3c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503aa911-3e6d-421c-a4ba-e83e5b1fc384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe9ff1-6d3e-4a7c-8670-5b5f240db7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0262a9-0eaf-4a4e-b96f-679925c156fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53116c8-8cea-419c-880b-9311139e77ac",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d8b6d7-18f8-4663-bf4a-f1914f67ee74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3100c085-ab68-44ff-8099-08e620b2c115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f9fdd2-1adc-4c37-9f10-8e9f9f9ce946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4f7b57-c284-401e-b263-5675f7eca50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a889e150-2bdf-4212-8256-1f3f0cb6ef95",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcf9f3-bf6b-47f1-97cf-21f4ddb1a50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88a8691-70f5-4b0b-9121-61549e1239ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7217e0-4e1f-4801-9aef-e78212ff6fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d0402f-fce0-4f37-806f-aafdbf8b0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796d3c9c-c2bd-40e9-add2-52f80dc19992",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a5e0d-5519-4759-83db-42315ff81075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07df548-f690-4b45-b12c-7517b4100001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca663b14-2d85-4300-ad80-a023f871e36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7ff107-9c49-47e9-a032-11e114fe8d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3230e3-b5be-4985-88f1-ef858f1782c9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92786cbd-f0ba-4d83-8add-2cd8ed485b05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de823a86-390a-4cd0-9f77-cf14b6ed30ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9b41cf-8f64-4e57-a64f-308a07c4892a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be748e8-22e0-4a8d-8ac0-a46af505e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b028193-6bb8-4a96-94c5-d400577bf082",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84504c9-dd89-44a5-a7b0-f0eb97699d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881e4d76-9ebb-44b6-99a2-9853e30a4378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ca03f1-ed2f-460c-854d-8342b29f033d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f9edbe-4227-42ed-a554-1684a16f8b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3518f2-1a58-4fc8-a00f-5d0da91a8adc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf7a6ff-c7e5-4485-a215-54c771b7123b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bcae74-4f72-445d-b63b-a3fbeecf12dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193e6329-88ed-42c5-9900-ce969c847f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b601693a-53a9-44b5-9b5a-7b6746827096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac20b9b-0136-4ae8-b07a-b17ac3f05af9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa185bce-afbc-4c12-8414-5eec1e61c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff712deb-4a27-4a37-accf-219066764fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff37c94-1834-44ac-a34b-b1a06261ac0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69784a90-3f98-470b-8d6a-7df3dc545344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78680037-be0b-40b2-b9f7-fc01b1fc691b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5a610-056e-4b2b-bcbe-610cbd07b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8dff17-1f65-4dfd-82de-dfd527bf0ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5105f22-af6f-4455-a070-50d4a1ab485b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021c9d34-0b8e-49f8-aaad-f86dc2ba7353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a92854-0d74-4f01-a757-3c3dc182f8f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3303c-a18f-452f-89ef-288ce98280d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75da514-94f0-47bf-8ba5-c21b37926833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf524b7-f54d-441b-8670-0422452a879b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834cb4a0-e4eb-4ec3-8db0-b62fee60a7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb57a83-bec5-4f45-803e-d49e272884c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d66476b-e83f-48d8-8980-3ee785458d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1cc59f-0cb9-4605-b956-db42a83b267f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f6b8f3-c6b9-403d-ac63-d90f7eda27ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bed913-cb19-4ae5-977a-c6776276f461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cab5818-f9c3-4cb1-aabe-e6243add6eb9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301c52f9-875b-435a-9760-59825251d581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628177a0-9ed9-4e4b-ac24-fd5faef045fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c95e0-fb72-4754-bf97-e5e6bd53584a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1604d4-6082-4986-a5c1-1537f7f70f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99d3852-62b7-440b-b98b-79b900c9941f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672bf36-8257-4b8b-8929-641ae8069591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb675dc-25b1-411e-8c5c-4b6a0efaa042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4e3f57-ce91-4692-953b-27d1392bd03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec277d8-0238-4b0b-9189-eac18b47b8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb60ec7-161f-4140-9a10-e029899aeb03",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8626821-be24-4c16-b947-a6794168341d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd39af0-ebac-401b-8507-bef0c9c3c526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3294f9-ed7e-4b38-86dd-bacb7f8c21a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e537feba-8d05-4f2f-9239-2162dc516d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0226b474-83f7-483c-aaaf-fd26b8a9627a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9d2292-44d4-4231-bcb5-8b2756a71140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ac6a7e-d97e-4ea1-b7af-358df66518c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7546c59e-6418-4282-8ded-18e0cacf961a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a67896-6266-46b8-9aa6-252d1e3bf4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067be0c4-25ef-4211-af83-8546b9460c34",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a52877a-def3-4c3c-a9f7-3451a858432f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3a891d-4888-4f53-93d9-20008be65205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0c6979-cbf8-4d37-9075-389bd49e24cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f465c3ac-02e7-455e-a085-b63c7291f594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b31fe6f-c12f-4bfa-b0b2-aae905431116",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582310d5-48e6-431e-955c-ebca39921c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b16951c-439e-4a63-813d-f56c099b2a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1389eb93-09a8-4c01-ace4-7600ed1a570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b080db-f074-4f47-a3ae-30bc81332908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f6f4e5-3a8b-4805-bef5-fdb4d54876d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c27700-8a80-4882-a715-215d7ef52a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ce20b1-ad24-447b-9c51-6cfd22a8dbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbb9b3c-0c23-484d-8c0a-475d05fade31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9bd5a5-f971-4754-8857-30bf7aceb16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7a2a82-17e1-40de-8cf6-319db0a1fea6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde0bed-f25a-4036-8e16-216dd73fac06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1a0b1a-deb8-4113-837c-0fb5ed07c3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980956a3-c387-4bce-ab28-4cfc68266a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874741c4-3506-4419-9d8e-3cab2f5e755d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a79458-dc15-4063-b6b9-d1bcf6441414",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9826e5d-fd10-4e1b-aebe-0f19f1b47d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54339cd6-822b-42b2-a329-f577d9f56954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2797ad56-61af-4a22-bb0d-948f94a5d1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794858bc-757d-47fa-816a-476b26a7562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d45fcd6-5528-4f6e-be25-5da413bed5b1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d26cf-2c65-4f1e-a8fc-2f9ba522fdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e405ab61-aadd-4ebf-9a1e-b8045c4d8f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaf8bbe-0c93-4162-a765-4a3eca4033e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac16275-48fc-4b50-a0ed-7d124f0afa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426f552-7734-4163-b4df-f4412df08d07",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8126ab21-1dbb-4a77-a14b-ee46ce1bf13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b160793-8dff-49af-9ccc-785097f9cbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568c678-8c1f-4347-9ac0-a7463c157af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca8732f-baba-4d38-afee-2f01a0ba24a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ed0679-456e-4a58-9394-68a2df92ebc0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea8cd2e-efff-4abc-8389-9436022e8439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93251fa6-cde2-4ef4-9747-2de45f15770e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf10cc-c070-49af-b166-0ffc69d842e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ba20df-ab60-45ca-8c3a-dbbdfc2ff08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cdb0e9-2e09-41f0-85c0-175b8480e5cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2e90ad-3e99-40b3-bf0e-9fe7db661d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477b578d-4241-4ea5-8296-e5726e39d622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b71160-c495-4b78-bf6c-88c9c8c1768b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296e9cd8-842a-4c18-9155-9144b8f9676b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2290087-6fc4-4a42-be45-b5fdc69048f5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb71e7b3-1fc8-4947-9ae0-e4d6c38d078b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "216d8c25-ccc1-4b09-8872-032b4bc47bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da5d1eb-a15e-45fd-b099-6a73036560e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7c6451-1632-4085-b62f-060f211f43ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acfb7bc-7f2f-422a-9113-3b3f3c72ba4e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c39ed57-93b8-43aa-94cc-65b9aab05d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0d8ef8-1dc0-49f5-be99-70c9a3365750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17863ee-6c22-43d7-bc2e-5bc731e35c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fe1139-3c71-4471-b8a2-cfa9d24949eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75d83d3-ecd3-4055-a13b-d38fe7980f7e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c72a37-2c90-4799-ab5f-a8ae96a4e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b490a96f-17a7-40b7-a391-22d40d3e725b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a641487-0a3d-460d-8b2d-9a3cd95070dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9d7acf-dd16-43d5-8607-4a2daf936624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebf1ee6-2f2b-4452-a13f-1bdb7beb0e45",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12058b5-cf08-4b38-bc90-115d2ac0c699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badccb8c-4a0f-42c1-a4bb-0667aa2dc6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44793942-9745-430c-afa9-19574bce500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5f898b-3c99-4ffc-a9d0-cba80dc0eaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f82295-f279-45de-87a1-5b0d64d0f6e1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bb837f-e964-479e-9642-fc19056ea5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f5974b-54d2-4515-b77b-97c404b2f15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439546fb-3958-4be0-8556-3fbbbb20c19b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97a3f87-6420-485e-bad8-18e3d714ad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8df115-8ef8-460f-b2b3-6e7378f8593c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a26f19-80f8-4fe9-9ae0-e0df20316189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28c9438-52b1-41f2-a627-d68d7c08cf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91492e85-4fab-4c47-9e7c-526be5288907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f75cdc-2afc-41d4-a33c-10cf297f0fd1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23bc7129-0ec2-4e1b-b1d7-943c96996361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa6e6f1a-e225-44d3-9f55-0449f7b918e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70c65fad-b9bb-4328-ae5d-fa7d09fccc1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dcbcfa3-e85c-49e8-9005-6f09600f41ea"
                    }
                  }
                ]
              },
              {
                "id": "42c6d290-cccf-419a-bee3-33970ca65aef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f85a376f-8d33-4fae-b88d-66d37222c8a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a56fa5c-fa30-4857-8112-4d53ac7425fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "76a340bc-0ddd-4bfa-a56b-de646b038133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467cf167-f213-4909-842c-06143aa1752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2acb689-0899-4221-a745-2fa4e77430e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba2ada2b-1225-44b1-a0de-0e86f661122b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a0f974-0d6d-4b63-8bde-9644ed84cf1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "658579ba-2f94-4bc3-9042-970d066fc438",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f1d1873-248a-49c9-8c06-45757f3a1bdf"
                    }
                  }
                ]
              },
              {
                "id": "097a0715-134b-42cb-9295-0d9ec447c248",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "11e6a611-79d9-41e2-992e-ade978b5783b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b396d1-af51-41ff-b125-a1181a7f9eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d3c19d46-7427-4286-bd1a-3a6adb67f177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5099bd8-1439-4bf8-b05c-1b160df25537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3bfdab-776f-4a42-99ee-c1aa0112fbf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7531f9e3-0916-422d-8808-106d8da13c1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0346dd2d-3d4b-4f23-bcd4-d112a87a0c1b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "358a89b8-4122-465c-a6cb-0f6312285a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b73c8e3b-4f87-4b34-8f46-c96c4228c8b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f26cc22f-33c3-47c9-b65f-9a66f74b6f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8476382-2732-4288-aca0-af6972ffd8c6"
                    }
                  }
                ]
              },
              {
                "id": "3b6514a4-7b0d-405c-a69d-f879df980b41",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f85751d1-b017-40e8-8cfc-cedd7752a9c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d74b5970-3d1c-4fb6-849f-5f66386ba498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e192dd53-3f27-459d-9eaf-b11a12e1fdc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0da2f0c5-98ae-4787-935c-ec6a0f7413aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e6d037-698c-4f81-9690-7d711dac2c3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a5335c55-6fd3-4c45-803e-c722762fe547"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07463dbf-9c89-4c2e-9d0c-f357cac490d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d99b3c0e-9088-4350-bc86-e7322f3c4700"
            }
          }
        ]
      },
      {
        "id": "bc99c020-2a0f-49af-a07d-244aca24ee61",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "11b38b1a-79fd-4702-9d75-b4aa1229ead1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2d2e03c-c318-4702-8681-2807b39cf1d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62fcbd93-b58b-4e85-a8c3-0ea7e2e4ee31",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c630411-229e-4097-af00-6f27f04d6957",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "59771380-6aaa-4e1e-b9c1-01f3cf7351bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f679c0-1037-4711-916f-c15d0f28271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2b02145-56c3-4cc2-ab23-eb4926e8f633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b9ba44-a445-4e9b-abce-7d806b8d0388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d82cf64-f9c8-422d-83cc-7d499297dd78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ca6da6-69bb-4ed8-a3cd-21d42456be0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93d9f473-c83f-4a6d-a78e-c710117b17c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f42f507f-361a-48dd-bd3c-464a964e1b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6d22238d-18c0-4345-a29c-30c89381b3a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcd1f9fc-3252-414e-9c54-e08cc7c59f17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7412e4e7-f4ed-41df-abdf-1da7b0cf6fb0"
            }
          }
        ]
      },
      {
        "id": "d5472555-e99e-45d0-8983-6d9dee3d50ff",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4efadc37-224e-4277-88ce-dc6473c284eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6cfbb9b-c4b5-420f-8a9c-ee4747eb6dc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f10711ce-9071-45a7-b6da-7ca6711b5c0f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f34d07c-d910-46a7-88f2-b0cf34749432",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc2feb7-35ce-406b-ac8a-2b473f834abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ba6fcc-9e01-4021-ad11-1ab659bb3411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d4c5e11-e8a5-4298-a35f-7616dedf3cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ff9c799-b07d-4f73-9667-e3717989129f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5841b9e7-8501-4919-97aa-24be60aac5a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59cd612d-48e5-4071-83e0-38affcc4619a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "505098a1-6231-46d5-a880-a83ae16e7806"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b28946b9-aa98-4d89-a616-d5153a9b4926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2433e955-002e-472e-b9c6-a35a739b2470"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a307c8ea-0a77-4ce5-9d34-466e29034639",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b48be7fd-f656-450d-886c-3d086c0db009"
            }
          }
        ]
      },
      {
        "id": "88845df2-f967-480c-87eb-41cbd403089d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8319f7f0-ce32-439a-92c2-31451da76c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa84ce32-8573-4d95-bf02-1f073523e27e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c273e73-0e01-4548-8913-66acabd93eb4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766665c8-97d7-4738-9e21-4e98474f9c7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99dab4e2-e309-424f-8d05-87404e2439c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2520587-84b7-47bf-8873-7b3b2ba0b14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2925756-fea0-4067-a22a-0e0b068f354f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735d9a4c-db1c-4972-a947-9d958569faeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd27ca17-07b6-456b-a388-b268d1739f86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46419b0f-80fa-4ed9-98c5-ba4c3149eb92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada510ef-30f9-456f-9f97-57ea44fee6e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a76830df-a627-4a20-8681-465d131be468",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69ab38a4-8588-4369-bdbe-a1a1b78c17b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97a6bab2-5c8b-4dcf-a539-600461e832f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7312972a-b739-4fc2-bb4d-e005e52a445a"
            }
          }
        ]
      },
      {
        "id": "3ee77373-df4f-4756-998c-977123971097",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ea47d17-28b4-478c-b826-0fef80efaf41",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69a4cfa-0b61-4b99-944b-e6e83dfc8748",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "18b914c0-d97c-4771-9c0a-566da8a8dbee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b878084-6290-4a2f-9742-bdeb51ed697e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b22733-6da9-4490-b74a-79a6bb255dae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 250.58450704225328,
      "responseMin": 7,
      "responseMax": 6442,
      "responseSd": 412.10213835410315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690159312330,
      "completed": 1690159399492
    },
    "executions": [
      {
        "id": "ea93863f-60a9-4ee3-87e6-5b890fe0b126",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79d91cdc-1463-4510-a16a-8c8dd62bad68",
          "httpRequestId": "d236e18b-f601-4f53-b5cf-60cca14b35f4"
        },
        "item": {
          "id": "ea93863f-60a9-4ee3-87e6-5b890fe0b126",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "930d8c63-f455-41d2-a28a-2e0bd7e04045",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "1f5ff1f1-a7fd-4b6b-8adb-0625565aada6",
        "cursor": {
          "ref": "f4edf5d1-cff3-47e6-a7b0-761de6527634",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "97bf8e68-16df-465c-bfd2-ee017823ce90"
        },
        "item": {
          "id": "1f5ff1f1-a7fd-4b6b-8adb-0625565aada6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eeeeb44a-9932-46c8-9e43-2b0a56ae216a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "917585f7-89e3-4d42-82d9-0e915485270a",
        "cursor": {
          "ref": "973f90c9-12d6-4d58-b4ef-24748f7e5062",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "043e6a80-50c5-4fa0-b3f2-baf51c258d30"
        },
        "item": {
          "id": "917585f7-89e3-4d42-82d9-0e915485270a",
          "name": "did_json"
        },
        "response": {
          "id": "961bb66f-f3e1-47eb-99e1-7c715d27ca19",
          "status": "OK",
          "code": 200,
          "responseTime": 1143,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afdd756-79eb-4a0e-af78-c7536842da40",
        "cursor": {
          "ref": "8d4e0caa-a035-4fd2-835c-86d44510816a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41524713-dbf5-48da-911a-33ec09be4ea9"
        },
        "item": {
          "id": "9afdd756-79eb-4a0e-af78-c7536842da40",
          "name": "did:invalid"
        },
        "response": {
          "id": "fe531d19-1a14-407f-8582-a69dceab30fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afdd756-79eb-4a0e-af78-c7536842da40",
        "cursor": {
          "ref": "8d4e0caa-a035-4fd2-835c-86d44510816a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41524713-dbf5-48da-911a-33ec09be4ea9"
        },
        "item": {
          "id": "9afdd756-79eb-4a0e-af78-c7536842da40",
          "name": "did:invalid"
        },
        "response": {
          "id": "fe531d19-1a14-407f-8582-a69dceab30fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a9379c-c3e7-4690-8c22-cab809622df9",
        "cursor": {
          "ref": "dfb7ef96-a89c-48b3-8611-90786473db85",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "975abe07-fff0-4653-acbf-75aed4aa8696"
        },
        "item": {
          "id": "29a9379c-c3e7-4690-8c22-cab809622df9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4da1481b-fa03-477f-9a3e-bc433eba00a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 324,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f968ed-40f6-43ff-aca9-f251ebc43c7c",
        "cursor": {
          "ref": "ea700129-7f35-4954-9655-c884df03aa32",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13b58f50-cc06-4e97-8f76-e9628e11389d"
        },
        "item": {
          "id": "48f968ed-40f6-43ff-aca9-f251ebc43c7c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ba0607a-e147-48b0-a74c-7429c8c4c4f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 303,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97feaa01-df3e-469d-8d75-9a9d1f13839e",
        "cursor": {
          "ref": "922c1d15-29f4-4bee-b3be-e3b64a8b696d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d537d240-5c09-4788-8ef8-c50cef068ebe"
        },
        "item": {
          "id": "97feaa01-df3e-469d-8d75-9a9d1f13839e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c427a9ec-b4e8-41ae-a267-1b71d187e1f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d419bbd-ee76-4679-add5-887e1571313e",
        "cursor": {
          "ref": "0a7e5b96-21d5-404a-b546-7f024fc41778",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5eaa84b-ccbf-4629-a88a-8ab5ec0394bb"
        },
        "item": {
          "id": "0d419bbd-ee76-4679-add5-887e1571313e",
          "name": "identifiers"
        },
        "response": {
          "id": "e97d0ff4-7559-423e-9322-679982e780e0",
          "status": "OK",
          "code": 200,
          "responseTime": 1323,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b99b7-d8d1-419c-bcc2-565300cd6027",
        "cursor": {
          "ref": "ec63fe28-502b-44d4-974e-4152eb4faf21",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "947a263c-7444-4397-9656-9ab1dd8a3c82"
        },
        "item": {
          "id": "c08b99b7-d8d1-419c-bcc2-565300cd6027",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ba147da-2576-4483-99f4-bb524acc4ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b46310-c05b-4042-aa53-1b0e1cfc1ed6",
        "cursor": {
          "ref": "223fb1f3-9fbd-469c-a1df-3e46fbc46c93",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "45d34291-3cb1-4332-982d-8a8813034169"
        },
        "item": {
          "id": "e1b46310-c05b-4042-aa53-1b0e1cfc1ed6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8063164a-73a7-4705-b699-85682b422a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3896c6-9eb6-4b9d-9ad9-0ede23b4fe06",
        "cursor": {
          "ref": "e160379d-b99b-453b-a6d8-dfdda68accff",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62150bd2-85e5-4ecc-9d69-c3cc8c529cd0"
        },
        "item": {
          "id": "ab3896c6-9eb6-4b9d-9ad9-0ede23b4fe06",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d6c9dac0-3991-4a0f-8099-f19edb14cf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996efb1-b0c0-4130-ac3d-ceb4827cfca2",
        "cursor": {
          "ref": "13406a79-dd04-4135-b399-1debd9b59594",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "30fc6881-ebd6-4ca3-a3c5-7c6a3546999b"
        },
        "item": {
          "id": "0996efb1-b0c0-4130-ac3d-ceb4827cfca2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "823e0846-7c3b-4efc-8e0c-230b15d3038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b7f247-07e5-435e-9320-ca07b429a639",
        "cursor": {
          "ref": "87e0f8b8-6ebe-417e-82a5-239c8641d75b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0e62c3eb-f1a1-4d7a-a881-4bf84fc34242"
        },
        "item": {
          "id": "f3b7f247-07e5-435e-9320-ca07b429a639",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bb8199e2-1e12-4cb5-91f9-ba863f459734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549746ea-3b5d-422e-8819-da10b3f206a8",
        "cursor": {
          "ref": "28734569-ae17-42ab-9886-4c3f71c84647",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3023115d-45d8-4487-a1ce-afb392c5335d"
        },
        "item": {
          "id": "549746ea-3b5d-422e-8819-da10b3f206a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2e5a5a9c-d478-4ae7-8069-37a5c4d40d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984daca1-7fa1-4acf-8c24-c586f4ad18f8",
        "cursor": {
          "ref": "22e01d0f-adbb-43a3-9198-10a1595c6d70",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4c5cd052-6ca1-422c-bff0-efb0df474c1f"
        },
        "item": {
          "id": "984daca1-7fa1-4acf-8c24-c586f4ad18f8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6ae7fab1-69b7-487a-8c77-66e79dae3c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4e1f97-800d-4a57-9db8-ae93f16df822",
        "cursor": {
          "ref": "0a8d32a6-8dbb-4a02-b167-eeacfeeb0fde",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b65535b-c1e8-4e36-8c67-2f064ada45a4"
        },
        "item": {
          "id": "3e4e1f97-800d-4a57-9db8-ae93f16df822",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bf9e84b7-e93c-4058-a740-59b9f3097fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb8cda-3c7b-41b6-bddf-4ed25b8cd423",
        "cursor": {
          "ref": "0f12e459-2bc5-4b15-808b-df9baf58ada6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cf22d727-0ab9-4f6c-8dc7-9974e9210ef0"
        },
        "item": {
          "id": "10fb8cda-3c7b-41b6-bddf-4ed25b8cd423",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31536f7b-9840-4aa8-babb-7bee58fd7461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c8403-065b-4ce1-8972-857fb601976d",
        "cursor": {
          "ref": "ac691c1b-f3db-4cdf-b886-1845d307fbc8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4187c53c-e221-42f7-826d-6daf2142c957"
        },
        "item": {
          "id": "db4c8403-065b-4ce1-8972-857fb601976d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b495406f-2ec2-49c7-9f17-495735bf4f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4379ea2-1000-4004-be46-e1f8e6e71f11",
        "cursor": {
          "ref": "fe479cb8-f4f4-4e1d-a781-7950e89cda7f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5faa2cb-714c-44c9-8118-bc4c4a84e7f0"
        },
        "item": {
          "id": "d4379ea2-1000-4004-be46-e1f8e6e71f11",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5fef9cb2-2683-481c-b601-6155f87c98f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f67739-1ce3-44d5-b990-cf16dd7da510",
        "cursor": {
          "ref": "8a663b60-82c3-42f4-9d5d-9b65a327724a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4dee42fc-1a17-473d-ace7-56a30037dfe2"
        },
        "item": {
          "id": "78f67739-1ce3-44d5-b990-cf16dd7da510",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9b6e2cc0-83a6-4546-a999-176973e19c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f60571-da1e-48b6-85f9-c19d85aa1557",
        "cursor": {
          "ref": "e23ad8ed-fbca-4a12-9eac-660f93fa623a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "168fbc19-1820-433e-ac0f-0a5c0d83fa06"
        },
        "item": {
          "id": "76f60571-da1e-48b6-85f9-c19d85aa1557",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "54729758-69e2-4d54-9470-171ec814e91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c1783-1656-469a-9d8b-f823abb0687a",
        "cursor": {
          "ref": "2e5ad2ed-96bc-49f6-a9c0-5618ce665031",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dc123f1f-0a71-4ef8-93df-38487858fb49"
        },
        "item": {
          "id": "dd5c1783-1656-469a-9d8b-f823abb0687a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c5e8ddcd-9e64-429c-b290-9868e3d0ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f61bde1-afc2-4cec-b261-e5b3be5b8c9e",
        "cursor": {
          "ref": "17ee39b7-0ad0-4f68-af51-b31f6630c0b2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "07d0b24d-cf90-4ffb-81c2-5d0e404cd278"
        },
        "item": {
          "id": "2f61bde1-afc2-4cec-b261-e5b3be5b8c9e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a4bba123-c6f6-433b-a5a4-99a3ba6abb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f66d87-ae03-4d96-8f39-9d549e208247",
        "cursor": {
          "ref": "ef06f210-d6b3-4dac-a4c4-93e310f408ff",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "96effd33-b478-4fe7-bda5-87494ea726a6"
        },
        "item": {
          "id": "71f66d87-ae03-4d96-8f39-9d549e208247",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9569b01-f7b9-40b4-8908-dc0dc11add27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1d7162-a28f-4efc-a44c-925c49c94705",
        "cursor": {
          "ref": "a80c0ace-04bc-44c4-9e23-29ad28828f05",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa6e956c-5445-4ed7-ac2e-41d9970b1e92"
        },
        "item": {
          "id": "1e1d7162-a28f-4efc-a44c-925c49c94705",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "593167a1-95e2-47eb-b1fd-18004078870a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4c58e5-c42c-4905-bbeb-d043a4c48309",
        "cursor": {
          "ref": "c52523d7-3ac0-4032-adba-b684304f5fde",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d0535b89-8680-431d-9446-32b95be089d1"
        },
        "item": {
          "id": "fd4c58e5-c42c-4905-bbeb-d043a4c48309",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "857ba064-10eb-4fbf-879f-bae077b31b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09131dab-0007-449d-8ead-883f9999cd59",
        "cursor": {
          "ref": "6da54d35-9624-481c-b7d5-97cb5bf724fb",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0edc8f0b-8618-4560-8122-c172b94d77c5"
        },
        "item": {
          "id": "09131dab-0007-449d-8ead-883f9999cd59",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "377b87b2-66c1-4fb5-a3f4-99ed4b1ff0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a5d43-e33b-402c-abdf-9fc743165d8f",
        "cursor": {
          "ref": "3775cad3-74fc-455e-915c-589cea6e6f78",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e5279b50-b10a-4baa-b109-716760e05b6b"
        },
        "item": {
          "id": "3b9a5d43-e33b-402c-abdf-9fc743165d8f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d5a8b3ed-6771-4aac-bc03-293547784da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dd3867-200a-4a68-a36d-ef2d5a4afdcf",
        "cursor": {
          "ref": "b2a1009e-8766-4b47-a779-ee868dd9f2f9",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "86bc128d-d468-4f24-b264-1fa3dc27cb55"
        },
        "item": {
          "id": "08dd3867-200a-4a68-a36d-ef2d5a4afdcf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "43dd64ef-4895-4bdf-a042-3808c0baf3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19ef13-a08d-479a-af6d-26200a23a00c",
        "cursor": {
          "ref": "5470c217-8614-4bb7-a3ce-ae7452396d21",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "11ba9e8d-d5fd-489c-9b94-657425f1b6ce"
        },
        "item": {
          "id": "fc19ef13-a08d-479a-af6d-26200a23a00c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d3cd50d8-0bc3-40b2-a1ca-2bd94d780481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24d8558-47e7-4461-becd-7719aaad00ce",
        "cursor": {
          "ref": "e2771645-2db0-4458-9fc7-1007fbb73c35",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5a87a30-f9f5-4f7c-bef8-b04a780c416e"
        },
        "item": {
          "id": "b24d8558-47e7-4461-becd-7719aaad00ce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ce72b477-a055-41b5-9497-1e79bf40b510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e628f6d2-385f-4907-990f-4c0277610974",
        "cursor": {
          "ref": "432f97c5-246e-4e47-8807-7a27e5551815",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b30b641f-2b72-4a32-8cde-98032d6b4dcf"
        },
        "item": {
          "id": "e628f6d2-385f-4907-990f-4c0277610974",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b195e448-7064-455c-ac9d-16de969137fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0142826-2fd1-4513-b8f5-cc4cb1150e37",
        "cursor": {
          "ref": "1e1ba721-2400-4422-8a92-76ee19b6d398",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc65f354-0d59-4a05-a954-958b68aa909f"
        },
        "item": {
          "id": "b0142826-2fd1-4513-b8f5-cc4cb1150e37",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2d6f7593-4eb3-48b6-92e0-d6d54f9399dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ebcbb-b750-47a9-8ee2-4c5926665785",
        "cursor": {
          "ref": "febc5e5a-fddc-47a6-996c-a57c2397d0ae",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ed6c8c8c-e2a8-4c3a-a95e-39d5d62601e7"
        },
        "item": {
          "id": "318ebcbb-b750-47a9-8ee2-4c5926665785",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6408f7c5-473f-47f2-9b26-8d00d1ca29d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38ba0a0-84fc-4a29-bfc5-c50fa9284f62",
        "cursor": {
          "ref": "8a0d8a74-e2d0-43d8-b40a-f68522a61233",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "96d34e02-6707-48ff-9733-55cd00cfbcca"
        },
        "item": {
          "id": "c38ba0a0-84fc-4a29-bfc5-c50fa9284f62",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cf8f3c7b-1087-471e-becd-7a26cc023fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84036c5a-4610-4f57-b31d-e364b3a7e022",
        "cursor": {
          "ref": "0727fa9f-4abf-4824-b29d-3e9fa941b49b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e1e527d-0ef8-4b3d-a1ee-eb63407b3fbc"
        },
        "item": {
          "id": "84036c5a-4610-4f57-b31d-e364b3a7e022",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e475816f-235c-4762-b6be-85448b869f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa00bcb-f65c-414b-92d4-603c60abab5c",
        "cursor": {
          "ref": "9213d33a-8b28-4b79-8e13-ba70c77bb15c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ca8bb337-2997-465d-863c-33b5de41f59a"
        },
        "item": {
          "id": "1aa00bcb-f65c-414b-92d4-603c60abab5c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "09af5ccf-854e-4496-bd46-6433eda567ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88039c41-d219-4e79-9dc4-8295af0f83f4",
        "cursor": {
          "ref": "4fc1b4e3-b8ba-4e17-963e-e842d7068bad",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "259abe42-3535-424b-a83c-ad13762a461d"
        },
        "item": {
          "id": "88039c41-d219-4e79-9dc4-8295af0f83f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f0190cd-0510-4001-9b9a-03d7e5483210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c8288f-6203-46f9-a2c9-2215fefb5ba4",
        "cursor": {
          "ref": "87e28a07-3841-4517-b098-04c851c39f26",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db9f1985-629e-4142-880c-b36625430cff"
        },
        "item": {
          "id": "63c8288f-6203-46f9-a2c9-2215fefb5ba4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5e59f5e3-5772-471e-8f05-ece9bf6b77f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f8076-6527-4633-9b4e-4d6fbeb94ffb",
        "cursor": {
          "ref": "b7a27917-8219-4434-8fb1-4ddcb17c6055",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "90b6dafa-a3d9-4ee2-b7da-3eebec6b34d4"
        },
        "item": {
          "id": "286f8076-6527-4633-9b4e-4d6fbeb94ffb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "85242bb7-0227-4033-9b96-b5df1e0f1007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac5e16a-eaa0-483c-a1f8-c701bbad184b",
        "cursor": {
          "ref": "f9089772-d961-4927-9828-2c1964880198",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b1c25555-28e0-4341-94a3-d39f9533f4a8"
        },
        "item": {
          "id": "5ac5e16a-eaa0-483c-a1f8-c701bbad184b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd2daabd-980f-4d1c-9663-622a14f236b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12318de8-227f-42ff-81a6-11e1142250d0",
        "cursor": {
          "ref": "6bb8e92b-e3df-44d6-aee7-c7de47e3a124",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5da9e712-d29e-45b1-9ed9-432c072f4c96"
        },
        "item": {
          "id": "12318de8-227f-42ff-81a6-11e1142250d0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ef69aaaa-27ef-4654-b698-8cb4aca27bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0978fdd0-8d08-469b-b166-869730688578",
        "cursor": {
          "ref": "8d55b382-9b15-40c7-b342-a044a77f0058",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0fed3ff1-cd5e-464f-9a9f-407e9a9a6d33"
        },
        "item": {
          "id": "0978fdd0-8d08-469b-b166-869730688578",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b714a7b0-abb2-4cb5-b409-22d57c182e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2e568-1e69-4cb7-98d1-4863865816ea",
        "cursor": {
          "ref": "ba2e5c9b-d237-4bae-8b81-b194afd4cb0e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "47624a59-aa3e-4285-a25a-42b41c1b00a6"
        },
        "item": {
          "id": "25a2e568-1e69-4cb7-98d1-4863865816ea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "983f0bcc-b500-4e30-b790-6964aabd29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6576a407-3863-4f3e-b139-2ca91615acec",
        "cursor": {
          "ref": "ae97aad8-8249-4f4b-9e2a-b6e86306cdf0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aad0ebe7-21e2-4c06-a158-96388e7388b2"
        },
        "item": {
          "id": "6576a407-3863-4f3e-b139-2ca91615acec",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b5b34ed-eb9f-40b5-8c62-cc541fbcc475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd52d314-5726-4c7f-a1ad-5045b35d66b5",
        "cursor": {
          "ref": "c41fc6a2-266f-48fd-b2f2-12e2d85f283e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b052fbb4-a212-4e39-b959-5d6d9cc62731"
        },
        "item": {
          "id": "cd52d314-5726-4c7f-a1ad-5045b35d66b5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d467a514-4958-4660-a39b-883340f922ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab859f37-be9a-47cf-9752-57391b3fd168",
        "cursor": {
          "ref": "7f2f32ec-0d1a-4e70-a3b1-226ccfba0942",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ee38b4e5-b41a-412b-9581-04e0ae623182"
        },
        "item": {
          "id": "ab859f37-be9a-47cf-9752-57391b3fd168",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "41b80ad8-5f1c-4e9f-99b7-631cb4684ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d27509-aeef-4f16-ba7d-db4fded6d102",
        "cursor": {
          "ref": "ac718383-1676-4348-9b66-6bfc4840a344",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cc60c848-2167-4974-a3ea-09d84ecae1bf"
        },
        "item": {
          "id": "d2d27509-aeef-4f16-ba7d-db4fded6d102",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b7e2910b-5987-4f29-aaa1-e45b17da844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccef138-3304-4857-8388-ff0b90f6de17",
        "cursor": {
          "ref": "4169caec-9a00-4062-a331-ae9c1b626b4a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d30d26c-ef48-44b5-b6f5-f8cf60117467"
        },
        "item": {
          "id": "2ccef138-3304-4857-8388-ff0b90f6de17",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1efee7df-289d-464c-8f24-82b9a68dba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef90f116-be81-463e-93da-b8d9623e7894",
        "cursor": {
          "ref": "a159eccd-f8c9-4f5d-8158-2c7f9b575f35",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f06bd20e-25d2-4f26-aad6-c565eca0e075"
        },
        "item": {
          "id": "ef90f116-be81-463e-93da-b8d9623e7894",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fa86fb21-4e14-4704-98ce-d65772a380de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0726d5f4-0f4c-45fb-a782-d28a4e167487",
        "cursor": {
          "ref": "5415e960-241f-4ca7-af0b-2018ec6258ad",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "31caf90a-08ca-4ac7-a0f6-7ef32c63fb84"
        },
        "item": {
          "id": "0726d5f4-0f4c-45fb-a782-d28a4e167487",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ed07dd1e-ba28-4180-b78b-9f605cd278ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1baa4f-f741-4926-b263-186ec6a5b1c5",
        "cursor": {
          "ref": "196f1792-b056-462b-8a41-a69ea2871b3b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e4e05553-e754-454e-b98c-40fe3d4e5dad"
        },
        "item": {
          "id": "cf1baa4f-f741-4926-b263-186ec6a5b1c5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2ee6460b-974b-4fc9-b286-ee8c57115bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26cd495-f91c-4a7f-af19-570c052a99b7",
        "cursor": {
          "ref": "d0188902-d56e-43db-8af5-4daa811b2dc7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "352fedbf-5480-458d-a2d9-ffec444de510"
        },
        "item": {
          "id": "a26cd495-f91c-4a7f-af19-570c052a99b7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "09e30269-0bca-4f5a-98f1-a5c603078864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fdb729-3308-40b6-baa4-4c9efd31b898",
        "cursor": {
          "ref": "4b475100-3c94-4a35-ac42-39a85f181d00",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c516e03d-e492-4193-9065-cd2f48a8b015"
        },
        "item": {
          "id": "b6fdb729-3308-40b6-baa4-4c9efd31b898",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8d5cc0c0-6d6d-46e7-9497-2b16dcc86303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7557b974-2bcc-46d1-aff9-38a315d4c3d9",
        "cursor": {
          "ref": "fc73dd86-ab8e-424c-95f0-23ea6bc9eb40",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a0504b24-1b0e-4271-aa5f-f97ba21504cf"
        },
        "item": {
          "id": "7557b974-2bcc-46d1-aff9-38a315d4c3d9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1f741d29-0761-4a87-a330-bbef2afaa9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea48031-c0e5-4d12-b4a2-fa1b13e99b04",
        "cursor": {
          "ref": "5dd61edf-090d-45b1-9749-137e47afafa8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1ffc84d-71f3-4403-afdf-81b9550ff66a"
        },
        "item": {
          "id": "7ea48031-c0e5-4d12-b4a2-fa1b13e99b04",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dad0561e-5ff9-4539-beae-aeecc45c3cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f4e06d-5ac3-406b-bb82-55cc54b2b0ec",
        "cursor": {
          "ref": "4cf3fad9-6a85-4908-a6de-ecde6d436dbf",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "12ddaf51-bc60-41a3-b2e1-36f4ee1011af"
        },
        "item": {
          "id": "61f4e06d-5ac3-406b-bb82-55cc54b2b0ec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5e86adbc-404d-4017-a731-5f48f9fa5bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c7108-0517-4200-ba88-7024bb242451",
        "cursor": {
          "ref": "7eb94193-8cc2-4134-959a-03dac04c0206",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "29b37662-6273-43ff-8a73-b6da5564e992"
        },
        "item": {
          "id": "758c7108-0517-4200-ba88-7024bb242451",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "72c8fc51-da4d-489a-a356-b6255964f93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d816a6-97cf-4df2-a1a6-bcefca898dd7",
        "cursor": {
          "ref": "9761f0e4-e3d0-4deb-af7b-0c0c85aac24c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d37ccc0d-d9c4-4b83-be6e-8f7d28b9b750"
        },
        "item": {
          "id": "07d816a6-97cf-4df2-a1a6-bcefca898dd7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1e2b6235-7960-4c53-bfe3-e26cf975e6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a04a12b-24fb-4e76-8f55-ad521665e0c2",
        "cursor": {
          "ref": "7e238c49-013d-45f3-b787-743c7dcf44c0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "da81e37b-2735-448e-9f56-caf302df03e5"
        },
        "item": {
          "id": "6a04a12b-24fb-4e76-8f55-ad521665e0c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5a678ba0-b33b-4049-9bb1-e4e4986d217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52efab17-fc4a-428d-af2b-0af48680ad5d",
        "cursor": {
          "ref": "dde7a244-9c80-47cf-b00b-0b250eaf9d7e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b4d04c75-036c-4956-8e4c-72d5409917ba"
        },
        "item": {
          "id": "52efab17-fc4a-428d-af2b-0af48680ad5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9275d09e-fb88-4441-885c-b10d803096b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088fccc6-cf2e-4acd-a253-58bee96f702e",
        "cursor": {
          "ref": "8e474270-e00c-46a0-af0f-d514e8e14fa8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5616cb3-055f-4d38-8559-aaac4cbd9e96"
        },
        "item": {
          "id": "088fccc6-cf2e-4acd-a253-58bee96f702e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3046c2f4-e6ee-44d1-bb09-21539abfa579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4788b864-b5e6-4e4d-a173-9d036e0ab2fb",
        "cursor": {
          "ref": "a014d46e-8287-4662-8837-19f8c9a417d8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "07bc2bba-7a38-42b5-b6e0-e81ad283f406"
        },
        "item": {
          "id": "4788b864-b5e6-4e4d-a173-9d036e0ab2fb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9483b6c5-e418-4d74-8a51-06bfa07955eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5236d956-8f33-41e8-8826-d331932e5eda",
        "cursor": {
          "ref": "fbbc0f3d-0120-40e0-920f-6d0e3dc8d6d3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "05c73fca-a1ab-4b0b-b802-91d5e53e09a4"
        },
        "item": {
          "id": "5236d956-8f33-41e8-8826-d331932e5eda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d54d8043-f68b-4251-8e78-bcf85677c5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3262a9e9-787a-4f5c-951f-ea7e6171ff50",
        "cursor": {
          "ref": "48bcd5c4-1ef3-4666-9444-7c36947e6589",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8f9bf9b5-4707-4978-bd62-82edc1b538c9"
        },
        "item": {
          "id": "3262a9e9-787a-4f5c-951f-ea7e6171ff50",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "422e704a-5f6d-4cef-b0c4-e8fc0c519942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b0cbdd-64a6-4e0b-bada-5f1895b4d3d4",
        "cursor": {
          "ref": "7b46c237-ab2a-4d1b-a362-5b3c1f245283",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "951a986e-72d4-409d-9a4e-59a830868dab"
        },
        "item": {
          "id": "f3b0cbdd-64a6-4e0b-bada-5f1895b4d3d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "14918557-6813-47fd-af1e-11501c9a4cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f424b0-f4a0-4cc4-8160-448a2c192a20",
        "cursor": {
          "ref": "d47d9908-48f7-4aa1-b7fc-b4d5ebf4d13d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "239dde86-05d8-4e9d-9c16-6acfdd75b8fb"
        },
        "item": {
          "id": "f4f424b0-f4a0-4cc4-8160-448a2c192a20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b5412a07-1aa7-4d8f-b3b0-e98841669336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3551d9d-e77c-4ed3-8f4f-d956f9335e24",
        "cursor": {
          "ref": "1bf465ce-c6ea-4765-86fe-255c2e130036",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16243009-6fc1-4139-be53-f54853c07a22"
        },
        "item": {
          "id": "d3551d9d-e77c-4ed3-8f4f-d956f9335e24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4b1bdb0b-419e-40ba-8a27-f793571a3455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef80afb1-b9c9-4c55-94a7-cc5ab46a5fe8",
        "cursor": {
          "ref": "c2ffd85a-0851-4770-92fa-8372a2138f59",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bea5380-9aa1-41a4-97a6-1fcf81091351"
        },
        "item": {
          "id": "ef80afb1-b9c9-4c55-94a7-cc5ab46a5fe8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c28e10dd-c89c-47a7-b5b8-098edd36d435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cbf05b-f31b-4177-adc5-4731617f81c2",
        "cursor": {
          "ref": "47a8168c-f448-4fe1-a501-6dc70cc13a24",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e436a3f5-78c5-4ec4-b3ba-5dd21058aade"
        },
        "item": {
          "id": "82cbf05b-f31b-4177-adc5-4731617f81c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4045172a-0849-4a52-8456-fc034c3164e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b86f1b-4140-48fe-9f28-19fedbdc8380",
        "cursor": {
          "ref": "b0f6fe34-900e-4570-bb29-bcaaa3241870",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "09934dc0-45c6-4515-849b-20f4b9451f9a"
        },
        "item": {
          "id": "10b86f1b-4140-48fe-9f28-19fedbdc8380",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "77df3adf-c09f-4b2f-8e5c-e1defc22b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744558f-8ad5-469a-85c9-9ba82abad55a",
        "cursor": {
          "ref": "91621e59-4c5e-4c32-9ebe-19d7c6b6ff62",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "83e0696a-60f7-4f6d-9d0a-e5c01cc1c71c"
        },
        "item": {
          "id": "d744558f-8ad5-469a-85c9-9ba82abad55a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38e552d6-94e3-4f04-a04f-265634989a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5b894d-21d4-48c9-884e-44f8db4cf6c0",
        "cursor": {
          "ref": "cd83035b-2e88-4834-8b1b-07fdcacb28d1",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca39eb95-fb46-4b4a-ae5a-a35017234da9"
        },
        "item": {
          "id": "6b5b894d-21d4-48c9-884e-44f8db4cf6c0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ffe1e512-a26a-45b1-b3b2-01981231c825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae218a54-a404-4b6a-bade-04edfa096adc",
        "cursor": {
          "ref": "4f236732-36d3-42f8-87c2-16a949976fef",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b939da5e-11f2-44eb-984e-7f52675090cb"
        },
        "item": {
          "id": "ae218a54-a404-4b6a-bade-04edfa096adc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6b4c4b9-fad5-4a39-a6b0-11b5988201cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc8a51-67db-42cf-84bc-cf55c1154975",
        "cursor": {
          "ref": "51688324-d425-4eb8-8270-3e531dd9ad1b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5f092fe-dfee-42c4-9af4-72237d273f24"
        },
        "item": {
          "id": "e1cc8a51-67db-42cf-84bc-cf55c1154975",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e3784c8b-9f47-48ed-9abd-2b20913db75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f4c5cd-4292-4539-8af6-b0a1ef1ca60c",
        "cursor": {
          "ref": "f526a7a4-c591-43af-b311-0344cfe2bea5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5dde000d-c239-4cb0-84fd-ac11b00e0147"
        },
        "item": {
          "id": "25f4c5cd-4292-4539-8af6-b0a1ef1ca60c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9dff78df-1b5f-470e-ba95-4318dc0f8e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cbe96c-8aa3-4f5a-ae9b-10f0ccb707fc",
        "cursor": {
          "ref": "31aed6b5-790a-4f5f-b85e-8e00c420618f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f4d9c34b-c82d-46dc-bf4c-0f7578b2bfa7"
        },
        "item": {
          "id": "26cbe96c-8aa3-4f5a-ae9b-10f0ccb707fc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "916fb8f1-8635-4f49-9c8a-dd8e5eb5f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315aafcc-eb63-4efa-9dc4-94ec9add7def",
        "cursor": {
          "ref": "84bba1b2-16f5-4f39-949d-d5e64b98faca",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a7e413bd-d655-4549-9351-b133f3899797"
        },
        "item": {
          "id": "315aafcc-eb63-4efa-9dc4-94ec9add7def",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b5a88cb-e062-4d40-8427-75be7be14207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67526dc5-1de9-4878-b676-230ec77c217f",
        "cursor": {
          "ref": "b60a9cab-a4ad-4071-8b2f-ea885ccd6aa8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83ee82e6-0201-4fb0-80e5-de215d4cf894"
        },
        "item": {
          "id": "67526dc5-1de9-4878-b676-230ec77c217f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "60874e46-97ac-47a4-be80-701e4dd9d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140612ca-3935-49c5-b50d-a8616ace8b92",
        "cursor": {
          "ref": "5dd00f0b-2cfc-4c0f-85b5-cde76a7ce87f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9e055a7-b90c-4480-9a0c-2b8d57968477"
        },
        "item": {
          "id": "140612ca-3935-49c5-b50d-a8616ace8b92",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ccc67b27-4e0d-4ede-a73f-2712b313f6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04d9e03-1c54-487d-b50d-aba7e79ee714",
        "cursor": {
          "ref": "6b217d4e-0b84-48e8-9e86-ada9b73eb374",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "52db739b-6f00-49be-a584-8a346f9813c1"
        },
        "item": {
          "id": "a04d9e03-1c54-487d-b50d-aba7e79ee714",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ceb7d314-2de8-4058-8f38-08583d3b928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2d0160-0d80-4a51-8576-03ef0f09023f",
        "cursor": {
          "ref": "c280cbd4-3e66-461b-8555-d148ebe52845",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "78385bac-50ac-4e31-a6f3-d498acda58c6"
        },
        "item": {
          "id": "4c2d0160-0d80-4a51-8576-03ef0f09023f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40a564d1-2f59-4724-8eed-c44ce1a64004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6025002-f136-451f-a64e-d7eeb47b3d88",
        "cursor": {
          "ref": "9a327079-adde-4d14-a2da-b1c1f8a26b2b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6470cc93-ee1c-4c76-aa20-abaef6a3c465"
        },
        "item": {
          "id": "d6025002-f136-451f-a64e-d7eeb47b3d88",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c33ab254-9ff7-4978-8f8e-59fc55cdd4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c037ef7b-bb03-4608-8107-6f8a4b95616d",
        "cursor": {
          "ref": "8c553e49-6602-4e3b-ac66-2191049f9be2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "018cc676-0051-4b74-a4c7-14b4d3c575a7"
        },
        "item": {
          "id": "c037ef7b-bb03-4608-8107-6f8a4b95616d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d82fb1b6-f938-4d40-8d2b-bc2dd695689e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1472624c-d6a1-4c82-afa4-17e5f94f0fa5",
        "cursor": {
          "ref": "55a1f358-fac9-4075-abf4-9feaf9c71c85",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "76bb1188-0efb-4737-a8c9-6a973ec6873b"
        },
        "item": {
          "id": "1472624c-d6a1-4c82-afa4-17e5f94f0fa5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "82d6c557-4d5a-4181-b047-a21cd9e4665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2654f682-e0d4-4a19-9377-a05878d85cc9",
        "cursor": {
          "ref": "7d096d23-cf7c-4ab1-9f7f-cac29e1d22e0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1b5a5770-19b6-43ad-87db-91f70b1c2879"
        },
        "item": {
          "id": "2654f682-e0d4-4a19-9377-a05878d85cc9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a8fc0b1-eacb-4ac8-b925-e498d3545c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d85ce3-650d-44a1-9e4f-5660d8dde7f0",
        "cursor": {
          "ref": "fe312651-6bf4-4929-b5df-431da06d85a6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "02e4108f-bda8-4b9f-b569-14c011865d3c"
        },
        "item": {
          "id": "b6d85ce3-650d-44a1-9e4f-5660d8dde7f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "541d764e-cddc-49fa-9903-2c9ed995b2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbde4be8-07ca-4b30-b6d9-16e347fb0b23",
        "cursor": {
          "ref": "1e67a563-62d1-456f-a6da-b9ce2981d2c6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "13916e2b-a450-42f5-a228-2e6551f93214"
        },
        "item": {
          "id": "fbde4be8-07ca-4b30-b6d9-16e347fb0b23",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b625b26f-a2d9-47f4-9568-d9cf394f107d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87c7ce2-574a-44d6-b667-2fa376dbc1c0",
        "cursor": {
          "ref": "5bd0a5cf-33c2-4c5f-90f8-57aba8a0a7e7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "26475d4e-2191-4db3-9581-5ab77b7cf68a"
        },
        "item": {
          "id": "e87c7ce2-574a-44d6-b667-2fa376dbc1c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "53492cc3-d949-4356-a885-557999b102c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8adddf-cf62-49e8-982f-c2213d0169df",
        "cursor": {
          "ref": "776e23f2-0c82-448d-8dec-f1281b31a2d8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f08f1e28-5899-4eba-b77c-5470d3e1637a"
        },
        "item": {
          "id": "5e8adddf-cf62-49e8-982f-c2213d0169df",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cfd022df-8062-4aac-8748-7f280f1a19f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda4ec64-2365-40e3-be8b-f27586916753",
        "cursor": {
          "ref": "90c5ac88-862e-4e58-a2d1-a11f451b496c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7f6ab85d-905b-433d-a5b2-07bcf44d6f1c"
        },
        "item": {
          "id": "bda4ec64-2365-40e3-be8b-f27586916753",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "81922f63-d5b3-4928-b217-77c93f88f816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063198f9-1d23-40aa-8aa2-e00643c6ebb6",
        "cursor": {
          "ref": "3e2026ae-eb04-40e4-a11a-f00e3fc6ed09",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17a9cd57-318b-47d5-a7c3-8a6b04b342c8"
        },
        "item": {
          "id": "063198f9-1d23-40aa-8aa2-e00643c6ebb6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a549a11-266f-47d2-8a98-5a869f7cc9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd0f60-aad0-4055-b9c9-65da7bc6b0c4",
        "cursor": {
          "ref": "58c3287f-1cf6-48f7-8a0d-9e40b95ca799",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3125a46d-68ff-4241-ae6d-3c73c52fceee"
        },
        "item": {
          "id": "14bd0f60-aad0-4055-b9c9-65da7bc6b0c4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5075f767-2c6a-4ca0-b61f-ef9959adb06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f9bc0c-3534-4fba-bacf-6fef6cfba83e",
        "cursor": {
          "ref": "c49310f1-641e-4c4d-80b4-f86c002a1d48",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c462208-fe5b-4107-b9a0-370b8593982e"
        },
        "item": {
          "id": "47f9bc0c-3534-4fba-bacf-6fef6cfba83e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f3036b40-1304-4899-8b99-36195e5ae38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e80daf-17f7-424c-b5ef-fad904ca5b7d",
        "cursor": {
          "ref": "0e367b3a-0b05-474c-958c-10bde5e76e2f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14f38d40-5aed-4464-a35e-6bf8244b262a"
        },
        "item": {
          "id": "81e80daf-17f7-424c-b5ef-fad904ca5b7d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52aac8cd-e01d-4a88-bd93-e05b280e6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c21b621-fe0b-4db5-9ad1-524fc86cad9e",
        "cursor": {
          "ref": "66f41154-3ce7-4d42-a36e-b2ee89f938e3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "09f134fc-e588-4e7b-9e0e-932fbb9a9ef2"
        },
        "item": {
          "id": "8c21b621-fe0b-4db5-9ad1-524fc86cad9e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1f3f9208-548b-4c4f-9594-623848a8dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab4f0a1-be94-4244-ac44-9d1490f3cb9e",
        "cursor": {
          "ref": "6e96adac-aaac-4e0b-821d-dc0413ec2ff0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3d6a4419-6968-4774-829c-b250bc48c926"
        },
        "item": {
          "id": "fab4f0a1-be94-4244-ac44-9d1490f3cb9e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3f70c0eb-1ce8-4e9d-a39f-e61e20e1b49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89735eb7-479f-498e-9b6b-6fff20e19234",
        "cursor": {
          "ref": "1cf34884-0b1d-4bbf-bdec-16c3d7b6247a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c803b227-06fc-4e99-82ef-18667f1bee39"
        },
        "item": {
          "id": "89735eb7-479f-498e-9b6b-6fff20e19234",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "acd8ca7b-5971-48a1-ad93-fe7a594bebf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19d0c75-e5ed-47d2-a641-8724ac38c08e",
        "cursor": {
          "ref": "5cd431f2-916b-4bcf-af33-8b669178be5d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "869b1188-6539-410b-a845-948262bfdc3c"
        },
        "item": {
          "id": "d19d0c75-e5ed-47d2-a641-8724ac38c08e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "02f212b3-8009-4c03-950e-c9d8d92c73b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca9c7cd-aedd-48f8-a88f-17852d63654b",
        "cursor": {
          "ref": "e4f82c15-bd09-4ed2-ac47-a9ad497532ae",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bd97980b-a5d6-420b-b5fb-c206b977252d"
        },
        "item": {
          "id": "aca9c7cd-aedd-48f8-a88f-17852d63654b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aee03bac-bb18-49c1-b172-7145640922c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44551b47-3474-47a9-866c-f07933747426",
        "cursor": {
          "ref": "61760b87-a3b8-4080-a0cf-e922e087769c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "70b3a2e5-170b-4821-961f-aaf10f8ba851"
        },
        "item": {
          "id": "44551b47-3474-47a9-866c-f07933747426",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0540db4e-b279-4d10-9324-b5f973a98c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d5076-9b5e-4c49-b2b5-dff6a9bd05e8",
        "cursor": {
          "ref": "57592381-0dda-4f53-a7e7-61e364cb5b54",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3174cbfd-861b-4bb6-9797-e590b6e1f77b"
        },
        "item": {
          "id": "c07d5076-9b5e-4c49-b2b5-dff6a9bd05e8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "afcde842-80b8-4b18-ad87-65aa15d08739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "d67335b3-9971-47e7-a5be-54c488aafe61",
        "cursor": {
          "ref": "c9ce5519-baae-498a-a07e-2ea4607263ac",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7d6e991-b6d1-4c48-8378-254361d45561"
        },
        "item": {
          "id": "d67335b3-9971-47e7-a5be-54c488aafe61",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "88fbb2d3-efbb-4255-be37-a181bf0fdb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "28cf136e-0a39-49d0-b67f-230a6c151f4e",
        "cursor": {
          "ref": "c35853ac-d013-4f22-91b4-4371f8c5e876",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "49b87be7-0b11-4f13-b3e6-6fc1fd1ba6ec"
        },
        "item": {
          "id": "28cf136e-0a39-49d0-b67f-230a6c151f4e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6d403442-4865-4a77-9bb8-57973a216a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4e871474-1938-47c6-b4e6-a1be82e6c9ff",
        "cursor": {
          "ref": "bf7c4d2c-d31a-4ec0-99d9-38e4cc1e4ee3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9236977a-1b5b-4c0b-ae76-136c2fe01eb5"
        },
        "item": {
          "id": "4e871474-1938-47c6-b4e6-a1be82e6c9ff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a4be6853-b18e-43e8-b087-92be4112e13f",
          "status": "Created",
          "code": 201,
          "responseTime": 6442,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "83903200-43cd-49de-976a-c13bf6736f32",
        "cursor": {
          "ref": "30db36c3-b983-4e5d-8682-bc72f071d0ef",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d9a15a18-b717-410f-82ef-6dd9285c4832"
        },
        "item": {
          "id": "83903200-43cd-49de-976a-c13bf6736f32",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6f80431d-2e1f-4912-b038-2414b145ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d8faea11-bad3-4c83-9d73-a44f46f0ae8a",
        "cursor": {
          "ref": "e65f2d3a-5020-4303-b7bd-2057c1571530",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c90b6f42-8072-4a01-b8f3-b6152468136a"
        },
        "item": {
          "id": "d8faea11-bad3-4c83-9d73-a44f46f0ae8a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fbe8d826-f96c-4c0e-ac78-ad9086818097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8689f72b-66e5-43da-8838-67a19cc0bc06",
        "cursor": {
          "ref": "50e35974-8a22-4263-8ab2-26914f03dd2f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a42b3cb1-d4db-4742-8b84-05855934559a"
        },
        "item": {
          "id": "8689f72b-66e5-43da-8838-67a19cc0bc06",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "18cc9a0f-1fd8-4bf0-bfc0-aa98a11243bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d5452e-3d45-4241-8f28-2c0ef59765c6",
        "cursor": {
          "ref": "9b341f66-190b-42f8-81dc-d1ea88908281",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b7970bca-3f7d-4d5b-b4dd-175079b4778b"
        },
        "item": {
          "id": "56d5452e-3d45-4241-8f28-2c0ef59765c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e4f0db5b-24dd-4733-b59a-95beb8300cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a53011-efd2-4e11-a85c-96adfa11531b",
        "cursor": {
          "ref": "ed987d38-3292-4a3a-9c71-ea0706883878",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e9ad2a1-96ad-4a4d-9885-5d0d13b445f3"
        },
        "item": {
          "id": "f5a53011-efd2-4e11-a85c-96adfa11531b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64c20b41-0785-449f-b4c8-f769d86dad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11126d97-8205-4893-81ee-9ea336b17e27",
        "cursor": {
          "ref": "f68a7735-fb0a-4b07-a3e4-eff1178304ac",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7c3cbdc8-13c8-47ac-84b9-9e412d8351e7"
        },
        "item": {
          "id": "11126d97-8205-4893-81ee-9ea336b17e27",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e6f03829-db5d-45b7-88b0-ed8680a98a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4676968a-f6f9-42f0-8235-3e77fedb08e0",
        "cursor": {
          "ref": "8444b1df-8cc1-467a-9878-22e5793dcbec",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "32928107-de54-4034-b6cd-38611b2af70c"
        },
        "item": {
          "id": "4676968a-f6f9-42f0-8235-3e77fedb08e0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efc869c7-b6f1-480a-87e3-f79f81c33d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc70f17c-6d9f-4992-a5a5-d436c3d2c88b",
        "cursor": {
          "ref": "827245f1-d43e-49c1-9783-c0332de8e218",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d01a259-55ca-403d-bbe5-2a1410cddb98"
        },
        "item": {
          "id": "cc70f17c-6d9f-4992-a5a5-d436c3d2c88b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "45c7f5c7-d201-47e8-a867-405781cc64ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8970fd-24cb-4918-9e8e-17964968dc37",
        "cursor": {
          "ref": "5072e1ee-374c-4067-b5e7-37fca3708c3d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "045728c8-99b5-4ff9-9c63-eec558f47300"
        },
        "item": {
          "id": "7c8970fd-24cb-4918-9e8e-17964968dc37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b4208d02-3a02-435e-95a1-e2266dc877f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be20fbf-46bb-4aa0-aeae-a1f9f749aebd",
        "cursor": {
          "ref": "aaaacbb3-9aa9-4ee3-89f3-49e10522c1dd",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "10ad7a96-e228-4a6f-b74e-6f095d76644e"
        },
        "item": {
          "id": "6be20fbf-46bb-4aa0-aeae-a1f9f749aebd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "91fa3c0d-a436-4494-9309-337f9bacf8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a385e4bc-df6d-450f-9053-f80905fa9cb2",
        "cursor": {
          "ref": "97c488c1-a955-4f1a-9ea2-3cbe016f28b6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "58106b84-c5e9-458f-a8d4-59479bbb4687"
        },
        "item": {
          "id": "a385e4bc-df6d-450f-9053-f80905fa9cb2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "82a246d7-1726-4376-a0c4-64799bf019a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c6565a-ced5-475a-a9a3-f1f24250b2b8",
        "cursor": {
          "ref": "908a5b66-0e33-473e-95b9-bde55fcd8f21",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a1b2f071-2602-4601-bd62-3225ba673be6"
        },
        "item": {
          "id": "d2c6565a-ced5-475a-a9a3-f1f24250b2b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03355c69-84b2-42e2-bab3-6e45b1491151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f109b-e2e9-423a-951d-02ae122f60aa",
        "cursor": {
          "ref": "ae17a897-5314-4a18-8787-e5e0ab67ac31",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b5badb12-5c92-4a01-b9a6-71c3d62c8d79"
        },
        "item": {
          "id": "5f5f109b-e2e9-423a-951d-02ae122f60aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "697ca72e-f6a1-4efd-b99c-4e6b11e8c153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948fc404-643c-497e-81c1-5e235c51ec6a",
        "cursor": {
          "ref": "91c14abf-0761-4dec-aacd-14c37211bbdc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "541872f0-4705-42cc-9238-bc1dc8e105b7"
        },
        "item": {
          "id": "948fc404-643c-497e-81c1-5e235c51ec6a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fc5f0767-0085-41f2-84fc-cf915b7f376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419001a7-94a1-4097-8bac-860f438ca9fc",
        "cursor": {
          "ref": "42e18b4d-f5b0-4baa-89f5-ee2fcb247fd9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e5dbdcba-72f4-414d-af9b-a3d65ae5d901"
        },
        "item": {
          "id": "419001a7-94a1-4097-8bac-860f438ca9fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8e04d68-da40-4001-a5c9-10aaf46042f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0344548-997e-4670-af33-08d4da9873e8",
        "cursor": {
          "ref": "26963a1e-2bc9-433b-bde1-3448d20377d1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "da793a12-5fbc-4edc-be89-aa6aee4fc7af"
        },
        "item": {
          "id": "f0344548-997e-4670-af33-08d4da9873e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b512d4b0-2483-4b6e-81a9-532a20565cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b061180-fbcf-440e-ad67-e91a727035f7",
        "cursor": {
          "ref": "4bf574f8-f877-48dc-9798-bc29b4c40111",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4b550f29-3f7a-461e-a1e3-104888149767"
        },
        "item": {
          "id": "2b061180-fbcf-440e-ad67-e91a727035f7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f4cdc351-d9a3-4572-a9f0-23361310f1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8cce38-faf2-4b6c-9bb1-d87897558b86",
        "cursor": {
          "ref": "2358572a-cf1e-4a53-a8f5-286d82860f10",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dbdba32d-992e-49a1-aea1-d6024b3767ef"
        },
        "item": {
          "id": "2b8cce38-faf2-4b6c-9bb1-d87897558b86",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48a1269e-ae87-44e3-87da-c43cbd337002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956e54ed-36e2-4565-a652-6033e090904c",
        "cursor": {
          "ref": "2905e3ef-d514-4173-a09f-35d49a43812d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d48d85c6-c8ee-4814-83f0-24dabdbfbb97"
        },
        "item": {
          "id": "956e54ed-36e2-4565-a652-6033e090904c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5d5140aa-e3f8-4fb6-b757-83b42b97e6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0ab06c-f827-47af-8097-e2c217939c2e",
        "cursor": {
          "ref": "3b551879-c7c0-458a-aaf0-0244f2082a04",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d74a5966-c6c0-4b6b-9a9c-6296ebd387b0"
        },
        "item": {
          "id": "9f0ab06c-f827-47af-8097-e2c217939c2e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "53247ff7-50fa-41d7-b7db-48c8cb7b4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d3b7e1-fcef-4879-8be9-02a8c1a8e47f",
        "cursor": {
          "ref": "d3db096a-f3f5-42cd-bb0c-28c36cf9dee2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6d41b10c-d226-4c59-abea-ce2dc88f478e"
        },
        "item": {
          "id": "79d3b7e1-fcef-4879-8be9-02a8c1a8e47f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f78089a5-3489-454c-b3f0-1ec074d1063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690d2dc-4729-4d25-b873-276c776a0dd6",
        "cursor": {
          "ref": "d52087c9-f98c-4bfd-ad8a-b14d040f0471",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c3a18c23-db53-40ca-8ae7-f0aeccb3d2e0"
        },
        "item": {
          "id": "c690d2dc-4729-4d25-b873-276c776a0dd6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5fe1c3a-f1ff-4260-a52e-d2e722fd6dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c0a4b-c1ca-4610-9335-0d6d6d6f14b5",
        "cursor": {
          "ref": "61d8d51e-f53b-45da-bb51-2971126fbb32",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9e95b1b8-a7cc-4047-b74c-e9359bced13b"
        },
        "item": {
          "id": "698c0a4b-c1ca-4610-9335-0d6d6d6f14b5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f06ead2e-b579-4ffa-bf3b-cfa11c3da9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd918fb-9047-4194-b454-935df43d7982",
        "cursor": {
          "ref": "b287a59b-95f8-4fdf-b966-b060d9653a33",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c593b5b2-60a5-4063-b665-0185c80a7810"
        },
        "item": {
          "id": "dfd918fb-9047-4194-b454-935df43d7982",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ea7dba6-d37c-47cd-94f8-22c4499aaa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd7b20-6d4e-47e0-b60e-bca353b494c4",
        "cursor": {
          "ref": "2c720ff0-3508-4e94-8d17-b2fe36387501",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5b2b1d6c-2cfb-4fee-adbe-3f209848ab48"
        },
        "item": {
          "id": "f8fd7b20-6d4e-47e0-b60e-bca353b494c4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "52377d0f-0967-48a7-804a-000e3d62ae2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25813870-17c0-4b3c-8686-5cde9cf144d1",
        "cursor": {
          "ref": "f14794a6-80f2-43db-be0d-b910578292fe",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6537af9d-e30a-48fd-ac53-3376e29aa149"
        },
        "item": {
          "id": "25813870-17c0-4b3c-8686-5cde9cf144d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fdf1495f-7eba-4e5c-8716-11907c0afa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822e5f09-8233-4d8a-9395-5aacea951636",
        "cursor": {
          "ref": "9e481bd6-c6f3-4780-b269-02ee7e6ff02f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10bd575a-4048-4e3c-9c08-0f0f6e1463d3"
        },
        "item": {
          "id": "822e5f09-8233-4d8a-9395-5aacea951636",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b2149609-d732-4b4f-9883-2c0f298e1448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e2e062-f999-47f6-9a80-55a26cb79829",
        "cursor": {
          "ref": "b30ba09c-0853-4e5d-83c1-67e05523ebb6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d224d77-99ee-4142-8098-58bfaf6880f8"
        },
        "item": {
          "id": "59e2e062-f999-47f6-9a80-55a26cb79829",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "13f8c72d-b57b-4ec3-aaab-d6acac931823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797d7da1-4cb8-43b2-9fda-77235aad5b03",
        "cursor": {
          "ref": "faabcafc-0cac-4773-9ebe-4c3bc7cbb436",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "645ba51a-720b-40d4-8fa5-d9e1bd2951c7"
        },
        "item": {
          "id": "797d7da1-4cb8-43b2-9fda-77235aad5b03",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "904d218f-24bd-4335-9cca-d5c857ff0c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cef871-22b9-4cdf-8f40-f0c4828160b1",
        "cursor": {
          "ref": "5b967931-b881-4802-89cd-63c4a330cdfc",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f4e1a329-239f-45dc-891a-973ceec99c92"
        },
        "item": {
          "id": "e5cef871-22b9-4cdf-8f40-f0c4828160b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "75af90c9-2621-4b8b-af7c-1e390f2456c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a10492d-421c-4d44-b7c9-6441d74972a4",
        "cursor": {
          "ref": "ab422660-ac0c-486e-b881-435f36e886cb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "74333b70-1cd1-4e4e-a663-78340750a4bb"
        },
        "item": {
          "id": "4a10492d-421c-4d44-b7c9-6441d74972a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "691bd27a-9e74-4483-9fce-c2cbd47b9f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23290c2b-d240-41f8-baa3-1e4b78d0c224",
        "cursor": {
          "ref": "84278030-577c-4881-ab78-c39c4d084b8e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "71da639c-6e7d-45ce-8333-fbc9a6f28cc6"
        },
        "item": {
          "id": "23290c2b-d240-41f8-baa3-1e4b78d0c224",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f78b2ec5-cd41-4588-bd4a-61c23238c7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50777d96-c5f5-45ae-a544-ea9732504df5",
        "cursor": {
          "ref": "7b959c75-813e-4371-ad4f-d411e7cb7022",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e252495-f4d6-4b65-a816-d71a2d97b778"
        },
        "item": {
          "id": "50777d96-c5f5-45ae-a544-ea9732504df5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5d647e01-c40b-4db6-8d50-235e06f7299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f04a64-dec8-4d53-8e3f-e0cdb01682a2",
        "cursor": {
          "ref": "b18fbc75-59d2-4ce2-8e07-7026fdfe1ddd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fa6a161e-620d-4ff1-94a3-c2b493261c50"
        },
        "item": {
          "id": "e6f04a64-dec8-4d53-8e3f-e0cdb01682a2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c242ffcb-3e62-4202-acf5-04be86c6a0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db71d45-2e4e-40d6-b162-3695bb97b29d",
        "cursor": {
          "ref": "1e512128-952b-4d45-84af-394ce0400000",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "82f4e53d-639c-4575-a89a-c9e47d8077a3"
        },
        "item": {
          "id": "4db71d45-2e4e-40d6-b162-3695bb97b29d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cf359855-ebfc-48ed-aa26-fc34c2df62e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350dd3c-38d5-4939-9ece-11b071a4e453",
        "cursor": {
          "ref": "c4d2f350-ac0b-49ad-8272-ba33f81a6369",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "53b23998-8ad5-421b-95fd-c847ff964c8b"
        },
        "item": {
          "id": "d350dd3c-38d5-4939-9ece-11b071a4e453",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a2009f5e-a571-49bb-b7f3-92bc3c10bdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faff148-1c13-4e67-b635-f3d5b2c0d8bf",
        "cursor": {
          "ref": "327fe5ab-e0a4-4925-b738-2f6f49c92bbd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0499d529-3d77-4a11-bf1e-d36b6954ad30"
        },
        "item": {
          "id": "6faff148-1c13-4e67-b635-f3d5b2c0d8bf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4dbef7e0-5c9b-4030-a399-01b58aca04ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8652a35-6a3b-4510-b917-da4ac4fbe947",
        "cursor": {
          "ref": "32ccd738-c71b-4586-b267-c5ef99116d01",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "eb48d327-336c-48c0-a94a-892d587dc2d9"
        },
        "item": {
          "id": "d8652a35-6a3b-4510-b917-da4ac4fbe947",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f2480a45-dc03-4299-9bdb-90cdf5d660b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b495d9-6f54-4c90-a3af-de6028b9d87b",
        "cursor": {
          "ref": "fc8c1757-3ca2-4c88-8a5d-ba52fe3f00bc",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e2396122-3017-454f-8682-1f6cd0b909cd"
        },
        "item": {
          "id": "04b495d9-6f54-4c90-a3af-de6028b9d87b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e27da1e-419e-424a-8c23-217fd6c068e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c065401-cccc-457b-928c-e35908c0fc21",
        "cursor": {
          "ref": "9e67e0ae-cc74-4f90-bcb4-6547d1da4899",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fc8766b1-e5fa-46c4-b3ff-bf8310d2c116"
        },
        "item": {
          "id": "6c065401-cccc-457b-928c-e35908c0fc21",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b71c244a-6962-4930-922f-b6bf3661982a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45f2f4-7918-450b-913e-66c3b08723fd",
        "cursor": {
          "ref": "6c6e5939-5d7a-4a54-94b5-463e3986ceff",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2f539aa-28a7-4148-b386-b9ae8e120b70"
        },
        "item": {
          "id": "bf45f2f4-7918-450b-913e-66c3b08723fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d59b578-2f2b-41b7-baaa-19df35a61008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02292fa0-ff61-41f6-a72a-5a72e401edc3",
        "cursor": {
          "ref": "bf6e1c7f-54a1-42c3-82ed-843120360a70",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7af6d3f7-b506-45fb-9f43-5ca9dd938f5b"
        },
        "item": {
          "id": "02292fa0-ff61-41f6-a72a-5a72e401edc3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5fb1fb5-f8fd-4122-8455-eaca5ce77632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8dac74-b9da-46d8-9c9c-d477f1e244e2",
        "cursor": {
          "ref": "e96e9a20-033c-41da-9547-368a7d0eabb4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "65779a33-90b4-4bbe-8bf1-3896c9afee7e"
        },
        "item": {
          "id": "5f8dac74-b9da-46d8-9c9c-d477f1e244e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a22ee35-dc04-4b90-ae5c-39575372e51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c982f6-8ec7-4b48-ae55-ccc711c56195",
        "cursor": {
          "ref": "5a2efb28-4226-4262-8491-e854ad64af9b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "029ba907-d1c7-470d-a494-13f92971dec5"
        },
        "item": {
          "id": "37c982f6-8ec7-4b48-ae55-ccc711c56195",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cfd6e534-ad06-488d-ae9a-6016a3b577b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c882cd6e-9814-4b4e-bb11-19add92f42d2",
        "cursor": {
          "ref": "0c5c8923-10c8-4705-aea0-2f2fd40aa0bd",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "660dc6a1-9085-4a58-9ada-f2c60e9db8b0"
        },
        "item": {
          "id": "c882cd6e-9814-4b4e-bb11-19add92f42d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "94f99b00-2b05-4776-a5e3-7c3d2b135f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2a8aaf-c95a-40cb-948a-02c3cde5a3ed",
        "cursor": {
          "ref": "253188c0-c13b-4ae5-a427-24865aa4953c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97eaa9d7-6f84-49f9-9459-cb88639404f5"
        },
        "item": {
          "id": "da2a8aaf-c95a-40cb-948a-02c3cde5a3ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "236f9a48-bade-4e90-8974-17f5d11e51e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925b1ab0-c0c2-4628-9efb-15a8575ae7e1",
        "cursor": {
          "ref": "e02e157a-33dd-432b-b147-94a3324c77a7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7d860a2-4dac-444d-9fc3-e9b4fc63add2"
        },
        "item": {
          "id": "925b1ab0-c0c2-4628-9efb-15a8575ae7e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c83e8c9b-ba15-4e1b-8780-4bc007a8d660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70bddae-8f8c-48fc-82b9-372f8f8a5901",
        "cursor": {
          "ref": "0fd5747b-43f0-4b44-b947-672e38f8f990",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8f0fc7e0-a0a6-4f08-979b-eef42c1c883c"
        },
        "item": {
          "id": "a70bddae-8f8c-48fc-82b9-372f8f8a5901",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf9d3e60-4d8c-45fa-b255-c60004948ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07998274-9593-4de3-a396-85d0b5a44f99",
        "cursor": {
          "ref": "193d3b88-9bf4-4dfb-9bbd-6974afffbfe1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec0cc851-fde1-47cc-96ba-d7afd6da7d68"
        },
        "item": {
          "id": "07998274-9593-4de3-a396-85d0b5a44f99",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a657b8c8-741f-4eb8-a689-ab5d32ab00bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60efbfa-7369-46a2-8782-a4199f2ee577",
        "cursor": {
          "ref": "65a30a68-3200-4318-b6d0-a06667a43bd0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "48ac09c9-fa25-4b95-9689-68afab28b422"
        },
        "item": {
          "id": "f60efbfa-7369-46a2-8782-a4199f2ee577",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "74a81262-3292-4324-9555-6c45232741f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b126119c-22f7-44da-baf9-2e89bdd61b85",
        "cursor": {
          "ref": "065fb0ec-2fe5-4bbe-934d-0571a2f8b024",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dd44e805-d897-484c-9a16-d81eaf545b19"
        },
        "item": {
          "id": "b126119c-22f7-44da-baf9-2e89bdd61b85",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74bc2d69-dc36-4d57-aaa0-14d238eae182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9f2e36-08e1-44b7-8ee1-cc5877663854",
        "cursor": {
          "ref": "c9e5fe22-68d9-4bbd-afc0-3855a638047f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27bb4d50-dc42-4ca9-9bef-ff641ab1feff"
        },
        "item": {
          "id": "0a9f2e36-08e1-44b7-8ee1-cc5877663854",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3411dbd0-f3b7-4b98-97e3-3be3d7dd098a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4b6ebb-73f2-4b2d-b2b0-cf2984a62caf",
        "cursor": {
          "ref": "00489b92-78eb-4111-84eb-8b3e630412e8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d054f1c3-dfd9-4c29-8d20-5368768db550"
        },
        "item": {
          "id": "1f4b6ebb-73f2-4b2d-b2b0-cf2984a62caf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6fead4a8-7540-41c5-a11e-d74ac0415979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7794a96-7d4a-4000-8a98-9bcda0715915",
        "cursor": {
          "ref": "557e28a6-dd1c-4367-a62a-0efd82c39470",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "84786f0e-9bfa-4bf1-9d33-5a7e4462fba0"
        },
        "item": {
          "id": "d7794a96-7d4a-4000-8a98-9bcda0715915",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b5aceb51-0407-4eac-8d87-cba651068ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf0781c-dc9d-4087-b0d5-0228f82c9497",
        "cursor": {
          "ref": "694e52b1-3cbd-4d75-9a78-eb776eb0395a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "708edd44-b2e2-47e5-adc5-920ff555d57e"
        },
        "item": {
          "id": "acf0781c-dc9d-4087-b0d5-0228f82c9497",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c20e076f-bc19-42d3-8e28-a119d60f404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad707c1-02d5-4ec1-bc7e-7cdd03caa186",
        "cursor": {
          "ref": "9ce5124b-fa38-47f9-937f-d66c932d85dc",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "959841ea-6705-44cf-b40c-91c67ece72c7"
        },
        "item": {
          "id": "aad707c1-02d5-4ec1-bc7e-7cdd03caa186",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "17a39a47-91ab-4366-80ec-deade21583b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ae05b-3cee-4595-8458-27661c22dc77",
        "cursor": {
          "ref": "d2a6c3f4-f7fd-4b41-80a3-ba8b93c1a64a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aaf9e7a3-ab49-49a4-94fa-17f688d119e0"
        },
        "item": {
          "id": "9c9ae05b-3cee-4595-8458-27661c22dc77",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8df366bc-d380-40b4-8020-2a2023a8bee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf7337a-1dd0-46c1-b44a-89ec6aad3079",
        "cursor": {
          "ref": "0781c20f-27cc-4b71-a7eb-ea42d3842693",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e5bf35f-5875-4557-9541-fe96d944809b"
        },
        "item": {
          "id": "3bf7337a-1dd0-46c1-b44a-89ec6aad3079",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "331c9300-2157-4342-8dc0-dcb0325176e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d999bc0-f60c-45cb-a8fa-2afdfcfd64e8",
        "cursor": {
          "ref": "6de6bdc6-cc3f-48cc-b3df-d7a775650742",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e210f858-7b99-4c3d-959d-e36f92428feb"
        },
        "item": {
          "id": "5d999bc0-f60c-45cb-a8fa-2afdfcfd64e8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3df84c78-2c13-483b-9c89-a25eff217cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e898617d-4c5a-4a7d-9623-360c432473b7",
        "cursor": {
          "ref": "d0689546-3b13-42a2-a2cf-8085a22b4a2a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6686c258-19b8-4800-83a7-70c332a3e664"
        },
        "item": {
          "id": "e898617d-4c5a-4a7d-9623-360c432473b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1dde68f2-c8d2-4761-bc18-eaaf1a4c1d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1235acc-151b-4d66-9238-1a6e4a250540",
        "cursor": {
          "ref": "3aab215b-f3ab-4089-b78d-039a7ac956bf",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3a819dd4-cd5b-467c-a0a9-f5a488f4c5b2"
        },
        "item": {
          "id": "c1235acc-151b-4d66-9238-1a6e4a250540",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bfafd0a1-5464-435c-8abb-d5fb54f143b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5dcb0d-a5f5-4738-af97-f9a3d5d7d007",
        "cursor": {
          "ref": "81b6e331-7776-4208-8679-d03445f8cdb2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "28d2be9d-8764-4387-851e-0932cd3152ee"
        },
        "item": {
          "id": "ac5dcb0d-a5f5-4738-af97-f9a3d5d7d007",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c96387da-4b47-4829-b04c-4634adff31a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a36879-a5b6-4c63-970a-c98acdddd7cc",
        "cursor": {
          "ref": "463c3c23-33f8-4f3f-aca0-ef73b7f8b2a6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96ebb5af-be16-4725-8603-a8fb5d5d4d78"
        },
        "item": {
          "id": "a9a36879-a5b6-4c63-970a-c98acdddd7cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc3d6c25-904a-403e-85ad-1532462d125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02febb90-e48b-4726-b365-d7470a2f3f35",
        "cursor": {
          "ref": "e385b31c-11ec-4534-bb8a-68ea92fe7b5f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a5f403a-4e18-47ea-887b-556fe6333ea4"
        },
        "item": {
          "id": "02febb90-e48b-4726-b365-d7470a2f3f35",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9ec21594-4605-43a4-83c1-2c9cb59b8834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af5ae71-db86-4619-9e7a-5fd07404cf38",
        "cursor": {
          "ref": "aa1ce144-6b3c-42ac-aa9a-a57c316704fa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "17c2a24f-2b2b-4205-ae0d-8cb9e26a4d9c"
        },
        "item": {
          "id": "1af5ae71-db86-4619-9e7a-5fd07404cf38",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "140eebfd-55da-4152-97d5-d4b4f433e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8035f4b4-4c9a-4abd-afc1-ceb9ccfbc1a4",
        "cursor": {
          "ref": "acb81a3a-21b4-4b78-a7b0-8e9382ed2a0c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "71c91ea5-2145-4e55-afec-879e38c8a501"
        },
        "item": {
          "id": "8035f4b4-4c9a-4abd-afc1-ceb9ccfbc1a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2489a6ce-eb3a-4867-91c7-8a56090d9fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132f5fe5-9e41-4ee8-b714-4e81680ed367",
        "cursor": {
          "ref": "ee11c94d-6faa-4f64-8a2c-4be89e970d71",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "03c85184-038e-490b-b597-3c461604b04f"
        },
        "item": {
          "id": "132f5fe5-9e41-4ee8-b714-4e81680ed367",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fc60649b-6778-49dc-80cd-25f257110765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f02572a-7c19-46ab-9c91-573a69166644",
        "cursor": {
          "ref": "93e681c9-972d-4b09-9697-50a011afc7e3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9b689b24-b108-4564-be4c-958fcc960240"
        },
        "item": {
          "id": "8f02572a-7c19-46ab-9c91-573a69166644",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "68eabfab-0c24-4556-9856-40c478d743d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcde53d-f6d8-4989-9490-710631682540",
        "cursor": {
          "ref": "0903d00b-9b09-45e1-a7a6-f97ca10bd5af",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "45b8c24d-dcfb-447a-b504-c14f74d3b6ff"
        },
        "item": {
          "id": "8fcde53d-f6d8-4989-9490-710631682540",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0d9fcb12-38c5-4a8a-9d74-f60f84ce5112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ba4391-aadb-408a-8c7e-45d483867cc4",
        "cursor": {
          "ref": "9d0ae48a-68d2-4db9-a3db-f01db36c466e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "07387bd6-6aec-4772-ab14-3594f010228a"
        },
        "item": {
          "id": "f2ba4391-aadb-408a-8c7e-45d483867cc4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d5fa5b31-0f14-47bf-90c3-908c9b4cdd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f8242c-868a-4224-9276-2fe7cccf6c17",
        "cursor": {
          "ref": "c2d2bc0a-bdff-463f-af2e-0103a8372504",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f304e407-9750-436b-bfc8-a7aefc9e6e68"
        },
        "item": {
          "id": "e2f8242c-868a-4224-9276-2fe7cccf6c17",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f3a1fcf6-aef9-49fa-97a8-a30fdbfa8a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3881e46-d4e7-42b0-b619-f5a701488431",
        "cursor": {
          "ref": "27283ad4-3b00-4e21-8b3c-13e000bc146b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32e33da2-207a-437d-89ef-6ad4fec2457d"
        },
        "item": {
          "id": "f3881e46-d4e7-42b0-b619-f5a701488431",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b20eab23-b65c-4a36-a14c-31c671a9459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f9821-4252-4c59-8d6d-b31323fb164d",
        "cursor": {
          "ref": "8408e828-06f7-4bf3-b81d-7823c4740640",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "594ebc20-fd72-4cf1-a935-971db88b2d3c"
        },
        "item": {
          "id": "626f9821-4252-4c59-8d6d-b31323fb164d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a7461723-e788-4871-9910-597c551fa11f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d79cb1-1db2-47b1-8dd5-95a67b3c6d2e",
        "cursor": {
          "ref": "43c48a5a-d1fd-4751-bffd-e27832682b96",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "89574119-659e-44f0-bce1-d08219131248"
        },
        "item": {
          "id": "b3d79cb1-1db2-47b1-8dd5-95a67b3c6d2e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3b5266fb-2616-4ce4-bf89-ab3366408187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c18ca3-7cc5-40dd-884a-8ad066e4e058",
        "cursor": {
          "ref": "2a89b648-f6a3-4208-96c2-d3faf84e1d08",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8e1cc92b-f22e-4026-80c6-2db93c70b293"
        },
        "item": {
          "id": "02c18ca3-7cc5-40dd-884a-8ad066e4e058",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5f725b3a-148c-45e2-b174-e8f270531d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6288c764-c1e5-4e68-ba79-e2d9cc2049ed",
        "cursor": {
          "ref": "677e4706-871e-42af-ad8b-a16574cb4071",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b2ba5175-0ab7-403a-9a2a-35df30a2a536"
        },
        "item": {
          "id": "6288c764-c1e5-4e68-ba79-e2d9cc2049ed",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12399577-8ad3-4718-9468-6574271cc377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509dafc1-f20d-4471-b342-83365b3a2fbd",
        "cursor": {
          "ref": "10593353-9ceb-4cde-bfca-c6294486898d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "11befe02-2c21-4923-b146-201dca8921af"
        },
        "item": {
          "id": "509dafc1-f20d-4471-b342-83365b3a2fbd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0fd6c778-94bb-40de-877a-eec3c362ab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90531909-b845-4d02-934a-71da865e295b",
        "cursor": {
          "ref": "adf126bb-0f2a-4bb2-a533-6612eb4aad12",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8fed2673-34b5-47cc-b795-dbbe2c1e5ce2"
        },
        "item": {
          "id": "90531909-b845-4d02-934a-71da865e295b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ae7bfccf-6ec6-434d-8ecb-6baeb4186a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5128035a-917a-4024-9d8b-f25d1ed892ff",
        "cursor": {
          "ref": "231b9c5b-00e6-4e20-91e9-bb3ece8048d8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b511cc4b-43bf-425a-a6fc-d8aceab5d721"
        },
        "item": {
          "id": "5128035a-917a-4024-9d8b-f25d1ed892ff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b2921367-8e5e-42f7-929e-0ac7c815030d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dbe55f-6f74-4650-8f18-d2e222d5277c",
        "cursor": {
          "ref": "870fa449-d836-4d39-96eb-7bae1271a339",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "58a23818-4846-4837-b20b-40c49f97fd6e"
        },
        "item": {
          "id": "24dbe55f-6f74-4650-8f18-d2e222d5277c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6c42446a-2f4f-43bf-a35c-3e14b9a6ff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec1acd6-a4d0-4a07-ad31-7f0bd8231fff",
        "cursor": {
          "ref": "81fde561-c7a2-46fb-a1d8-cc6ccf34bc9a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37836cdd-47bf-4b38-8d89-2b49fb043207"
        },
        "item": {
          "id": "5ec1acd6-a4d0-4a07-ad31-7f0bd8231fff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "310b3717-f8bb-45bf-a9c2-0d3832314248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c68944-54ba-413c-9d3c-2ca9222acf95",
        "cursor": {
          "ref": "2f784873-86e2-4889-a069-7fa17d611e35",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa014016-7178-45aa-a29c-769294101ef5"
        },
        "item": {
          "id": "f3c68944-54ba-413c-9d3c-2ca9222acf95",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7d154997-728e-4980-9630-c99ee2c0cade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f645b-8066-4e28-b832-0f8c38b54e9f",
        "cursor": {
          "ref": "727b8d69-fe5c-4b4a-aee9-2e90deb75793",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3f094d52-4c25-49d0-a664-2c2b0f75c287"
        },
        "item": {
          "id": "3f0f645b-8066-4e28-b832-0f8c38b54e9f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8db5608f-cd6f-443f-821a-4a5a73413b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f47010a-dc68-40d8-824f-0a00cba65e0b",
        "cursor": {
          "ref": "8969da00-8472-42e3-889e-be80aa208b4c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5115d426-3ff8-4c09-b1e8-988ee214b94c"
        },
        "item": {
          "id": "0f47010a-dc68-40d8-824f-0a00cba65e0b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91983a14-4342-4493-a8b6-c7bf869328cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e80c2f-c237-498b-a8b4-5dcb8aef2682",
        "cursor": {
          "ref": "73d9eab6-e716-4f0c-b40a-4949c0236aa7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2bfa9424-6cf9-40d0-b4db-df706e4f36b2"
        },
        "item": {
          "id": "29e80c2f-c237-498b-a8b4-5dcb8aef2682",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "59f8c23e-4c96-4d0f-8d57-05bfc5196142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1b937d-49f8-4812-9c6e-850f120cf99e",
        "cursor": {
          "ref": "0919354d-72f3-4ef7-bddd-763c805ae639",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "58d05fcb-248d-4326-9ee0-cacdee944661"
        },
        "item": {
          "id": "4f1b937d-49f8-4812-9c6e-850f120cf99e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7474e1c3-3694-43cc-863c-afc1e2670e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d45f6-cbcb-4556-a4dd-df50b49ac559",
        "cursor": {
          "ref": "01ac2979-b37e-443b-8e9f-e70ae43cdc68",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6bc9959c-14dc-43cf-9ec5-400ebd1a518f"
        },
        "item": {
          "id": "f94d45f6-cbcb-4556-a4dd-df50b49ac559",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7f5cca4b-7845-4680-bedb-3dd75944d5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05454343-c92d-4991-9f5b-3c032f2d7255",
        "cursor": {
          "ref": "394a5298-c9d6-46c4-bbff-bf12dc30afa1",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "192c317a-c4ec-4bed-9253-aa336d38003b"
        },
        "item": {
          "id": "05454343-c92d-4991-9f5b-3c032f2d7255",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b08f0bdb-cf1b-4a1a-bffe-b4ac4b31521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a224512-a9d0-4da6-9653-2aee34d16e8e",
        "cursor": {
          "ref": "06a8f018-84bd-4b0d-b357-8cf58b559fc3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5e6fc895-58ce-43f5-bf41-fd8b6247336b"
        },
        "item": {
          "id": "3a224512-a9d0-4da6-9653-2aee34d16e8e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9538ca9e-eefe-4271-8e82-b62e47f53fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f15e080-c134-4efa-9412-0e1a1118c8b4",
        "cursor": {
          "ref": "dd66c98f-9916-45b7-b13f-253d73f46db9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "58115483-f1c8-401a-b67c-ae179351a272"
        },
        "item": {
          "id": "5f15e080-c134-4efa-9412-0e1a1118c8b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2d715974-b085-48b7-ac7f-031563d136a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663eb76-8936-405d-b00d-a4d0e12b9cee",
        "cursor": {
          "ref": "37a406ab-957e-496d-9ce7-3972f12bb663",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "00d3efc3-3e57-4c01-9ded-c98bd5da4953"
        },
        "item": {
          "id": "1663eb76-8936-405d-b00d-a4d0e12b9cee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f78826d4-354b-4200-963d-d7c3d46beef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9fa00-dae4-440d-b9c7-626688c4f961",
        "cursor": {
          "ref": "16c147ce-0a9d-4491-971c-59dce70b83ba",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b70d5afd-361c-43e1-8d87-e6f71a5c5954"
        },
        "item": {
          "id": "85e9fa00-dae4-440d-b9c7-626688c4f961",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "13ffc63c-a0ad-42de-884d-3200a4664f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91621c0a-89b6-490a-aea9-8c206695cd68",
        "cursor": {
          "ref": "38f6f9a8-8e2b-4c2b-add7-a134f606fbb8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39372bbb-9eb0-4b49-871f-52f811f0e9da"
        },
        "item": {
          "id": "91621c0a-89b6-490a-aea9-8c206695cd68",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27ee0249-d9cf-41cb-8ba0-fd452bc252fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e152b-c463-41c6-81d4-e0be1627667e",
        "cursor": {
          "ref": "70346c78-0170-4e3b-ae2e-b2d1321e916f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "183d7882-fddd-42cd-9782-77ea6dbcee40"
        },
        "item": {
          "id": "0a6e152b-c463-41c6-81d4-e0be1627667e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "659fbdf7-6c32-47e2-be8e-76be8a6343a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a255a1c-ce8e-4150-bf82-82d244afb297",
        "cursor": {
          "ref": "4a2a6f2c-a84f-44b3-8e39-064190b69c3a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6b6e7c19-282d-4dcb-9e3b-498613160733"
        },
        "item": {
          "id": "1a255a1c-ce8e-4150-bf82-82d244afb297",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b7785337-7768-4f7c-bd0c-441e95f4b9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c822cb8f-6a2e-4cb9-a9e1-ae849bfaed37",
        "cursor": {
          "ref": "4ef4b3be-43e4-4d6a-9488-e11eebebd822",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d6da6bac-f354-4068-aaa4-41f29278e144"
        },
        "item": {
          "id": "c822cb8f-6a2e-4cb9-a9e1-ae849bfaed37",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c3f27dd9-f228-465c-83b4-0e86227bf1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1522f6-98b6-4627-9bc2-c9b2e7f16f4a",
        "cursor": {
          "ref": "afebe91f-f079-4f66-a926-b1caa245d3c2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "666a0b31-f965-4cd6-b457-b12578e6decd"
        },
        "item": {
          "id": "ee1522f6-98b6-4627-9bc2-c9b2e7f16f4a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dbbc092b-3768-4b3e-a963-cd552a925dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a877a41-6277-44b5-9f92-cd3b175a40db",
        "cursor": {
          "ref": "b24f996c-c89d-4329-87d2-f9e9ac347713",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "468860bd-f9b1-4566-a2de-17cbd7eba988"
        },
        "item": {
          "id": "6a877a41-6277-44b5-9f92-cd3b175a40db",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44846040-4e50-4a5d-9c94-4e3efa2f81d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dedbead-a4f8-4866-9a85-fb5cc65b564d",
        "cursor": {
          "ref": "ab1e7275-bf57-4cd5-8401-c47d19ccfb2f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "59867dfa-8faa-43fb-9565-e1cdd1c0432b"
        },
        "item": {
          "id": "7dedbead-a4f8-4866-9a85-fb5cc65b564d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4125c38e-3329-4913-8412-289e2ffd7997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0216761-5457-4c6a-95bb-1f514c36c057",
        "cursor": {
          "ref": "5a37b3a1-8d66-430b-8d33-47fe2e108b79",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d54a34b-8321-4962-844a-e1f9835fb4ca"
        },
        "item": {
          "id": "a0216761-5457-4c6a-95bb-1f514c36c057",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e100794-f42e-40ba-b3dd-b01c7b8468a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5431550-2bd5-4de2-aebb-e3305490264e",
        "cursor": {
          "ref": "0d75d8ca-0428-4438-93f9-df24032098ed",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4ad626ab-12fd-4ddc-8edd-80715513f918"
        },
        "item": {
          "id": "f5431550-2bd5-4de2-aebb-e3305490264e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "260bb01d-3d1d-4dbf-a4cc-887cbf81afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b980b38b-f68f-4f48-b615-0fae9acc3bb3",
        "cursor": {
          "ref": "45b1ffde-f603-43c1-8f10-562a0ebacc85",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "073d4f07-5b4f-459a-9dd4-f5cf2be419cd"
        },
        "item": {
          "id": "b980b38b-f68f-4f48-b615-0fae9acc3bb3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eef7f572-3ae4-47d2-9bb3-a0b1b5901bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c069a15e-ee7d-4641-ada2-c460eaff97f6",
        "cursor": {
          "ref": "66b12b3e-43a2-4677-b00d-90e281fbdcb2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "11160ac0-9df7-46e5-9e37-3dfb637d1f3c"
        },
        "item": {
          "id": "c069a15e-ee7d-4641-ada2-c460eaff97f6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b8480d7-4fee-4ab5-a5f6-2025e4f212b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229ba4ee-3860-4b9b-9a65-33f20b1834da",
        "cursor": {
          "ref": "9877c4bd-194e-47ad-a3d8-82b5edc250ff",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c69b58d8-64d6-4c44-b920-4004dbfdb8dc"
        },
        "item": {
          "id": "229ba4ee-3860-4b9b-9a65-33f20b1834da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dec5c3dc-5bed-4549-b796-d7bcc5c2f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f278bb-70a5-4bfb-94eb-4fc5613e216a",
        "cursor": {
          "ref": "6b0d4e40-495c-4af2-a890-d1dbfbcf7dba",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d12ec28e-dc4a-4420-847c-8945a68a4cb4"
        },
        "item": {
          "id": "40f278bb-70a5-4bfb-94eb-4fc5613e216a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d46f263-ec8e-45d4-be38-0fb056eff242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c57287-aecf-4b59-bb0c-a13fae24546b",
        "cursor": {
          "ref": "dd50c9c2-3f17-46d0-8a04-bb3c6cdc6367",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "362d0299-a382-4449-a44a-5b84b1fa0668"
        },
        "item": {
          "id": "44c57287-aecf-4b59-bb0c-a13fae24546b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5b09edab-09e7-4c20-9a31-c6c5f8491cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeefdea1-a6f7-4e84-a574-ea72e3ac1cba",
        "cursor": {
          "ref": "29eb8366-2985-4fef-81a3-aea8b82c25f9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8c1c5509-b828-42f1-8a99-699172b3f4ee"
        },
        "item": {
          "id": "aeefdea1-a6f7-4e84-a574-ea72e3ac1cba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e434d071-c8b4-4adf-8830-20cd57b98031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85378316-9de1-4589-b696-cac013ee6f82",
        "cursor": {
          "ref": "2aac8542-908f-4312-8be5-cb1853147ba1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a49854a6-be25-4326-b0f8-81b25f770814"
        },
        "item": {
          "id": "85378316-9de1-4589-b696-cac013ee6f82",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1112a326-f3cc-4b41-80dc-2b7cf6116fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f835413b-c783-4e7b-a577-3355243c9d98",
        "cursor": {
          "ref": "4e1c744d-b47e-4a23-a039-b8bae4e02ea9",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "70423968-e890-4300-a0ac-2ca99208631d"
        },
        "item": {
          "id": "f835413b-c783-4e7b-a577-3355243c9d98",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "08c5f13c-0110-4df9-9779-ae26105fb439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b074f7-ca8c-4c9e-a4fb-5ff252d62b35",
        "cursor": {
          "ref": "1845cf8b-3448-4496-91fa-0b384165422d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0011c88d-2d1d-4f33-a851-512a171c6786"
        },
        "item": {
          "id": "26b074f7-ca8c-4c9e-a4fb-5ff252d62b35",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a227f15f-6bd1-487d-8573-98e44b33c3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34044781-1d76-4d1a-ad90-51715cb5ac4c",
        "cursor": {
          "ref": "38d4b8aa-d048-4b0d-af20-817a4e1be811",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e55a4838-eae8-4ab6-9e5c-4eb168ad7ba6"
        },
        "item": {
          "id": "34044781-1d76-4d1a-ad90-51715cb5ac4c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "64c3598a-1db2-465e-912c-d7d7b96b8260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac12c6b9-45ad-44f9-86a6-4144149609ff",
        "cursor": {
          "ref": "0709fe97-b7fc-4de6-82b9-c1b23d0cf220",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00bcdab4-f18c-4bec-89fc-3f67edb89baf"
        },
        "item": {
          "id": "ac12c6b9-45ad-44f9-86a6-4144149609ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d3d2fde-eb63-456d-87e2-ef5c4550a4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7e7b6-9415-4c47-96ae-40f379a55eca",
        "cursor": {
          "ref": "2bd602ef-14ab-44bd-a39e-2ee546d9b388",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5c24e23b-3789-49fa-8af4-7de47bf53878"
        },
        "item": {
          "id": "59d7e7b6-9415-4c47-96ae-40f379a55eca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "34e86af3-3354-426f-9411-852e04112014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524dea27-6bd8-4c9b-bec8-ab3bfaaf6d9c",
        "cursor": {
          "ref": "92d5cd66-28fc-424b-b84f-62b70eddaad0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "30222f07-21b4-4876-b686-0b99f6abf69a"
        },
        "item": {
          "id": "524dea27-6bd8-4c9b-bec8-ab3bfaaf6d9c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2cf3e9e9-39ac-4288-90b1-91cfc4b84969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3deff4-367e-4867-a033-b644e890b6b4",
        "cursor": {
          "ref": "fe288998-42f5-4d93-a544-c1c452312d8e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b4d88d6-ded4-454a-9c1b-da1af2247087"
        },
        "item": {
          "id": "0f3deff4-367e-4867-a033-b644e890b6b4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a3917b30-10a4-4f4c-a9ac-8eb5509ccc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc512eb2-2f80-4a6f-8df8-fb8c6e7c9ef9",
        "cursor": {
          "ref": "99af1aae-4e9e-4a9a-950e-178413a71710",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bc5bb8b1-7673-464f-93b2-54e3ed38375a"
        },
        "item": {
          "id": "bc512eb2-2f80-4a6f-8df8-fb8c6e7c9ef9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e44dee73-67b0-4277-8f4b-2aa075df0b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4883348-f983-4071-9284-53f6daa20f4e",
        "cursor": {
          "ref": "8c820040-540d-4381-87d8-5ad5b7da722f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "22ac6f5b-b13c-44b4-82b3-ae0d1add4bc8"
        },
        "item": {
          "id": "e4883348-f983-4071-9284-53f6daa20f4e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6ed92f7-606f-4594-86f0-ff3786ae1006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac20f6-4441-4ed5-83e6-58b0b8fd6fa8",
        "cursor": {
          "ref": "a4c62339-8542-4d05-8123-ba043fd7a1d5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ef86e9e8-1610-4f77-9336-a34598915bbc"
        },
        "item": {
          "id": "93ac20f6-4441-4ed5-83e6-58b0b8fd6fa8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8e21b23c-67b5-4943-9ef9-9f88ca85ccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc80c0e2-b0e2-4b53-b0cb-f45fdef129ae",
        "cursor": {
          "ref": "129c75a1-2fe6-4f54-9a69-6dc096b1df60",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0075f7d0-8dcb-41a5-8083-45fab2f12859"
        },
        "item": {
          "id": "cc80c0e2-b0e2-4b53-b0cb-f45fdef129ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "07f27d14-b4a3-4196-91eb-8a58b4550116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c4a775-5e5d-4724-850b-79b8b2e6ed0e",
        "cursor": {
          "ref": "553fffcd-f355-4d89-a861-7d67fdd83da2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7d33704f-643a-43f9-8f5c-bfcde7ff367a"
        },
        "item": {
          "id": "40c4a775-5e5d-4724-850b-79b8b2e6ed0e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9d01bc7d-c662-40c3-854c-cadb6122d605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937d1358-6147-44b5-a1bb-8e9f643ec679",
        "cursor": {
          "ref": "baa8024d-6615-4aef-bf54-4808d354d1a8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06b0c7ed-792c-4720-b243-d63303349771"
        },
        "item": {
          "id": "937d1358-6147-44b5-a1bb-8e9f643ec679",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "776cab61-f88a-4fa6-bcd7-ea2ed52e4325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ac7b3d-57d8-45de-abac-02c5797348f1",
        "cursor": {
          "ref": "2b95241e-1de7-49f3-8c39-adc0bc294e30",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "303d7cc3-9cc4-48cc-87d0-21f54142b30d"
        },
        "item": {
          "id": "56ac7b3d-57d8-45de-abac-02c5797348f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e78a0f7f-2767-4b98-bf66-24f8cd7f29e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2a1ad5-68ae-4f19-846c-a0af4317930c",
        "cursor": {
          "ref": "326366b9-b797-44c7-b9a4-f02cb02d0cce",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0da6a205-2962-4258-a66e-29e076231cc6"
        },
        "item": {
          "id": "1f2a1ad5-68ae-4f19-846c-a0af4317930c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1a2598f9-b33e-4b58-a39a-44d9de334c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03235fe3-e337-4b3a-8335-5d98372ec54f",
        "cursor": {
          "ref": "d35caf4f-45b7-443c-b5b6-047cf66a4806",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18ff8598-5f29-458f-9cb4-286e16717a30"
        },
        "item": {
          "id": "03235fe3-e337-4b3a-8335-5d98372ec54f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7266b1d-a35f-441b-afe8-6f2d35297fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0651757f-5ff7-41d2-920f-ed2f7522689e",
        "cursor": {
          "ref": "8fb655ca-3fff-45f3-a3f3-c477962433e8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9757df5-bb63-4a47-be83-5dc3b476cc9b"
        },
        "item": {
          "id": "0651757f-5ff7-41d2-920f-ed2f7522689e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a4cd9fd-54ca-4959-8d8d-b1d7b4df9aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acdea6b-1c62-4141-8f10-296bf56f1883",
        "cursor": {
          "ref": "8be67015-6456-4242-98ce-38dfeb748219",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "062c0ebc-6bba-4cf8-b327-051885e59164"
        },
        "item": {
          "id": "2acdea6b-1c62-4141-8f10-296bf56f1883",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "821bc51e-8ede-48d0-8ade-18cbb7d20b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c9eb34-bc6e-4ee9-89b7-943873f39d43",
        "cursor": {
          "ref": "edefe33a-1e95-4582-b870-abb8dada0086",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa4f3353-c913-4c3b-8312-59492a509354"
        },
        "item": {
          "id": "f1c9eb34-bc6e-4ee9-89b7-943873f39d43",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ca2a1ce9-0d7f-41cc-84a3-1740a39de6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e829ce69-55c2-4d13-b206-2c0521d15718",
        "cursor": {
          "ref": "cd48a01c-f65e-4eaa-aab0-691d375bb24a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b1f6bd49-119e-4cd2-af30-f08fafbedc7f"
        },
        "item": {
          "id": "e829ce69-55c2-4d13-b206-2c0521d15718",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc1d85a7-16ea-4e29-abbc-e353ac8704bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdd93db-dc2c-4e25-ba82-42f0b57dfc81",
        "cursor": {
          "ref": "fe825202-1320-4386-abe6-c99a4badf6a0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e807c8b7-43db-46f9-ab95-473686070b08"
        },
        "item": {
          "id": "fcdd93db-dc2c-4e25-ba82-42f0b57dfc81",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0c75015b-b639-4ee1-8d05-5b6d6b78613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290fa4e5-02ac-4e22-960c-ac2d8a3413bb",
        "cursor": {
          "ref": "09326d6d-dfef-45f3-a57c-4b5a02655a17",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9014094b-6358-4f87-b614-283b86c12ada"
        },
        "item": {
          "id": "290fa4e5-02ac-4e22-960c-ac2d8a3413bb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a1c42d18-0a6a-47a3-8bb5-2297f131a3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402dc2e-7f96-4b06-b628-ad8347f3a41d",
        "cursor": {
          "ref": "071258c1-d6da-4a7b-bd50-23c767a33dda",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "67ff1bba-f1ff-4f92-bbe8-4ea5518a68a3"
        },
        "item": {
          "id": "8402dc2e-7f96-4b06-b628-ad8347f3a41d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cd6d1948-ff82-4e42-ba85-bb7581f05468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c270ed-e86f-4ae3-9f08-34ee77709e5f",
        "cursor": {
          "ref": "17ba209a-27ff-434b-bdd3-46bd415c8a7e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f439ad3c-5f4e-42d7-b86d-22679304e2d4"
        },
        "item": {
          "id": "90c270ed-e86f-4ae3-9f08-34ee77709e5f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b93bfacf-7748-482c-bb03-b4eb7f617df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6182f84-2092-4c90-b109-98309cfad1c1",
        "cursor": {
          "ref": "efea4f23-0395-43f9-9b8b-e9236a5ad003",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "50b02bbd-f079-4a95-988d-ee861727c3c9"
        },
        "item": {
          "id": "b6182f84-2092-4c90-b109-98309cfad1c1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c43880f-e6a3-498e-9697-d5bc815f5ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23130525-5991-4ac9-9684-2991c4f9d8d1",
        "cursor": {
          "ref": "ceff74c0-46bf-4ad4-ae79-b6aa69afbfcf",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dc1ada0f-4541-4c02-a906-8548ba7f947b"
        },
        "item": {
          "id": "23130525-5991-4ac9-9684-2991c4f9d8d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3aa7efdf-0880-4538-9ecd-0717d548671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fea865-d4e5-4779-aed4-3911a1873bd2",
        "cursor": {
          "ref": "d8320c13-54f5-4513-8723-9d9adbb96f9a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "369aed3e-36de-4383-b067-f3be13df4031"
        },
        "item": {
          "id": "65fea865-d4e5-4779-aed4-3911a1873bd2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e6ce1ac8-5544-4de4-87e2-d728919fc7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d669a1c7-1a4c-4a62-add2-57822eea8409",
        "cursor": {
          "ref": "6423861c-516e-44c6-9346-6b10a4b15680",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "697da3c4-902d-4f0a-b644-b7b84976d3e3"
        },
        "item": {
          "id": "d669a1c7-1a4c-4a62-add2-57822eea8409",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1e2ab404-f9f7-4fef-a3b2-8cd5b9910e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342996da-74df-4854-9a91-9efe239932cf",
        "cursor": {
          "ref": "55ee04f7-11bf-4742-8768-7ed73e2f323a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "25d086fa-60e4-407c-be48-17418832c09b"
        },
        "item": {
          "id": "342996da-74df-4854-9a91-9efe239932cf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "092399da-b0c0-4863-a714-82af43e21de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1653e0c-4173-457b-9764-7fa40dcec4b3",
        "cursor": {
          "ref": "99cdd27c-dd7a-4c81-8e97-06ef8309fcc0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "29037fa2-1868-4697-b493-180872617f91"
        },
        "item": {
          "id": "a1653e0c-4173-457b-9764-7fa40dcec4b3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6d9e7ff-acea-4c25-a422-6dddb1fe11c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca8cfcb-e44d-4c78-bf01-6035f231e6e6",
        "cursor": {
          "ref": "59cdc338-d4b3-43df-a0f3-7d1ac430cac7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cce3696f-9ea7-4552-ae9d-ca926fd98327"
        },
        "item": {
          "id": "eca8cfcb-e44d-4c78-bf01-6035f231e6e6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d2598d01-0f5a-4b26-baec-2a337ec08374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b5511c-8e56-45a8-9892-f2b683babe28",
        "cursor": {
          "ref": "08c664a7-9cf4-499f-b43e-4ea3fff50a43",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9b0044ba-d131-4c6e-b84a-93e1b16a54e5"
        },
        "item": {
          "id": "f3b5511c-8e56-45a8-9892-f2b683babe28",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7ba7a218-bcab-49ac-a1da-85fc3e806b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e634d921-1f3d-4b91-9915-90e2420cb258",
        "cursor": {
          "ref": "97f583b9-ff4d-4429-bfde-623f45e4aff5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d3819b0-5ca6-453a-8cec-cd84f4265242"
        },
        "item": {
          "id": "e634d921-1f3d-4b91-9915-90e2420cb258",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "54614d2c-c245-4cab-a720-e5bb4ae2ef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53116c8-8cea-419c-880b-9311139e77ac",
        "cursor": {
          "ref": "1392afc0-49f4-48f3-8142-88cd4800fe84",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8b5d568d-c284-4c07-a485-560afbec9c15"
        },
        "item": {
          "id": "f53116c8-8cea-419c-880b-9311139e77ac",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9a7ced9a-724d-46d9-9af2-283933e94826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a889e150-2bdf-4212-8256-1f3f0cb6ef95",
        "cursor": {
          "ref": "aab05658-ffba-45bc-a87a-e1447acbb3a6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "82e9da75-de1f-4d30-9c77-9f44c58c6fae"
        },
        "item": {
          "id": "a889e150-2bdf-4212-8256-1f3f0cb6ef95",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ce9c2e8f-61ab-40ef-954d-84fbd9e25d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796d3c9c-c2bd-40e9-add2-52f80dc19992",
        "cursor": {
          "ref": "ae593dea-e2e3-46f4-8384-a7e5e4e3b521",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "12b20c88-db10-4e19-b6c1-7b8602ecef90"
        },
        "item": {
          "id": "796d3c9c-c2bd-40e9-add2-52f80dc19992",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66c4f4e3-8a62-4550-87ad-43cea9d1025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3230e3-b5be-4985-88f1-ef858f1782c9",
        "cursor": {
          "ref": "f4256a86-6449-4b78-bab8-55895f2b0693",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26a87427-b1f9-4474-9724-7c7e7f5f80dc"
        },
        "item": {
          "id": "1d3230e3-b5be-4985-88f1-ef858f1782c9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "890011c1-0bc1-4bfe-9ce1-e406efffd52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b028193-6bb8-4a96-94c5-d400577bf082",
        "cursor": {
          "ref": "f1bd079e-4711-4c79-b62d-ad8f38ee1467",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f584fc6f-297f-48a3-a992-595e7caecc3c"
        },
        "item": {
          "id": "8b028193-6bb8-4a96-94c5-d400577bf082",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7de354da-a1cf-40e0-98e8-f4635df83979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3518f2-1a58-4fc8-a00f-5d0da91a8adc",
        "cursor": {
          "ref": "de895d35-6602-4d9d-9b0b-18b26cdb3959",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "352794c0-7dfa-43ff-88b2-4955dccd8f04"
        },
        "item": {
          "id": "0f3518f2-1a58-4fc8-a00f-5d0da91a8adc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "14cc69e9-86ef-4b29-9ae7-52d71a8ae1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac20b9b-0136-4ae8-b07a-b17ac3f05af9",
        "cursor": {
          "ref": "28a1171d-6d99-403f-b930-2d9b3031ae43",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "24a063a8-a618-49fc-b40e-9b2c41aa05fc"
        },
        "item": {
          "id": "3ac20b9b-0136-4ae8-b07a-b17ac3f05af9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "43aa4181-7f27-4a1d-bc22-f9017e1698a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78680037-be0b-40b2-b9f7-fc01b1fc691b",
        "cursor": {
          "ref": "383418f6-c6bf-448d-bce9-2cddb18d5b3a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "49289cc1-2dd9-4fa4-80d4-eb76598a213a"
        },
        "item": {
          "id": "78680037-be0b-40b2-b9f7-fc01b1fc691b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e02e7b6-31a2-4196-8b32-01f96185dedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a92854-0d74-4f01-a757-3c3dc182f8f2",
        "cursor": {
          "ref": "ae1f4a50-6113-4429-94a2-3a7804034503",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4514dd19-d165-4a18-9bd2-12d14f56dbce"
        },
        "item": {
          "id": "27a92854-0d74-4f01-a757-3c3dc182f8f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2ee306b8-3f2a-42a8-af39-550227402ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb57a83-bec5-4f45-803e-d49e272884c0",
        "cursor": {
          "ref": "98589cbf-0837-471b-870c-b2b35140bbcc",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e59f226c-3a87-4261-a058-3c93ddf6b51a"
        },
        "item": {
          "id": "3eb57a83-bec5-4f45-803e-d49e272884c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3572419a-65bd-4ffb-b106-da9b9f8ab5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cab5818-f9c3-4cb1-aabe-e6243add6eb9",
        "cursor": {
          "ref": "887fcf6c-2499-4fd7-90de-7270ece7dad3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "08c8048d-9151-41bf-87ec-85202cffbcd9"
        },
        "item": {
          "id": "2cab5818-f9c3-4cb1-aabe-e6243add6eb9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c566c9e-e6d3-4c5e-ac95-eeb53f5f7e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d3852-62b7-440b-b98b-79b900c9941f",
        "cursor": {
          "ref": "f95b041d-41b2-4f8b-abc7-9808be8b2047",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "43e4dfd7-32ce-430b-b245-dd0fb4c80379"
        },
        "item": {
          "id": "f99d3852-62b7-440b-b98b-79b900c9941f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "28930610-1b80-441c-9b20-1aeef25e19fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb60ec7-161f-4140-9a10-e029899aeb03",
        "cursor": {
          "ref": "3d99554f-58ce-45e1-8786-e6fec353d719",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a6ef69c4-87a4-4e49-a9ad-1b1731ea177b"
        },
        "item": {
          "id": "8eb60ec7-161f-4140-9a10-e029899aeb03",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "374d14e9-3294-445e-b360-35b511c4b5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0226b474-83f7-483c-aaaf-fd26b8a9627a",
        "cursor": {
          "ref": "dedf8926-8e22-4843-9098-88d2a0177851",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "557f0bfe-d68a-4a0f-977d-444bf321843f"
        },
        "item": {
          "id": "0226b474-83f7-483c-aaaf-fd26b8a9627a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b1328ff-4c8f-4cba-a836-d4403d18bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067be0c4-25ef-4211-af83-8546b9460c34",
        "cursor": {
          "ref": "fdc9f1d7-06ac-4acd-86eb-bd2dfbac9de1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e9fa1bdb-2ea0-4428-9795-4126a7c53a68"
        },
        "item": {
          "id": "067be0c4-25ef-4211-af83-8546b9460c34",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3871f5d0-af8f-4b7f-a6a4-71dfbeb18f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b31fe6f-c12f-4bfa-b0b2-aae905431116",
        "cursor": {
          "ref": "b6558682-3ab6-4d28-b93c-a6433a3f814d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c769b439-6f4a-4238-be1a-39623f9321bf"
        },
        "item": {
          "id": "2b31fe6f-c12f-4bfa-b0b2-aae905431116",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c636705d-6c35-48dc-a843-4a76faa18ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f6f4e5-3a8b-4805-bef5-fdb4d54876d2",
        "cursor": {
          "ref": "3504489f-9f7b-4ce4-b034-d31fc9de71b4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "024f622c-0533-4e04-9bcd-ba3b6f03d52f"
        },
        "item": {
          "id": "c4f6f4e5-3a8b-4805-bef5-fdb4d54876d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c1c4a0aa-ca0f-4036-a28b-3a9b7f2c5c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7a2a82-17e1-40de-8cf6-319db0a1fea6",
        "cursor": {
          "ref": "c1c0298a-7f28-49a5-b7fd-c88705432c0a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "eab13f9b-06d1-4886-89b0-bef7a35c868f"
        },
        "item": {
          "id": "5b7a2a82-17e1-40de-8cf6-319db0a1fea6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7a8be9ae-b810-4cd6-a4c1-7ca030748405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a79458-dc15-4063-b6b9-d1bcf6441414",
        "cursor": {
          "ref": "b2ab800d-c766-4ad5-84f7-923d37dfc391",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "224bf1b6-118b-40af-8d8b-8f6f39ffaa2c"
        },
        "item": {
          "id": "d0a79458-dc15-4063-b6b9-d1bcf6441414",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "98314a67-8d22-4de3-a1c6-bbe5f40592e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45fcd6-5528-4f6e-be25-5da413bed5b1",
        "cursor": {
          "ref": "9f221728-76d2-42c7-a841-50828c7c545e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "23e42595-2a15-4bd4-b6b6-ac1b95920b8c"
        },
        "item": {
          "id": "5d45fcd6-5528-4f6e-be25-5da413bed5b1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "79b863ce-2ae1-4fdc-86fc-c0d6abd8c036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426f552-7734-4163-b4df-f4412df08d07",
        "cursor": {
          "ref": "8ae8aa95-2c27-4007-a582-6290e8805029",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ac27e7a9-26b8-4c5a-ac63-88f2916da463"
        },
        "item": {
          "id": "b426f552-7734-4163-b4df-f4412df08d07",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9faa55ff-7cd7-48b0-a296-3fab0cdbbbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed0679-456e-4a58-9394-68a2df92ebc0",
        "cursor": {
          "ref": "9b50dace-716f-470a-b909-ec738f0d7397",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e2b61816-8591-4882-9c5f-0df505eb2242"
        },
        "item": {
          "id": "13ed0679-456e-4a58-9394-68a2df92ebc0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3ef1ee0d-05a0-4b3f-b657-4242d8d0d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cdb0e9-2e09-41f0-85c0-175b8480e5cf",
        "cursor": {
          "ref": "1f9da977-5fcf-4ee9-91e2-d37de5f20bae",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "42be163f-9d97-47f2-a9e7-c4735180f8ba"
        },
        "item": {
          "id": "66cdb0e9-2e09-41f0-85c0-175b8480e5cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "326da6f4-62ad-49b2-89bc-c9316f7008cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2290087-6fc4-4a42-be45-b5fdc69048f5",
        "cursor": {
          "ref": "a6bb3e69-40cb-4971-a87d-892280764cf5",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cb19651d-1d8d-4fcc-81dc-a5bc6de4c09f"
        },
        "item": {
          "id": "b2290087-6fc4-4a42-be45-b5fdc69048f5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f1ac8f78-72eb-4f2f-959b-974f3aead708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acfb7bc-7f2f-422a-9113-3b3f3c72ba4e",
        "cursor": {
          "ref": "bba80ad3-e9f2-4fd8-ac37-8fe896a436ed",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1dd4474b-95a0-4c93-b439-0cc7eaa3223d"
        },
        "item": {
          "id": "8acfb7bc-7f2f-422a-9113-3b3f3c72ba4e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f4dea97f-ce76-4bf9-ba5d-64c4320698a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75d83d3-ecd3-4055-a13b-d38fe7980f7e",
        "cursor": {
          "ref": "539e770d-f619-4aa7-b6c5-33b873337629",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "db063e4f-92a2-42d6-85ec-6707e647d7b0"
        },
        "item": {
          "id": "e75d83d3-ecd3-4055-a13b-d38fe7980f7e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c24278fe-b899-42aa-9b54-056a7f56303b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebf1ee6-2f2b-4452-a13f-1bdb7beb0e45",
        "cursor": {
          "ref": "e19b24fc-cb83-444d-a90b-9211f5b0c791",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0d0bbd58-f6a0-49bf-91dd-b94ef93cd9e4"
        },
        "item": {
          "id": "4ebf1ee6-2f2b-4452-a13f-1bdb7beb0e45",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0c62aac3-fd55-48dc-b588-a511260c9903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f82295-f279-45de-87a1-5b0d64d0f6e1",
        "cursor": {
          "ref": "0482a5f0-4d19-46a6-bf90-54b9ead955cc",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "348aa085-044a-47a9-af6b-cb007447e60d"
        },
        "item": {
          "id": "f4f82295-f279-45de-87a1-5b0d64d0f6e1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8fdf649f-21d4-4043-9374-fb00e84bc9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8df115-8ef8-460f-b2b3-6e7378f8593c",
        "cursor": {
          "ref": "6f77e6be-f35f-4f00-8834-837c0a30f980",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3f7f3248-6fb8-49b5-a7c1-4922a05936e2"
        },
        "item": {
          "id": "9d8df115-8ef8-460f-b2b3-6e7378f8593c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "694aa1d3-cf6d-444e-a795-20a9be1295a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85a376f-8d33-4fae-b88d-66d37222c8a0",
        "cursor": {
          "ref": "09718fef-e631-4191-9f25-cafde305c6ad",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d1a8f4b-0a03-4c1a-9806-e0a1910fae7f"
        },
        "item": {
          "id": "f85a376f-8d33-4fae-b88d-66d37222c8a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "adef157c-ab42-4aa8-9666-d719590f670e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e6a611-79d9-41e2-992e-ade978b5783b",
        "cursor": {
          "ref": "d486e7a4-b33c-42b1-a595-ff8ca080c2a9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "55cb715e-4d6d-4a46-8c5e-a63fbd049ad1"
        },
        "item": {
          "id": "11e6a611-79d9-41e2-992e-ade978b5783b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8885cbd0-f1fa-49a5-a610-c6e68e779861",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0346dd2d-3d4b-4f23-bcd4-d112a87a0c1b",
        "cursor": {
          "ref": "40ca3b46-f7c4-4f1c-b81a-73ab7cb86aa4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e582d6a8-c26f-48ee-b8bd-1aa0459cd6d8"
        },
        "item": {
          "id": "0346dd2d-3d4b-4f23-bcd4-d112a87a0c1b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc1b0279-af31-4e8a-8a21-e57ab1e4e149",
          "status": "OK",
          "code": 200,
          "responseTime": 1898,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6514a4-7b0d-405c-a69d-f879df980b41",
        "cursor": {
          "ref": "ca8685c3-60bf-4718-89d1-240b83f13b80",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "43b42d54-f57a-446f-948c-0b82b4214d5f"
        },
        "item": {
          "id": "3b6514a4-7b0d-405c-a69d-f879df980b41",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "afd4d2da-b254-4e32-93c2-6b1f12921a4a",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fcbd93-b58b-4e85-a8c3-0ea7e2e4ee31",
        "cursor": {
          "ref": "459ae7fd-5c58-4a3a-a74d-4a5dc228ca44",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "857a24fe-7fc5-41d8-9ff7-2908c9380de1"
        },
        "item": {
          "id": "62fcbd93-b58b-4e85-a8c3-0ea7e2e4ee31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46987eac-20d5-4555-8bdc-b022ec699402",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fcbd93-b58b-4e85-a8c3-0ea7e2e4ee31",
        "cursor": {
          "ref": "459ae7fd-5c58-4a3a-a74d-4a5dc228ca44",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "857a24fe-7fc5-41d8-9ff7-2908c9380de1"
        },
        "item": {
          "id": "62fcbd93-b58b-4e85-a8c3-0ea7e2e4ee31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "46987eac-20d5-4555-8bdc-b022ec699402",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10711ce-9071-45a7-b6da-7ca6711b5c0f",
        "cursor": {
          "ref": "f5fafc90-0f10-4bcd-8f1c-13835b260f8d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fad6cf66-79f6-4274-9e8d-82a06c443ac2"
        },
        "item": {
          "id": "f10711ce-9071-45a7-b6da-7ca6711b5c0f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "363ee0a0-48cf-42aa-b5e2-93b9ff3aa54c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c273e73-0e01-4548-8913-66acabd93eb4",
        "cursor": {
          "ref": "c57695ff-3c47-4b6b-836c-0004ecb5c419",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d6a61fec-56b2-47a0-83ef-8b620e54f71b"
        },
        "item": {
          "id": "8c273e73-0e01-4548-8913-66acabd93eb4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "77be83c2-26b1-4abe-b693-efb808258072",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}