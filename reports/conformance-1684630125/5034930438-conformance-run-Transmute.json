{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b5759b6-58ed-4224-9032-5a4255885b62",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b833ccee-dcb5-4b6c-9a74-fe3dc952f899",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c554a12a-373d-4a91-9cbc-4dc0a816d2fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5da6ec5-9dfe-45b6-8f52-3bdb4cb91cbe"
                }
              }
            ]
          },
          {
            "id": "e85a6200-f108-479f-9b09-e8e90d62f488",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64cd2437-830a-4de5-8d99-30c08b6c61c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b22ff21-fa07-41b7-b0c2-d498bb341333"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bc858969-410b-42bd-ae33-8a61ada67051",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1a7297f3-800d-43f2-a3e1-3d30b46923c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87f27c36-02d4-472e-bdec-ba1c30e73666",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c2f87b8-156e-40c2-9152-2f47d6e1f033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3276df1-47b1-4598-913b-99eeb88c13d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb895dc0-5fac-4fe0-a24e-3e3fa2810679",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94e347f1-1b0c-4e6a-b740-2313e9c40949"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93537549-5764-434d-b9d1-d77b553da334",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "864cda03-239e-4938-aa2a-f51657b9bcef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7acdae29-03bd-4f28-8e46-1a549c69e36d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "21c3e8f9-56fb-498d-8ba5-f0d475ef2a30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2dcd361-3a9b-4b24-a94c-265e99fb86fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b63283c4-abed-4c6b-8fbf-1dd723ec67d5"
            }
          }
        ]
      },
      {
        "id": "dfcf0368-79af-4ddd-b157-ccccd943bff3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e080f9f6-2209-4b49-9ae8-f7c9495d43ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4507f27-a649-4b07-92d1-cfe8da8fdb1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f80381b-f738-4da2-8a4a-3989e9dc4eb0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4e73ad-1739-4d0f-b8a9-d219cf5afbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fda75951-5ecb-4b64-9e49-b46bfe4db207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81d5a65-638c-4609-aa8d-8c1b7cb0a66d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc102e7-09b6-4c88-bec6-1ac77fbb5405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d4ba953-cb7a-4adb-a5de-d66da90130a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deab25b-bb0b-4acb-888e-70c2c46b3409",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8937fb-657d-4dd5-98a7-5cbc64d1467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec9dd0e5-92df-4bf2-87e9-fb0903a8f416"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21a508ae-1bc0-46ac-be79-6d1bc80cd451",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18be2050-477b-4972-a5ab-daedb6e12984",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2854dfd-cf7b-419a-82fe-9177520ab34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b828749-c033-4a8a-9252-088c253b5086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b31dd3-61c2-46f8-9df3-3dbc65142a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc53a76-004e-46ed-872b-eb9500a24098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b1ef08-cc19-4c61-bbeb-63d297418b32",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ea12a-651a-4d10-a423-cd894595a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6adfd880-e15f-44ee-9dcb-117df6c48f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6538f4-2b88-4492-9775-0d5c54318d70",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3fb2a625-8c66-4814-ad5b-038bad45ee76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cad8762b-6c6f-4cc3-8453-999f7a338c4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4233018b-ff56-4b63-997d-dac3d3ed2a64",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3538ee95-73fe-4793-9c69-25a09d11b6c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c441b9ed-fef3-4fdc-97e2-a3b11177c767"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1114be59-6123-442d-b06f-31fd3ea36fef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dc668386-dd0b-47b0-b50c-4fec98c58d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0520846d-1397-49c6-96a1-1f667c82ff1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d41d0b52-8b42-4e21-8887-11edd07d84f3"
            }
          }
        ]
      },
      {
        "id": "affc6788-92f7-49f7-b1f2-1c620744c46f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f6c6fc0a-467e-4a4a-92e9-aba6181d54ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5395b8cf-8595-43b0-88bf-fad5868b4ac0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d57ebf8a-acda-4d0a-a40a-20d5dab2a63c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29796fc-c142-40db-b706-ab5aaa1296f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d0b7a4-5196-4dfc-ba05-b5d86702c5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae31eb3f-c922-4023-8932-86eb55a06d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09dec82b-d40a-4609-9537-52c4984240bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec7ad89-dace-4c23-863c-fbcaade68c3a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682e23dd-0523-454d-a25e-c634381612fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810314d9-ca6c-4a97-b636-fc23c45bfe0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a349b-78fd-4c00-bcb2-60d7b4a7d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49811deb-968c-4a3e-9693-4660ec748857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343a2be7-67b2-419d-887b-1c733462ad3c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f33564-f853-4632-b725-a8a35116c972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bdde00-1051-4f41-adbf-16ebb93d3769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e3d1d0-95c2-401b-bc4f-42a7811461bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e44d1da7-cc57-477c-b69a-4702f0c3f814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5b1aef-021b-4f8b-9367-643ce345399b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd7512d-6b3e-4f28-aa0c-ddd53338cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e65395-aa9c-4ea9-aa9c-1c6531e7985b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2077b5a0-b853-4056-883c-833929ea9bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fed83cd-b04f-4180-8ec6-d063eec4971c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60af3bf-671f-482b-b400-6895aab23baa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb28aa55-3727-469c-8dbc-c74eac7e1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5872e5-b976-4c88-a272-e75b47ea18f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c918067-3e27-47bb-8c39-a1d289b16a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b4105b4-a771-4eee-8c5c-c7fb7962c496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff9c473-ca0c-438e-9b06-4f8a87898430",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6b06ab-5875-4722-8d64-ff9abf04e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24aac35-8cdf-40d6-9687-c38ea80a29cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dab852a-c3a8-4916-aad8-b1b95fe46a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83a9d08c-1c7d-43c7-b7e0-d1989f79e0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891e00c-e97c-4c32-a58c-cc811c3d66c7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49a64f4-027d-4311-9489-6552467cc162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73b899e-ce05-4a4c-8342-5846b29e171c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab995c27-d81a-404b-8466-9df60700e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529f5272-866f-43f6-be1b-0aa96e709b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3613fea1-7b28-4c8b-bdc7-5c2a8429087c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeadf9f-eba6-4932-9ace-063228fda915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e471159b-cfac-4a38-a219-8ee20edeadf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571555bf-05b7-4982-a84e-2948983ef0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dfdbb19-9060-4289-aa38-9afcc97f9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea340c9-3cbb-4e67-a414-45bd1cefe3f8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2dcbb-0e09-4386-8fcb-60d29f02c1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01ef16-b487-44d6-b232-f163789e418c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accc96fd-1124-423c-8cb0-93117e2f2f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3540975d-e7bb-4d0e-b798-53f18915e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a745518-0840-47f3-94af-1a5d006f81a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e80e248-75f9-4042-be0a-7e75de7bfd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07a1f83-f769-4fb5-87b0-cce0c2855e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13404bd8-f32f-4924-8d56-56bc7d0787c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5ac6fc3-5e1c-4669-8b20-00ea0d755079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd247315-8f85-4a48-b2c2-f7e4bd36cbfb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab6cc8f-8e4f-4906-b24a-4d6a078c09d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62404637-7c73-4f2d-b8be-142a053c8d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1769a10-7afe-48a0-8804-c7f457aeea0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec19d0b4-b2b4-41a3-a214-534903c645d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f35bb-154c-4767-bcf5-21706bd69467",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64c20a0-3c6e-4c85-be1d-d7cb16716890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d371ebd-3a12-4806-93a8-2a6482be8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd64436-abbf-4521-b08c-1d7bbe109506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2c6d5d-ce1d-4401-b88c-a988c9aebc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc61353-6f24-45c8-ab2c-b90aadb00d96",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59de7ba9-d6f5-4cab-bd34-7ef277ef4b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214f3d2f-aa89-4cc5-919b-badd760c8550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3e6d77-79da-4c17-8e03-7eb72428ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "992139f5-82eb-4e68-a21f-3ab5dc06bd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea12dfd-31af-4c66-9e5c-4fab4992ad53",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683ba3af-56af-43ce-b81d-922436a3da52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fb0eed-62e6-40ea-9b8a-a5c4e5d413de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05364e2-5ca3-4e48-8fca-f9b7f7be36c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85030c59-92c1-4921-a2d2-887b88895c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4c0f0f-f620-4ee1-b722-75135ebcb872",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfac3c1-595a-429e-90a3-39478c689ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdc94f6-5595-4d26-b1be-825fed852039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb084b92-19b3-4c42-8099-77d1505991e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b24a343-7465-4344-9d50-306f96ae0dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b59489-4be4-4b20-aee3-2a96d6215c46",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac459b08-a461-495c-96a9-5a35ae1ce5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b46a48-a04a-46c4-bad8-b595b5b5d6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad97ee10-9000-4ced-8f4c-f73415cfae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80b73d8f-1494-4468-b9be-54ed37212438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d3b01f-d5e8-455e-a473-0c85d9858d6a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc982b5-88f8-4852-88dd-22fe21e364b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e2d014-089a-438e-b521-3e896802487c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95cc79b-939f-4d59-95c1-245cc0f8bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9645a628-072a-45e4-bd97-585fb7c6e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a545a4-c9ff-493a-ae41-6fabd3a7066c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84665dac-50e1-43e6-9c80-8fa4616adf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5df361-9982-499f-87ef-3d2fe70f07bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c39bc78-31b9-47a5-909f-10606ae14c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c89c8e-7132-4604-86ef-baae7221e13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb24b7a-e948-4241-93da-544370a8f885",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde7cb6b-218c-43ea-a040-8675581eb647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce6f261-011a-4083-a753-ebac9c711825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9e074-e0d1-41ff-9913-f8bf3e5bb0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e3aba1-c48f-475d-9cfd-7be0f35027a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0237ddb6-6d5d-437d-94de-6c490caad01e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb74880-abaa-479c-b1ef-5d3fb542ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f776392-5efc-4a3d-8da5-566b7ef5aca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d17e096-aa31-456d-ba7c-61c92847688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78199735-ef7e-4e0a-9e33-b6b4560ec4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef123b59-dbf9-4bc4-9c95-093dcc7584d2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd741b1-9a2a-423b-9481-7020f2491183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9671cca2-d105-4bfc-b5da-f1718e52d7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2040005-d96b-4562-a2a7-17fdcd9d9b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "306bd9e1-4bac-4359-acc8-ddbc3f689315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3ba7e3-d854-4718-adbc-ceb1aa443aaa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190575f1-ae3d-43ed-85ff-baa372369cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d02ed08-3d33-4786-bf04-36bf267d7885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df088b43-f2c4-4b16-95bf-885dfb68cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef559fe-0ea3-44a9-89c9-e91add8835d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da5181d-b36b-4d70-b0e2-d081bf5931c9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93490f05-084d-4f27-8eb2-bf3cdb364315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1d3f83-a064-4e6e-9039-36885a355a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6319ba63-ab31-4131-98e9-2a0696e131bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8db0c9-82b7-4b0d-ac50-3beac630b5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caeec63-c071-40df-b500-39a4fee006e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d7aef3-0de2-4a9a-8693-7fd92edef8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4694f351-6416-41e8-a64e-2002decff4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea5836d-8c01-48cb-9d29-34925901c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "619535ee-3f4a-484d-acde-0ab4d3b63522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d7f648-6a04-496c-b7e7-6c412c3a11a1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52410f4e-38f3-49a3-802d-c60686cc30e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d5f5a4-3a44-403f-a776-a78ec20229f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb146fc-28a2-4f14-a348-db8bb425c54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d937257-c211-42b0-81df-585515d855b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447351f7-986c-4907-9271-c8ab82e75aa2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6838323-358c-48b9-9fc5-ea9a455e6f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1057260-8812-4eb7-8a02-e16a1a707ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ae0032-e4c7-412d-b4b9-31ad61677358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b1834d-da70-4ab3-9fe1-557f40fd919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f94dc-ac31-4dc5-bed6-cf1d4edb958d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a61f5e8-a325-4927-baa6-8f305e1230bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1477fc7e-0c4e-4044-baef-8e8b09efe6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d23d066-9de7-40b3-ae48-dc586e93e51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f163be-cbdd-478c-a559-d7b3bc159e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc20a759-0fb6-4af7-9976-65b45b1eb0ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da3758d-0a46-4652-88bc-abb67c09dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c21b2e1-a34b-430b-95c2-f3f9e3bc50d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d14859-1640-4036-9a34-d9c9118fc92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13486644-98ba-469b-a856-65d2a522da12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b64127a-49ce-4589-8dd8-224cdd1319e4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3079d1-84df-4b8b-be11-2f75302b4818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abc3879-9e18-4e4f-9233-9842ee8b05b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d232ad1-b1e8-4f32-a942-11c55dae0320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e811c5-fcad-4682-b287-1eec5a5c3a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d63e8-4622-401c-969a-9757a770a1e4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4316845-c708-4bcd-b508-e051de8eb676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad19c82-dee9-4568-b947-d00df3fb034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05402f43-9415-4cd5-894a-a5c1acb85aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "47abc6b4-2a57-46e6-85f3-4254abaeac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e88793-cc76-4560-a671-6384525b0c40",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bd8432-a9d6-422e-9e8a-19ef35926ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658aa908-755f-4654-971f-1c37df3ec7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ad2535-6e7e-4ee3-9e85-44baa7bc4836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05713ca2-2c13-455f-8809-9b13b8e393c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb0ec3-14f1-46f4-a1c0-f5197c8afca5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66923ee5-fabd-4ce4-8c27-9c714f9d7b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c4d0aa-444c-43fa-ba54-9a16b8423637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2236c059-0a34-4f2c-b119-904c6a5b7b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6e112a-994b-404d-921e-ebe0944469dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31857ac-9360-4723-9adf-46b987ebeea2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42c4546-ed60-4990-bcec-8b947aaa79b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143421d8-85c0-4ec5-a0d5-f522dce1777e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c3cd1-8009-440a-941d-e21bf6d032d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "538a4edb-3fe2-44d9-96fd-730e84ead914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b174088d-af67-4c38-83e2-413e8d30419e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9c803-7ad9-49b5-8d1c-c645234a647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1673ccb-658b-44ca-9a74-4294cbdb3079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc1e99d-1969-43dd-8c37-2fa48355b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e92cd1-2726-4f0c-b870-8fd4bb5268ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975785f-44b5-47c3-8fda-742eba3e2199",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88add92-ffdd-4448-91a3-4c802691e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8b56d6-6da9-4c6c-8a36-8787b9c40b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7629dc0d-25af-4500-890a-d1998b0ae8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "78f3fba3-ea66-4707-bbb8-d7e76d328004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8ee5ff-bc36-4cfb-b162-425793747863",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b043de89-e575-4f19-a670-74c166184e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "788f107c-8b31-4c79-8bc9-0bad4c35fe47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec44bf1e-ee32-4570-a3c8-0a3c71bfe35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f24a288-09dd-47a6-bd53-ca6debd9e4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe18eb43-bd0f-4b2e-aa15-4f2e89b63a2c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef99269f-eaec-4537-bfd0-70977f231721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129c5af6-2816-4b64-aec0-89ca4dbe8629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca07397-6e6b-4255-8145-4324af56701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e072cd58-8d81-4542-b210-86a013ca616b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b9ab2-1a58-4b03-ac6c-ea8d8407b3e7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d07e5e-47b1-434c-9bbb-da10320c6e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8ff55f-d318-4be7-b5f6-3b3bb2420cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5040ceb-20ed-46c9-bc41-f9349b7b1a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "988a7a32-c170-4a7e-a29c-cc6ffc1987be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4e9a8d-53f3-4435-a070-4a4a07404f7a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ccf98-eb23-49fc-8f8c-489306abd333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3632d55-84f7-4b31-a32e-6f75f0894a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5c03c-baaa-4bf4-97b5-2a37110a2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ba262d-3dc9-44a8-91de-424b2b30737c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4894602-ee91-4a92-aeff-711b621aef3c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a814f404-fd4e-4c33-9575-47d515455945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52455dc0-32e1-4436-ab63-43a6a655dd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2118e1-136b-47b5-96e6-67ee995a0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7eb783-e7a5-41c4-adda-17c61227f63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50b03a9-fd23-4443-8821-c724e0a16bad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe256cb-dbbb-4572-8987-2397d1dbef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa0029d-7a8f-4dcd-997d-8c2d55c91a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af43ae26-1a4b-4152-b0dd-95eb396d2374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d310169-8f95-4ecb-9f96-6123f5cf8bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048610cb-f172-4953-85ca-e4682faaba62",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f7a30-0b87-417e-9e0a-89c7c5aee081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9cdef8-bd06-4dae-9615-c5746b5061ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b320793e-4965-4a8c-a54e-7cf69ddd740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aa6e76-38e7-497f-ad1e-14c8c09171f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a4fa28-b5db-4e8d-8985-6af2327ddd7f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9758830-59b2-4b12-8431-9efafbaf0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df79da7-8dca-494d-86c3-7c7092b32e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf92b497-f0d7-4b51-bad9-d88b6f0ea44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5dca96-e124-4e43-ab8f-6abb9105cf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b70f28-ea70-41ad-bdde-b50f58cf4764",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12037054-5dda-429e-a90d-68a93526bf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7057ab76-a5d0-4f2f-8a57-948eb868bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826eef90-8d74-4684-b353-d9ef7bf8fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "12580c4c-c9a6-41c7-a179-db44a6330dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28eaa86-968f-4bef-86ab-77c0dae3d0b3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bfef34-1271-4c00-a2b3-6cd496e92b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3001c4-b408-4d58-b7e2-64bec0c197cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f29e88-e5d4-474b-913c-50eb858df710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed331a22-f864-4350-8548-332ad18984ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8434de57-275f-4f0a-9a4c-d43cbaf2bf36",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712fdcc7-a891-4845-a441-f7af5812769a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e4fe02-f560-49d2-8ad6-dcba6f711940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45898e5e-916b-4bfc-9ac2-0f8b08315853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46134d77-64da-4b62-89f4-2ccc1d1692d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26c5187-1ab7-45d7-b2f5-c21f1ec4e84f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c186b8-5532-410d-bbfe-ac420c03f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4235dde2-4ec0-4935-9009-35686cd64ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f873f0-3878-4c36-b953-8cd28354175a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2dc5c7-f2fb-49a7-9e60-5462b6d2ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97ce7c2-f804-487b-8260-6785fa04e12d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8b77c0-2ff1-4de6-9cab-1a110c3c8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b83b9b-ddd8-4003-a858-f4a4afe42982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5267eaa-b3c1-4b3d-b80b-c2f1feb222f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab1791-8ef5-4427-a592-b90cf6503124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1ea365-4773-4490-8998-634a10743b8b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a829d-009b-48a6-adc9-1ca485b46a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf92f8de-5028-4ff9-851d-7e20a749878d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c716770f-0f75-487c-b1b0-e5584bc9e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ff344e-316b-45a3-8a27-218c62da851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edef30a9-625a-4d96-baf5-5fed228083a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd19ec91-8513-4fa9-a8e8-aa9c94443cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644491c7-e1b0-4054-88f9-af1da0b9d7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca0dfa2-f244-417e-b128-dc5a1150ab3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "421eb3c9-666d-43f0-85ed-dc527f15cb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997d7d9d-0231-4ae8-ad38-d954bc39ce17",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9fb8ad-f29c-4090-8db4-a342467906cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586306d9-7103-405d-9a26-7826d57d3c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ade4b4-e58f-4683-b5ec-f71b87f31f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9f29c3-441b-4149-8734-69971466d021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009b330b-0fff-404d-a15e-4d28e8927243",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0a1e25-0a2d-419f-b06a-0eddebe5f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c4bcd8-f983-49e1-9b9f-e08efe0367e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1546f83-b4ec-4b4a-8359-a1d24fc09137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b86a6071-7886-4c7a-b49b-f3203b36c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5eaec2-8e07-4ad3-be63-6e47ec07d42e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a0f4e5-6616-4f9e-ac28-8027cc59850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf53bc26-9433-4380-b643-21eaaedf8bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc9e12-4127-4d3d-859d-6831296da2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f556f4cb-5a68-4b90-9d16-39fe909175fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39693c7d-6fcf-43c3-8fbe-6841eef1b05b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a272cd10-6daa-4ccd-94af-414939ef2fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97f72a1-4b96-42d8-b248-89ae6cd562e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970f08f9-9cec-424c-8078-4a281294fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1352b5e7-437e-4c7c-88dd-ab96e53671cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acade2ce-1b2e-46d3-aaa9-28c4f04c26b6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be2e7fe-6985-4a10-8305-aa9ae1b500dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4ab874-4d6c-4ae4-af96-ea9a1f21be89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d80974-c27f-4c24-bafa-23ce4a9f76df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22bd781-b48b-4720-b244-9e4707cf13ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eed68b-a881-4249-9cd6-5c7c2ad7c295",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cecf0ce-aad7-463c-95be-442f4df694b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fe12ac-a2f7-4687-af63-0fd65a88ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb3d793-744d-425e-9d1f-0a71883fa2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "691538a3-5f81-46d2-b151-4877de126973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7aa581-6251-4a1a-9e42-f94b73d504af",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203be419-ba8a-4aaa-9721-d9cc35edf4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f403d12-71d4-4241-a180-9aeed7974fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfc9043-3ef3-46e6-94ba-207b0e951b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49276250-1413-4d51-9226-2db7179ec2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8602382b-1ae6-4c13-97b9-53127f548986",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1cb15e-6e9a-4a08-9561-c3ef71528fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dc9cc5-ac09-4321-b4c2-b5e1a7ac3a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4896e233-c058-4602-8199-c89bfc04c07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbef5ed-2954-49f9-990b-ef5683554c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c099e7a2-58ed-4268-bf87-f8c1da8e330a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174e5596-16a4-4bb0-a46f-bce626a8fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db55eed-0717-41f1-81ac-f070cf774d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357926ed-fc75-425c-ac9f-5419df56090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3be4654-8bec-47cc-b1b9-2db7d23bce2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff67e820-513e-4df1-8fba-54872c6203f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a992c08-34c3-4606-8866-f41860849ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35c11aa-b675-4114-810d-f88fcc56eccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308807f-3924-4aaf-89fe-a8fcc26ce5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9247fcc7-1f24-4a1a-b0b0-c8c15f61b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba2548-df43-41e4-a13d-b6bfe6c17d8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb510a-5aa7-4737-add2-a01521bc7d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5532d3f8-1b4f-4bb8-b15c-b18d5dfa4bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00026764-2c0d-44ce-88ee-45301410ff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22cfc72a-9684-435f-b9f5-354edfd8acdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd35d15-22e3-401d-9997-4a5ad571c61a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f14df1-30bf-4fea-bdbf-11aade0bce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840bd1ad-d032-48bb-a66a-7bdffe70d580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016a7c9-22f9-468a-8143-88d2850eda05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2f0b7d-22ce-4a70-99d3-28dcffeeead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275adb3b-e7ec-4b97-a4f1-afa10031df2e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e7d58-91d9-4432-b7b2-5a6b7db2e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b7837f-44d4-49cb-ae4e-3353b08f9d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba978e31-01bc-48b8-96d6-e9a4e15cd7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f560b3-42b7-4ff3-8b86-b1e45eb67fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ef555e-1c42-4b4c-b669-1ea4cb90ebd1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01fb6ff-09e4-4e68-8c87-c358245d7714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc9d859-2b8e-4ac4-82db-69615d9242a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d3fce-3929-4719-88e3-e49b6c5af550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b716b1d3-c99d-446c-98d1-d677d6eb4f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae5b42c-bf2f-4f4a-8d7a-8f37b23ce2e5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4e670a-edc0-4c57-b24e-cf86682be687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711dcc5-926f-427e-a0ab-ed57e6dfc690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c5cca4-3283-447b-8ba0-5df334f69520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64747cde-af42-4201-b708-e2e2fb4e8bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c558ad64-bab6-4aec-b07e-0763af63a8fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceefd3a-b11e-4f8b-a3a9-a3d708bb3a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b9171-a948-4d1e-9b78-c3aa596fb7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8c3926-8656-47b5-af1c-37c0b822e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7734e080-43be-468c-82f1-3aacc09f7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbfa41c-ad5e-4944-8696-1d06000d6b55",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a12cd0a-3d65-4a08-aa88-dd942a2255f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218f8baf-8f35-4c36-85c7-d4da8ae13318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5863c760-35da-46d0-95f8-20af99cbe5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c40826db-362a-463b-a726-ac4324ce9796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037910c0-147f-4b75-96ee-2a106573543e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a97e0c2-f54a-4083-b69f-022e8f0b61a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f704f2b3-75c9-4f10-8419-d0ffea2e6cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2d9a6d-77dd-4bf6-8af4-edb13f4f7943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6b794d-47aa-4e59-ad22-156b2aa49ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff206dbe-785c-4cee-95d6-134574292a8c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb2b4a9-3ba6-4572-b8ec-44b4c9b2522c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a08067-6961-479f-8238-8495f6035a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6f40b-df45-44c9-9cc8-dd3cee698175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4e21bc-87ca-4d88-86bf-c74930b08f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d194a940-190a-4414-a387-f3039274a8ec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfdf519-6473-435f-b640-46691c680ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2f858d-7c16-431f-aa9f-534c3baa6ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9a67e1-17b0-4aef-8aba-0fbc1b3fddc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26662e7-9ecc-4142-8f5b-f5ce4d4ba7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd9d81d-3341-4bb9-9465-1e3ed2b3dff7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469f03f0-5b66-476a-a959-0bad396193a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c665f9b1-989b-4f30-b0a5-d1122b2db331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc267e7-00b2-4a6c-83df-dcb7835369c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a80caf93-abd3-4375-a988-ae1a6d0b5c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de8bbc4-c777-4c13-b6d5-55574a922b57",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd9e823-38fa-46be-9d5c-a4279bf1471c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b164fc79-652e-4063-a562-d58e56d18cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2660188-9cf8-4e44-be8c-48a67f7f1e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc79fec9-8451-4c30-bc23-0008712aefd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d439e6a-feba-4d84-b242-8c5a17e00fb9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aebe7d-bfb6-45a6-8f14-85b4785e2e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aaa32cd-5e30-4288-b947-0bcce8671b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55732f2-a67c-46b0-92d5-9699c45ac92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2721d2-6670-4b86-bd81-4d69932dc453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec6f39-4dcd-4f87-a27f-ec78ec0a3a66",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f769cb-4b8e-42a7-b67d-6143859d4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa42971b-830b-454d-b82f-01e4c25a6b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad8196e-ae8a-4aed-afe2-0e5474b5f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4beea8fd-9a61-4ccd-bf42-8ff92c0eb2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce51798-c4e2-4d2b-93d7-1204c9ddde91",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfb86fa-27ac-4ed4-90b3-674b4994ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26f9ff3-68ec-4de8-b3d7-5352b4608fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5a81a-90fd-4939-a7e1-f26c9b47114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21be574-3dad-45e1-b509-5cda83268d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e65d30e-63ca-431c-9b03-5af7d430b30e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4d6454-f176-4a4d-97c1-601e231281fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45093d27-b697-4ca6-91a0-d37a5f7bd273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb84e37b-ce1e-492a-9328-b31c093cd414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc40bd11-102f-400b-a877-ecd7e100e7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f837da3-aa82-49bb-a68e-549143e929e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36985b01-ca99-4fa7-8b2e-641480798c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7b26eb-4792-4227-bffb-d38ed64511e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0e503b-2cb8-4a0a-a4f6-7d3ff14c4651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c841537-fc87-4b1d-850a-4b0bf0d3a1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456369ff-e546-440d-917b-c7b56be635c1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c78dae7-5c49-4173-9fa9-3d6b27556ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6623bb8f-03f5-411d-bc6a-621412737dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84116c8-8ea3-4211-94fa-4493f1e58163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afd51b3-79f2-4b03-9c4c-379b6a9f06b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0807bbbb-6f66-42ac-9498-ae28640e2a2e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71be8409-9844-4706-86dd-c83644587621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f3e4fe-f6d1-49b6-8a38-f372121efc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a869d-f573-456b-bd8e-9b9e2851b52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32c2ffbe-7648-4032-8ddd-e120108e85cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877cba8-68de-410f-b5fa-aeba0f32b3bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49099713-1f61-4da3-bba8-4ccc042ebc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccea9b9c-a19a-49d1-b49e-dc07386e4933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b3207-0b56-45e2-9f38-d844cb4b43a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aed54dca-8f9b-4b9f-89f1-5f7e197d3201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c930cd-1c71-4375-8cf3-056192dd2f96",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb32b863-0aa3-4d03-9b09-335ac6466467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb386fe-d793-4974-8f69-56afbb41bcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29a5674-8d2b-453e-a204-c106a60527dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b57f273-615c-4c3a-b122-b990f1f598d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d2d82d-086f-4864-aa50-167f8005ca9f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a150f11-2a56-4cdd-a1bc-6c31e2d820bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b41af63-f08c-45ed-8ce8-66825aa56149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58160797-806d-42f0-9b8d-f2c017bdcccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52041f75-588e-4c9e-b4c3-97086ade2de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa619fba-e8bb-468a-a83b-ccca69e76ff5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095c1822-2cb2-4b10-a5ba-4f14dcb03ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3687c2f1-fb72-48d5-a906-58037acecb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf59c1-c546-4a62-8bbf-b6d759c243b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f598a81-ebdc-4e82-996d-8f09287052e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eaf56d-5b0d-4841-894b-02b876abc456",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eca2bd-e958-4236-901a-5b594f6d0388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47950bb3-59a2-48fd-b9c9-a2f8a5301c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3592e2-318e-4ad1-aad1-6f45dd0ee9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b7bc0f-d115-4419-a6dd-ec6b7d2a80e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ced4b-ad67-4676-8c49-8ff98b46b79b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4115a18-7231-48dd-a10d-944eb179a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6111e5e-ed93-460a-ab14-39e173bf123b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c972352b-3620-449a-8fb1-c4b5b153385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e88890b-e4ca-4f43-9a81-d88cd2340072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3f2271-54a1-4caa-83e2-bd813f9c346f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c9f538-570f-49ab-a633-e0da406004f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e59a36f-204c-4ae7-9d80-ff1d7866ba61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854013ff-35f0-41dc-80be-4a5ec1478a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5650cbd7-6aea-4283-9436-52b083f4e284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872a2c0f-8eeb-445e-84bd-995dc6786f35",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3be81c-2344-42e9-8f45-477863f220e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60da261-467b-4c82-84c0-17e1744dfa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341447a3-820b-4900-9297-6de3ceb31d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5364f14-1001-4775-ad54-557bc385a9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfda3d5d-f75b-42ed-a9f8-af6606a7bb2e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca5be6d-3acc-4e16-9559-edae94a6fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de08a7c-3eb2-44ea-8c0e-27df99e6a049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2861b82-887e-43fb-a8bb-fead9e957018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0491a901-9459-42ee-9b77-882a475206e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72708372-fefe-4af3-adea-fe5c15b3c469",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e2de0-0b1c-4548-9f32-2ce0166fc35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d024091a-0e6d-4283-8bf6-5fdbf2351c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a199e469-4f05-4e57-b32b-d403485d6f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "459024f2-3ddb-4836-9dd1-eeebab2b854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b9eb9e-17d7-4847-a2dd-218c0d820c1e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58b2c8b-1f03-4d98-b875-83447c8e5e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaa3e35-e629-497b-9fdf-ea7b0befadea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8444a36-3090-45a5-93e3-8fc81d26941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4186a6a-e2b9-4e31-b89e-8e6faeb0be69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58b10cb-c4e2-4284-b9ec-4cc9fb78ad20",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c334a9-4381-4f51-8f3f-24d9dba577ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293218ff-34f6-4554-9065-f2d52591ff41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50371eb-da5b-4454-916e-bc2c193e6850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8866487e-0075-49ef-b312-abc596c61649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d8a5f8-86be-4c13-932f-9128bc7bec7a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d1f7a9-cecd-462e-81b1-df9ac6f46a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8b95ceca-5399-417f-932c-bad1721640b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc6076d-9730-4254-85db-3eeadd4c81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "576b93e2-db07-4115-8d22-2237375c50e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "066ccae8-6cd3-461a-a361-601b80943d83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d07428fd-0a5a-472c-8e71-a3c9586169ff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f697ea-7e00-48ce-b784-5843d82c13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a733136f-80e6-42b6-b34c-cdefd5bbf926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cece4a62-3d9a-4937-ae87-a3eed91cdecb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ecd0d93-e2c5-497f-a2ac-7608050312db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3357b97f-47f1-462a-91bd-8764d67a4de1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692dd383-1e3a-46fe-86a4-9845d71b2f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f43a3e3-f34f-4df5-a1f5-d36dd43e76bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834047fe-1464-4c4d-967e-aaa6451f55f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f4e26ae-7882-4e20-b14b-23ceee129f99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42e531fd-bd48-4d95-8dfe-28ca57e78ed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d863f7a-c5bf-41b9-8bea-c74161938227"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ede6dba8-b2f9-4f3c-aa41-3e9c4e211d44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98bfdc67-dc42-40f7-9d91-b8cd01632e3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c0ad5a5-820a-4eaf-baf0-f3e333ae697a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "febdf9d4-4dbc-43bc-ab23-1d2638f24b60"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0a82319-5dee-4843-9b19-960365cdcbf2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f839e33-ee79-4a70-bfe2-4bcc7447c746"
                }
              }
            ]
          },
          {
            "id": "c7d44cb5-a77e-4c02-ab27-8a895d654b4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7c807fd-b507-45bc-84d7-de417c0c2bd7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20e1e269-db58-42d7-b3d3-90a87af75ec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30877c06-6804-46ca-a83a-18f7ee1e5060"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "397906f7-90ec-447c-bb1f-7de5c2eb0223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f19d9bc-9107-4a30-b613-67bb1c8c23d2"
                    }
                  }
                ]
              },
              {
                "id": "db632cd9-8ab2-4be3-9953-fbdfa9c2887c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afc9ada5-6407-4dd9-a025-178f86ccd80e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d154a622-72d7-45e7-8e9c-adf2a91a5b0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32beedae-317c-4bb8-be1a-d4c187b5161e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15829856-2cc1-46dc-b310-79eed749536e"
                    }
                  }
                ]
              },
              {
                "id": "a41bb8f4-cfc3-4344-906f-99c2143079ab",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "793122f8-3f30-4bb3-a0dd-ffb9c8374a53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58a770c6-a9dc-461e-a7b0-09e641aa6070"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25f4df3d-dc87-4026-863b-1a4a3169c143",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d7a7ef2-1b0d-4c12-b796-5afc3dae7e85"
                    }
                  }
                ]
              },
              {
                "id": "56c65692-4a02-4243-996f-4e4549aaf3a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f669aa07-087d-4959-a443-b21c6ad2df10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0b804a2-26bc-4129-af3f-b2ef67d082a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e7d0e18-5927-43b3-a731-fa62b4acb480",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5cf079e8-22a8-4474-b1bc-94904b9dee30"
                    }
                  }
                ]
              },
              {
                "id": "9de5455a-663a-4bf9-bf9c-b7c8834cb1ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4998ddc-326a-4901-810b-68493b17a6fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a8d43f7-4ea1-4b6c-92c1-ab59a745f801"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea8e325e-72d7-46de-b190-d2f995ec036b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2057b7e8-5edb-4eff-9332-19f516e03ea2"
                    }
                  }
                ]
              },
              {
                "id": "5b396f4d-485d-4f68-b5cb-dbb26cb44114",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed20d037-76da-4612-8341-56b6d39020e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f32825fe-eca6-4a4b-95ef-93d4cae08c7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88cbdcec-d0e9-49b8-9849-89c0934fa269",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0613d2de-547d-4d42-9b80-80647f20ac2a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d399509-c143-43b1-99a8-80c32b05ae57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40e625c1-224d-47cb-b513-1531c1893164"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ec646d2-8f3c-4bce-b6bf-51b7312ca97b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89297afc-e7b1-43f1-8024-15d51a9f6014"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "376aff69-cd09-4799-86ee-56975dafb0c5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6f27015c-91ac-4cbc-b6d6-b1fb212debc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f75669c-5f99-4d3c-9cd7-9fd5c736e46c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c1c6f19-d9da-4fd5-af57-a17e85cc2a4c"
            }
          }
        ]
      },
      {
        "id": "c117c46b-9eae-4a28-a49f-d740c3a485e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9b5810d8-0ee0-4d5d-b37d-4badf95f467d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9c41f1b-d58a-4438-a31e-d64810ecdf9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47a5418a-03d5-473d-b720-f3619b25ea59",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a905c69d-47f9-4378-8f23-7ddf31f02f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f6f3bb-ec64-451b-a05c-76c095afe560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf8999-fc5c-463b-89c9-6afb10f366f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "edea1e94-5e03-478c-ae60-8d9a8a2b2bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fce19c-aa13-4b78-9cf3-d4482c7c4fc5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8330eb13-fdea-4150-b0a5-70d27d928b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d7b853-ee47-4e50-9402-ca81719c122b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bfdc85-052e-4d59-b6ec-53eadc5975f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "140296f1-4ea3-4831-8b1a-97f39b0ab09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6da37f4-a9ec-4e3e-a530-9f471b2b665a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2768ce-282a-47ad-8d04-10b33c4e8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3376b9-eb03-4825-afa5-9dda217cd24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8a5960-1eaf-4b48-9546-2d0d733431df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60580b21-99eb-411c-94bc-ac5e5ca52f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594fafbf-30b8-49fe-8836-886e2a1d4d28",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51744add-b093-47aa-b2a2-72622fab078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69afcf33-a0df-48fc-bf8b-0e1b9ff07d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a02d049-c40a-43a8-af9f-7dea2c8b71ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4651f4-e7c2-4aa1-9647-86b72904a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c908b-b0ae-4538-b145-cdefcb3893c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad7194b-4d10-48f0-aed9-b47d3c8f5ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5855850e-c8b9-4315-b925-a65d896fba18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f874a5b-2816-41ed-9aa6-4864f728997d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d15f5468-42dc-4c28-b73a-276010713e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de5148-1c3d-47fb-8d80-abee593d012f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c505f73e-e3f2-42bd-935a-14431c612825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6a9162-4166-42a2-91aa-56db2974ad16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9556d1-c08d-4c1e-8264-03a06682e355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c997f2-45f0-438e-842c-a9ce4860bd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a4dfc-ea1b-4ed2-9af6-ec7b2165cebf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fae92f8-128b-4369-85a0-fdf5a2554188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166e83a8-d8b9-4516-989d-f8a51171d1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4596c1-fca7-4c91-8206-b5b8623a471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "43278d95-8167-490a-af47-67f687062dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29afb47-62f3-422f-b757-efae0c5778b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df83a79d-61f5-4d09-be9d-0a65d2020027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f090630-828b-4fbe-9173-5a5752e90c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99747e6a-d539-49bd-b6fb-12a60e38c9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "720bf712-0a0e-478d-bab7-4703fe28d405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044878b3-5a3a-400d-9cab-ee876555d0e5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdb24dc-b682-425f-81e2-1290c3adae5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40cefb2-07e8-46d4-81c1-c7bfa292e6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c12ea-52f8-4859-8fcf-6baf5af2b0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9df26e2-18ca-4d4c-a700-e1833cb3bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759132b9-0afa-4a03-a60a-399d127f20c9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f20da02-8e8f-49b9-a9a3-746fd35f501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827d454e-644a-4024-adb5-45a59773bc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1f6926-c66d-4f16-9676-a0ffb4462aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6511a5c2-61f4-4a66-97f8-32a7019bfbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79459be4-c94e-4210-a050-0e8e299cb29f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba8e772-2d1f-406a-b50b-c5d879034904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75787b7-6dc0-498d-b661-cf0d69b25ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd51fbb-54b4-49e1-b50e-288f2b6dd3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "789c17b5-ed71-483b-8272-35db2ab23958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9205effb-98ac-4baa-b7da-74ede2d4afe2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaa27d2-77c8-463f-bff1-d07887203530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a17c5-186c-407e-b7b6-c026e855b1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d2a9d0-0821-4b6a-9555-8bf3355d5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9df909ae-91a2-467a-a332-0e1d8499544c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ead21c3-bc58-4be3-9997-a032afb5802d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5c8b19-b7d1-46d8-b86f-62aa05316f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8bd02c-3f5a-44c4-9627-89fc54a96ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25594cd7-5dd7-4a6f-a254-d37fded76d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecb64fb-7aa5-4ba3-917c-f60275e0335a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad61341-fd28-4961-8c20-c4b1cd9fc3c4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8835a3f-2134-463a-9a73-71c5ac8cbdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8065435-0da9-412f-87b2-9d5a3d74e9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57007a45-d25d-42ce-9d3a-766649c57f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb69098-1f10-4941-a888-2dfbf6869c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4b6dc-014e-4d41-9c9b-70b5292192a8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b428b05-d826-4bae-92b0-c11ace12a349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a53909-0917-431d-9ca2-df247c3882e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d05c4-e93d-4f3e-b1d0-1974bd0ed99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0cdabd-65ac-4862-90b6-28fefd0ce154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bffc0-5482-49d0-be70-cde4a70a8004",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96060b9e-a546-43a0-87d4-5d8025dda351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5126736-2151-46dc-80a1-40beac11608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f6fbbc-084e-4d25-9153-49ae95b1df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f13376-2e49-431a-95ef-1129b98bafee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc17e1-43cf-4be2-8b0a-06c805edc417",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aca30c8-181b-4f20-99dc-8cf9c09a624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bb2c0e-5cf2-4b6a-ad84-4ebdca071a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920c299b-dae5-4e7d-a9b3-d66c43452f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a869b4-f3b7-4ae4-a20e-87bc8d07cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025cbfb7-3bff-4d98-a48f-3f45b9a719a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1238fc02-f380-457c-b06f-388635fc5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00451adf-6f6a-49ed-a01b-8cb251e801ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949d3cf4-05a3-4f24-a83f-28dd8e171af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "147b036f-d280-4085-916d-a78087c238f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e88bd80-faf1-40c6-9425-84c8610e1b3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e53d3e-a08a-4ebf-af15-30014d37ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6813bf-3de0-4a18-afed-8a47ac5ebcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd12e129-92fc-456d-82fe-233151e4024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba01df-8a4e-46c2-b4ef-820b09a584e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d98ea05-4cd7-49fa-b937-2aada24504c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d0f9c0-e4be-4d10-b972-d00de6e1277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d707980a-5e09-41e5-9d2a-bde00a4124e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c5667d-f9e2-4b32-b1bb-a5266d60f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f35067d-c6d2-48bf-8a04-01528065b7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0bbe3b-37cf-4083-b72d-f3e0eb7c5c26",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331472f-d81f-43bc-8149-221505a96849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5899de5-2e3f-4de2-96f9-c2f51322764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6161daf3-5239-42f2-bbce-eb78ebc835d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64080d33-1231-47c9-9655-5559f9b3bdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4beda6f-b009-408d-8f74-1907cff6aa4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723026f9-f5b9-449e-b1b7-ec08a85776f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f8291f-3cdc-4e6d-a3a2-1346f3de4179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f4a24-3b9e-4609-ac25-1fa2eaf615a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33c9e8a-4435-45bf-b03f-4580d707b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e25e755-d2dc-4734-97b4-e9aaf548879f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a7a4c6-1ccd-44f8-93cf-75af2a8510b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d9230b-d397-470f-9db6-3d0a0e64ddae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2a63d6-b57c-4dff-9a95-f476e3b6e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46ea760-3c5d-478a-8179-d82ff468f47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e616271-60d5-4dc2-a587-bfd04e5ae7c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bce71f-f296-4890-a98c-1d90bfca0d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ec867e-5214-4960-9a46-bd1195cf9b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178d338-78b1-4156-b212-a1ed0498efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c561be5b-416f-4136-b695-8c16d39515a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6867fb8e-88d3-467b-9cb3-c6450fc0197b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5a8961-116b-4878-88c8-8c9afcd067fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5dc925-11de-486b-a9ba-73faa40dc9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db9ff1a-b81a-4bd1-84e1-6f2889abc8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42918f04-9ba7-4c44-875d-74204aa4858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be65547e-16bd-4591-9437-422d97ee5e87",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531d04a6-38a7-4c87-a483-3925d2e7b6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d4c615-0eef-4f38-81ee-de3e4acf268c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab888b3-5e6a-4512-b817-91e5a9e71bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67266bc3-205d-43dd-9b5f-9912f4a88f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a95528-b93c-49c6-a8b4-d991a3143532",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a327689c-3089-42b0-ba6d-1daf5be82f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b68a4d-118a-4f80-9f5f-fa1a0b7fc099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cb6a25-69ed-4a2f-84e2-fcb7275ba515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eeb827-ef91-43e4-a730-d25870521182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aceec3-ae27-499a-a76d-07115fb43f11",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512b0fd5-c71f-495c-9471-af807e69b48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed7d522-5527-4c75-bb19-15816cfac82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17718fa-0919-40c3-a595-7d600fcc3606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "040b86d1-a007-46a6-be67-f2994658b6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04863593-8a01-41a5-aaa5-e77253554780",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de393c23-e396-4c17-97a9-6c21f67121c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d1ca28-5b2a-4816-bc5e-869a122d127c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213370c1-4c81-42ce-99e6-9bef5702633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb745b27-844e-462f-b299-52fb60696653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac84e0a-9042-46e4-9a87-f2ebdb3ad3bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54459261-d366-4d36-ad5e-e4f5c63701de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf7f4d4-2228-4790-8b2f-09f821db8d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74361d00-b302-483e-b35c-c0b2e4688968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb3319c-dd49-4254-86f8-0080156ef38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238b9412-eff8-4d98-b2ef-137cb84347ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2025e6-c6be-45ea-a1c0-d095f3a41032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5332a7-8c4b-487c-9870-071c4cba2909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2bb40f-6084-4189-9043-bbf7885903f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d8317e-0bfd-432d-aebb-52db3d69f863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f461fe6b-191c-479a-b3c1-389bcd649a2b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f291c6-5695-4784-bec7-c8700195b47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda45046-f26f-4ebd-97ee-76f78ca0a49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf03c257-0d74-41c6-a4d5-c0e68b982953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef79aeb-e523-4671-9caa-2310bef9062c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f90ec580-9a19-480f-b92f-6437df372b56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d876c27-238d-4887-8e08-6e7488d1af9d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40893f76-b325-486b-8132-2e604a6b0903",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf4aa7b-71b9-4009-9121-cb91852941ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88560a71-58c1-4a0f-a9b8-eae6bdf0f4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c1884c9-58d4-4cb6-8728-087108f62a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7a381e-d204-44f1-8a08-23207843be9c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bbe94a-91fd-47ab-8f3f-c84fc3df69d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f48ceec3-1199-474d-8062-122c30c78ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e4a68a-13ec-45ba-a632-aeb2a498532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ad73fc9-202e-4d86-9387-7263419d117a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d698088c-93b2-474d-8300-8c8eb6a4ebc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad1bf31e-e3d7-4e55-992b-82696daf79ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "128d8add-b97e-4cd9-9b41-ee7366d14401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc15a89e-df61-4e9c-bceb-991af2539ecc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "438a31b6-1588-4d20-a942-8167ec170808",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7b81aab-afa2-4030-9334-7071081b309c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79740411-6fdc-4ede-9baa-52202cdede43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40c49f20-ef7c-4570-a4b9-f268e5317ade"
            }
          }
        ]
      },
      {
        "id": "5e3ba83d-10e8-4319-a116-0533250c0067",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd8a87d2-761d-4c16-946c-88ba108335f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a64fe3a-e8f0-4d70-9b2b-4439e58da0b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bc4da58-1e1c-4e16-a6e2-0859e6927662",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff706456-e5fa-43bf-9639-c2202de96b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22f5c69-c9d7-484d-b885-8c5c983603e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9281a3de-e274-47a6-b21b-c285bd29d81e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8a9ca2-3e64-4607-a31a-d0ec86db828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29bbb87-7119-4552-ab3f-ddc36624fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bfe00e-9ebf-4ae9-ba47-0513a10b64bc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5276af5-ed96-40e1-a280-0f31e9b9c649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee7b4a1-9e97-4961-a817-e5112e5c71ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872638c-3342-4e6a-926c-4a731320f0d2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0128f4-4753-4966-8e78-69deddb0d678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda68f4e-f72f-49d8-986d-bf85e7728c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432121fe-f381-4daa-8be1-e1540a6783d5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111ff1a6-e75c-4d5d-8f44-566fa2dc4f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c45e10-6c08-41ec-826c-3e69b78f866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a50378-7f61-41ae-a869-295d1aae8925",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896dab70-ad8b-401a-9a2a-0ecb1b674a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912dfecb-5172-4019-9a0f-1e98cd063bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cacda8-ca11-4ca1-9f31-e3016752d49a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ebf325-78fb-48be-a348-664b6dc16f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8151674e-e9b1-497f-9539-c573e475d2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b44ec-3af7-4dfd-9005-e5778a054079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3b29e2-ce5c-4906-9330-7be8002af320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84258c-eb2c-4daf-bea2-0aac5beb99a7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08542d33-c345-466e-9682-775a1e458ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8104bb-f53d-456b-9563-a103693cdd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef1d5a3-a105-4039-a013-8ea95f4a456c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd1a519-4df3-4c08-aabc-c2eeb4367127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ddf3d-9f62-4c66-ae2b-a668fbc8f115",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba31c91-4007-4a73-bbc5-a523644d9eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10334d9d-d3d8-4321-b187-0aad9d1cf23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475d81db-5d66-4810-9d6b-cd9167f2f5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67abc62-83df-4ac0-8d11-dd3fb60d27b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8adc730-bb1e-4cf3-af25-cc2afcf12a8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e68808-8226-4d0c-8180-682344258132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef919a26-f7b9-4444-81d6-c86c2a08af5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e887ec-a96c-48a2-a791-b84c59f0c692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c686e33-3956-4050-8111-f8ac3e2832e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e936970-bb26-4c31-8491-c948ba920972",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1209d7-db6f-4cc2-8c31-58fe452241dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c85eef5-807e-481d-938f-707d60637862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be356a4-cbbb-4bd5-8f74-00b71ee3d743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e1bebb-4750-4809-a778-9a427c1290b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf1bf38-02df-4a85-a2b9-065c45760985",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1783d52d-016f-49bf-85a2-178a0727e32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cb2a8a-8a33-4ace-9700-8c0e5d5d81b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51850a1c-5f46-46c0-aba8-a34f9fb41cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea2eccf-ad73-434f-959a-69956486fd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa54077-a7b2-4227-87da-61e07f795c75",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fcd815-ac09-40b3-9b80-e241a6454b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee007e95-ebd1-4897-9d42-ffa0dab669b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10c2b61-2891-42fd-ba77-1b0a1c0ec688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb6e427-6636-440d-948a-398a1ca3c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55159c17-ca87-4551-bc6a-ea7c5b6ad2f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aa4685-0bcf-4871-868c-1ba0cc3d3dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82317a39-4e04-42a9-a5dd-86542bd2701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55a344-34d6-45d4-8336-000bb07ede28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3338e3-c493-4cd4-819f-eb050c6cc1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a1c75-78e3-4ce3-bf84-9a69e9aea4c4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5580a69-ac0b-47bd-b825-f7d321f6d330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f6e0ed-0584-4d2a-b21c-c1863d25e8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f98b79-2a75-4997-9b81-f2327cf5e83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0811910-273b-4d07-a105-9ad27d31a33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7963ddb3-4f81-4c04-9434-4765947819f3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6f648f-4955-46c9-94a6-79a5e15a73e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49c44ff-4f8d-497c-ab31-20f490533b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3a8757-99db-486c-acf2-7c215937dd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0b9815-05cb-4730-9059-47ce1c31dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0206bfa6-a707-443c-861b-fdffcd1d94b5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a20cd75-dc46-452e-9398-62d37384d1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24ace48-5f1f-4e9d-b56a-2926f1264a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01bb667-fc58-4f47-8ace-afd729b6529c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e8ca91-83f0-41fa-97fd-0a7f31b98ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e67b6d-38de-402a-853b-5f9e0081c31b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112bade4-8c25-442b-8eee-9392b8301fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08e5bc6-68be-4ea3-8908-c31de8f2d834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e28aa53-00dc-406b-b240-a0e289b04bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e301e8-1bfa-4abc-949b-61df84578143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee099fe-12a4-48d2-9d8a-27ba396e868f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a7328c-bd12-416a-b31c-8edabb4bf367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbd20fe-0595-44e6-a2b8-81314edbc220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d892393-f6db-4dc2-aaac-cb5ea8c2a426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd4b04d-02ee-4d9a-b764-4f97b66f996e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca3430-a339-4245-b888-b5e30d25517a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb34c19-d272-427e-bbbc-e1ceccc59caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08589d19-f791-42fe-9d0f-50dca25f08e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9cf576-111a-4a05-9df6-73bc6a33f5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b2a2bf-433d-4746-ab2a-d5172a833c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677968bc-3166-41de-8383-8bc32a1a9503",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125f88bd-3d69-4699-a943-60c9b1a6ef22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1370ba-8911-47b4-a722-4af2076b43a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b2608-36a4-43ee-a823-baa90f29dd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b85c15-6dfe-40af-8f12-0288a7a83df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a8c80-b137-473c-88be-58bbb051d871",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50c9d8-70fb-43d0-97a8-c9ef576df4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862b6a10-e1ba-4702-80ec-2205687dcd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3a30a9-df74-48e9-b3d8-44661596d507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b7d3e6-0b1c-4992-beb5-8107479ba5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b531b69f-b7b9-48de-a750-9026d26a48f5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f029d470-afb6-4d14-9679-79b336e84486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91948d9f-7f1d-4860-88e1-a4b4494e3d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4815e2be-d069-4225-aee5-821bcbc3b9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49712226-781c-48b2-8bce-e70a7aa9cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30785549-b2bf-44f3-a933-e5cd9f8e7881",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0e0ebb-e2ec-408b-9005-918374cd8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7a76ef-995d-463a-860e-2b6291da4ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571d85ff-012c-4a80-9a77-3cf72fbe9b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c03ed18-f161-4594-a4f9-5aaa78f69ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cc5a01-4c73-4631-8255-8efb8fbdecd9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c0f6c5-d287-4dcf-a3fa-1d9562b8ef09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8178f0f8-9543-4bb9-9342-8b5070d3ef94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96568976-295a-4bbf-a6f7-0f377f33114a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc966db-07bb-43c2-8e9d-b5e22cb528f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3628ec85-06ea-4d56-977a-ca50b3ca85a0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25518504-0334-4a73-983a-26c2a15886d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2346325e-4da3-42ce-bbc8-197c0e992049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6050b6ee-4450-467b-8d83-58ec5f618f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff3decd-f18d-4083-8383-16fad4309cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b8b24a-2559-4b6c-93ce-8b5c9757d1f0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfa1629-b8d6-4fba-85c0-a927549a7515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78fbdb9-92d5-4cb9-a055-2f9b41a846a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e31826-905c-41bb-99d3-46c999259899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dcb0fc-6a6e-4202-82d2-b32839a108ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7bb38f-9637-472c-88ac-b8c72c5ffff2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0f3b23-d024-4160-8fb7-47acde648507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9764d98-bf67-438d-a227-a84f1cdaf3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeeb4ab-ab8d-4774-a2f7-e0fb5f8ed654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193dbf8f-6afc-4bde-9477-358a7c777390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c8acab-e758-43e1-843a-478f2dd31122",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4dbf7e-5c02-4495-8a89-19db4ae22298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521af3b8-55a6-4170-bf77-6202360d3810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955b543-9ad3-4ba7-ba48-4028b4f86498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978c844f-ff3a-4a78-9160-3c4c807d2d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e3299-e14d-4a93-b615-839749ed2048",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744dba39-40a4-4481-ab6e-4977c01f4b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c0bb5d-bea6-49ca-9047-0c6544ee6d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06728d22-515f-45f5-aed3-7644d2ace3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426a7db4-0a25-4eae-952c-a70c8de82c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a0e602-3ae1-4686-b0fd-e99646090eed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15577ce-dc1b-4fce-8c56-fe44db405374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c83aef-3504-4e88-9c2a-88aae4f58a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063bef56-3f53-43e5-98b7-e6dfeaf8db4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bafa83d-6298-46a9-9f48-c8361836c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebe1706-249c-4a56-94f2-5af5947439fc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373b6024-2030-47c8-b027-ab244e877145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85c959a-7ce1-419f-b288-a32d10b18ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70229667-4b21-4326-ae84-f66ad0bc7c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927f31e3-ddb7-4fb5-bb75-fd6099f13538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025ab26-64d9-4a0d-aa0c-b61a293081d1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e51d61-9c2a-4936-bc50-30672a020fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9fae59-cb01-4fd2-b017-07c7df95a9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb15869-057a-4c68-b046-836342e6b8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d4ac90-20ef-4293-ac05-22e70a71bcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a0f178-6ebc-42d3-9210-69e6575b6b8b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d38fbaa-4d04-4409-8943-526a72e5f531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918c8bd1-d508-447d-8681-d0f4d3f9ea66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7b03eb-cb26-4722-899d-a5640e99b010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60409b4-c26b-4070-a641-c45909e9500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af16dbb-f899-4efa-9292-0e0c687e9202",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226d8f99-ff87-420f-abbb-8927161d758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5a32cb-4ee2-4359-985d-0c7c4c0a6981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac0303a-90a7-4ce9-8a1d-ba391059ad28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10754e4-23bb-41aa-9217-97d6ad825427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d7dde8-17a6-4ec3-9f34-ac986acf7978",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f35644-c3ce-49eb-8347-1da837fe44c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0860bab-8b3d-4c4d-ae34-d45cab000e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3fbf6d-a734-41ca-90ea-b1d424b6becc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d968647f-4616-4ffc-8406-730d72203904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0777d0b3-e568-40cd-b4dc-998404af4b40",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8af200-d9aa-4ccb-8f8d-846bfd6602d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03e73c4-5c12-4d27-87dd-bf5dd09e9cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb98397-eeb2-4ac4-8895-d84322cc58d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fba96b-d09e-40b1-85e3-574806d9b256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328fa84-38d3-4c9c-9352-235f5579002c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933fa25c-5603-4964-8037-7b364e04743f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad5c83d-66e3-4505-bb62-369cc252d129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c0888-0a87-4cc6-8f0c-332f13f3d130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676f2106-d38b-4086-9032-e74c032c777a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65caa64e-9b88-4272-9480-a64597d9e9b3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e10a50e-b9a4-4570-9047-c920d9a49e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409f4a02-6f89-42e7-a079-ec0d3c316eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a2edc-b405-4d30-8d0a-c26764882691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a258498-9f48-425f-bac3-356c423699ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29719079-507b-4b95-a974-46dabd8fdf32",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e93f864-d30f-4c45-b9eb-ed8beb460a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f08047-f58d-408d-a3df-3f3d5be0fcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3cc048-34b9-4e8e-b8c6-e94579aff551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9274256-71c2-4c1d-865e-bc7b312209b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0599bfbb-db37-4bbb-a2f8-32ceb8c45f50",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db94e310-1a8e-4511-9b0a-47960214da85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb19042-a449-4aaf-bdf8-512cf55ed644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786002a2-2e2e-4354-8b64-4f87dd4a9cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0371a9-9d3e-4669-81bc-d9b9bad93eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe9b58e-0a93-4785-9c4a-0aad1750b673",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e2a91-f3d2-4b0d-9e6c-52db8274fe7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1f101e-8cdd-451e-a3cf-930e061baed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2701ac05-0448-4524-acb7-a7c547b0ef4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befc72ba-c9d3-43ca-8774-2610a857f60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eb4967-b795-4089-b6de-b1be613186fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074efaeb-fe79-43bf-bd29-ecfbda237725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ca7437-8a05-4f3a-8c72-653e5f85ac50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b3a496-309f-46e4-b3fd-c806ad75a0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b243fabf-9ea3-4239-8a72-fef4c8fb748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416a2013-8a43-437f-b61b-c505d2c8a7d5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853bc885-afb3-427e-bcdc-9feafe0b9961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abce8368-82f6-495e-a053-41f57eece6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4e570-37e9-4093-a6c3-e886e2ff1e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8004f46f-6a96-40b6-baaa-3545d6ad03ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885612ed-7655-47c9-9123-f9a924348cae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db971cbd-c8e6-4c5f-bdd9-41fe450ab238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715fc196-e6ac-4f4f-97aa-0b8e0d091d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc2a899-bf4f-40e0-a8ab-21e7761c418b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986cc399-4986-4148-89a5-b230b7140cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b60a4b-561c-4789-a980-81487c46d8ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197ad011-903d-4af3-984c-203bf8e416fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f68fbc-91df-4197-ba29-b705eacfd789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b20042-5c9b-4c76-b2da-d632e52fa433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815c9f80-9a10-4194-bdbc-92135d00b5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dc3d84-1eb5-4d63-b3ec-73a33fb9c0d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764b28d4-ff82-4846-83aa-5361e5d9acc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5520b7e9-ff32-4aff-9ca1-f03db852e900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dfdcd5-6a2a-4b57-83f3-644a539b277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f0db7d-120f-4449-9e76-2e9f3416892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b86db-fdcc-4182-9ceb-f6b2b2f1f80f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af761314-51ac-42b9-820b-ad39027801d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765fc544-7513-4802-9360-d1c8a53e21e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aae771e-d5ec-4bbf-9cbd-2bd5446e7642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03a72bc-17e3-471a-b081-423dc801ba91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d57cd8-1ef5-40eb-986d-10420965ed37",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511dbf80-99b0-43f0-9621-d5e3eef525e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd401d92-29a0-437b-8856-f3224dea9958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982022fb-a407-4c7f-831b-2e5808afe4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12164f5a-d21f-4049-aabf-c881c1357239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fd3851-3932-4311-9576-ebcaf3b9d661",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfcf8c0-d297-4277-b035-b36c14becf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c63df1-3eb5-405f-88b0-4a77a79924e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8507cd97-97f9-49a9-aa28-41268b0362d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756dcc51-c922-4468-90f3-c40c442c74f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a291efb-5088-428d-803d-18054d1091b8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7508e0-b2e4-4c02-8bc1-77c0ffb6edbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092b8a41-276c-467b-b8d4-be2cad6610b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ec5769-f818-41d8-ac3e-5af3b8829c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af759a9-c283-42f0-8d69-d4f9e85603b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbfee87-ce92-45ef-8232-3a35865aafad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025e0803-aed6-4829-ad00-d676d55c8c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89787e4b-bb6a-47e5-b60d-891ce4a81443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b65ec-f836-48f5-9b08-4256d40cb444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1872cd83-94d9-4fc4-9d76-5d5e6aaf282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c7b25-7e50-4f43-9c11-e566f0377e39",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0027108-82a5-4b0e-b59a-9d497353994e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9945a1b1-5636-4ed6-bc00-b2e201e105e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c76b90-10c1-43d2-98d9-f56cc43ff1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38392ce-ae68-4ddb-9045-786ac7c3548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ae15cb-8dc4-48f1-afa6-a1f7ae3c9c02",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e667b0c-f17e-4212-8643-29e9d2089755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48b4fdd-89f4-4814-a565-ff3cea7661c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd797747-dc90-4805-b5ea-9b5d308527e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d0f578-d145-4dbe-a2ed-f0a62dbeb525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7863e3a4-e7eb-427b-bfed-a947614f248f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d743a5e8-e399-43fb-855d-3f64027c25a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27e5c66-3c85-4584-83be-8fa2d0995290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77543c50-bc8f-4fc4-84e9-4bacf5d88aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf948ac1-93e6-4405-90aa-8ccaa1b280a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe1b77-ca12-4dbd-8a7c-1b90eaf6edab",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31db7aa-194e-440f-bbe0-261d7cb98e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9530674b-4f06-4e68-bac0-48088605049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d269569-1c81-4af3-830b-466777de23af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693ef650-e440-41dd-9bea-32cb99a80920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ff7902-6a61-47e7-80f6-cdd538277bbc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ade096-16d5-4317-88d0-6e2981d848a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4154b584-bd0c-4e29-9c1d-8797e124114a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67368d40-5090-4298-a050-b62c09553796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ed6e79-433e-4031-9aeb-39bc48bac85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fd8245-6311-440b-b42d-e99e8f17f8f3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fcb96d-f07c-4849-a273-561ff7071058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af75f276-1b8e-48fe-9c2c-ac00417e9e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ef3ea-d04b-4874-af5b-b18fd6ad5ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23584bf2-bcdc-4525-be0c-319587b7745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e5d51c-2ad8-4929-849b-838c415841df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f52bd6-a053-4a7b-bc2d-6d0803b4743c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2544997a-ea28-41b3-acc2-4505e3a7d72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139ccc6c-2796-464c-b5de-11cc33e8a3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dec68f3-8a03-42f9-9d9a-c2b41e5812d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c3be0-2e52-44fd-b717-5e45a4e21580",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b34857-e3b9-46e7-8d86-f4d58e420cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50987337-f5f0-42ea-a55f-2777e3af314d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbbbc04-3c3a-44e8-a4b9-5e9917ef54eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cb22af-1f15-4e8f-b7bf-3af7e8380222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3605af56-bc1e-4a70-b407-f3b4ad7a99a2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e1a85-6136-425a-acb8-8dc14f9ccd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a131b9ec-a8c5-4caa-9225-327876408be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0292f41-3966-4a06-9f05-97665a8bfa6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a3a535-e475-43c1-a42d-68b3bb039c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db04cb2f-6aa1-43d6-9ae5-3c3bc0b99310",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abddc6b1-56a3-4ed8-8730-bb522430439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb7e2e1-1989-45ca-8a98-9ba3d3bcf4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256b6e54-a675-43a1-9bf5-43b902bd34fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900198e2-5f0b-4506-9c6b-ce10f0a2d663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42a1e2a-f049-415b-b238-aca75cfe02c1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b351ce-b0f2-47f7-af76-463e779c6cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82262545-71a2-4589-b1b4-faf5dbe4caa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f1816b-a9f8-4472-8a0b-30e177231c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ac419-8a04-43ca-85fe-2b0f7f97586b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1740ae-d218-44e1-8045-0eecdad1d335",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34ee942-e4e6-4a36-8e0d-4b246bdfaba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0c427f-f61c-4c3c-9ca2-09b9b45f274f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6b232c-ec0d-461e-ae1a-44bffd033c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c895ec9d-b107-49bc-8198-14c296722de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06887e-28dd-44cc-93e1-a3872b882afb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db1d8fb-3896-4af2-8322-e19ee0113369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cb29a8-6952-449c-86bb-cd1558f4f85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93991151-bcde-4a87-b395-3a2cb3ab08f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc71274f-b07d-4db2-963e-6ecb0c670a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1712472-cb24-472b-850d-54c1533c7e91",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851ba9ea-11b2-40b0-93c8-b5d928cfd042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11ff84f-e581-4e46-87ab-e07efbc7e441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c950e230-043d-43ba-a510-e4170ee3389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1baa019-3a0a-4753-abf4-50326168d1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59575e6b-78ae-40dd-bb08-c9e9d8d6bd64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad742557-d5a8-46c1-a25f-c765c8da6bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3b9ef5-7dfb-40ff-89b5-2e7114f8c0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8bf24d-02e2-43ed-a5a5-bb496360f561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9dbb1b-5f76-4960-a9be-b3e63bbbb93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ca7e0d-c63a-4674-be3f-f75eaa809374",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0d9cd7-2161-4eb2-acbb-856093a49e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d4351e-2580-45e3-97e7-805d3afe495f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bc08df-9ecc-4bb4-bd7b-47699a8a9875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654baac1-433b-41d1-a462-b2c0d6794fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca43bf7-a5a9-45b4-ae72-ac6a1a02ee1c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10da9218-90ee-4e2c-bc1c-6bd97de5bb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd6c17b-2832-4641-bfa5-af5989d95a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53aabc-e12d-483b-948b-79c0e7b3699f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53358700-8db3-4eb3-bca7-7060f41fe191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf6e08-9c66-47e4-b21c-1dda6e1c8acc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe5ec77-b521-457a-90c9-28b533e846d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99a26f4-b5b5-43ff-b5a0-8b0b4f33e4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28f1196-49ab-4230-8bc2-c97a121ceae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f44bde8-ade9-441b-ad78-5f9a86d0d680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a3b8cb-fa5d-41e8-acb9-8640097632e5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026a75da-0b0a-4745-b768-6fddc7e301ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012d4267-11a6-4292-8d92-b0059550fcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5e1620-cad8-431c-8258-b7e784e96db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7263ad-de97-4c4f-8656-cabbe58b154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ab4312-e7f3-46b7-86cc-ae092ccb2674",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3489b85b-dcca-4d03-b143-6bf0f3888cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694d96ba-5bf8-488e-b6df-734ae3d668fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f47a0-35e3-411e-833b-5b945e7fc2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2f36a9-96e6-44f0-ad4e-c466d784861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c58773-2eb5-461b-a13e-ebb017e633a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70810bfa-08c7-46b0-a4c6-522e8ca2423e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1be1950-eb65-4730-b705-bede6d0b3c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1076844f-2850-436c-b0d2-45649bed4875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92fe3dc-9ca2-4969-8a42-11edda3f136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ae4a5c-620a-49cc-8c47-397c8ca38630",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701fb3b0-c93a-4b19-9d5d-825cf8b01bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf06c7c-9e13-4440-ba4e-ee49433bce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e13cc7e-97fb-44aa-a198-9417ae130388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff47d889-9ef3-4b17-9642-35e374e19755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e8a121-53fe-48cb-b119-9646a5154850",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c791ee0f-c6d3-4e85-852e-74486e8f90a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfc945a-3a99-4a2e-9b6b-a186ee7a09c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25e2e84-af36-46f7-b8df-055d7c0714b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65f5c95-e9d5-44ea-86cf-456092ab47ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca1a51-cfc0-443c-80a4-63eeabdc4a26",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ea6e48-ced2-450b-9cca-1f463cc216d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1057b9c1-2f6d-4b31-9fd9-b5e95e12bd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba70e2-f793-4c28-b63e-5e456e4aa295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6d8673-eb63-439e-b7d9-4b196d6133ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcfbebe-3533-4a6f-9bd6-3b829d5abd14",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667c325b-62bb-4f33-a7d8-4799071b1411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2159b6c-11bb-4eac-baca-0037dd3c3b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55173def-b600-4179-bc34-b554e2aba935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9dc1f5-21a6-4c99-afaa-cc8480e2f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633f8036-58cc-4174-b535-c487285568e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d15433-401d-449e-812a-ecff3d0f79ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993a06ba-e02b-4375-9e74-c68572cf350b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af0eecd-58ce-44d6-ae00-1d27ae4fd94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9374c0-21b7-482f-bd46-bd9758ef07f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487d362-5d5b-423d-8de7-0c480901bd58",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dc427d-4423-4497-b280-f19dd7604aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0e042e-4031-4c63-9822-55a0b15846b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6df31ce-0725-4fb6-a732-01330939a339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bac2d5-547c-4309-96b3-370eaf5ebad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c83b3-7106-4562-8dfe-b3b7377c2743",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73dc5cb-babc-4409-bb13-1e6aa200bc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349c6a51-177b-47ec-a8fd-1730bcdd2f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba0357-cc27-4b65-a3fe-cb4ff7534c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b654a64a-d4e8-418c-b680-622d445e1bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecc5228-8bab-42a2-a291-bc81ed5234fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b758f16-e59d-4168-8821-d0e05d2862bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572fc661-9529-4aba-9398-155ed1d416a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c6da9-f179-4545-8fc2-028b5a1e1a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b83ed6-5c41-4a5d-b5d0-f1a71aa38543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af146d2d-765b-4568-b4b8-285356b27404",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d547012-5053-4c31-98b6-680a098c9871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a48de25-b40d-4b7b-86ba-610b4d17a884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b7dd42-f007-41a4-af78-1d0ad98d2bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380778a9-5400-4fb1-8e7c-ebe279429aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e279ea4-7b52-4ad6-a992-7f8d3e5a29a1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b07333-0588-403c-bbf5-57be66d7325e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2509e29-64b1-4145-8cfb-ad893e376109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b97b95-61e8-4bd1-be85-45872b961083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c3f533-fef3-4ff2-a5a4-a7c841cc8938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa207b7-d3b7-477e-a4a2-ce78eea085ef",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7375dcd1-02cd-4784-b3e0-e3aaa41d09a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee8a4d3-58a2-4c0f-9583-63bcfc3ab9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561c781f-6122-45fc-a91e-5ae1bd6bf833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bf3cc5-f4e5-4aae-8cfe-82fedaaaaa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1144b3-e435-4baf-b088-d3211b9a786c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fd5e4b-d748-4107-8079-fb701c1c2928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d7eb6a-de24-479a-8477-294d6fd8de3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb2493b-2c11-4c14-bd8b-0285cd56dc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4ec1df-7771-4874-8f93-717c68b63da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46423ff8-a089-4d26-9100-837da363d360",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c960df17-d2bb-410b-bec6-397ab5e4dba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9bc13a-7675-4fa6-a6fc-fa306200c70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599f7b33-b118-49b2-83fe-9be9edf95f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3760c8-60ae-48f4-9b7e-dfe065c75043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b80510a-aa25-402e-bbf7-c7d3a512cdc0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60752dcc-c539-4c2d-8abf-1296e130a915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21c877e-40ea-4407-ae1b-ed62ceade851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5502e8e5-662b-4f55-9cc7-7347976eade0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4058b7dd-96e4-4f0d-9319-9c08c0a60c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8db3f6b-d2e5-4611-a4b5-8183ef40717b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0843e6-5c5a-4a84-871c-b2920d2bdd31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa8cefa-5901-489d-8eb3-b9ff3da40098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a21948-4820-4362-8107-7c1ffb4374a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d1b725-445b-4a36-8e78-c7a40da5747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c00ca38-fec3-4b8f-a27f-758a406a1eea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfb6ca-d9eb-4ad9-a23b-80ea6fa7ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fb360d-4457-4fdd-8a33-e71c3c41491a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81e44d-537e-45dd-9586-f07552e9ba1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7915dda0-776b-4bee-9a52-33c6ccf7901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832a1066-6024-4552-ba0c-199e599e87ef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d137c60-50b9-4cfd-838f-05caa6be1621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e22f7b-20c9-4f60-a57c-f0bdc33782ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49807e0d-8eb9-4917-91bc-919fb9e7bbe2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3727c196-f008-4b61-ad9d-0ef794e13b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093fddf7-08be-4f85-850e-6a1f9551d509",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c89c8a-2080-454e-bdeb-8c0762c623df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0973fc-3fe4-4eaa-a471-8e8dd83a2d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae20b946-7d16-4bec-b9f1-d1634371ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43adadc-26e7-4f56-a01f-9927a58d9112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a437faed-1873-4d21-b6a0-8f889a58709f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70faae32-4621-4f03-a0dd-84930bd448f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0332ba5b-9546-451d-92be-a6992e1b33e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e4f3f3-d881-40e2-8335-484bf4c2c766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779b62fb-0b3f-4711-b07a-330676b297d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7d2030-a30a-441a-87e0-a8053b4c7613",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d133d3-e884-4f85-b174-e7e6c2d9fab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74c7c1c-4326-4e66-9362-aed630ad4a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b16feb-483b-4e5d-b864-627f15285fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaf2d34-b043-4e50-bba8-87a223ec69bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d50e20-aa50-42fd-8c99-fa46dfd7b37a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45e1ea7-3c41-40db-ae1a-616c574f0858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7123c246-2594-4fc9-9921-849ddeb20d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d1a172-7e63-4229-a95a-adb457fe3af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f7e54a-440d-40de-8ae7-d914e3e310fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ee9a2f-99df-4060-8cf8-541ba288f0c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2276833f-8416-42c2-9740-f6c9d9b2e788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "006439f8-0faf-453e-b3a7-5d4bbd17738b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a921a042-9dae-4125-a06b-71f82ad4bada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cab0e7-941b-4fa9-bb2c-d38e842751ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a76e09-1d08-4815-8656-c96ecd91b677",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d5762b-cca8-41a6-9420-caa4d0b60681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d66ea1-5760-4dc2-a575-8f5310d5eebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c888ce3-9814-445a-981e-d2b28f7ddba5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e307f9-d914-4f2f-b0c6-810c731fa0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c22ed0-b945-485d-941a-be3b7d3a9b42",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30edc2-36d5-440e-aedb-75fb5b324cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9105e9ee-d112-472a-9c55-024eee995338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df145c14-73b7-4d4a-91cf-ef735a77f1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3781f0ae-3108-4540-8a06-544b05e88fdb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3558eb6d-3acb-47a5-a352-223ba30b4607",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "373bbefb-4f5a-4bd0-9490-5ffb8df16545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15c0cf2d-5b8e-4da5-8007-c4d6f3811474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88b8bc07-3ea3-403d-a4bd-16db7faa5edb"
                    }
                  }
                ]
              },
              {
                "id": "b47f1b80-8772-4b2e-85e5-daeee52d93eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb7a52d-e4af-4105-804b-490eb7875403",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ee2f64-904d-47e7-bfa9-2405331740b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "978d44d7-d73f-4a15-a65e-610dabcb93f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0146610-b21e-4add-852a-94bc42c8a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c5c736a-dc53-4ae9-8e74-23c71a4b6ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3b30a-77d7-4d1f-a744-7a59448afd56",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b1eeb1-959c-46fa-99a5-26b3190de6af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "20005125-410b-4b3e-8bdf-3e4407eb405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09bfecb-3af8-4eb0-8e15-9414305d3b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2711bd30-f67c-47c3-9562-990cee3bef3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e8ffe8b-0bfa-4726-93f1-70fbc8eeed34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0c20b4c-f099-45b0-85a5-3e181ec4108e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f86bedfa-1e80-4999-b61c-fb832e11f345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "997e02e5-2588-4aa2-b35f-3d35130e9e0c"
                    }
                  }
                ]
              },
              {
                "id": "728739df-927a-485a-97ef-fa10b2af3cd5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a0eb8d7d-138d-4005-ad27-91ca8d509731",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6d5112-b0ab-4847-8b87-b4d9a9f5aa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4eda2f8f-4e1d-49ef-924f-312a337d8322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48bd168-0101-414d-ba35-1f77121947ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07bbcf9-a624-461a-aa3a-eb7777db1e6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4badfcd-d5a1-42a5-aee4-6eddc45aea8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87cbd10e-57fc-45bd-9d48-d2569e2aa2bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a935c01-cdf4-42ea-b21f-64946441369e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00201a28-de26-407d-a816-965d1d00722a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "714adb77-e8af-4be7-97df-6747483b44e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af63580c-1767-4c94-8eec-299527434317"
                    }
                  }
                ]
              },
              {
                "id": "24328fc2-4c3b-4c60-b474-99b11cfd31f4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93e042f-5a34-483b-bdae-8519d73fcfca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c1ea2fd-d6df-4cf6-8c9a-dcd866057721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a122998-d994-4d1d-9c9e-1455dd4d2bcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d5e2f00-640d-4a4c-85eb-4a5de4143cb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "784d2d87-4775-4b9a-a4e2-2376df022c5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9520c20a-0501-489c-8cbf-f0171560f3f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8bf4e72-2e1e-4fcf-9d42-b46d1894fb82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b4f875e-840b-4897-bb13-ba7784a79fec"
            }
          }
        ]
      },
      {
        "id": "33d95bed-84a7-4131-9834-355c98be73b8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6981ac82-38dc-41ee-8f9c-8afd62325287",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d8c5d4e-fdb3-4dcd-bec1-c3107127708f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218e0666-8486-4a27-a95a-d2df77b33d99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2617fa1c-1b4d-477c-98cd-30baf332e5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95949730-2ba3-43dd-b3c4-f2d4c9220b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "938d9a11-ece5-43d8-8393-92845f058510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9faaff-903f-41a1-b32b-ad4352ffeecd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390becbb-2882-4c8d-9ca6-9eb9ac435a94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9583c567-379a-4edd-a51a-674afdba7482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be58c9af-09b3-41ab-9812-a1e491219780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0982d90-62be-4095-8094-a1e56968a788"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d72c34f0-3f6b-40e7-b84a-e960d9454c45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5e51b37-3097-4e7e-bd52-19cc629ab78a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28bfe172-de19-468d-a4d6-f4ed3b4d24a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae2630cd-892e-4c9c-b774-bed703bef46f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22463138-cbcf-4238-b25c-ca6e9c7cfa7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "259edde0-5d5d-42d0-b437-f09521aee221"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81b8406a-6c78-4947-9dc9-a72501bf6330",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4431a19b-d31e-4ef7-b46d-1a8478ec5140"
            }
          }
        ]
      },
      {
        "id": "ba06a917-adf7-4714-bbb5-d3e4ca053fac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c536043-09c1-4c84-b554-78bea6de4da2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9441e531-a306-45f6-a0d2-414b273a9057",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82d9de9b-7f24-42de-bcf9-31187d181813",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e102df14-4230-4732-8e9d-ec15e17a554b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dffcd5bf-eb41-486f-8cd6-87776bec10ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f365c764-5151-4770-bdd0-c3957452b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4affc8cd-9005-4617-a6de-40367709fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb6660a-8bc1-4519-992f-fa5b1957149b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59de4969-864e-45c9-aeb6-669e273ff38e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfcf0e9-b664-4c41-b8ae-2b0d66bb5028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbfc6c0-4475-44e0-913f-0139f9ce51df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc4199f7-8f1c-42c0-807d-235d43982452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a8c500c-4de9-447d-82fa-a12992b95c72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b227acab-b736-4cd9-9890-492e1f02f943"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc42746-9fbc-4afc-b2b7-415e0644b03c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b40bdbf0-bf1a-44f2-8048-306a263af031"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a36cf883-be6e-4da4-ac01-95e6c75f0f26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "005e68f5-cb17-4f01-b278-fa97426aa5a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79bd31b5-ff02-4db0-9b61-11e7c9595a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "836e6330-5a31-481f-ab4c-7549e2750406"
            }
          }
        ]
      },
      {
        "id": "ddff6b43-5c47-42b9-a625-ed356ea9c238",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "319b0fda-1f82-440f-87fd-96566a3f27c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efe6e7dc-b059-49e9-b004-a67db6f7d5be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b509860-cc61-4215-ba21-6c1ce8cec61f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6732c7-598a-4c86-928a-cfe270b4d41f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7bf4aa3-ae62-4a68-887a-27fe3fd569ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edf43f6-b330-42ee-933c-b92631f5c197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b8f3b70-16a5-41a2-8ad0-0e4d40716908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13f04e-ed53-42f3-8a26-c020a68d9266",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255f35a3-ed50-4718-8264-c77950217736",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f68e57e6-3031-400d-916e-b7c48a3f9851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1150c998-dee5-4590-85f2-eed93b8ea88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a448f6f-5206-4c4d-99e1-86be876b7e13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "251c578e-26e3-4ec2-9c00-d48830a4f4c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80badeb4-349e-4e74-b25f-238ff3da9e7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "492b80f2-18c8-4ad5-a8ff-e6dcf754ffb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2f77957-28f1-46b9-ba7f-c11d8f4a913c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed983a68-7bc8-4a1b-9195-d5e6a0e411b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "798f5f1d-2bd9-49ae-a3c2-8f9e3640f3e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf3dd45-f0bb-4ec7-a308-ca0bbf9f5a1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69cef6cf-08f2-4fcb-aa1a-05d16f97aa89"
            }
          }
        ]
      },
      {
        "id": "c51d6eb1-2ce7-4203-9eaf-7115319c9c00",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff79448b-3b9b-4e72-9d79-d0ba39a7c23d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8af853a0-d08d-4fe9-bb6e-ca7dd4594c70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c6c4b54-69d1-4de9-9585-2ff6e40c5d1d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ca7e528-e56c-41d4-a4b4-75ba9466f0bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ede821f-2e33-4dd7-ada2-7e84c1c5a66c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 876.2384615384615,
      "responseMin": 20,
      "responseMax": 9317,
      "responseSd": 1016.8094277527456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684629635166,
      "completed": 1684629878815
    },
    "executions": [
      {
        "id": "b833ccee-dcb5-4b6c-9a74-fe3dc952f899",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "398a43bb-2b4b-4317-9946-e737be9e47ed",
          "httpRequestId": "497815a7-b6a1-401f-b387-d53b1c72ae23"
        },
        "item": {
          "id": "b833ccee-dcb5-4b6c-9a74-fe3dc952f899",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f04e2a49-1aec-495a-b6d3-9bbc9bf3310a",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "e85a6200-f108-479f-9b09-e8e90d62f488",
        "cursor": {
          "ref": "e3f4d12d-b982-4f01-ac65-32e389c02e2e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f2208708-0dda-432c-881a-e6a05fe81220"
        },
        "item": {
          "id": "e85a6200-f108-479f-9b09-e8e90d62f488",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1c336519-5ffe-4418-88f0-cf80b95ae7b3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "87f27c36-02d4-472e-bdec-ba1c30e73666",
        "cursor": {
          "ref": "bf0dbfae-ea0c-4927-b1d0-7365323d93a2",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf29a135-75b0-4efe-91c7-4f2733ce1dfb"
        },
        "item": {
          "id": "87f27c36-02d4-472e-bdec-ba1c30e73666",
          "name": "did_json"
        },
        "response": {
          "id": "6bbfdaea-5a02-41a6-b8b3-560d2ef3270d",
          "status": "OK",
          "code": 200,
          "responseTime": 1269,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80381b-f738-4da2-8a4a-3989e9dc4eb0",
        "cursor": {
          "ref": "4fb51ce7-9829-42d7-a723-1bdf792a46be",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e88334af-6608-493c-919a-5f6c58da8790"
        },
        "item": {
          "id": "6f80381b-f738-4da2-8a4a-3989e9dc4eb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "01c9d93d-9919-4ec5-85bc-71382c693a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80381b-f738-4da2-8a4a-3989e9dc4eb0",
        "cursor": {
          "ref": "4fb51ce7-9829-42d7-a723-1bdf792a46be",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e88334af-6608-493c-919a-5f6c58da8790"
        },
        "item": {
          "id": "6f80381b-f738-4da2-8a4a-3989e9dc4eb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "01c9d93d-9919-4ec5-85bc-71382c693a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81d5a65-638c-4609-aa8d-8c1b7cb0a66d",
        "cursor": {
          "ref": "511e2a07-5412-49f2-beeb-e392b60c5da3",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f94d220c-986a-429d-9ddd-4db158332100"
        },
        "item": {
          "id": "d81d5a65-638c-4609-aa8d-8c1b7cb0a66d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "720e62ea-6d09-404b-9880-df1603a35425",
          "status": "Not Found",
          "code": 404,
          "responseTime": 977,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deab25b-bb0b-4acb-888e-70c2c46b3409",
        "cursor": {
          "ref": "de7a0f97-472c-4fb6-bf24-1d3206010b8d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "433263be-2b92-4a67-9919-92a8850d8173"
        },
        "item": {
          "id": "2deab25b-bb0b-4acb-888e-70c2c46b3409",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "19136f26-4805-4c44-8b1b-5c76a8f68904",
          "status": "Not Found",
          "code": 404,
          "responseTime": 831,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18be2050-477b-4972-a5ab-daedb6e12984",
        "cursor": {
          "ref": "2e948df5-d3c7-4e0a-a97d-3632a6c1dd22",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7bbc3759-a314-4b2a-a656-82d98e32bcd6"
        },
        "item": {
          "id": "18be2050-477b-4972-a5ab-daedb6e12984",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "32ce71dc-3970-4521-a4f9-aff1662a14ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b1ef08-cc19-4c61-bbeb-63d297418b32",
        "cursor": {
          "ref": "abd8b83f-84e0-48aa-a13f-2618cba1156e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3406f745-5081-4a1f-8b4f-756c55098a47"
        },
        "item": {
          "id": "37b1ef08-cc19-4c61-bbeb-63d297418b32",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a666cfb1-ca52-4878-8e34-1ede226ee555",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 952,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b1ef08-cc19-4c61-bbeb-63d297418b32",
        "cursor": {
          "ref": "abd8b83f-84e0-48aa-a13f-2618cba1156e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3406f745-5081-4a1f-8b4f-756c55098a47"
        },
        "item": {
          "id": "37b1ef08-cc19-4c61-bbeb-63d297418b32",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a666cfb1-ca52-4878-8e34-1ede226ee555",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 952,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233018b-ff56-4b63-997d-dac3d3ed2a64",
        "cursor": {
          "ref": "97ccf630-41cc-4e89-940f-46749a739d29",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7350df05-1be7-4c42-ae1d-e90e4841079b"
        },
        "item": {
          "id": "4233018b-ff56-4b63-997d-dac3d3ed2a64",
          "name": "identifiers"
        },
        "response": {
          "id": "822b8220-68d9-48e3-b70e-a4f73b57e32b",
          "status": "OK",
          "code": 200,
          "responseTime": 1262,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57ebf8a-acda-4d0a-a40a-20d5dab2a63c",
        "cursor": {
          "ref": "710d42dd-096e-4720-914d-e91b48304e8b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "201db8f8-9e14-4d23-a82c-df8ddfe59dd2"
        },
        "item": {
          "id": "d57ebf8a-acda-4d0a-a40a-20d5dab2a63c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8deeca28-7322-4e19-8808-366da4b19db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57ebf8a-acda-4d0a-a40a-20d5dab2a63c",
        "cursor": {
          "ref": "710d42dd-096e-4720-914d-e91b48304e8b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "201db8f8-9e14-4d23-a82c-df8ddfe59dd2"
        },
        "item": {
          "id": "d57ebf8a-acda-4d0a-a40a-20d5dab2a63c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8deeca28-7322-4e19-8808-366da4b19db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec7ad89-dace-4c23-863c-fbcaade68c3a",
        "cursor": {
          "ref": "13532b89-c64b-467d-9f2c-cd73f2a4f0af",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8f960a7d-bc77-448d-87b0-225f6c5887f5"
        },
        "item": {
          "id": "6ec7ad89-dace-4c23-863c-fbcaade68c3a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d04fa94e-5085-426f-8239-8d7c546a360a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343a2be7-67b2-419d-887b-1c733462ad3c",
        "cursor": {
          "ref": "014a3d12-9dc7-4f6d-85fb-ec6aa0366105",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c2f2dc20-58f1-4621-9769-f611886485f8"
        },
        "item": {
          "id": "343a2be7-67b2-419d-887b-1c733462ad3c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "66bbb038-df60-4580-9ff3-9405b915b31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5b1aef-021b-4f8b-9367-643ce345399b",
        "cursor": {
          "ref": "130c931d-841b-41f0-84a6-6b6d2e208078",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9f8bc165-6320-4c04-b810-3585fa2f6c1d"
        },
        "item": {
          "id": "be5b1aef-021b-4f8b-9367-643ce345399b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6f97b835-edad-4c18-a30a-56d86fd8d79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60af3bf-671f-482b-b400-6895aab23baa",
        "cursor": {
          "ref": "bbe66000-7289-4a3c-a739-b87f7b0fe815",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c08a2fbc-7657-4b39-9136-19fca4e7eb78"
        },
        "item": {
          "id": "a60af3bf-671f-482b-b400-6895aab23baa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d42199bc-2634-4b9b-b421-2b7ec561acd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff9c473-ca0c-438e-9b06-4f8a87898430",
        "cursor": {
          "ref": "294d4048-0145-4ec2-ad5a-2368442d92f3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6101de10-260d-4418-9c89-498f09f7a351"
        },
        "item": {
          "id": "6ff9c473-ca0c-438e-9b06-4f8a87898430",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b0dae915-6255-4570-a799-4d3e0b155ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891e00c-e97c-4c32-a58c-cc811c3d66c7",
        "cursor": {
          "ref": "a52371b3-b544-421e-8eb0-8ee4aa141a80",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4a0bcd6b-97e0-45eb-9f9c-c490c0795904"
        },
        "item": {
          "id": "3891e00c-e97c-4c32-a58c-cc811c3d66c7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cec6be98-d177-46ba-9038-402326113893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3613fea1-7b28-4c8b-bdc7-5c2a8429087c",
        "cursor": {
          "ref": "cf546a3d-42f8-4330-8ae8-0568ad1b4c9e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "97e1c8c6-a21d-4de6-a503-07785337e3f6"
        },
        "item": {
          "id": "3613fea1-7b28-4c8b-bdc7-5c2a8429087c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0bac7b84-0036-448a-aebc-11c30845b08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea340c9-3cbb-4e67-a414-45bd1cefe3f8",
        "cursor": {
          "ref": "eec2c7c4-c63e-4542-8672-6b46a3d6f0b8",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1077f486-8273-4395-b708-a175b9f45701"
        },
        "item": {
          "id": "5ea340c9-3cbb-4e67-a414-45bd1cefe3f8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1df0e5f6-cb6b-48e0-b872-165f0948baac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a745518-0840-47f3-94af-1a5d006f81a3",
        "cursor": {
          "ref": "d07aff6d-7604-4317-be4d-f0b02b2d461e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "727e09cc-375c-4845-b1dc-7b2a0926956f"
        },
        "item": {
          "id": "0a745518-0840-47f3-94af-1a5d006f81a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "91dabc01-c6cb-498e-af00-8ec81fee02a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd247315-8f85-4a48-b2c2-f7e4bd36cbfb",
        "cursor": {
          "ref": "e13d9f04-d78d-4719-987b-90a991f5106f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae4c98ad-a5e5-4c7f-bab6-aa8480e6950a"
        },
        "item": {
          "id": "fd247315-8f85-4a48-b2c2-f7e4bd36cbfb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7bd4fe68-6618-40db-a0b1-e3d049a7cebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f35bb-154c-4767-bcf5-21706bd69467",
        "cursor": {
          "ref": "779e25bd-6705-4b2a-96fd-ff98d6aec899",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4fc33389-379f-4f4b-8ef7-bc1bc4195763"
        },
        "item": {
          "id": "cb8f35bb-154c-4767-bcf5-21706bd69467",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "25fbe036-59aa-4fc6-b6f2-3132b9b1a7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc61353-6f24-45c8-ab2c-b90aadb00d96",
        "cursor": {
          "ref": "95409dea-e5f9-4fde-afdd-8638faf4d782",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7486155e-e7b7-43a8-9ff3-a01c4457a050"
        },
        "item": {
          "id": "8fc61353-6f24-45c8-ab2c-b90aadb00d96",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0875a54c-325f-483f-b6d7-d7e26304a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea12dfd-31af-4c66-9e5c-4fab4992ad53",
        "cursor": {
          "ref": "35f75bb2-acd0-4473-9734-4ca2b9eb6b92",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "737e020e-8a87-47de-90ee-c03c700573d3"
        },
        "item": {
          "id": "8ea12dfd-31af-4c66-9e5c-4fab4992ad53",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "52f69f2a-0e10-4637-a53c-b9f613d89b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4c0f0f-f620-4ee1-b722-75135ebcb872",
        "cursor": {
          "ref": "5489f940-1067-468c-baf0-9fd20f91f784",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4931e443-2e40-4ce5-bb07-dc477b06df01"
        },
        "item": {
          "id": "6b4c0f0f-f620-4ee1-b722-75135ebcb872",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "893dd0f4-b11a-4aed-9302-ea2218a9ea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b59489-4be4-4b20-aee3-2a96d6215c46",
        "cursor": {
          "ref": "2cd0ee71-995d-4326-85f3-0b7845d47367",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "43684985-89ec-40e9-90b4-fef482bdefeb"
        },
        "item": {
          "id": "b6b59489-4be4-4b20-aee3-2a96d6215c46",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97cd559e-fa2d-4f80-9785-5639fa8d8dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d3b01f-d5e8-455e-a473-0c85d9858d6a",
        "cursor": {
          "ref": "45e25db9-b916-4189-af71-3742b62f4d80",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "508fafc7-20fa-4acf-b45a-a7523c6147c9"
        },
        "item": {
          "id": "69d3b01f-d5e8-455e-a473-0c85d9858d6a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c2b7f7f-c96a-4813-bfc3-2c254a501efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a545a4-c9ff-493a-ae41-6fabd3a7066c",
        "cursor": {
          "ref": "f019a9cf-7fe4-4278-b502-ae2390e3e203",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "acb9cbac-ae58-4cb8-a73d-a3bdb39c2e3d"
        },
        "item": {
          "id": "d3a545a4-c9ff-493a-ae41-6fabd3a7066c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f9d119d6-dd74-4a7a-bfaa-dd6ed7e744e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb24b7a-e948-4241-93da-544370a8f885",
        "cursor": {
          "ref": "09f67136-89cb-4be8-a40c-f67efc8cfd74",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb7d6804-483b-468e-afba-256f57b279e0"
        },
        "item": {
          "id": "abb24b7a-e948-4241-93da-544370a8f885",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3d810e4d-d3a1-4c3b-b644-84629a1e5397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0237ddb6-6d5d-437d-94de-6c490caad01e",
        "cursor": {
          "ref": "b4fae301-e8cb-47f7-ba2c-969686a300f1",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f98bdc84-e3b5-42a2-9c25-a903b8f453be"
        },
        "item": {
          "id": "0237ddb6-6d5d-437d-94de-6c490caad01e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd33b736-2a5e-4d79-b949-d580384c9984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef123b59-dbf9-4bc4-9c95-093dcc7584d2",
        "cursor": {
          "ref": "4969f300-0b14-4b19-9c5d-ad29cbe60a0e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "73e29f6d-88d6-41dd-bb31-6eeb40ae091e"
        },
        "item": {
          "id": "ef123b59-dbf9-4bc4-9c95-093dcc7584d2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d40dbda-3a61-4508-bddc-6ae3d225a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ba7e3-d854-4718-adbc-ceb1aa443aaa",
        "cursor": {
          "ref": "6068951b-4644-4a79-9868-1042e22a3172",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6a9dd515-f149-45c9-803d-b76b6b4a93e2"
        },
        "item": {
          "id": "0b3ba7e3-d854-4718-adbc-ceb1aa443aaa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dac383ee-e62b-49bb-98e3-6bb2144019dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da5181d-b36b-4d70-b0e2-d081bf5931c9",
        "cursor": {
          "ref": "7299352c-d924-46a6-b113-7c04914660d6",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ac863650-4b86-448d-b7b2-9665672e4758"
        },
        "item": {
          "id": "2da5181d-b36b-4d70-b0e2-d081bf5931c9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7a140019-e5ff-4834-9711-2b022c71dc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caeec63-c071-40df-b500-39a4fee006e2",
        "cursor": {
          "ref": "9226910c-08a3-4183-8538-2218599378d7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7edb9ba5-b95e-4c73-b144-43670f1587d6"
        },
        "item": {
          "id": "6caeec63-c071-40df-b500-39a4fee006e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "67e2ddf0-5178-4ce8-9020-d8b14cbb10f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d7f648-6a04-496c-b7e7-6c412c3a11a1",
        "cursor": {
          "ref": "7d9e557e-8cda-4e95-8d8b-37e12534537c",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee27b443-1a24-4682-8fa9-a0bf6ef53542"
        },
        "item": {
          "id": "11d7f648-6a04-496c-b7e7-6c412c3a11a1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd169cbd-0f23-4913-9125-2ca7b538b8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447351f7-986c-4907-9271-c8ab82e75aa2",
        "cursor": {
          "ref": "55d7d5bc-963e-46f8-8730-74749ad02a9e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cbb124fe-4deb-4108-822e-2bcbbdeb53f6"
        },
        "item": {
          "id": "447351f7-986c-4907-9271-c8ab82e75aa2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a8514e78-8f9c-4dfe-b48b-abc936183985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f94dc-ac31-4dc5-bed6-cf1d4edb958d",
        "cursor": {
          "ref": "742eb529-c418-41bf-aa87-b0b4ae534c33",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0d32752c-fced-45d6-9792-7d2bc57fa079"
        },
        "item": {
          "id": "020f94dc-ac31-4dc5-bed6-cf1d4edb958d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "54c860b9-664c-425d-8fd3-a961f1044c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc20a759-0fb6-4af7-9976-65b45b1eb0ad",
        "cursor": {
          "ref": "0df03157-25e9-4105-8e9c-de6add0dedf7",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "297e28f6-cc2e-44eb-9c48-2750fdcef64e"
        },
        "item": {
          "id": "cc20a759-0fb6-4af7-9976-65b45b1eb0ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4bb259e5-fe1c-4889-8e43-97c1cf83a32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b64127a-49ce-4589-8dd8-224cdd1319e4",
        "cursor": {
          "ref": "f74305a3-d28d-4277-b645-8d3e7c9f92f3",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a08de300-5207-442d-a057-77c602915ad9"
        },
        "item": {
          "id": "5b64127a-49ce-4589-8dd8-224cdd1319e4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a303a399-61d4-4151-8a58-153c911405d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d63e8-4622-401c-969a-9757a770a1e4",
        "cursor": {
          "ref": "21a45162-dd7a-4d3f-b469-f330dfa00916",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "461b70b1-7a77-4672-8840-916491220384"
        },
        "item": {
          "id": "e32d63e8-4622-401c-969a-9757a770a1e4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0ed2583a-8289-4e1a-a081-2433ebd7d021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1054,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e88793-cc76-4560-a671-6384525b0c40",
        "cursor": {
          "ref": "271e03ff-d7a7-402b-af3c-d7ff759145ff",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a4203ee6-a08a-4a57-ad27-8e3666b239b5"
        },
        "item": {
          "id": "74e88793-cc76-4560-a671-6384525b0c40",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4fdccb8e-2ee6-4c0a-84ac-eea7b6fde9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb0ec3-14f1-46f4-a1c0-f5197c8afca5",
        "cursor": {
          "ref": "aa8e665f-b1ca-4d48-ab6a-9f8c472daac7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "350cce6a-3a40-42e6-bd05-972e0f2b0b2c"
        },
        "item": {
          "id": "a4bb0ec3-14f1-46f4-a1c0-f5197c8afca5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1cb9cc77-ccb4-4fb6-aed6-c58f27618f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31857ac-9360-4723-9adf-46b987ebeea2",
        "cursor": {
          "ref": "e84a4756-f188-4c6b-902a-cf9bba6ec82a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b638db9-6161-4e6c-8425-af780454d5cd"
        },
        "item": {
          "id": "c31857ac-9360-4723-9adf-46b987ebeea2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eb9fcddf-28df-4bcf-afde-c98a650e8c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b174088d-af67-4c38-83e2-413e8d30419e",
        "cursor": {
          "ref": "314cf353-4430-43ed-825f-3733bf5b95b2",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c62938dc-c484-41d5-8db7-c3e6db187313"
        },
        "item": {
          "id": "b174088d-af67-4c38-83e2-413e8d30419e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c444c80-41e1-42bc-9a37-15fa5f99f25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975785f-44b5-47c3-8fda-742eba3e2199",
        "cursor": {
          "ref": "b0501edb-a137-4e0e-bc6d-7fb23d3bbe4e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "101bcb34-5203-4c6f-beeb-0658eb029d5e"
        },
        "item": {
          "id": "d975785f-44b5-47c3-8fda-742eba3e2199",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "094b28e9-52e2-4ba8-8105-a506c4e8f361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ee5ff-bc36-4cfb-b162-425793747863",
        "cursor": {
          "ref": "a71b7434-216d-4617-9795-8e8a8c6616c6",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "31971299-162d-407f-bffd-204a3e5be6ca"
        },
        "item": {
          "id": "5f8ee5ff-bc36-4cfb-b162-425793747863",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "89338c8b-c6bb-4eef-86ee-bb7b53821ac2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1141,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe18eb43-bd0f-4b2e-aa15-4f2e89b63a2c",
        "cursor": {
          "ref": "063e63bb-3882-422a-a972-59b2c19a683f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec2ad44d-e4e9-429b-8d09-63ad539ab907"
        },
        "item": {
          "id": "fe18eb43-bd0f-4b2e-aa15-4f2e89b63a2c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "185aec33-57ec-4397-8160-81d6fffafbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b9ab2-1a58-4b03-ac6c-ea8d8407b3e7",
        "cursor": {
          "ref": "00c930c5-f63d-4cd1-a5b0-0481e06053b3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f19bac8b-44c1-484a-a26d-6cfaeef186ec"
        },
        "item": {
          "id": "a34b9ab2-1a58-4b03-ac6c-ea8d8407b3e7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "05697803-9306-48dc-a3b5-03d9ef03638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4e9a8d-53f3-4435-a070-4a4a07404f7a",
        "cursor": {
          "ref": "de37af51-706a-46ec-8f9a-5187595681f6",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "65806cbc-6c15-4e6b-b4dc-224c44d54f52"
        },
        "item": {
          "id": "5b4e9a8d-53f3-4435-a070-4a4a07404f7a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d26ef6a-89f8-45db-9c47-7cbf9fcea6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4894602-ee91-4a92-aeff-711b621aef3c",
        "cursor": {
          "ref": "31eab8e7-8faf-418f-9526-b99f066e9f14",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "634495cd-5272-4740-89ee-a1145486acd7"
        },
        "item": {
          "id": "b4894602-ee91-4a92-aeff-711b621aef3c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d21eb16b-67a8-4c7e-b348-d73b79040658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50b03a9-fd23-4443-8821-c724e0a16bad",
        "cursor": {
          "ref": "6e157577-63f2-4a60-87a3-77dfd469171c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1e7ba993-a94a-4423-bc43-ac0ace0e4803"
        },
        "item": {
          "id": "f50b03a9-fd23-4443-8821-c724e0a16bad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6b95727-703b-43d8-89fc-29e71c0a229d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048610cb-f172-4953-85ca-e4682faaba62",
        "cursor": {
          "ref": "edc91aaa-0a13-4e37-90b1-186c675f911e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "654ff845-17dc-4302-abc5-a8f0e393b0dc"
        },
        "item": {
          "id": "048610cb-f172-4953-85ca-e4682faaba62",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9b972825-61d7-4c37-9f51-550664fe91b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a4fa28-b5db-4e8d-8985-6af2327ddd7f",
        "cursor": {
          "ref": "e8f4f024-017c-4d85-811c-8ea6bcd2d434",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8e13d4a2-ff06-4e04-a3d2-72bd2c042dcf"
        },
        "item": {
          "id": "42a4fa28-b5db-4e8d-8985-6af2327ddd7f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b4bbab20-481a-43fe-853b-6db657d078f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 966,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b70f28-ea70-41ad-bdde-b50f58cf4764",
        "cursor": {
          "ref": "8d071421-6d7b-4dd5-8ab6-ba16ae9c9327",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eddb9559-d71b-4a6f-8483-7c49cba21682"
        },
        "item": {
          "id": "59b70f28-ea70-41ad-bdde-b50f58cf4764",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c6d16947-139e-4214-90ae-5ea9b892746d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28eaa86-968f-4bef-86ab-77c0dae3d0b3",
        "cursor": {
          "ref": "8e26b339-ae02-4d48-9572-ad99c3689020",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ad4b7e5b-fed1-46d7-9a80-ed4d10ef56e8"
        },
        "item": {
          "id": "a28eaa86-968f-4bef-86ab-77c0dae3d0b3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5812689e-d1ca-4d68-be7a-982969657d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8434de57-275f-4f0a-9a4c-d43cbaf2bf36",
        "cursor": {
          "ref": "c3b48e17-aa73-4c40-bf2d-5f53dda010c4",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c66b1760-c3d6-4c8e-90ff-5331b5c9a39b"
        },
        "item": {
          "id": "8434de57-275f-4f0a-9a4c-d43cbaf2bf36",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c63532ba-94cf-4b44-9384-7c43c6f78f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26c5187-1ab7-45d7-b2f5-c21f1ec4e84f",
        "cursor": {
          "ref": "d3f2fea1-3244-4fed-a48c-ec86f5f6d4c7",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc738376-87e4-4127-a302-b1099d5b7868"
        },
        "item": {
          "id": "a26c5187-1ab7-45d7-b2f5-c21f1ec4e84f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ecf1c556-0827-454f-8adb-16e95c464d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97ce7c2-f804-487b-8260-6785fa04e12d",
        "cursor": {
          "ref": "ac8a9094-a748-43b1-8b52-a13155521d71",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ca8aeca6-965b-4e22-ba4d-cc2e21592e10"
        },
        "item": {
          "id": "a97ce7c2-f804-487b-8260-6785fa04e12d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "294afa0f-f254-45bc-bfe3-95f569e23e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1ea365-4773-4490-8998-634a10743b8b",
        "cursor": {
          "ref": "b2321fb4-446c-4576-81b9-065dcf670816",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4124315e-2edd-4202-9c00-917c295887fa"
        },
        "item": {
          "id": "9f1ea365-4773-4490-8998-634a10743b8b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "27d199fe-16e1-4800-8af0-d20e154a3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edef30a9-625a-4d96-baf5-5fed228083a6",
        "cursor": {
          "ref": "aa85bb29-50b5-4a77-a306-183435877334",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ffbb4915-8d66-4557-b0a2-269990f1464b"
        },
        "item": {
          "id": "edef30a9-625a-4d96-baf5-5fed228083a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "630844e8-280a-43cb-86ad-4d35360dcf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997d7d9d-0231-4ae8-ad38-d954bc39ce17",
        "cursor": {
          "ref": "2b466393-cb32-4667-a5ec-e3791241bd0b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1ef2474e-e88d-4f26-8825-42c13d49d4e9"
        },
        "item": {
          "id": "997d7d9d-0231-4ae8-ad38-d954bc39ce17",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a350720e-c009-4dd2-85e7-f771a995d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b330b-0fff-404d-a15e-4d28e8927243",
        "cursor": {
          "ref": "eec454a2-377d-4327-ac37-ab5e3d5e231b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "88b8490a-1434-4ee3-944e-c50bd66d3c87"
        },
        "item": {
          "id": "009b330b-0fff-404d-a15e-4d28e8927243",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "73a88f49-5770-4409-adf8-9453bcc1f975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5eaec2-8e07-4ad3-be63-6e47ec07d42e",
        "cursor": {
          "ref": "1fc7c08f-83d5-4985-9b65-b21e5a9e256b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "94df2981-2757-4117-bdbc-b8aaa09f546c"
        },
        "item": {
          "id": "eb5eaec2-8e07-4ad3-be63-6e47ec07d42e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99e3fb3d-8d3c-4213-8a3b-b68b39879b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39693c7d-6fcf-43c3-8fbe-6841eef1b05b",
        "cursor": {
          "ref": "d3ec2a79-33a7-4ed1-93f2-ad4b30127913",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7cb29da2-1023-4266-9aaf-88e17924d5c7"
        },
        "item": {
          "id": "39693c7d-6fcf-43c3-8fbe-6841eef1b05b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0c5f9401-c21a-422a-be14-3db9af837d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acade2ce-1b2e-46d3-aaa9-28c4f04c26b6",
        "cursor": {
          "ref": "1392848d-13d2-4f74-8a35-49b888098903",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8fd4562e-7571-45cb-b590-9ce3e5d01186"
        },
        "item": {
          "id": "acade2ce-1b2e-46d3-aaa9-28c4f04c26b6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "657a0fa3-660b-4faf-9171-57e982bd5216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eed68b-a881-4249-9cd6-5c7c2ad7c295",
        "cursor": {
          "ref": "39709f6b-b236-429c-853e-7ef5b67e888a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2da0631a-8ea9-4b05-a418-4c181f805257"
        },
        "item": {
          "id": "98eed68b-a881-4249-9cd6-5c7c2ad7c295",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bc9d7997-1147-454b-bf8c-90c77892b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7aa581-6251-4a1a-9e42-f94b73d504af",
        "cursor": {
          "ref": "65ecc7ff-1701-4321-9f36-e66288c7ccf4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0349dc07-8ffe-40c6-bc5d-c8bf97d8ace6"
        },
        "item": {
          "id": "5b7aa581-6251-4a1a-9e42-f94b73d504af",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c07a43b0-c207-4491-ac12-464dea0a5dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8602382b-1ae6-4c13-97b9-53127f548986",
        "cursor": {
          "ref": "d2112812-572a-4945-9c36-4769ca285af3",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "deeadad6-0d26-4f29-8200-20306846f7d6"
        },
        "item": {
          "id": "8602382b-1ae6-4c13-97b9-53127f548986",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f53bc62f-bef3-489e-abfb-1e46b13ec102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c099e7a2-58ed-4268-bf87-f8c1da8e330a",
        "cursor": {
          "ref": "d61b7037-dbc5-4af3-ad28-23d64e9ce82f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46c93cb3-132e-4c6d-8887-dd88382a5ba3"
        },
        "item": {
          "id": "c099e7a2-58ed-4268-bf87-f8c1da8e330a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bca98008-9eb8-4221-a649-7412104f4f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff67e820-513e-4df1-8fba-54872c6203f9",
        "cursor": {
          "ref": "6a479141-9237-4ada-a5e4-5ecd1e02eb48",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2e8bfcd-7683-42ea-a7cb-0db768faecc3"
        },
        "item": {
          "id": "ff67e820-513e-4df1-8fba-54872c6203f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b19990fe-e692-43fb-8bdb-e39e90222022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba2548-df43-41e4-a13d-b6bfe6c17d8f",
        "cursor": {
          "ref": "86e7cd6e-b6fe-4c82-887c-ac9379e1f3c4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "946152d7-ff8a-42b1-99e0-4af9a0368371"
        },
        "item": {
          "id": "ebba2548-df43-41e4-a13d-b6bfe6c17d8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7042872a-4744-43dd-b8a2-daf47890a990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd35d15-22e3-401d-9997-4a5ad571c61a",
        "cursor": {
          "ref": "f3950ccc-bb49-4815-b5b5-d0333b1cbc7a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "69f81839-b281-4719-9b9b-22ec657363db"
        },
        "item": {
          "id": "6bd35d15-22e3-401d-9997-4a5ad571c61a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fd8599de-2dc6-463d-b0ce-6720af59d062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275adb3b-e7ec-4b97-a4f1-afa10031df2e",
        "cursor": {
          "ref": "b1001c57-f3dd-4ed1-8e48-07e2e23171ff",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37e4317d-1c8f-44c8-ae9b-7f1b782a23ad"
        },
        "item": {
          "id": "275adb3b-e7ec-4b97-a4f1-afa10031df2e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4aef04c1-e910-4aa1-8286-f8276beb44e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ef555e-1c42-4b4c-b669-1ea4cb90ebd1",
        "cursor": {
          "ref": "a6f15d6c-db6f-47f2-86ed-60d10be2927e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "667d4f83-129f-446b-8bd1-c6510786c29d"
        },
        "item": {
          "id": "17ef555e-1c42-4b4c-b669-1ea4cb90ebd1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c0fb1318-be4b-4292-b153-8cad31555421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae5b42c-bf2f-4f4a-8d7a-8f37b23ce2e5",
        "cursor": {
          "ref": "afa6627f-0554-400e-8c73-2e7bd9506a5f",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b7dfd1e8-e266-49b4-9b97-2a6448b6aa54"
        },
        "item": {
          "id": "8ae5b42c-bf2f-4f4a-8d7a-8f37b23ce2e5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7d31a2e6-7db8-4d7c-aaa9-831852fe9fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c558ad64-bab6-4aec-b07e-0763af63a8fa",
        "cursor": {
          "ref": "6eb4874a-ae8d-4b46-9543-8a055d863c57",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce43c8c3-38e1-4b4e-ab5b-f918d4d77e3d"
        },
        "item": {
          "id": "c558ad64-bab6-4aec-b07e-0763af63a8fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9990b15a-e9a0-4fd2-bdee-df44610ee895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbfa41c-ad5e-4944-8696-1d06000d6b55",
        "cursor": {
          "ref": "e9c77416-549d-4caf-beb8-ed62d4fa6f71",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "28bf56ee-698e-4990-a0e8-a57359f5593f"
        },
        "item": {
          "id": "7fbfa41c-ad5e-4944-8696-1d06000d6b55",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4af7280d-571f-404f-a055-33f911d8f99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037910c0-147f-4b75-96ee-2a106573543e",
        "cursor": {
          "ref": "85d681cf-61c4-43e4-bf39-ca4468d97d70",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cfbbce0f-cb9c-44f9-bebe-cc72e543cbb1"
        },
        "item": {
          "id": "037910c0-147f-4b75-96ee-2a106573543e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f3c9c879-7d9e-4928-a8e6-050389ef636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff206dbe-785c-4cee-95d6-134574292a8c",
        "cursor": {
          "ref": "274ac638-7946-4cb1-94df-1a511cd02827",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e3fa22d7-f359-4ceb-bfc3-5f46e94c5fe1"
        },
        "item": {
          "id": "ff206dbe-785c-4cee-95d6-134574292a8c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "776e9fa8-044d-4f8c-8688-b66aa7dd7113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d194a940-190a-4414-a387-f3039274a8ec",
        "cursor": {
          "ref": "c31b0c86-df82-4456-a848-51849aba29c2",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "50080733-0b35-441c-b5ed-a328626c95b4"
        },
        "item": {
          "id": "d194a940-190a-4414-a387-f3039274a8ec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d45fef9b-8342-4be0-849f-6ade0c1847d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd9d81d-3341-4bb9-9465-1e3ed2b3dff7",
        "cursor": {
          "ref": "d6ab3934-3784-4bde-9c95-73a1884c745d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41cc306a-a6d1-4263-97ef-a0af41927227"
        },
        "item": {
          "id": "5fd9d81d-3341-4bb9-9465-1e3ed2b3dff7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f3a89f23-4b79-4027-8f0a-1b68350d1e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de8bbc4-c777-4c13-b6d5-55574a922b57",
        "cursor": {
          "ref": "159af4e6-aac7-47b5-8ab6-e983dd5355a8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d446fa6-66f1-4228-ab78-884ba0f7dacb"
        },
        "item": {
          "id": "9de8bbc4-c777-4c13-b6d5-55574a922b57",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "face571f-c448-4076-9885-34cc35e79b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d439e6a-feba-4d84-b242-8c5a17e00fb9",
        "cursor": {
          "ref": "7aee1805-3134-463a-8a15-2753ebc9a9ce",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f2f7594f-547f-4516-a2fb-71a5f282defd"
        },
        "item": {
          "id": "8d439e6a-feba-4d84-b242-8c5a17e00fb9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af6d211c-fcb8-4c4b-b934-3784c8005569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec6f39-4dcd-4f87-a27f-ec78ec0a3a66",
        "cursor": {
          "ref": "0edc4b62-364d-4267-b1ad-1486b0929134",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "32a3ce23-2020-42b0-a3df-f4718753b094"
        },
        "item": {
          "id": "0aec6f39-4dcd-4f87-a27f-ec78ec0a3a66",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7675032d-7f98-47eb-a878-2049815589e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce51798-c4e2-4d2b-93d7-1204c9ddde91",
        "cursor": {
          "ref": "9721db71-0602-4d5a-9f5d-8261252f012c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b19c78e2-6649-4804-8d68-b4cd55efc8ed"
        },
        "item": {
          "id": "4ce51798-c4e2-4d2b-93d7-1204c9ddde91",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d76a4bf0-5815-4722-9d0f-fd0e3a1aa335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e65d30e-63ca-431c-9b03-5af7d430b30e",
        "cursor": {
          "ref": "c237a48f-542f-4375-8dd5-0a22d3bf90fc",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "092b5bdb-53e5-4cd8-8364-b954f5a139ea"
        },
        "item": {
          "id": "9e65d30e-63ca-431c-9b03-5af7d430b30e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "389737d7-a1b7-4d8d-85fb-ed2c63b70494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f837da3-aa82-49bb-a68e-549143e929e1",
        "cursor": {
          "ref": "83ad081d-e15b-4516-85f3-01b51b100f0a",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7ad8d726-867d-4344-a4a5-f40922feaabb"
        },
        "item": {
          "id": "9f837da3-aa82-49bb-a68e-549143e929e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "daf6d706-ec27-4d48-b579-e6218c735571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456369ff-e546-440d-917b-c7b56be635c1",
        "cursor": {
          "ref": "94c04358-01f6-493b-8099-1a921a653352",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d69186a5-bfa0-4f9e-98c9-85daf165c9f6"
        },
        "item": {
          "id": "456369ff-e546-440d-917b-c7b56be635c1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "40693dfc-66a1-40ee-91d0-17b5e72e43e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0807bbbb-6f66-42ac-9498-ae28640e2a2e",
        "cursor": {
          "ref": "2e38badb-b518-4731-b4af-c4039299b16e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f5fb1460-7b1b-4f09-8608-a6c593c46014"
        },
        "item": {
          "id": "0807bbbb-6f66-42ac-9498-ae28640e2a2e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b7780d52-ef92-421c-a156-f0dd63e047e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877cba8-68de-410f-b5fa-aeba0f32b3bd",
        "cursor": {
          "ref": "aad2a01d-eac8-424b-b91b-ff708302dae7",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f064a2d-7c42-47f2-ba2d-d83f8d46bd33"
        },
        "item": {
          "id": "9877cba8-68de-410f-b5fa-aeba0f32b3bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "952ac522-668d-4f36-bf17-92483d1d8b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c930cd-1c71-4375-8cf3-056192dd2f96",
        "cursor": {
          "ref": "086e9220-e5d9-48bc-8044-fb85001775ff",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f50d050e-9cef-4637-9657-daa49fe621af"
        },
        "item": {
          "id": "62c930cd-1c71-4375-8cf3-056192dd2f96",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9efec342-2deb-40b0-bc6d-b6b173c0f6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d2d82d-086f-4864-aa50-167f8005ca9f",
        "cursor": {
          "ref": "7adb1b1b-56d8-4b9e-be04-f5fb4db706d4",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ace4cad5-d231-47c7-a269-c5e1360409bc"
        },
        "item": {
          "id": "b5d2d82d-086f-4864-aa50-167f8005ca9f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "27e4301f-fbbe-4f72-bb76-27adc74ea981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa619fba-e8bb-468a-a83b-ccca69e76ff5",
        "cursor": {
          "ref": "550cdbe4-a2cc-48f1-b1e4-bbc78414c78a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c858cda9-9df0-4e19-b7a5-038ce9ca0764"
        },
        "item": {
          "id": "fa619fba-e8bb-468a-a83b-ccca69e76ff5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "83e8ca71-21cc-4b39-9281-218ce693ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eaf56d-5b0d-4841-894b-02b876abc456",
        "cursor": {
          "ref": "def05a94-cbc0-452c-88c2-7ca5c53eb44f",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6fda8a92-2a9d-47ac-a90d-d1d399e81db6"
        },
        "item": {
          "id": "a4eaf56d-5b0d-4841-894b-02b876abc456",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d8616610-7b6d-46c2-bb01-be590ba772b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ced4b-ad67-4676-8c49-8ff98b46b79b",
        "cursor": {
          "ref": "bb1c13a6-8351-42ff-a949-c69856414ead",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c1a5f61b-39a2-48df-b8e6-91e4e521402d"
        },
        "item": {
          "id": "d65ced4b-ad67-4676-8c49-8ff98b46b79b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d6db3977-aca2-4334-a0d6-8d7ff84fb3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3f2271-54a1-4caa-83e2-bd813f9c346f",
        "cursor": {
          "ref": "d814bcb5-7a0d-4aae-850c-e4e140efe1b9",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5cb1ab75-146d-47da-a6bb-0fa592503211"
        },
        "item": {
          "id": "4b3f2271-54a1-4caa-83e2-bd813f9c346f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "28ade270-5ad6-4b06-a042-8608d44351e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872a2c0f-8eeb-445e-84bd-995dc6786f35",
        "cursor": {
          "ref": "3458f132-4fc2-47e8-b266-b00a45c12f6b",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "39ed2081-f1db-49cf-ba32-1eacc77c6c87"
        },
        "item": {
          "id": "872a2c0f-8eeb-445e-84bd-995dc6786f35",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ae5442a6-26bd-451b-8659-379056710c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfda3d5d-f75b-42ed-a9f8-af6606a7bb2e",
        "cursor": {
          "ref": "566e2f3a-0ea3-43c6-996c-7512fe937773",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "73317f07-931e-4c76-849a-4180620f9d85"
        },
        "item": {
          "id": "cfda3d5d-f75b-42ed-a9f8-af6606a7bb2e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "debf4048-77de-4517-974a-7fd0a5a69cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72708372-fefe-4af3-adea-fe5c15b3c469",
        "cursor": {
          "ref": "91cbf73e-6949-462f-8763-42fbef463f3c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ae7a799b-f56a-4087-8f4e-5f4af9f1ec0a"
        },
        "item": {
          "id": "72708372-fefe-4af3-adea-fe5c15b3c469",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76614543-ccde-4598-b63a-e3dd5b983476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b9eb9e-17d7-4847-a2dd-218c0d820c1e",
        "cursor": {
          "ref": "7d1adbde-5c61-439f-8400-80de91f594f1",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aa163937-5eb8-4206-a611-7683e5d60b5d"
        },
        "item": {
          "id": "57b9eb9e-17d7-4847-a2dd-218c0d820c1e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "59f9e1b1-dbf7-47d3-a654-09ff631a4e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58b10cb-c4e2-4284-b9ec-4cc9fb78ad20",
        "cursor": {
          "ref": "6e107ff6-7501-4490-b9a3-8abf60bbaff0",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d51ef4b6-4725-4849-9ae7-90d95b385080"
        },
        "item": {
          "id": "b58b10cb-c4e2-4284-b9ec-4cc9fb78ad20",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a1254ac6-d5ac-4e08-9f4d-0f8681102f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d8a5f8-86be-4c13-932f-9128bc7bec7a",
        "cursor": {
          "ref": "fb111743-6dd6-42d1-8db7-d312781fe370",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3a0cf2fb-5a77-45d7-ac8a-76760e90d5c8"
        },
        "item": {
          "id": "c7d8a5f8-86be-4c13-932f-9128bc7bec7a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "782ef5d3-9849-437a-be68-c9dc4b0ae1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07428fd-0a5a-472c-8e71-a3c9586169ff",
        "cursor": {
          "ref": "1dfc8a65-b606-421b-9e99-aeb06e8f3457",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7ce30a2c-2f1d-4e3c-9b9c-663c36a45bc9"
        },
        "item": {
          "id": "d07428fd-0a5a-472c-8e71-a3c9586169ff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ea259bf6-8dbb-4d62-b8d0-f89fbd08dec4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3357b97f-47f1-462a-91bd-8764d67a4de1",
        "cursor": {
          "ref": "091634b4-aeb5-4d0e-9772-947cffb85efb",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "554c134b-b153-4f47-8f00-21a4d5f69cf1"
        },
        "item": {
          "id": "3357b97f-47f1-462a-91bd-8764d67a4de1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8f80f429-f669-4969-a172-d4a5d183e79d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 819,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c807fd-b507-45bc-84d7-de417c0c2bd7",
        "cursor": {
          "ref": "90f7445b-9f23-4eff-8548-1adb85156032",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "391ebff4-0204-40d4-8fdd-ea8551dff041"
        },
        "item": {
          "id": "e7c807fd-b507-45bc-84d7-de417c0c2bd7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "46317a58-36ac-4533-9231-74c644e5e45a",
          "status": "Created",
          "code": 201,
          "responseTime": 7558,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "db632cd9-8ab2-4be3-9953-fbdfa9c2887c",
        "cursor": {
          "ref": "24b53e6c-cd8c-4eaf-95b1-a54f867336a9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "44dcfbea-bc75-4d38-8f70-f4cc5e8ab917"
        },
        "item": {
          "id": "db632cd9-8ab2-4be3-9953-fbdfa9c2887c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d762704a-5124-4465-ae1b-f93b1f884016",
          "status": "Created",
          "code": 201,
          "responseTime": 6437,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41bb8f4-cfc3-4344-906f-99c2143079ab",
        "cursor": {
          "ref": "eb7fe296-366f-42e4-a14f-ccb3c6869e3f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a0e9301f-a94e-4d8f-996f-f98fbb10ea0e"
        },
        "item": {
          "id": "a41bb8f4-cfc3-4344-906f-99c2143079ab",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "397f2d3e-fde4-4a30-80fd-626e2a932ad0",
          "status": "Created",
          "code": 201,
          "responseTime": 7346,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c65692-4a02-4243-996f-4e4549aaf3a8",
        "cursor": {
          "ref": "8e0f249b-d757-40f3-8bd6-ed1626b933a6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f2a243a9-fa7c-4458-b4d7-bdaf1d3ac930"
        },
        "item": {
          "id": "56c65692-4a02-4243-996f-4e4549aaf3a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "69a0f560-e2de-47b3-baaf-c11f94fc6d98",
          "status": "Created",
          "code": 201,
          "responseTime": 6515,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de5455a-663a-4bf9-bf9c-b7c8834cb1ce",
        "cursor": {
          "ref": "750cc04f-9dc7-4009-a762-fe8cb9b5ff42",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "89f90da4-b9ae-4321-b812-856054d60cf2"
        },
        "item": {
          "id": "9de5455a-663a-4bf9-bf9c-b7c8834cb1ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cf913214-9157-4f47-832f-7a25d3a3385f",
          "status": "Created",
          "code": 201,
          "responseTime": 6397,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b396f4d-485d-4f68-b5cb-dbb26cb44114",
        "cursor": {
          "ref": "03f56cc8-3e32-4d57-9337-727b95c0bfed",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "76cb287e-acc5-4abe-8193-8c3dd603d363"
        },
        "item": {
          "id": "5b396f4d-485d-4f68-b5cb-dbb26cb44114",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2a017bd9-a817-4628-ad48-405e57f02417",
          "status": "Created",
          "code": 201,
          "responseTime": 9317,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5418a-03d5-473d-b720-f3619b25ea59",
        "cursor": {
          "ref": "a7cb36d3-5a4d-49bd-aaa9-b488783623ea",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec9f9bfb-39c4-433b-ba18-dce7eb644ff4"
        },
        "item": {
          "id": "47a5418a-03d5-473d-b720-f3619b25ea59",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e72740e-15dc-4b67-8346-203444f41437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5418a-03d5-473d-b720-f3619b25ea59",
        "cursor": {
          "ref": "a7cb36d3-5a4d-49bd-aaa9-b488783623ea",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec9f9bfb-39c4-433b-ba18-dce7eb644ff4"
        },
        "item": {
          "id": "47a5418a-03d5-473d-b720-f3619b25ea59",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e72740e-15dc-4b67-8346-203444f41437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fce19c-aa13-4b78-9cf3-d4482c7c4fc5",
        "cursor": {
          "ref": "ac4f06c7-3261-46cd-a49b-3365f5a2a930",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b9eed74-498b-4ac4-9bfe-7fc8239a4fd1"
        },
        "item": {
          "id": "72fce19c-aa13-4b78-9cf3-d4482c7c4fc5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4116db43-26bd-44b5-9530-603a61845b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6da37f4-a9ec-4e3e-a530-9f471b2b665a",
        "cursor": {
          "ref": "91975455-c616-4243-9da7-7ad4e77d6f80",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b8e17a39-a2a8-48da-9e76-59710846dfe1"
        },
        "item": {
          "id": "e6da37f4-a9ec-4e3e-a530-9f471b2b665a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d299dc8-a84d-4c9c-bd8d-c7252be97a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594fafbf-30b8-49fe-8836-886e2a1d4d28",
        "cursor": {
          "ref": "e4238aa4-633f-4c9f-95b3-7e7f175c7b28",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8297c69f-ab87-4630-96bc-b2afe48b3996"
        },
        "item": {
          "id": "594fafbf-30b8-49fe-8836-886e2a1d4d28",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "66766fc4-7e05-473a-b5cc-b32bcb481152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c908b-b0ae-4538-b145-cdefcb3893c0",
        "cursor": {
          "ref": "6ef00682-7904-4cd4-a6f8-c1daa38c6cf6",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f3587919-36e5-4205-9971-d29c4fc9b5c3"
        },
        "item": {
          "id": "741c908b-b0ae-4538-b145-cdefcb3893c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c541aea8-0006-4dd8-8b41-7279c11e9ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de5148-1c3d-47fb-8d80-abee593d012f",
        "cursor": {
          "ref": "b3076e99-36da-4908-98f6-0ba076a5ae58",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9d52d89f-5d03-414e-bf55-4ee48bf5ae6d"
        },
        "item": {
          "id": "a4de5148-1c3d-47fb-8d80-abee593d012f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ca8699a-8d81-4d3c-98ce-d6ebb3af09c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a4dfc-ea1b-4ed2-9af6-ec7b2165cebf",
        "cursor": {
          "ref": "2d423d02-f083-44ea-a81c-5a4658a3c61c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "76761588-33ce-4f2e-88ce-68aa9dbad148"
        },
        "item": {
          "id": "906a4dfc-ea1b-4ed2-9af6-ec7b2165cebf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c93b9a70-9625-4179-a054-d276a8ac0763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29afb47-62f3-422f-b757-efae0c5778b1",
        "cursor": {
          "ref": "21e63490-c778-4770-93ea-fa887d502ea3",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3bc71d32-2ad8-43df-aa0d-6ed02ef71745"
        },
        "item": {
          "id": "d29afb47-62f3-422f-b757-efae0c5778b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d9d9103-ad51-417a-9430-05594eb26523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044878b3-5a3a-400d-9cab-ee876555d0e5",
        "cursor": {
          "ref": "fdb9b41c-0748-46f9-9903-6f61ee2063cb",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "547052fb-2195-482e-9eb5-89d34861541a"
        },
        "item": {
          "id": "044878b3-5a3a-400d-9cab-ee876555d0e5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c7079f20-99c6-4580-a909-b6e68190dadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759132b9-0afa-4a03-a60a-399d127f20c9",
        "cursor": {
          "ref": "b7223937-2119-45f8-b867-2fe8908e6f3d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e7cc3516-4d2b-4b23-a391-cf556868cc20"
        },
        "item": {
          "id": "759132b9-0afa-4a03-a60a-399d127f20c9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e92bd2a-78a1-4560-8eb0-46679c398cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79459be4-c94e-4210-a050-0e8e299cb29f",
        "cursor": {
          "ref": "8d3eff04-9b1a-431d-a13a-96d96116225f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e62c2542-2d74-4739-934f-b9b003631982"
        },
        "item": {
          "id": "79459be4-c94e-4210-a050-0e8e299cb29f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e6b2739-d466-42b8-833c-1b30faaff151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9205effb-98ac-4baa-b7da-74ede2d4afe2",
        "cursor": {
          "ref": "b6784dc0-d713-4f5f-94d3-0ba123d6d25d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1e10b861-48c8-45e8-bc78-d84be727fbf4"
        },
        "item": {
          "id": "9205effb-98ac-4baa-b7da-74ede2d4afe2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2692438c-997e-4411-8b16-0fdfe14d4abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ead21c3-bc58-4be3-9997-a032afb5802d",
        "cursor": {
          "ref": "7edc0da5-da95-421f-beed-912e0e7282ec",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "69ce2ca3-1c51-4dfb-a77d-ca50c02cc8bb"
        },
        "item": {
          "id": "3ead21c3-bc58-4be3-9997-a032afb5802d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "540ae7e7-91c5-407e-bc71-bc907b58dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad61341-fd28-4961-8c20-c4b1cd9fc3c4",
        "cursor": {
          "ref": "5e84116c-cbff-4ba9-9c33-69d4231f0396",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "25009ca3-fda9-46f1-9877-1ae995c9cd85"
        },
        "item": {
          "id": "8ad61341-fd28-4961-8c20-c4b1cd9fc3c4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6333fd7e-4f34-40a8-89a6-a23e3d7460fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4b6dc-014e-4d41-9c9b-70b5292192a8",
        "cursor": {
          "ref": "31de6243-c8b1-414b-bfca-9255615fddc7",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45283330-f504-4874-9f8a-f6c1c91cb883"
        },
        "item": {
          "id": "aca4b6dc-014e-4d41-9c9b-70b5292192a8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e51e229d-dd00-45bc-837e-b72d792f82c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bffc0-5482-49d0-be70-cde4a70a8004",
        "cursor": {
          "ref": "52d27230-7bb8-4a79-9fac-30b8410b68a9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "38e329d4-b228-4b5f-92f2-0a8635fc6551"
        },
        "item": {
          "id": "c19bffc0-5482-49d0-be70-cde4a70a8004",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "30791bb6-9451-4fb7-96d8-d6dec721b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc17e1-43cf-4be2-8b0a-06c805edc417",
        "cursor": {
          "ref": "ab4f9625-7978-40bf-8b98-5ae0391d6406",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2f36d482-3b80-4b73-b9f8-abac12decb8c"
        },
        "item": {
          "id": "f6dc17e1-43cf-4be2-8b0a-06c805edc417",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "536a71fb-0aa5-496f-b5da-5275da476181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025cbfb7-3bff-4d98-a48f-3f45b9a719a0",
        "cursor": {
          "ref": "48685c7f-6d04-49a8-857e-115a86ead859",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a0cee74b-649e-4fc7-b7c3-9e3ce87e6895"
        },
        "item": {
          "id": "025cbfb7-3bff-4d98-a48f-3f45b9a719a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "badcd202-c6ba-4990-b8e7-79b3119d92cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e88bd80-faf1-40c6-9425-84c8610e1b3f",
        "cursor": {
          "ref": "6cbdf8f7-c91b-45c6-913f-9112b09317b7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "604ed0dd-bf52-4e7b-99ab-dab456ad233b"
        },
        "item": {
          "id": "5e88bd80-faf1-40c6-9425-84c8610e1b3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76f4a45d-e753-4059-8260-03da909ad4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d98ea05-4cd7-49fa-b937-2aada24504c9",
        "cursor": {
          "ref": "b4c5d53b-ec99-4714-8b4b-90b44291e44a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "532c1271-449e-474a-abb7-5f4a95e02b6c"
        },
        "item": {
          "id": "5d98ea05-4cd7-49fa-b937-2aada24504c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a054948-2a11-4c95-915d-2e2808038ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0bbe3b-37cf-4083-b72d-f3e0eb7c5c26",
        "cursor": {
          "ref": "4ce2171f-0559-4d8b-ad92-5180cdad0cd8",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ff4927e9-0446-4850-b1b0-5a7a95bc4eaa"
        },
        "item": {
          "id": "df0bbe3b-37cf-4083-b72d-f3e0eb7c5c26",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2f7fe8b-c38c-4363-a2cd-5ea2a54cd503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1109,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4beda6f-b009-408d-8f74-1907cff6aa4e",
        "cursor": {
          "ref": "3e32f13d-39d4-4c3a-8162-57c769894541",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c31d52ad-c1f6-4623-a18e-e490c15a7008"
        },
        "item": {
          "id": "a4beda6f-b009-408d-8f74-1907cff6aa4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a0148a5-0204-4218-b04e-075565980e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e25e755-d2dc-4734-97b4-e9aaf548879f",
        "cursor": {
          "ref": "c7b3cc4a-c280-4438-9942-87a6d3479f1d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c4de62ce-b2d3-4003-a502-ab61300178a7"
        },
        "item": {
          "id": "1e25e755-d2dc-4734-97b4-e9aaf548879f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ff474b64-a741-42a4-803c-864c251a5176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e616271-60d5-4dc2-a587-bfd04e5ae7c3",
        "cursor": {
          "ref": "433ede91-a123-4eda-b8d5-dd0a444cdf34",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba6d326d-1b47-4f9b-a53c-5a5ffd0ef5d0"
        },
        "item": {
          "id": "5e616271-60d5-4dc2-a587-bfd04e5ae7c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f94a9af2-db29-4a75-8f97-8e577832fd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6867fb8e-88d3-467b-9cb3-c6450fc0197b",
        "cursor": {
          "ref": "f29e0703-e9d3-4e0a-9218-45173da4a4e3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2576a38b-bc62-423e-8b29-78d97df5869c"
        },
        "item": {
          "id": "6867fb8e-88d3-467b-9cb3-c6450fc0197b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44355a8d-e3ea-49a0-b516-6af1592f3698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be65547e-16bd-4591-9437-422d97ee5e87",
        "cursor": {
          "ref": "08b87d3b-f3cd-402c-a8fa-5c7242565248",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8d06bbbc-33a7-49de-b4bb-06fbb12270a0"
        },
        "item": {
          "id": "be65547e-16bd-4591-9437-422d97ee5e87",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e543bf14-5f1d-4128-bfb1-9e7050b969d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1030,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a95528-b93c-49c6-a8b4-d991a3143532",
        "cursor": {
          "ref": "79776872-ea4b-4e8f-942b-f22db309fdd7",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "063eac76-444d-46d8-aa88-bf9207c71db1"
        },
        "item": {
          "id": "44a95528-b93c-49c6-a8b4-d991a3143532",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c4c286e-8821-4cb1-87c6-504004e5c303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aceec3-ae27-499a-a76d-07115fb43f11",
        "cursor": {
          "ref": "02d35de8-8c3c-4a5e-8f45-daf7d9e1aa8c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5e7941c7-084f-40e2-80ba-54273f619964"
        },
        "item": {
          "id": "31aceec3-ae27-499a-a76d-07115fb43f11",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba9855c3-46f7-4376-872a-07bb6f645396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04863593-8a01-41a5-aaa5-e77253554780",
        "cursor": {
          "ref": "c56058f6-0857-4986-b227-552ed43ef64c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "08654217-34b0-4ea2-8fe6-f1ebd7419214"
        },
        "item": {
          "id": "04863593-8a01-41a5-aaa5-e77253554780",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f61dbedc-b366-423b-9f46-2910084079dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac84e0a-9042-46e4-9a87-f2ebdb3ad3bb",
        "cursor": {
          "ref": "3893d57b-da10-4bd3-a24a-bfda0b6fc463",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c8db2522-9dde-484d-b43c-1607f3a0f21d"
        },
        "item": {
          "id": "cac84e0a-9042-46e4-9a87-f2ebdb3ad3bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d342a7e6-94f1-4f8e-8ffd-d0ecafba4589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238b9412-eff8-4d98-b2ef-137cb84347ff",
        "cursor": {
          "ref": "2c5d24e6-b77a-40da-8c48-356aa2f4f7e1",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "daf774fb-9342-45e2-b465-1bfd8f46b6f2"
        },
        "item": {
          "id": "238b9412-eff8-4d98-b2ef-137cb84347ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62ecf2e2-d703-447a-be77-6889718999c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f461fe6b-191c-479a-b3c1-389bcd649a2b",
        "cursor": {
          "ref": "419b83ea-3b45-4359-a5ff-2a0e938b5aa5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f028cfaf-08b9-426f-909f-1cf84dfac8d7"
        },
        "item": {
          "id": "f461fe6b-191c-479a-b3c1-389bcd649a2b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bb8de68a-86dc-4054-aefe-1089621517f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d876c27-238d-4887-8e08-6e7488d1af9d",
        "cursor": {
          "ref": "783f7327-6214-4cfb-abd5-a30ab140364d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0aff5c1c-ee21-4508-94a8-2d158c585f1b"
        },
        "item": {
          "id": "2d876c27-238d-4887-8e08-6e7488d1af9d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cad0c8b5-fce2-4084-8e2c-63ac2647482c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7a381e-d204-44f1-8a08-23207843be9c",
        "cursor": {
          "ref": "4e39b773-c4a2-4435-bd93-cae9357fb8ac",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fbc2d6b3-7601-475f-a892-7de26d97671b"
        },
        "item": {
          "id": "ed7a381e-d204-44f1-8a08-23207843be9c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4ad8cccb-39f6-4bec-9a20-b833165a0c5f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 827,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4da58-1e1c-4e16-a6e2-0859e6927662",
        "cursor": {
          "ref": "81a19cc7-ab37-4d2c-8c1a-160bef7dd7da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c26cfaf9-5136-4c72-bbca-bb5ea2d6f6ac"
        },
        "item": {
          "id": "7bc4da58-1e1c-4e16-a6e2-0859e6927662",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3efc5ee4-f1b7-421b-8d75-a7bdc068a8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4da58-1e1c-4e16-a6e2-0859e6927662",
        "cursor": {
          "ref": "81a19cc7-ab37-4d2c-8c1a-160bef7dd7da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c26cfaf9-5136-4c72-bbca-bb5ea2d6f6ac"
        },
        "item": {
          "id": "7bc4da58-1e1c-4e16-a6e2-0859e6927662",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3efc5ee4-f1b7-421b-8d75-a7bdc068a8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9281a3de-e274-47a6-b21b-c285bd29d81e",
        "cursor": {
          "ref": "8a18fb6a-b435-4f9e-a29b-3c405e3e1a19",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e52c71d-b138-42f8-8715-31fc1fabe9d6"
        },
        "item": {
          "id": "9281a3de-e274-47a6-b21b-c285bd29d81e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a429d08d-a99a-4c3e-b6d0-129aca77e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bfe00e-9ebf-4ae9-ba47-0513a10b64bc",
        "cursor": {
          "ref": "f99a127a-da2c-412e-b8c9-c54212b4a8d2",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4519cb32-f2d6-4471-b56a-0011e7672fe9"
        },
        "item": {
          "id": "36bfe00e-9ebf-4ae9-ba47-0513a10b64bc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "74ae062e-9b97-477b-ab56-df68ecfb813e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872638c-3342-4e6a-926c-4a731320f0d2",
        "cursor": {
          "ref": "afe96b96-36b7-49b1-b910-7befc8fbff40",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "768bc589-6846-4cc9-a9ce-b3ff0e9850ad"
        },
        "item": {
          "id": "3872638c-3342-4e6a-926c-4a731320f0d2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bdc894d5-9796-4778-84ff-f9c91f278542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432121fe-f381-4daa-8be1-e1540a6783d5",
        "cursor": {
          "ref": "cf659787-d13e-4f9f-b665-ba47a28fff93",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ac1564ce-647e-4130-bdb8-9c8d57f70f18"
        },
        "item": {
          "id": "432121fe-f381-4daa-8be1-e1540a6783d5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b3f3c6bd-b41e-4e4a-87aa-634b63f2040d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a50378-7f61-41ae-a869-295d1aae8925",
        "cursor": {
          "ref": "31f722ff-77c4-4ea0-a6c8-18b06cefe4de",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "862142cc-cc15-4bae-bf2e-93e88b5a1613"
        },
        "item": {
          "id": "19a50378-7f61-41ae-a869-295d1aae8925",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b3d4f207-478b-4f80-9302-9278c77564b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cacda8-ca11-4ca1-9f31-e3016752d49a",
        "cursor": {
          "ref": "9b52d7a5-b7f7-4353-aaf7-4f1f3e9d1409",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c114c49a-8237-483b-98fd-90f5840f293e"
        },
        "item": {
          "id": "18cacda8-ca11-4ca1-9f31-e3016752d49a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "837e06f6-da22-484b-9379-eef6ba4811d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84258c-eb2c-4daf-bea2-0aac5beb99a7",
        "cursor": {
          "ref": "381be843-85a0-4fae-a210-206f9c446738",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "db569f92-c9a2-4858-94a0-1082b6afac68"
        },
        "item": {
          "id": "3f84258c-eb2c-4daf-bea2-0aac5beb99a7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f50ca13b-e591-4126-89fd-7b7258625c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ddf3d-9f62-4c66-ae2b-a668fbc8f115",
        "cursor": {
          "ref": "e9b9d031-97b9-46fa-a8f6-893df324bf1b",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9de9d0c7-7fae-4f60-a941-cfc81fe1358d"
        },
        "item": {
          "id": "3b5ddf3d-9f62-4c66-ae2b-a668fbc8f115",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1f26795-db8f-4524-8a57-d4305f7bfd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8adc730-bb1e-4cf3-af25-cc2afcf12a8e",
        "cursor": {
          "ref": "7d5aa564-92e3-48d4-a732-2b458e15d4a5",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a39837bb-5cad-4cdc-96dd-41cc65077d0c"
        },
        "item": {
          "id": "f8adc730-bb1e-4cf3-af25-cc2afcf12a8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b66b16f7-00fc-4e24-a99d-6a4bb152858a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e936970-bb26-4c31-8491-c948ba920972",
        "cursor": {
          "ref": "506eac7e-e2fd-418e-9efb-f11b9452f9f3",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c69fe13c-71cc-4cf3-92b4-782e376009af"
        },
        "item": {
          "id": "6e936970-bb26-4c31-8491-c948ba920972",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4b64a1f6-dabd-4f97-b1a6-aaf989200249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf1bf38-02df-4a85-a2b9-065c45760985",
        "cursor": {
          "ref": "4ceba071-c1b1-4998-9ecc-151253f97a3b",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a9251a21-ed55-41c1-810f-ad384cb79932"
        },
        "item": {
          "id": "7bf1bf38-02df-4a85-a2b9-065c45760985",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "84a97d1f-b07b-4c8a-8445-c0d7ce658103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa54077-a7b2-4227-87da-61e07f795c75",
        "cursor": {
          "ref": "fc248158-5101-4e68-a0b5-23da96328d4a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28cb0cbf-a2a7-4cb5-b995-f733296d26e9"
        },
        "item": {
          "id": "faa54077-a7b2-4227-87da-61e07f795c75",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a063775-6d77-4fbe-ac80-9ff885cff541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55159c17-ca87-4551-bc6a-ea7c5b6ad2f0",
        "cursor": {
          "ref": "f324e43f-7aa4-4798-9eb8-b6034f406323",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "897f1166-7a44-46d7-9098-f7363f92de64"
        },
        "item": {
          "id": "55159c17-ca87-4551-bc6a-ea7c5b6ad2f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "74321825-99e6-4db4-844d-d9b5ce754928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a1c75-78e3-4ce3-bf84-9a69e9aea4c4",
        "cursor": {
          "ref": "1e24adec-1679-479c-b21f-0534ad2eb311",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c221d564-efc7-4748-b668-ecd21e513695"
        },
        "item": {
          "id": "c63a1c75-78e3-4ce3-bf84-9a69e9aea4c4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c999553d-81cc-4788-abef-fa9cc66b75f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7963ddb3-4f81-4c04-9434-4765947819f3",
        "cursor": {
          "ref": "9f17f780-3850-4091-b35c-3b1677eb8841",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d30bff99-c8ad-4e65-9d16-600022b14fc4"
        },
        "item": {
          "id": "7963ddb3-4f81-4c04-9434-4765947819f3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c43885f1-df85-4019-aad3-0312c1f07344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0206bfa6-a707-443c-861b-fdffcd1d94b5",
        "cursor": {
          "ref": "1e283b02-15f3-41ec-a3f7-9a9e66023866",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b396d4db-31fa-4202-83a5-0b72bbb2a095"
        },
        "item": {
          "id": "0206bfa6-a707-443c-861b-fdffcd1d94b5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "72fbf737-1f36-4508-aaab-e274daec6aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e67b6d-38de-402a-853b-5f9e0081c31b",
        "cursor": {
          "ref": "7a802746-acec-48d5-8a4c-ecc2c7c13c59",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "05659d64-5974-4302-b473-5421917f0bca"
        },
        "item": {
          "id": "69e67b6d-38de-402a-853b-5f9e0081c31b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c703324-35c6-4043-87ee-dc0ef174832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee099fe-12a4-48d2-9d8a-27ba396e868f",
        "cursor": {
          "ref": "83cddcdd-caa0-497a-a76c-05d8f60b9f3a",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fd36698e-e0d0-4a75-845a-7bb909f14e57"
        },
        "item": {
          "id": "6ee099fe-12a4-48d2-9d8a-27ba396e868f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "beabafe8-c8d5-4f4b-878f-16c8e4b29794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca3430-a339-4245-b888-b5e30d25517a",
        "cursor": {
          "ref": "484b26bd-8ca1-4b4f-8eac-54202924a06b",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d5d5c461-dc21-40d1-9b76-eff24091bd9c"
        },
        "item": {
          "id": "91ca3430-a339-4245-b888-b5e30d25517a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ba6c4201-45d2-4cd0-9600-d8b8a7d5aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677968bc-3166-41de-8383-8bc32a1a9503",
        "cursor": {
          "ref": "0ae58715-2d46-4195-9894-31b62309f3b2",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c9b9e35c-264f-41ec-b081-22564dd68641"
        },
        "item": {
          "id": "677968bc-3166-41de-8383-8bc32a1a9503",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d5cbd732-b787-47d4-b720-6431494ce4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a8c80-b137-473c-88be-58bbb051d871",
        "cursor": {
          "ref": "6eca838b-e709-4ddc-89e9-5238d532a411",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0aa1a368-6d71-4fda-948d-aae77af52249"
        },
        "item": {
          "id": "cd0a8c80-b137-473c-88be-58bbb051d871",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "69792e17-158d-424d-9c2e-1fdb4de483cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b531b69f-b7b9-48de-a750-9026d26a48f5",
        "cursor": {
          "ref": "63f14fc4-53f3-4f39-a652-6feeb53a356d",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "40f21d4e-362c-4039-bfe6-9a800afeb743"
        },
        "item": {
          "id": "b531b69f-b7b9-48de-a750-9026d26a48f5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc596c75-65a8-4427-ac01-2483abe704e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30785549-b2bf-44f3-a933-e5cd9f8e7881",
        "cursor": {
          "ref": "d771590f-3e35-49fa-85ab-cf4ee88f15bb",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1195f56e-2480-4e50-a3cc-41cc00408ad8"
        },
        "item": {
          "id": "30785549-b2bf-44f3-a933-e5cd9f8e7881",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6c3714f5-f1f9-49c1-bb4e-55d04a8e3247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cc5a01-4c73-4631-8255-8efb8fbdecd9",
        "cursor": {
          "ref": "ed23051c-69c6-4493-bf62-9b66d364d818",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ecffdc07-e7d5-4873-ad3d-20f4db7ae16a"
        },
        "item": {
          "id": "f2cc5a01-4c73-4631-8255-8efb8fbdecd9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0923725d-9531-4205-818b-73d947ef152f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3628ec85-06ea-4d56-977a-ca50b3ca85a0",
        "cursor": {
          "ref": "c129d616-108f-4f53-b51d-ec710f25fe7d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8fbdf68d-def6-4a11-9387-55b80940c56c"
        },
        "item": {
          "id": "3628ec85-06ea-4d56-977a-ca50b3ca85a0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f0619ab7-ca9f-4289-b6fa-07a24fff42cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b8b24a-2559-4b6c-93ce-8b5c9757d1f0",
        "cursor": {
          "ref": "edc5c61b-4db6-4c79-820a-ba5d3b6a6e49",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5e469b9f-e173-4280-97d9-dc156088e6db"
        },
        "item": {
          "id": "f5b8b24a-2559-4b6c-93ce-8b5c9757d1f0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eb62d15b-153d-46d8-ac4e-953de7be2b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7bb38f-9637-472c-88ac-b8c72c5ffff2",
        "cursor": {
          "ref": "c036cac4-b417-4057-90e9-dfe0bf3b16c4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e54100c3-5b60-40da-9a70-d5081da9dac3"
        },
        "item": {
          "id": "2f7bb38f-9637-472c-88ac-b8c72c5ffff2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a201d4dd-3506-4676-b47c-9813d58426b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c8acab-e758-43e1-843a-478f2dd31122",
        "cursor": {
          "ref": "5c20e448-c542-4cbb-b89c-158857bf8685",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f9fce27-aeb1-4855-b08c-40bfd4f23b1f"
        },
        "item": {
          "id": "41c8acab-e758-43e1-843a-478f2dd31122",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "67237ce2-e297-4e3a-b75e-dd88228a074e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e3299-e14d-4a93-b615-839749ed2048",
        "cursor": {
          "ref": "e4ac54be-7f28-47b7-8579-043125614c94",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5a4e01b-d101-40e6-918a-70a2e57f0a13"
        },
        "item": {
          "id": "ea5e3299-e14d-4a93-b615-839749ed2048",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "760b2c65-eb1f-4401-a4b1-49421c945939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a0e602-3ae1-4686-b0fd-e99646090eed",
        "cursor": {
          "ref": "4e36dc43-7571-49ff-adff-49573679077b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46840092-ad39-46aa-b239-00c8cd80ef02"
        },
        "item": {
          "id": "36a0e602-3ae1-4686-b0fd-e99646090eed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "90287b7d-3fb8-4fa4-9918-d9f4b621cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebe1706-249c-4a56-94f2-5af5947439fc",
        "cursor": {
          "ref": "8243c306-d8a1-41a2-9f93-d8b3a77211c2",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7362ffe6-84a8-48fd-8d13-7d5995ef4c1a"
        },
        "item": {
          "id": "9ebe1706-249c-4a56-94f2-5af5947439fc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dae964be-6d28-4dc1-8caf-f1378bcd9d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025ab26-64d9-4a0d-aa0c-b61a293081d1",
        "cursor": {
          "ref": "9a49df91-5f69-4888-b5c6-792cd3c2a1cc",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ceb5c4d0-4f5f-47b4-90d0-d2d53234a7bf"
        },
        "item": {
          "id": "b025ab26-64d9-4a0d-aa0c-b61a293081d1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7eae94e2-28a1-418c-95ec-a3d6e68526a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0f178-6ebc-42d3-9210-69e6575b6b8b",
        "cursor": {
          "ref": "fddd79fa-0ca7-454f-b422-b64e7b5414d4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2f981a4c-b7fc-41b6-8bd3-94ebfba22c8e"
        },
        "item": {
          "id": "19a0f178-6ebc-42d3-9210-69e6575b6b8b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "87ac5c7e-d0d9-477c-a69a-2a8f5dee3c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af16dbb-f899-4efa-9292-0e0c687e9202",
        "cursor": {
          "ref": "2da5e6af-9b25-4ac2-8cd1-074a7913b7ae",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1642a25a-c690-4d37-897f-e3484a5fc9c5"
        },
        "item": {
          "id": "5af16dbb-f899-4efa-9292-0e0c687e9202",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4cd7c871-849b-485d-ba2a-247067ce0a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d7dde8-17a6-4ec3-9f34-ac986acf7978",
        "cursor": {
          "ref": "d704e974-8008-4d2e-9daa-dd3b07378be9",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ada3cd0-4215-451b-83e5-e33c64df383c"
        },
        "item": {
          "id": "c2d7dde8-17a6-4ec3-9f34-ac986acf7978",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c950af29-2593-4c46-9d20-2ab3963d4a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0777d0b3-e568-40cd-b4dc-998404af4b40",
        "cursor": {
          "ref": "e469b4a3-c581-4007-b36a-19d36217e16c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "860b0595-2303-477b-a75c-5f1f8ad68e5f"
        },
        "item": {
          "id": "0777d0b3-e568-40cd-b4dc-998404af4b40",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0cc308d4-10f1-4bbd-b7e0-740083184040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328fa84-38d3-4c9c-9352-235f5579002c",
        "cursor": {
          "ref": "2d520437-8d1a-4864-851f-ac42bd772807",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e19b12bd-41dd-469c-b909-8735086fab0e"
        },
        "item": {
          "id": "3328fa84-38d3-4c9c-9352-235f5579002c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0d6466e-db09-49c4-ab36-54219921d212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65caa64e-9b88-4272-9480-a64597d9e9b3",
        "cursor": {
          "ref": "daca7ced-c1e7-4943-8462-bd949fd97c5e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6c360b1d-2eee-4fa1-b12a-7c4ac2469d16"
        },
        "item": {
          "id": "65caa64e-9b88-4272-9480-a64597d9e9b3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b066e66f-c1e4-467e-b31a-47e32db2085e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29719079-507b-4b95-a974-46dabd8fdf32",
        "cursor": {
          "ref": "836b6434-3df2-4f50-895c-6c878d44b4e9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b4bbd7d2-0155-4e44-a015-3a7ee0274065"
        },
        "item": {
          "id": "29719079-507b-4b95-a974-46dabd8fdf32",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "64f6ec03-d20c-4f9a-91ac-e43bd60eaeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0599bfbb-db37-4bbb-a2f8-32ceb8c45f50",
        "cursor": {
          "ref": "c76085b9-b884-4d10-aa6a-059483c8f4ed",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f5f07d9b-7055-4a45-907a-1d63ca1aa1d3"
        },
        "item": {
          "id": "0599bfbb-db37-4bbb-a2f8-32ceb8c45f50",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "da9879d4-6a75-46ee-97d6-4f41bc4f385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe9b58e-0a93-4785-9c4a-0aad1750b673",
        "cursor": {
          "ref": "4f92843b-8b85-4820-84e9-86d809a3f6fc",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac664ffd-086c-4a3c-8932-48e18ea6cdc5"
        },
        "item": {
          "id": "2fe9b58e-0a93-4785-9c4a-0aad1750b673",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "faef8a5a-a854-4035-a1f9-6eb65c861cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eb4967-b795-4089-b6de-b1be613186fd",
        "cursor": {
          "ref": "69fbb9a4-a3cc-495b-b5c9-92e3a5c66d44",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "52585b12-c2a0-40c0-9dbf-37a794cf142a"
        },
        "item": {
          "id": "b3eb4967-b795-4089-b6de-b1be613186fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1bff6889-85ce-420b-9448-8b717ac5d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416a2013-8a43-437f-b61b-c505d2c8a7d5",
        "cursor": {
          "ref": "b10da00c-a67d-4231-84e8-b3559ee79938",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9d1db47b-1dd1-4067-b887-23353b31a7e2"
        },
        "item": {
          "id": "416a2013-8a43-437f-b61b-c505d2c8a7d5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3d910bbd-20c7-4b05-a9bc-3c9029957514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885612ed-7655-47c9-9123-f9a924348cae",
        "cursor": {
          "ref": "f6abc3f1-c448-4831-abb8-aee18c651fd9",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ab3652e7-4c8a-46ed-95ad-ee550be9811c"
        },
        "item": {
          "id": "885612ed-7655-47c9-9123-f9a924348cae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fdf2fcb0-d04a-44e6-a99e-28bc069221f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b60a4b-561c-4789-a980-81487c46d8ac",
        "cursor": {
          "ref": "46b713da-58bc-487d-bcfb-5cda63d63a79",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bc9f734b-352d-458a-8aba-f0f5a1c7ba88"
        },
        "item": {
          "id": "f6b60a4b-561c-4789-a980-81487c46d8ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37b9fc60-a6ba-41e9-9c0a-c0f2a0713455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dc3d84-1eb5-4d63-b3ec-73a33fb9c0d9",
        "cursor": {
          "ref": "be93c7f0-d511-405f-8998-76663f78933b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "526b7098-9816-451c-885f-72a524b35cbd"
        },
        "item": {
          "id": "a6dc3d84-1eb5-4d63-b3ec-73a33fb9c0d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "86fe0530-928e-40c6-83b0-3b7c2b531297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b86db-fdcc-4182-9ceb-f6b2b2f1f80f",
        "cursor": {
          "ref": "6642dbe5-8055-4c71-b6f7-795a80b38b4b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b30b92a5-8a60-48be-97c0-1319800cf177"
        },
        "item": {
          "id": "ab3b86db-fdcc-4182-9ceb-f6b2b2f1f80f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0cff4eae-f154-4d0b-82f7-0b1784cee16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d57cd8-1ef5-40eb-986d-10420965ed37",
        "cursor": {
          "ref": "01ac7944-4921-48c4-a83c-bec0d5bc7df0",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cced9abe-e993-4fd6-9e37-0cb9c65bad95"
        },
        "item": {
          "id": "54d57cd8-1ef5-40eb-986d-10420965ed37",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b14ca47c-b584-47a5-9e3e-138b394039e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fd3851-3932-4311-9576-ebcaf3b9d661",
        "cursor": {
          "ref": "73a302c7-0b64-4377-941f-15ca8007dd9d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aa36f590-1c81-4440-a327-2255ff8105a1"
        },
        "item": {
          "id": "14fd3851-3932-4311-9576-ebcaf3b9d661",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0cb0c25f-c741-4033-9338-b0bf1c57fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a291efb-5088-428d-803d-18054d1091b8",
        "cursor": {
          "ref": "4c50be84-7cbc-416a-bf11-d7e7fb55f661",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e97cad1-030e-467a-9695-f74e32aff382"
        },
        "item": {
          "id": "6a291efb-5088-428d-803d-18054d1091b8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "73082d01-4f37-48ed-9018-6ae1788429f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbfee87-ce92-45ef-8232-3a35865aafad",
        "cursor": {
          "ref": "b04f0ce2-a78a-4394-b902-940d878467ac",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1356c550-83c2-4c11-896c-fd9ccd7299d1"
        },
        "item": {
          "id": "5bbfee87-ce92-45ef-8232-3a35865aafad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "27a16ff9-732e-46ab-a8de-9543bea701a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c7b25-7e50-4f43-9c11-e566f0377e39",
        "cursor": {
          "ref": "d3118fab-0baf-4bac-84fb-ee4c338694af",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7654cd06-698e-439b-9907-25f7563dee1e"
        },
        "item": {
          "id": "028c7b25-7e50-4f43-9c11-e566f0377e39",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9e62a6b3-00eb-42b7-a91b-0f8a78c465c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ae15cb-8dc4-48f1-afa6-a1f7ae3c9c02",
        "cursor": {
          "ref": "9b3ac044-a573-4b33-aee1-e2d50ee29783",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0d7da40b-1d54-4076-ac21-615dbd01f30e"
        },
        "item": {
          "id": "84ae15cb-8dc4-48f1-afa6-a1f7ae3c9c02",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e1025b74-cbc2-4487-8fa1-8db0b461d25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7863e3a4-e7eb-427b-bfed-a947614f248f",
        "cursor": {
          "ref": "a1469098-937b-4f5f-aa8c-ce687078878c",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5f153de1-cdbb-4626-bca7-97ae9acf679f"
        },
        "item": {
          "id": "7863e3a4-e7eb-427b-bfed-a947614f248f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "af364325-d341-4a4b-91bd-79abac02cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe1b77-ca12-4dbd-8a7c-1b90eaf6edab",
        "cursor": {
          "ref": "c62ad6b3-7d00-4c0c-a904-5092691e2e8f",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8d72d929-ffef-4595-814a-d0d173f82802"
        },
        "item": {
          "id": "e2fe1b77-ca12-4dbd-8a7c-1b90eaf6edab",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "116e1530-6ba2-4d51-a583-eaf515ff89d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ff7902-6a61-47e7-80f6-cdd538277bbc",
        "cursor": {
          "ref": "e96f1ec1-766b-4eb1-96f9-44d4a5e9fcab",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d3e3b784-1e26-459a-9429-68ef1ffd65ed"
        },
        "item": {
          "id": "15ff7902-6a61-47e7-80f6-cdd538277bbc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f243c7c8-cdd3-4881-b0b9-c99f5ee0903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fd8245-6311-440b-b42d-e99e8f17f8f3",
        "cursor": {
          "ref": "698e9a8d-d5f5-4176-a91f-d3eeaa360533",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "87baaefc-8d05-4f29-8d47-a517e5a96c92"
        },
        "item": {
          "id": "a0fd8245-6311-440b-b42d-e99e8f17f8f3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "43cb6f71-78f8-4662-8fe3-3738664d59ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e5d51c-2ad8-4929-849b-838c415841df",
        "cursor": {
          "ref": "dc5fdde9-0746-48ca-bb0b-aefaa37b3148",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b337a6a9-8f69-4243-a940-cea88df5eef2"
        },
        "item": {
          "id": "d8e5d51c-2ad8-4929-849b-838c415841df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d59f9072-5947-4ed6-a88a-1c10ad440bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c3be0-2e52-44fd-b717-5e45a4e21580",
        "cursor": {
          "ref": "e0ca636c-4ca7-4221-9c40-3cf3bdaead4d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b9ba5e73-8e91-40dd-8902-4bdca551b173"
        },
        "item": {
          "id": "391c3be0-2e52-44fd-b717-5e45a4e21580",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "34169881-b002-4f9e-8d53-11a76e09ce7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3605af56-bc1e-4a70-b407-f3b4ad7a99a2",
        "cursor": {
          "ref": "c18022ab-f8d7-420b-9ca8-41e52c1ab6ef",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0d316a98-820c-445b-b3d3-dc57491d320d"
        },
        "item": {
          "id": "3605af56-bc1e-4a70-b407-f3b4ad7a99a2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3ceb9f07-c515-4b74-b8d7-ce9124f6954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db04cb2f-6aa1-43d6-9ae5-3c3bc0b99310",
        "cursor": {
          "ref": "29c1c048-5b49-4226-ac15-2889e6238a79",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "12a0a4ca-f372-4837-a48f-5199fe6249ff"
        },
        "item": {
          "id": "db04cb2f-6aa1-43d6-9ae5-3c3bc0b99310",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "83892644-c085-406d-bd73-7699aa29c261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42a1e2a-f049-415b-b238-aca75cfe02c1",
        "cursor": {
          "ref": "b2c7734d-552b-46a8-ac1b-1cd1e8f19473",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4abfb187-4152-4b03-a5e6-fcedb4292ad3"
        },
        "item": {
          "id": "a42a1e2a-f049-415b-b238-aca75cfe02c1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "102f4cdc-96c6-4690-908d-faf4edea55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1740ae-d218-44e1-8045-0eecdad1d335",
        "cursor": {
          "ref": "9c87b7e7-230e-497a-bbce-162e08a30297",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5867b069-1da2-44eb-8123-989372623cb6"
        },
        "item": {
          "id": "2a1740ae-d218-44e1-8045-0eecdad1d335",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "da9a04eb-6184-497c-8032-630fffc12d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06887e-28dd-44cc-93e1-a3872b882afb",
        "cursor": {
          "ref": "24000a6c-a14f-4601-8918-029c1481e073",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5809c226-dd3f-4c12-96b6-7e98f982a6a6"
        },
        "item": {
          "id": "2f06887e-28dd-44cc-93e1-a3872b882afb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8acf2bcc-c01f-4bbc-bc0d-b297c3269277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1712472-cb24-472b-850d-54c1533c7e91",
        "cursor": {
          "ref": "d919f682-6b32-4835-a5b6-1aef7012d047",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d0f3c18e-ede0-44f5-8930-36879de6665a"
        },
        "item": {
          "id": "e1712472-cb24-472b-850d-54c1533c7e91",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb71c395-17c4-4da0-bdf4-66994b310351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59575e6b-78ae-40dd-bb08-c9e9d8d6bd64",
        "cursor": {
          "ref": "6e3b0bd6-db2e-46c0-8959-f10c2d26fa88",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4fc79868-c191-41cd-a22f-5a72cef93d7a"
        },
        "item": {
          "id": "59575e6b-78ae-40dd-bb08-c9e9d8d6bd64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b18e5fc5-144a-464f-990d-393deda65e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ca7e0d-c63a-4674-be3f-f75eaa809374",
        "cursor": {
          "ref": "7a4bee26-296e-4aa1-b49d-daf5d7735c16",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b713dc8f-4f10-4027-b6d0-ff1e17787505"
        },
        "item": {
          "id": "c2ca7e0d-c63a-4674-be3f-f75eaa809374",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cf3b2740-c36a-404d-aa28-ede391e61c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca43bf7-a5a9-45b4-ae72-ac6a1a02ee1c",
        "cursor": {
          "ref": "1b68ca8b-3d35-4778-98a0-0fc2610e2899",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ac07f788-fe6f-4e2d-b823-0c115c756bad"
        },
        "item": {
          "id": "7ca43bf7-a5a9-45b4-ae72-ac6a1a02ee1c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "753313b9-fd17-4b81-9241-0baddadebd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf6e08-9c66-47e4-b21c-1dda6e1c8acc",
        "cursor": {
          "ref": "eb59d54d-d591-47f1-a32b-9344fd52d33c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "caff47d8-7704-4c82-8162-c3ca79fd8705"
        },
        "item": {
          "id": "acbf6e08-9c66-47e4-b21c-1dda6e1c8acc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "39307082-210c-4d58-9fe4-078a3bb7b285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a3b8cb-fa5d-41e8-acb9-8640097632e5",
        "cursor": {
          "ref": "41a39192-bccd-482a-ba86-f12a7560442e",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0415401-84d2-4934-a490-dc0e11caedf9"
        },
        "item": {
          "id": "83a3b8cb-fa5d-41e8-acb9-8640097632e5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a847724d-5191-4f5a-ab76-b72df7b3e4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ab4312-e7f3-46b7-86cc-ae092ccb2674",
        "cursor": {
          "ref": "734f550b-bf4c-4e42-8d4a-55e6c95999f5",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3955cf3a-2bcc-4b6a-b0bf-29d29bff8f63"
        },
        "item": {
          "id": "85ab4312-e7f3-46b7-86cc-ae092ccb2674",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "92fc2e4d-2450-462f-80e4-ad881b67fcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c58773-2eb5-461b-a13e-ebb017e633a7",
        "cursor": {
          "ref": "783afbc5-3c92-430e-99c6-14680ba35572",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3fd84ef9-cec4-47f2-a03f-8be2d968e4ba"
        },
        "item": {
          "id": "f4c58773-2eb5-461b-a13e-ebb017e633a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "99c951ba-e61c-4637-acd2-8d6c85b1cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ae4a5c-620a-49cc-8c47-397c8ca38630",
        "cursor": {
          "ref": "4d3c0b8a-4be9-4ebb-a744-fb28be3621cc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "339b7c9b-ac2c-4bde-9cfb-173b09fb32d7"
        },
        "item": {
          "id": "99ae4a5c-620a-49cc-8c47-397c8ca38630",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "acb314f1-aa53-4918-a1ab-e5b5ae1520f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e8a121-53fe-48cb-b119-9646a5154850",
        "cursor": {
          "ref": "a4e426d0-9779-40d7-8089-5e7d70c11a74",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a91010f9-4ac1-4b28-93ed-59e745545820"
        },
        "item": {
          "id": "b3e8a121-53fe-48cb-b119-9646a5154850",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b6eb111-b2b8-4585-ac7a-e6d25add8ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca1a51-cfc0-443c-80a4-63eeabdc4a26",
        "cursor": {
          "ref": "fb2e346e-04ad-4a86-94b3-935fb27a1c3a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6bdcbee-efa0-4102-b31c-acbbd8c2e780"
        },
        "item": {
          "id": "e5ca1a51-cfc0-443c-80a4-63eeabdc4a26",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c7e8ea5c-4530-466b-a10b-27aeeb72ef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcfbebe-3533-4a6f-9bd6-3b829d5abd14",
        "cursor": {
          "ref": "b09dc713-ba1a-436f-9d5a-170ed83b91f5",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a8459fbd-1332-4927-8a88-7574e55bad13"
        },
        "item": {
          "id": "2dcfbebe-3533-4a6f-9bd6-3b829d5abd14",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "aa86dc54-f2a4-4ba5-8935-b0e7f615b5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633f8036-58cc-4174-b535-c487285568e0",
        "cursor": {
          "ref": "fa128697-4844-440b-93b7-1da86a656cb2",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "237d839c-6679-4117-a6bd-1db52f4ed13e"
        },
        "item": {
          "id": "633f8036-58cc-4174-b535-c487285568e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9ef6e38b-0e62-40ca-b0fd-b6ef6768f698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487d362-5d5b-423d-8de7-0c480901bd58",
        "cursor": {
          "ref": "6414b20a-c6ae-4235-8308-0f6015cf3fe4",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d598818-1df9-43b6-94ed-5339c64170bf"
        },
        "item": {
          "id": "7487d362-5d5b-423d-8de7-0c480901bd58",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e9d8b367-7b22-4d29-a96c-77ec4bedb501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c83b3-7106-4562-8dfe-b3b7377c2743",
        "cursor": {
          "ref": "8c674bf3-fc20-4899-9ff8-d82b45243190",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da152330-3ffa-4024-972a-d7bd7ba1d16d"
        },
        "item": {
          "id": "a60c83b3-7106-4562-8dfe-b3b7377c2743",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c7483eb0-f6dc-4e6e-b4cb-b0e309729d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecc5228-8bab-42a2-a291-bc81ed5234fa",
        "cursor": {
          "ref": "ab697f95-f7cd-4252-83b9-af8c41ed2e4d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "259ada89-4462-49d8-935a-928a6f5b39da"
        },
        "item": {
          "id": "0ecc5228-8bab-42a2-a291-bc81ed5234fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc26ed28-e3cb-40f2-a9d7-ff0f3493c007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af146d2d-765b-4568-b4b8-285356b27404",
        "cursor": {
          "ref": "3010766a-4d31-465f-b8a0-8dda5a444370",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac818931-e1a2-4325-8dc6-b659ee42bc00"
        },
        "item": {
          "id": "af146d2d-765b-4568-b4b8-285356b27404",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "adf6dd50-9bd0-48a9-8a46-41f172d9ed2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e279ea4-7b52-4ad6-a992-7f8d3e5a29a1",
        "cursor": {
          "ref": "1ef00b31-9bfb-4382-baad-2953a3437d52",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5a8d2b19-e365-47ee-ad39-f53c47252632"
        },
        "item": {
          "id": "5e279ea4-7b52-4ad6-a992-7f8d3e5a29a1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2ea0a2df-2ef6-45f7-9c0d-5a3fdf97f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa207b7-d3b7-477e-a4a2-ce78eea085ef",
        "cursor": {
          "ref": "5571ee28-37b5-495d-bc94-786dd5dfc81b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9765e0e3-7a56-4c1a-a386-a6f2107a70a1"
        },
        "item": {
          "id": "0aa207b7-d3b7-477e-a4a2-ce78eea085ef",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0214cfab-f774-4872-9ea8-8d913f182194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1144b3-e435-4baf-b088-d3211b9a786c",
        "cursor": {
          "ref": "9a6cb7b6-ba29-4dbe-a2bf-bfbf1e828699",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1bc68bda-0b09-476a-b5f3-6a652b82d53e"
        },
        "item": {
          "id": "6c1144b3-e435-4baf-b088-d3211b9a786c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "50a8c75d-b40c-4aea-adc3-3cad499687fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46423ff8-a089-4d26-9100-837da363d360",
        "cursor": {
          "ref": "8b8f8da6-097d-47f4-b02e-d1e5a216d602",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "61d69abb-454f-409d-836d-c3c396fa0500"
        },
        "item": {
          "id": "46423ff8-a089-4d26-9100-837da363d360",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7c3d33e2-6428-47d6-86fc-7058eba83fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b80510a-aa25-402e-bbf7-c7d3a512cdc0",
        "cursor": {
          "ref": "66b9dde8-1dab-4886-90c2-1bbf5fe94b8e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "43631d96-2ee8-4055-a477-326108f94d36"
        },
        "item": {
          "id": "5b80510a-aa25-402e-bbf7-c7d3a512cdc0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1b73b005-fe3b-4e45-b5b0-e18184c4f397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8db3f6b-d2e5-4611-a4b5-8183ef40717b",
        "cursor": {
          "ref": "cae3a4bf-d794-4858-99d2-255f68d9dbba",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf3dc06c-d991-4929-b7ad-90a517185a2f"
        },
        "item": {
          "id": "a8db3f6b-d2e5-4611-a4b5-8183ef40717b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "38ccf66c-be6c-47c2-9a2f-9eb029160181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c00ca38-fec3-4b8f-a27f-758a406a1eea",
        "cursor": {
          "ref": "808bc03b-ec51-4499-9b70-a1e4fb222069",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c38eb93e-ca09-412c-89e6-ceedf3dbf9ad"
        },
        "item": {
          "id": "2c00ca38-fec3-4b8f-a27f-758a406a1eea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ce209aad-1bd8-4f58-83d2-06ccf4edc9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832a1066-6024-4552-ba0c-199e599e87ef",
        "cursor": {
          "ref": "5b5ef054-d289-4f5f-bd25-ae35d91497f1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6eac767d-1a46-4a62-83e3-557544c83001"
        },
        "item": {
          "id": "832a1066-6024-4552-ba0c-199e599e87ef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "466d9fe7-5638-4919-a272-f970362cee7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093fddf7-08be-4f85-850e-6a1f9551d509",
        "cursor": {
          "ref": "94befee5-ef6d-4552-b209-535645aba4ee",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2dc20a6e-b670-44eb-a107-0bf904ab5aff"
        },
        "item": {
          "id": "093fddf7-08be-4f85-850e-6a1f9551d509",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "05a50eb9-983a-4508-8b4a-e40eefb870ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a437faed-1873-4d21-b6a0-8f889a58709f",
        "cursor": {
          "ref": "ff2fa1a1-a2a9-412e-9a3e-366768a9bd13",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40a86b5d-02c2-4188-843f-ec9bd085a220"
        },
        "item": {
          "id": "a437faed-1873-4d21-b6a0-8f889a58709f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2bc280e4-5853-411b-bc05-e9e224c7178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7d2030-a30a-441a-87e0-a8053b4c7613",
        "cursor": {
          "ref": "42b440c0-ba0e-45ac-8891-0976b4dd4166",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9399659c-dd6c-4207-af46-10241e46f06f"
        },
        "item": {
          "id": "7c7d2030-a30a-441a-87e0-a8053b4c7613",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "83e943a3-4844-474b-9bf0-72b1a4e674df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d50e20-aa50-42fd-8c99-fa46dfd7b37a",
        "cursor": {
          "ref": "009ab8c9-7df6-4a42-a6de-0ef52b707c85",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "19e81937-0022-46c0-847b-7ff28cb7dd2c"
        },
        "item": {
          "id": "e9d50e20-aa50-42fd-8c99-fa46dfd7b37a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "647572ec-5d4d-4530-8a5e-cb18ec5119e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ee9a2f-99df-4060-8cf8-541ba288f0c5",
        "cursor": {
          "ref": "a0eb8f4c-7be9-4342-a280-f0edf7a80573",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "48e2d7d7-6cdf-4ca8-abae-36279205ddce"
        },
        "item": {
          "id": "c7ee9a2f-99df-4060-8cf8-541ba288f0c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b50686d-5940-4c6b-81a4-bace3eb581ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a76e09-1d08-4815-8656-c96ecd91b677",
        "cursor": {
          "ref": "b436bdb1-cc3e-43ae-8f47-ab48b4e2ba15",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c54a741b-5b4d-4164-b5f8-f486507cdda3"
        },
        "item": {
          "id": "f4a76e09-1d08-4815-8656-c96ecd91b677",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "639e498e-4889-445f-af7b-85000680f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c22ed0-b945-485d-941a-be3b7d3a9b42",
        "cursor": {
          "ref": "9a90a42c-d718-4d98-92bc-7a2b4cea3647",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8f84185a-d36c-4246-a590-37f6867cfbf5"
        },
        "item": {
          "id": "f9c22ed0-b945-485d-941a-be3b7d3a9b42",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e2cab2f7-62b8-4eea-873b-3ae2e269ed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7a52d-e4af-4105-804b-490eb7875403",
        "cursor": {
          "ref": "25fce04b-0fb8-4b13-a68d-6047ca6fb46c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0f7fafef-eff3-498b-a98c-f813029f8ef5"
        },
        "item": {
          "id": "8fb7a52d-e4af-4105-804b-490eb7875403",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4402aa5b-42a8-4e2e-93a4-de22c028c8e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3b30a-77d7-4d1f-a744-7a59448afd56",
        "cursor": {
          "ref": "0d9feb51-4b23-4cb8-8454-aee56f13fd87",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e95e1771-b6e4-4962-aed7-aeff2805c500"
        },
        "item": {
          "id": "0ea3b30a-77d7-4d1f-a744-7a59448afd56",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bed7eee3-99fc-4fdd-804f-7244cb52d7ea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb8d7d-138d-4005-ad27-91ca8d509731",
        "cursor": {
          "ref": "b6f2eb8c-7237-414c-9711-9ce76a8b8041",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "289cae62-5224-4b1f-8cb2-90b780ff356d"
        },
        "item": {
          "id": "a0eb8d7d-138d-4005-ad27-91ca8d509731",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9e60bca4-28a4-4992-b462-c1d8611c9a8f",
          "status": "OK",
          "code": 200,
          "responseTime": 669,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cbd10e-57fc-45bd-9d48-d2569e2aa2bd",
        "cursor": {
          "ref": "385d7333-1ab6-4755-a21d-6cd51076401f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa5c82e8-9c8c-49e0-b80b-a0aea48961d7"
        },
        "item": {
          "id": "87cbd10e-57fc-45bd-9d48-d2569e2aa2bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "979ad17e-9def-40d1-8e17-e065db1c7813",
          "status": "OK",
          "code": 200,
          "responseTime": 1764,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24328fc2-4c3b-4c60-b474-99b11cfd31f4",
        "cursor": {
          "ref": "3b011d4a-a5ff-48df-a401-b5afc489cad8",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d64c09cd-57e7-4962-a969-20da64c0f1ae"
        },
        "item": {
          "id": "24328fc2-4c3b-4c60-b474-99b11cfd31f4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e237db4a-e1e2-4134-89fe-ebd401a0f9dd",
          "status": "OK",
          "code": 200,
          "responseTime": 2020,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
        "cursor": {
          "ref": "014aa625-a9ed-4bca-ac08-eaf577ee4056",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d3a18cf1-97ac-464d-b291-bd40a0288bda"
        },
        "item": {
          "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89947d3c-5a9f-4216-99b7-b107c6a9d02a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
        "cursor": {
          "ref": "014aa625-a9ed-4bca-ac08-eaf577ee4056",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d3a18cf1-97ac-464d-b291-bd40a0288bda"
        },
        "item": {
          "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89947d3c-5a9f-4216-99b7-b107c6a9d02a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
        "cursor": {
          "ref": "014aa625-a9ed-4bca-ac08-eaf577ee4056",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d3a18cf1-97ac-464d-b291-bd40a0288bda"
        },
        "item": {
          "id": "76d9c79f-65d6-492e-ac51-52de494a4016",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89947d3c-5a9f-4216-99b7-b107c6a9d02a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9faaff-903f-41a1-b32b-ad4352ffeecd",
        "cursor": {
          "ref": "53f5dd71-b6c4-4dd6-ad80-595698781c84",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a3487f9-0ad9-4bd7-a0ef-777f89776318"
        },
        "item": {
          "id": "ba9faaff-903f-41a1-b32b-ad4352ffeecd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d6305b6b-a894-449c-9a3b-8a03b5d8a660",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 628,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d9de9b-7f24-42de-bcf9-31187d181813",
        "cursor": {
          "ref": "4518cc77-584e-4377-ae29-74a8f16e8c3f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ffd1aed4-1310-4912-9cef-8be59dcd13e8"
        },
        "item": {
          "id": "82d9de9b-7f24-42de-bcf9-31187d181813",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ba4d75ed-f469-4707-a01f-cd5ec3ec4786",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d9de9b-7f24-42de-bcf9-31187d181813",
        "cursor": {
          "ref": "4518cc77-584e-4377-ae29-74a8f16e8c3f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ffd1aed4-1310-4912-9cef-8be59dcd13e8"
        },
        "item": {
          "id": "82d9de9b-7f24-42de-bcf9-31187d181813",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ba4d75ed-f469-4707-a01f-cd5ec3ec4786",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb6660a-8bc1-4519-992f-fa5b1957149b",
        "cursor": {
          "ref": "fe365120-7489-4377-859c-1c942ecc3b49",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8de4c9a9-0278-4596-b7ca-9db61a542efd"
        },
        "item": {
          "id": "9cb6660a-8bc1-4519-992f-fa5b1957149b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a521e0ec-10cd-40c7-bcf9-d6d470a4b50f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 909,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b509860-cc61-4215-ba21-6c1ce8cec61f",
        "cursor": {
          "ref": "7f2544a5-7bf6-494c-910e-34a9e48d20b6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef5d01c1-c899-490c-8fe0-3d0f74041289"
        },
        "item": {
          "id": "5b509860-cc61-4215-ba21-6c1ce8cec61f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7e416fb-ddfb-418d-b92a-53477e352952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b509860-cc61-4215-ba21-6c1ce8cec61f",
        "cursor": {
          "ref": "7f2544a5-7bf6-494c-910e-34a9e48d20b6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef5d01c1-c899-490c-8fe0-3d0f74041289"
        },
        "item": {
          "id": "5b509860-cc61-4215-ba21-6c1ce8cec61f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7e416fb-ddfb-418d-b92a-53477e352952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13f04e-ed53-42f3-8a26-c020a68d9266",
        "cursor": {
          "ref": "0d3eb678-c9ec-460e-8829-b84af78bf640",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b7791d52-955b-49bb-a2f3-69002cc9d608"
        },
        "item": {
          "id": "4d13f04e-ed53-42f3-8a26-c020a68d9266",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bb4e2597-53b6-46b6-b202-d5fb8944ffa7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 815,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}