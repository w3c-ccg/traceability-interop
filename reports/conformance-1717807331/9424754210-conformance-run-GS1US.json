{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "627d3505-fb0b-46c7-b96b-d2fb8de22433",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7c6535be-1c32-4985-96a4-b6bc87ea8c40",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13bdbc71-b5de-4f32-92db-fcaa7b85e339",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c1ea8510-83f7-4aec-95ee-d12144211489"
                }
              }
            ]
          },
          {
            "id": "2de04770-cd9b-4b53-9315-f4092c427c32",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3780aef1-aeeb-4ece-bf08-6174ed04763d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a147c0c-847d-41ae-a38e-e9e8027828fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02c45c80-cd70-4034-b97c-b8b3057c7e0d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1f1dda3-778a-4eed-805e-25fe75a8e986",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a897435a-451f-4ed7-a9df-31ff659833d6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0cc0d33-615b-45d4-98de-398c27d9dffb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "109f22b2-e79b-435c-84fe-4547161d50da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a955fc5-42a1-485a-bef3-d68e0ca2192d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c3a9f58-f3ec-4a26-932c-7952e8d9e2c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c543f59-ad27-48f4-a85a-c0d2923802f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c236410-9006-465a-b11d-5c2c5f45ccc6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c96808f2-4513-46e4-9419-d2e868a325e5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b9a8c92a-9766-4b93-8197-9f20807f334f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d03e3525-2879-44b8-8e39-587f3163ff7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5396648d-f040-45af-a458-1eca7527ef2a"
            }
          }
        ]
      },
      {
        "id": "8c0e6fd6-855d-4078-b18b-ae100bdb4b63",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "70cde9f4-4a7e-4060-9c67-ef597946f921",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2ae6760-7331-40f1-af5e-4eecd834dbee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc985f1b-0bf7-4be6-a313-27c5c43d088e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c811a-f3b2-42e3-8b6d-2199465dd8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f46efc3-f346-440c-b48a-136ac14a2c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1602a81-70ac-4a1e-bb61-98c6c12a10c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5cf02c-97df-478a-9e80-83b27111efe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb19e773-dca2-4567-9686-380ba805fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96361ee2-e007-472c-a907-9e323725a4b9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd17d1ca-0ad8-4eb8-853f-0951cdd1fa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0af6dda3-0d03-4ce1-81c1-cfdeedf39456"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3598145-fa7c-4b84-9c7d-926c5c2ebf85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf3fe425-62b1-4171-afd5-f1aeaa40e1fa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bba78a0-8b0f-4610-b34a-a8a786bce1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c31ecd4f-110e-4ebe-b0ce-233703aa907a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cde75a-3048-4b78-b64a-53229bb195d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4ab3d9-6aff-40e5-b24b-7dec216b8823"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6372223e-a194-436b-a927-84af374b4d63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26f472e9-b1d7-427c-89b3-00b34f5806ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c3bf82e-0014-41ee-a438-35ac5ee08ccd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "94ec09fb-3c08-49e2-beac-ffdf66e64382"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bb859ca-d45a-436f-9ea0-a8f631531981",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "90c2e32d-8df7-44c0-aee7-c7a704132403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7760545-fbca-4ee7-ad90-ac403e7610a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc524f7c-6bd8-439e-8481-0127f5848242"
            }
          }
        ]
      },
      {
        "id": "16aaeb83-4309-4ff5-bf5b-d7a622772f01",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f0de2f07-ee5a-44cb-8977-1bc7ece5367c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85e08d5c-aeda-4e46-9f6c-623ff48713ff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79a2ac30-1e21-428e-91f8-0e67c3829d10",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59316252-e5e1-485d-8a92-0ce2ae3d0c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085e40c7-6c45-4953-9fa2-0bcd2b91842e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf113adc-b18d-41b2-b69a-e78bf611736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9671ead4-08ed-4c0b-b053-f9d72a8f2d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4829eef-2321-4781-9f0e-cc517bdf9813",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67cd494-d522-4310-b743-ed1928f8eb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f222ca52-ed2e-46d2-aed5-8c54b8b22567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85664a99-c4e8-4732-96dc-e06705493190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29e161a3-187d-4b42-9b47-e59884618c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b288d4-471a-474d-84e7-5742f351a898",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74c432-26be-473d-88c6-086a2bf2362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7be8f9-e9f7-4338-9d02-783fd443ca19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d7c6e8-a2cd-4586-9877-c3432ed11500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48c96057-7c1a-447a-9130-9644e413c657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d91bf0-e983-4142-a3f0-18197a4c8706",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba74aea2-7426-47bb-bffc-e0a91fd74e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf09c481-8dd2-4323-807a-41ee611d3bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5511ca0e-b344-43f7-a263-2e963c0d28d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad87b86d-1612-46b5-a609-d07e7abfaabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebfea30-7a23-4c06-972c-15bac00ba6e4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a3f10b-7982-48b6-9a30-3c7594261ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b232aa-531b-4538-b29c-7f8a8d6f998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d4b05-a51f-4ddb-a17a-58e7604d7345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc1e2caa-bc20-4fae-afe8-a435b91c2a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0b42f8-ea51-466c-abd5-e92a33bc11ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fe749f-28e9-4eab-92a2-eb5724e97cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becaef51-a1ba-43ca-a514-05c0435e1323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b0e48-6013-4500-82ea-8778e8bb17c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f02da80-7cf9-452d-a94e-895bba479b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005003d0-03a6-494d-b083-f1c4e9980f47",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2a34eb-fad5-4b1f-8109-b36d71cf244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c4464c-2bce-40b0-9a9c-ba81e62818e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35120d61-8f04-4517-883c-11baf6372a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e411ec79-4164-4a31-9b17-a9e8b17e25a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab61065-653d-4663-b9ee-03f7a122bdb6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a9be9e-6f3b-4b8b-a007-4924a7f8a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79d25d7-b554-41c5-9df7-7cf4a8e8e56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29124281-77aa-47da-898c-960b4b3e158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03514d7e-3f9b-4f22-bbe3-637ac323e082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371f2715-edec-4368-8889-27527dab56ad",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8422d9e6-98d6-40a2-838b-30c9a2d60e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac7a68d-32d2-4c7a-a718-87c635e19b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd98f6-84e1-4952-8a98-dc46561f8d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1326df23-e6af-41f8-80b0-d695b3e3f18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7941f7-afd8-4b4e-aa26-e98dbe65d48d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e94f95-8302-4f43-88cb-fc623dcedf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3554424-3406-4bcb-b624-015166f6a1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c00346-992c-4869-b432-e637bcc8efe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abb0ac46-3c04-4727-a923-daa8593fb534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4788bee-9bf5-43be-b594-07f0d7f323d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c79a850-7182-43cb-a381-c180a3018c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d63a53-40f9-4758-8bac-c17afa557733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a1956-064d-4363-8b57-ed741275b973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e90088fe-3b75-4f46-b697-d7c5133d1c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586d4d12-94b6-4cda-8eeb-c3da1deab9ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebd95d0-6f30-450f-9ed7-a0d46dd29692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce11ec2b-6efa-4764-a501-d9eaf9b09a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d54d8e-8bd5-49eb-ae9a-677ac86073e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b69a312-af8d-4578-ab69-b7bdeff7bfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07fa06f-7d30-4f61-a66d-e89b22c67abf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee011a5f-53fb-4b4c-89ea-c6973f1c7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a61e2b6-dfc6-49d2-9f51-be69be14b3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e591b5ca-c84e-484c-975a-a18f26d199cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b38ee6cd-dd0f-4055-aaf7-2c911be79aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905d44d2-cb81-4ba6-bc82-32e9713e1c24",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7634ec-6bed-4d0e-972d-74aa74f3376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ca2922-b636-409f-b5f4-898006e50d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9e3c3a-9c69-4a43-a46e-7aed24d2f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b36b33-aa54-4e88-93e7-e999181533e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6d4752-0b28-4cf9-a9d1-b0bb735e3043",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556d0aa0-b374-4c15-af4c-90e6d23e78a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a7cd98-5b5b-4ab1-8389-256206b5a195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c61047-b6ed-47a8-8c78-00100db1b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad58d9bf-9a13-4606-8ec5-2f814b6acc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4730dd5d-2f79-41b1-b48f-8935104da9ac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd33d0ca-854e-4df1-b200-1ade90de4f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeec3c6-4505-4345-96cf-601295a9753a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b18e6a7-a43c-404d-9c35-ff537de77019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "274498bf-8d9e-41c4-a1bd-e9363f9acf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a93b5a0-ec07-432c-84e9-f352e818fe5f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414533a-b6ba-4ebe-b4dc-fc6d38a78417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a0f843-29f3-4fce-8ccd-62f9fd148b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1ff155-863d-4719-9920-a8155d492422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "505569f1-de9a-4830-81c9-3f4ffd9ad8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0688a-ab0d-4149-8f73-a87685a80bcd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce17b3a7-e709-496c-a198-a7f55dece65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee3e49d-a137-4618-ae15-16fb93a47729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bffe8c-5010-47b7-89d5-d7a7cdedd46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8abf5dd-44be-4e11-81ab-45e8467c1aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c607c084-1733-4109-84f9-6f1b59d6c065",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a87247-d1c8-443e-b6fb-ee43de7ac561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931c4f2f-1e8b-421d-a863-0ac7be0718d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ceb956-f489-46b8-b66d-5c9004d41339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8f8410-4cfc-4ee5-ae0e-93748107eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eae3b9-44e5-4ef3-9d6c-a4a0c77e8d0e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbbda16-118d-4f69-baec-6a04b88d7b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f6d7f2-be19-4ecb-adce-a5131dc40f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e8859a-5834-4547-9341-b39e775cfd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe46faa-83a5-4314-b30c-12db4a17462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0c05c3-dcf2-4860-b2cd-25bde2afe472",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82cb6f6-b553-46be-9128-6309fe31c9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7506560-34a6-4a61-a521-a777006b7e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9149c8-3021-4d4c-902e-83933ae8c729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d482f71-2290-4204-9d4e-dd0a2fa51bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca40b9f7-e3f7-4329-9f63-714ed6995682",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e4561c-fbe3-41ed-a603-0258f2760d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea572ba-fff2-43e8-a210-1ac71ad2f21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea32db24-3230-4d38-ba97-347d4e7bc7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4520c499-0a82-4c92-88ba-bcb8035275b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa6744-067b-448e-ab1f-8b88726bdc40",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb58dcb-66c1-4abf-9382-e2a6b4146d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d147cddc-b28f-45ff-886c-38928db679c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912a9647-2592-46be-b143-9988ed35d391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcee86ba-c698-46cf-9db8-c8f996fdbb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a428f20f-4672-4e46-b5a4-a7ae4b8ce28f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59715aa7-d2c5-435e-ade1-f5b87710f65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c6c997-ba64-4dcf-a297-10ff1e856fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed9d602-741e-4a6e-a3d4-f619a1a9f6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd10885-7a57-4e08-adba-5d7d5eb6a352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51f4585-5931-4904-8bd7-0fabd2f81ed3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1eb011-ab03-44bf-8ddc-6786c538c5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b97dc9c-3dd9-44c2-865c-7895d4424537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d56c84-bad4-4fab-b1cc-37bc58123dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9409a50d-0955-4f18-bbcf-bbc01c5eede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877a6e9c-7981-4406-816a-b64a45a424db",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccbb2be-beec-49ab-b868-8357a3dc71ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0ff305-880c-40dc-8416-02a75f47c91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f74d42-54e4-4b8d-8731-bfd5c4902d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9f602e-6afe-4a97-b86a-a146f375d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf9bfea-e7be-46d3-85e9-c559559b9933",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd13ef48-c464-4709-9803-f1c50e9e41b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25660bf-d825-48d1-b373-53773ed59ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75627c5-d552-49c9-bec9-44d347d44dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccdc5ef-73c1-4f94-8647-1384f3295abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc39af7-55bf-4d4d-867b-742d73cc26c4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec047114-34b5-4753-91f5-cd89dadb7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0299363-0999-4b25-9675-fab34c5bd716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042cda89-b24a-4ffd-adf2-5ae725994f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b1d15e-4f62-47c0-98ac-0849c224d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e6d07f-24a5-4b34-a97f-83e8b6c63017",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627b6456-3b1d-48f5-8d55-e6214ff509f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054375c3-df80-467f-b2e4-b9e8c6101698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919d4559-165d-43e6-ba0d-34c9a336600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3910939-ac1d-4e6f-9eaf-25a58d7d82a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff2bf07-50a5-4428-8591-c05736540a7d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94785f-c10d-477a-8055-def31e371c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8c8560-a952-43f3-a5b3-06f4175d46d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6bc953-89d6-4830-af70-b30610dcc31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "74db2f4d-9e52-4cd5-aca3-486fd9850916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72375fe7-e47b-42dd-a69c-ad38af6489fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d322e39b-bfac-4a10-a31a-0126049aba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4acb6aa-4a00-4147-b95b-5a40956ef7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48b20f3-f4d8-4a72-a282-e1da5626d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d65360-7556-481b-a268-fb31f9196486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79956192-13c2-4ca9-ad95-fbc5a94ce6f9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d43d11-2332-4ec9-83a1-80a1577faf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c156a6f-e9a5-4803-b850-0d6de15dbea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f65415-1ef3-41fa-b1f0-d981efdb8618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab31b6e-8739-40b1-a997-ed364699f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3e2c86-6492-47d8-ba9f-a1a1e66d30ee",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4566f176-a64c-48c1-bbb5-b5b740bb857f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def6274-8992-4b31-b0d1-079f50a9547a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6968b066-b8cb-4374-81d3-0804a6b1e735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443ac375-319d-4a09-ae48-4911e78996e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b838d3-d02f-469c-afa1-cf71724aebef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c5d90f-138b-49e1-9496-70b4ff4c5041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcf9e0a-9b95-4c23-ac4b-6c0126c9a01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1404661b-6c87-4204-8a0e-86562f476b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cde0d3-cb57-4af8-93c1-41224558417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a47ad1-bb02-44a6-a96c-7842c55d5946",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5156789-6e55-442a-bba0-2b21a1ce9c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036d9ac-0693-45ff-a43d-4380a12434b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9ac6fa-4d6e-4d8a-b94a-957a189498a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "021b1f19-3c79-4fe5-ab14-cb886a46b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f979b6a-1cee-43e1-b94f-f39413572d60",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed90963d-6cad-4050-95a1-c8e721a9fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b2597c0-9344-4be3-9eb3-191d668c052a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23004187-01b8-4257-a72d-2fa294fbe07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82e0da39-628f-4f3c-9fcd-1c98206f37a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f83070-ee92-46d1-83f2-bc07c9dcf67b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82c2e56-4161-4e69-b028-b303a76f0261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44619b32-5d36-4238-8a6e-89ef40825b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c2714-6ebf-4b2f-8bd2-fc29d7108d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09973a95-e74f-4105-9305-049bdafb2e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b306747-f53e-40e8-a56f-e2fbe045a2ed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2b383f-09cb-4c9f-a278-4b97f9a09bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68dc96b-2739-40b2-806c-5d747805f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a374bb-422b-426f-8127-19913bd54a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6864a666-27cd-42d3-b93f-ca72ce2bf6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4985032-84ef-4d9d-ad28-45d6b05ea69d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74befee7-4515-4b4b-b926-1c83ed87d20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d75938e-4b7f-4458-97da-6afa92963fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a7a154-39cb-49fd-9d44-a687932f422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e41af510-3a43-471b-9941-17f39ce47d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc783ff-ae49-49d6-863a-8786a1f5c203",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec99108-6da3-4e06-bbdb-c801da888565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a679ac7-6917-4cf9-a69d-de18948c4cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8efc7e0-ec10-49e1-86b9-5eea87256cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e58788c5-a1ca-4e65-be27-8e2115ef86a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bc873-78e2-4c96-80ec-ce57210c4072",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8290ea83-48e2-4619-bd31-2107f4c88773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334d852f-b5e3-49ab-a422-576d0e0db3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a273be4-a86e-4fda-af06-a3bcd029c6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9cac13-9d9c-4732-923f-da910055e68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9cd7cf-b482-4987-b1a0-6e5818e734ff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0da375a-6e9e-43b4-b276-1fe212e34284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b620bd7-6416-4c40-8b4c-183c338c5158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25779e24-788b-4441-a0eb-f3606388d541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7abe2f0-eacb-4c9d-bfca-a6514a2afd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c1424d-98eb-4363-a70a-888c3a97544a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d34464-2f24-427c-8e1f-46fff408b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5f1dcf-61b8-4fc3-8346-5d8cf7e3fb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed04407-a148-42d4-851e-12bb3543c23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c508468b-f750-4457-a019-6a85237b9a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8431b1aa-03ea-4dbb-a151-2c4437c810c0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714fa673-b5e9-4a16-bc7f-3946a5629ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d265147d-5736-47d1-bf89-95db603955a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5a33f5-8bd7-40e1-818f-e75838d6c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3729f7d-ec98-44ad-9a35-6554c3d98ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5232cb93-ee76-4aeb-aaf3-4a5d43914670",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76e8383-f7c2-473c-b9b7-3f3641965831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314eb12b-ab21-4958-9230-319f7315464f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc14352-348c-42c3-8487-69fdde7c48d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3518f09-f815-4abf-9753-f18b6e650040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8b1be-a771-496b-b4b9-5463d6a63ecb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54227f6f-4269-4f7e-808f-6bd90859f2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c1b25e-f937-4389-9bb8-3f8ae8fdfc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77057cd-2346-4e51-9b69-0f75cdc872ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a8e5d6-f6f9-4f10-9959-56feec6d7d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea378dfd-2d6e-4e12-a73d-69d89aac8fc0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d8b5f9-9b7c-463d-a1ec-c17367ad9b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288dd775-5dd9-4a9d-ab0a-3c51374e5175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052268d4-aad2-47aa-9580-ff0627b83e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb80653d-3195-4b8d-bd5f-485412815e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90615358-80a0-4128-921f-b7316079922b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaabf90-63de-4d16-8c6c-619447437a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68616264-dfb9-4711-95de-e254708a3847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a10095f-5a1a-44cd-9f73-17185ea2fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7879f7-64f3-4d6d-acbe-888f8c7859d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c31ad1-0e0e-45ec-ab9b-98b3954a37a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11e4898-63e0-4784-aa49-8f4049a8b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc17ef6-0526-4bf4-9f17-230676815a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ce45d3-3cd9-4d19-ac8f-1595e68d8f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c579d7ac-6cfe-4354-a088-a00ff050adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a896f2e-dc1e-4ef7-9b29-16816c2356dc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a17d04-2503-421c-a397-af4acd8662cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e868c581-c1b4-4c05-94c1-429d432c0353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b0ed1a-ea57-447b-a4f6-ad2f04aa7220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d97f625-6d21-4b77-a48c-da5bcae10676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bf0d4e-bb62-482a-a556-0f1e370211fc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31831997-441d-497f-adb6-3d98d0e7feb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6892f051-2e93-4ad5-852a-0eba26acaab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05e2306-3787-4ed9-bc3e-358ebf4f81f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "521d2162-4cab-46fd-b044-88af5770b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82249091-f52c-4c75-a1c0-24fd44349c0f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d006e46f-d954-4852-a421-6d4c74508405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1935e0f2-cc2f-460d-9452-eefa1b147148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f7b80b-7fe8-408d-8762-74d6668acda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21b9c6b-7f8c-4b65-bea4-7ec24d8c7e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe3adb5-5559-4b8d-9a3a-a2401c7f604f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d3b632-1e39-4f10-9e39-a2a529b6f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb0bc73-f8b0-47e9-b073-aefcf85c002c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb8699f-19b9-49ed-9960-6d090aa68969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25da5627-6b49-44de-8149-02d35b5d5e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c0e10f-ae7a-4489-9b0d-472b73249dd3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85f0b9-0f82-4ada-9469-ff2cd7900f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5324380-dd5b-41f6-89d9-9aaa62caed7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32795ab-8ccc-409a-8424-929c366f9c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "271ef8d6-7a9f-4605-9cbd-99aaae850417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523f346-a1df-4cd4-9ff6-87eac489a074",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e589178-23df-4f22-ba38-f88479f579cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca50913-2475-4f6f-b089-a95e5a84dafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff0583c-368a-44c6-9089-9d44ab965b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13be22b5-fc7c-449b-82d9-a143cd7020c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a1e42-61a0-4f26-b0d2-302c55502a2d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c717fdd2-ac96-4c8c-92a6-72cd0991d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d7eb9b-743b-4c33-8edc-8ee6e051f5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43d47be-151e-448c-9660-aeb85e05a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1550f2ca-904b-46f2-b1af-51f2c4df2efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a2e98a-aaed-4db5-ad74-712d9942d457",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b161a055-955d-4e58-80e9-ee10060e64b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc99c03-40bd-495b-b4bf-8cc00724edc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767c24e-b37f-4d18-8763-f4aaa20cfe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcbeb24-0388-434d-8d02-35a98a064f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdc9559-4b60-491c-a3de-c89ed90172a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac892dd-75e4-4b62-8f01-1bb8521a3514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a30690b-c91e-4c1d-9f92-82fa53390ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c93a1e-393b-487a-9515-fb126ecfec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ed2d47-e65a-4ab9-81b1-bbb9d5e30436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e35df0-4353-4b85-bbe2-467fa420a8ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea942a1c-9b41-4730-85c1-945913561a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aefe945-c6ad-4cda-87f8-e2ae27df5104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fa242-d393-4a88-9fad-f65755b06c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09c990c-fd9f-4014-a7fe-3c9a6fcbf6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546fb0ac-ea22-4bb4-8312-75dbf55639ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ad577-6f5c-4993-9503-d029595263ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eda476-08bd-4ed8-8aa1-52d1fbd17b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8a0da5-5d8f-4200-8906-b3b12875aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4148a71d-128b-4c18-ae4f-11c8fa620fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d99e80-710b-4d79-855c-18f404fce387",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921cda08-0cb2-43e8-9cd3-46b70f0a0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ac824f-2dc4-4e25-b24e-f7ee0b339a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5230c5f-004b-4adb-8a8d-fa46c42ac3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ce5b5a-5006-476b-bf3c-4ef2fdaf1441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053a0281-d0c0-4cb3-8236-179911b7eab9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd75c9e-678f-4608-833c-e4e5ba0b9582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d379b8-99b6-4f9a-be43-5e53c3679dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a763981-54f7-436f-9c1b-51fbbb5025b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b648dd3c-f9a3-479a-a68a-e992246430f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b3a1c4-5cfd-4b0d-8787-4fe63d4c410c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75f6591-5cd0-4809-af8c-a4935b31f5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b3c719-e86f-4637-a7da-ad17bdf280a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3ef9bb-a33d-48c2-b2be-2681d7532bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d2824a-6a49-4293-b156-03ae5267165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a63da-53e5-4992-b433-091cde7c1cdf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f04df23-8b1f-4505-9e70-8270d3492280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4fcd3d-70e5-46e1-afd3-a638e212b66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbec778-5c4e-46b1-abeb-75dd7dea39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9666bd0-4aa7-4e91-a9e7-a54955139d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b636e04f-26a2-488d-adef-a1a8001365c9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e7af5e-dc3b-43d2-965b-dcb1cf35e246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49f947e-879d-439c-be1c-71f5db46ca8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8613b1c-22d1-40ed-96a9-cd411a876760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ac8041-2c37-4891-9f48-c08968a9340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d28462-47a0-40c5-8ed4-88df2fd93429",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3599a1f5-f0c6-44c4-9e92-facf14c3ba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2183b6de-2195-49c4-813a-178fccc12b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bac7203-114e-4a14-ad89-1d8bb68121a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "450a4b44-d899-41e4-8888-4d0436783bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125c37bd-8801-438d-826f-a72de9ecebb3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92d12ac-6dca-4992-b38c-6b48fa0573e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afe70f3-c919-49da-8e63-b09b35826b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4dd1bf-0059-4cd9-8bf7-2d4d5c91556e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7f27a9-550a-4604-bf35-d53186856949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8c36f-f3a7-44ed-96d6-f1e6bfe7a17d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd4d90a-2da5-4bef-b257-f1d0699280f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cb2b14-0949-4d58-8bc1-84ee8792fcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e4295-0098-44e9-81a3-ed28ce30a3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f48e24-522b-4769-934e-87be84615e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225db2d1-a9fe-4bd5-9a11-34557c9bf5c3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc26dc-4edb-4441-bef8-b743a912c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d2d07f-c1e1-4cd5-a4e0-b30df0c3689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cd0501-1f84-4ae5-aa46-9c6fcbbd0296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5b7ae8-e792-48cf-9043-cdafb9f01403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0422508e-4290-4d41-93b0-848541ed56f8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fb021f-d173-4acc-bf06-ac1d0ea10b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a99d8b-1723-4092-a3c3-19ca9de673d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4483db72-3200-43b6-acdd-ca0d150ddf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dabd1a6c-3c80-4443-aa50-974f39fa9da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cfd59e-ad45-46ba-a524-4a872795fbd0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a7565-66b6-45a1-a99b-e228253ca545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef431e9-b1fa-467e-9d97-f9224d478824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8aae51-cd98-4dde-ba4f-02108b909774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ce67c7-4bbc-40b7-848e-3548094d6096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139e79da-c14e-4090-9c16-cea257475a3f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dbf947-44ac-4c68-b7c9-7d5bb3c9a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da665dd-cf35-4288-bd01-141413fdaf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66fd6c1-8509-4ef0-a286-c12f2c6df4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e30653-be0c-425f-b7f6-40ebb014493f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d3cda-3c5d-4ec9-bd44-82599022c6e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692bf35e-57eb-4a67-aca5-9f34e014d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73039f96-e473-42b1-a378-8f0ea7be5a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e80ae0-f2c8-40b8-8c81-a67b46a1d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73b19c1-4eef-484a-93df-5f1f07dea1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561a5bdf-c20d-4ecd-8468-fec1159427b5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced6ecec-f507-47d7-84dc-daa7ee8b7bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc0a19d-5eec-44ee-a021-aaede4a22d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33eace5-d0b7-43d7-946d-d75a67eabc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "068d92c2-90d3-4a9b-9353-6c05a61cec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8412d-79c3-4eae-99b0-5216ee7e1555",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8d400c-cb59-486a-b157-5fc7abe9186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb42597a-c378-423a-9850-eca952b1fd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c159fc-d345-4388-9c59-c8de9bb5bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1ea58e-9f2f-43c6-971d-634b25328251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c7c3a5-9e14-482e-8502-a269e91c6722",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5763da-44ef-4978-9a51-59010b9a6e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03c9377-8ef9-4025-9095-4e8571797cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69edce2-7256-44e5-b0dd-1c85cd12e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc855d8-32ba-4729-b77d-cc8d8e8e8499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97db4e4e-a595-4b35-b611-7bd55eea8a2f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdb697c-6af0-4839-9859-a23d68270a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea4d389-ddc5-4d61-b261-9f32aeedae27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee5baa0-5924-480e-8503-26d4746bd2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "188a6aeb-3c0a-496d-856c-df31da864c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aa7981-a467-48ca-9425-19dce9a329e9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee82f30e-d1c9-4805-8a58-1f30bca99a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff644c5-3a03-452b-bd8b-7366444ca951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53c2b93-5601-4761-b96d-f7971bfddae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5742a04-6a8e-48ee-90a3-0b7995acafd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c3dcf2-a12c-4d60-87cc-842b300a1999",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc28f3a-7ae2-4a07-a205-a3a794aa8f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5989df47-1887-4a3a-ac6d-bab7f9cb1dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d6914d-22ce-47d4-a68f-4e13a648dd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb4d28e-3f4c-48f8-a560-16de5cac449f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c41d96-60c3-488f-a412-f7cb2a252109",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0beb8f-520d-4dff-a657-383b9a747c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5768b80c-7cba-42dc-8fbd-a7fbbeb9452a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f59f08-69d2-476b-b0ad-f3fa7aeedfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b81c12-4626-4561-9b0e-87881cfae576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617de4da-536b-4a2a-b464-1e07edda0b12",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee4beb9-d32a-4642-8c70-d25dad7d4418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5276cb94-fa09-4f2f-9858-3a94771069c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a768ec-63b7-43c0-8de4-56896c43b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccda67e-3f89-42ae-a50b-2e0a3b4aecf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e21d36-8b5f-4dbc-a589-a1f3fdadfac6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77b357d-acd2-4eda-a7c5-1f34d80115d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6fa03a-eeff-4d29-9a7b-4951d7bd94f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa1fdd-0c24-44fb-a4dd-df5b711a3b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56923d7f-d019-4a13-b5f4-9878190826e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c0cec-32d8-47ec-bc71-492716ff1f73",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fd30b5-96fb-4b1b-9c09-99512bcd5180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd12091d-e4d9-4b7b-a01f-eb9ab15fb1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f62e0c-172f-4a2f-83c9-820e2708cf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "730b103a-83f2-4c1a-a90c-35733f8212df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920be9d6-01f1-4b73-8f1b-523702de79f0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89459563-e46e-4ba8-9ae0-bd06b3506774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c973e701-0b56-4aee-a2d8-30db2381c302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d2d20a-dcdf-49fb-89c7-b68e995e3f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd15cfb1-8e41-411c-91e5-ff1a91b9a0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dfd707-86f4-410f-b264-1826bac19b91",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3c517e-3587-4d6c-87c7-e614998b79ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56be366-4113-40b8-a575-152fef187eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698fbecf-3f0b-4b80-a534-29d52bda457a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a66ba3d3-7663-4772-ba02-2d39a2b42014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907e0545-8af5-47d8-908f-168fa22c0b85",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a02e84-d95f-4da3-ab6a-5dc8dd6909ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb713014-6fec-44d2-bb5d-3b0a275a708c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb35c6d-ad06-413e-98f4-465569c2327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "244101de-fa5c-4bb6-973e-6b3b857d1167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b32e02-4b31-4638-b831-181313bb5abf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f067baf3-cbda-4bd1-be7f-96f42ba34a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e539d6-4bfd-4921-a431-b1fb8a9ccec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dae8a9-722b-4839-be62-fa9fbe1ca87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2667a716-a424-420b-b1c6-928a54cbca47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea89efa1-db13-4c81-a912-7d3fc8f84f3f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a745c7fa-6c7b-441d-b8c0-47c63b5d61c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9f7fd1-38d6-4ce3-85e5-df810fd928c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d712c06d-5024-46d5-87a1-324b03cb49b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2ed210-7513-4204-aeb7-ebb5b20ce617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332ee65-9c80-49ff-904d-4743aa98e98e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c26723-c316-4dfd-a58f-4e1b3d571a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63b856c-f564-492c-ab52-fb8dc6e75c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857e1acb-bf12-430a-95ef-dca2d4683af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc64c352-984b-43ff-b978-3bc955458ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555a6c7d-e3c9-43a4-aa25-7ca0244e9ebb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5d9e5-1ed9-4d4c-9e66-2e416f27ebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c3830d-a272-4cd3-aebd-cefb1e1bbef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aae39d1-3c54-4a81-af8c-a403d2b3846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27d9af8-d8ce-46c8-ad46-1ebf2aa30bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2662cb-4b1c-4b74-8f20-bc4d47d1d692",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5dce3e-2b61-42b3-9296-fad1726825c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec53cb3-9d44-4352-97a6-579def025bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5168fd0-ee97-41b6-9379-99f395a9e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3159ba59-2433-45de-b684-7e4682855551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f73ae68-7975-41f9-ae35-bc6049cced7d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94600450-f5ec-4c72-b0af-df413c056848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac8eb4c1-f224-47da-b976-f876c1c6516f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3abc30-4cb8-4259-ad07-f736f044585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e6b598-1c8e-4ca3-8223-701d839fae59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23c8ec3f-179c-4c51-99fe-57017624e989",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a72c174b-ecf1-49fb-8b4b-86d3565cb35d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfff2015-a95a-4718-891a-673d2cb8096f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0967e303-218f-4676-8cf2-869b21ed2d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88284b08-c640-4536-919d-b5de2b8fd426",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97aa61dd-6cc4-4022-bcb2-87a8c19e8fcd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdec77c8-7a8d-4008-b5b6-287d6445a450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b51867-2d56-4013-8e81-45b1f82508c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04963773-4968-4861-bbe3-c193ff9e8bdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cececa66-f431-4870-8981-50951c8f8ad5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e83d9f72-db3d-443e-b30c-4b2ea68a5dd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72829db0-ae2c-4b7f-8387-c58257c62d33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd70e2aa-5cce-44e7-9b9d-143c1d0ef781",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51336a57-31e1-482f-a980-941e763d57cc"
                }
              }
            ]
          },
          {
            "id": "6968a195-5dea-4414-8ae1-b3652bd60f9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "285d500e-be1f-4ae8-903e-ea37c7b70eb7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "73c44fcf-07ed-4824-83d7-de8fbde582a7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0056da86-7cae-4ffe-815e-a79a94b981a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f7ea9e60-df75-4d4e-9530-0f4fe08af73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66fe764-f152-4f90-a918-099079db45ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdfcf93-a00b-45c6-94ef-130cd204555d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f347c149-12fd-4847-b5d3-7f6a6e8d168d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8abd1e23-4f30-4194-84a5-40113e2e3622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dad0fc6-8ab7-47f0-94f6-50f28d56ec76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40ad7ca8-50d4-4272-b084-e3edc0f7fac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2b06b21-5f4d-4062-b427-bd9941abcf89"
                    }
                  }
                ]
              },
              {
                "id": "0c11469f-8d4c-4e66-b8af-a26c62e1b179",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9229126d-2b91-4abd-87ca-ccf28995f582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9229cc34-dedf-4509-918f-7fa243ab5ada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5071920-253e-4908-94dc-9a0ccc98c829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dfa00c9-7203-4f0a-b88a-0193842c52a8"
                    }
                  }
                ]
              },
              {
                "id": "60b69bdf-2600-4e54-8e23-09d4f4bb2a56",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0af020e9-7944-454b-9efe-0fe617325e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62be2697-3f87-46d8-ac9c-2814570990f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60410846-d428-460b-8ebc-91fdb26eca1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ac10ab3-bacf-4dff-aa5e-5fe3a8cdaf43"
                    }
                  }
                ]
              },
              {
                "id": "275462a5-9143-4b94-ba2f-5a58431dbbd1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17770877-02cc-4cd2-a3ed-cbff2ebac4ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aad5878d-3b01-49c1-b16a-4eddf323879f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ef8b9e1-8a1f-45d5-8d1a-40e9981512a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e723d8b0-2618-4ea6-b702-002e2ddd90bd"
                    }
                  }
                ]
              },
              {
                "id": "dea13ba1-3840-41cc-9095-0ea33d905a45",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "336e6493-6a76-4c88-8d19-694b86e9d6e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fc4ae6d-0cd1-46d0-a2aa-cc4fc8c96a66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d297b398-a2df-4582-8824-02e1e93a5ea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "da46643b-12aa-46ed-8652-e2faf2cc97c0"
                    }
                  }
                ]
              },
              {
                "id": "97c16a56-b2aa-4017-805f-2e3b494cef2d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7ad9408-eb05-48a9-a6da-d797fb33ebe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a64fc1f-3cc2-442d-bdd8-74a08c656037"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35813248-ab3f-41c3-9335-cf8859f95982",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af12ee4b-1d59-480b-93b3-4342e9ee030f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26ed9847-91ff-48f4-a814-b32286e65b06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05bfe3fb-73fc-41d0-bcff-6d97adf7b029"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccc23889-0348-47fb-baca-0f42f7363bcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5ef5d20-cfbe-4d48-9724-ad8f8da5c9e3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8b2ab2f-3728-4402-b0a8-61579cea6a68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "56e9baab-ee33-4d11-b6cf-e6543ec6f469"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca84b173-dd66-4256-b143-457c30c678b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80b16dda-89eb-4359-8789-e1e6c512078e"
            }
          }
        ]
      },
      {
        "id": "a9aad258-b040-467f-8fb1-da6d337b1c39",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1d5d9055-58e9-4daa-bc7f-14581886ae22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e88dc373-9872-49fa-aaf7-f4e1fc2520fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b327983-a30d-4ab5-be02-dc929a444e75",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6ac070-fcab-474a-b7e1-2b3317f746a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f87af0-c9a9-440d-9555-93e9db73b2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708d0a5d-7f55-47ab-9d26-2041cd107ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe771920-ab24-4f0f-9f0f-a8508c5eaa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7151f98-b553-47ab-b4c2-9039a8cb7b30",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb48e5f-1288-4dc3-b7f3-de02d315f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7de023-7851-4f71-9c8c-3f32cc22e2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3126de-2395-4b88-ab0a-df7b52c906e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36457fb1-7b24-4652-8059-0fb6fce44b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da18937d-ab38-4d21-aff2-94dfa621585c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e372ad-37a5-4bd9-95a9-5f86c2ab4cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636e46fa-56aa-4efd-ab91-2d13eaecbd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e87f763-5893-46ca-9a79-01662e623f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1385aa6b-0401-488b-ad06-7ca9733f3d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc88864-2409-4f51-8f25-7107053b2fb8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d193c312-eb98-4e88-82f5-21ff4ec3836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3a2a3a-f9d8-4609-a241-c6ed6c937d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6807d505-eeec-4cf3-b557-b54d53105683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f3ab52-a457-4516-89a6-9489ba8cd8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb808b32-f692-45f8-a5b5-4470ed071b1f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbfe2f0-681b-4338-b382-c9b04e7f2774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84a438e-df71-494a-8fe8-7ca53744ad2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e0109a-9803-49d1-a8b7-238eeaf1a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4d6062-36ed-47ee-92bc-faee55c064ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bbeb51-df64-4ef9-837e-e096381caec1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011a8f54-a768-47ee-87fc-cd1fb0adab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ebe26-85f2-4880-8d34-ca0923d76948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c740853-144b-4f54-96f5-e514dfc87630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0835aa8-545d-461b-bce2-35e6dd6d370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44833dc1-82f9-4c3f-931e-f990a21f0dcb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf106f80-ce30-4e96-96cd-d56f0b63e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acac074d-cd72-4591-8997-77ba44196ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af23360a-1c9c-4e80-942c-75a95c628d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b10048-ad18-4514-8946-e6ab8070447b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092fb6fc-6e87-4c22-a187-1528805fad1b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9537ff5-e753-4163-8ddd-48f67a212edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e66911-f25f-48a9-8859-1b543d8ea419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b22be8-2a56-4114-a403-4d96b21d9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aeeba6-9528-46a5-9f94-78b7d1ab2faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c13b86-871b-4888-ac7d-c54939580112",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bb7ab0-6893-47fe-8218-1e0a5f27adae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e967a21c-8e5f-4af2-91ce-301e667bd840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50dc1cb-ad13-4e0f-895a-2971b182cba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a6b8b8-db2e-4feb-b012-8ae5836ff584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7be41a-d44b-4685-90c3-922b20e8d832",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1033bd5e-5c30-4557-8473-a1da6fc4712d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d250769-aaa9-4580-8bf3-461bd6338271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12149a3-c268-48a9-b621-b0253b0049e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e57d58-5f35-4df9-ba26-01b280c942f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a5edd-edde-40e3-8d25-b89ff7b5a9ff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53d3f65-4208-4c42-b0e7-7cfddc31a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42945d35-28ac-4a4a-b935-12e044ab000f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf66701-6ee1-4383-b8f1-86973c0f72a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1633691c-0e70-42df-a50b-45d0f1c14a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dea1e11-a76b-4aeb-90e0-816782ce423e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4656cddb-bac6-4f5b-80f5-fff76607c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56170682-b882-4a47-bb0f-697421500ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73bc8ab-414d-4caf-a305-58f87ee4cd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2292f84-8ede-4bc7-bd67-a717fc862abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9c7541-236f-4c8f-8258-a5ce032996fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7cc8bf-ace8-49b4-844c-870a7ceeb126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2496bc5-5946-49de-b8fb-9e9414c0347d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bacea7-6a3b-4db9-a711-399e8432d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e081f89b-6101-4772-af72-bcbf9cc6bf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce5ff26-5bca-4541-988b-ba3325ff69bd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03f22a1-250a-4947-b26b-8cec9058c7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31e1967-d8c0-4bd8-8fb6-76c3743befce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92eb3ad-405e-4db0-9038-de7197c83ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebda083-02b6-4448-87db-1aeb8d9fbd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8e71b1-84bd-4ab2-9183-24e821efae67",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c196391-5979-43f2-851d-393fa321f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa24ba8e-798b-4133-924e-6552799e99c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388321ec-75e6-4b17-854a-7d27b9c014ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "042c9962-d80b-4fd3-a436-972d2ff4dd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4674b328-b7af-4c11-bf19-7730b63ff3e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efafefb-2a51-47e1-8b59-44bb62f37107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a2635-9c77-4b32-bfb5-daf828889cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc293ca-20db-4c37-a12a-cb395d7ae345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c09c8f-12fb-4d25-8b56-6ebf58bdd93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c2984a-c5be-4014-8269-f5e2cef4b482",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180359f0-bbf9-40fb-bb3e-fc09ecdb0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c6801-04ea-4381-94be-7a9bf78f64fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21266b6-d340-49bf-8368-0c7e87acdf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f061656-e115-465d-ac99-b077df0038fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91448854-93cf-4cb0-b9fa-af9775a5e678",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ace1b59-3a82-4002-85c0-45fe9f6ff9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63ff3f5-df31-4f8e-adb8-4099684f98bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0bcb42-5de3-428f-8d6e-d79585cc2fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d198183-4cdb-4529-b35c-9b1ec1a6bdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b620b45-c44b-4093-932f-967e8bfd835f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8e0eb0-f2ad-43fb-b95c-27e1fde761b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd868a0-5211-498f-898f-ed6d3e5e57cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab266e08-a078-422c-b274-5cfd3419c53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42795829-4297-4cfe-b98e-0468bf287226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c7ddc4-6fd5-4c37-b09c-d5b14a279d07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425a461c-cf66-4684-8b4c-3e7e4b1cd038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcfbac5-5ec4-4044-aed6-2fb59d1ddf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed22e9a-e415-4cb3-9147-32101ee29ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b712ea0-9f5b-4e4a-a025-ec991ee8f20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcada31-5757-4f34-9622-ab96c05a4bc2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363f9715-27d4-44f5-9685-7932df17fad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3763743c-74d8-4c74-bc21-38e77c3b7b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf240d8-70d0-4223-bb2b-8fb447fee765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d594b184-a1e0-4b1d-9d98-6c4d413697a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4015f606-f136-477b-a9a5-76f24712ef70",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3ff34f-3e6f-43c4-9391-beadffbce776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b68886-af29-4904-93a0-df6c22b6ac21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e84f37c-a1bc-475c-9687-ed861876f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f8fb47-2db0-46a4-b6fb-a6d9b01027fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c29fb2-f4df-4b5d-a4b1-b654750e591d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd46cdbf-d124-4479-bea8-03957e413caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9f6626-edc5-43e0-9a01-c9f5f699629c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3283d-ee67-4016-868e-ed3d369b0cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4090028a-846c-4abd-9056-ae8a42ec70de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237e67a-0fa1-43e4-aee9-4eaf3c745b4d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1900b4-c0f7-4487-a7b4-03471b747ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca90e55-2e60-4fa6-9a02-f6473781da3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba30b2e-ca7e-4401-b39a-7c0cf5b89e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6421f945-5a5e-44c6-832f-1024830d2ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c231e4d-cda2-4d32-b0e9-3bcb8e17b746",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69a0566-6cb5-42b4-9534-f4d97d514fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1034d82-bb7b-4e83-8538-2b53a6d77ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45372a7d-b910-4bb5-8c26-ccfe1fe394c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1003b08c-dc73-4a5d-be2a-7545eb074cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8adfa3-7a58-411d-ac59-26051403a695",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8709371d-29f3-43ed-8732-9322394e01ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b983affb-078f-4ab7-b883-d08749e347d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a0bbab-fe5d-4627-ba86-473e9557d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1410c8f9-7457-4034-bd02-10be4088de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cbd95f-2b9b-4962-9107-b814b39da95f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69a4aab-9a0d-47d1-8f1a-b18d5299a87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3976a8e-c6d6-4855-8f86-4bc37f8c4955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5ab9bd-f15a-4081-91ad-d76e3db10d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "088aedbc-818d-479e-8caa-af3cd854a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dbc4e1-2f1d-4998-9056-e03e2a047844",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a9317-dd0a-484c-9e00-02c07c21275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9205195-d6ae-43e9-9ff5-f0bdec006f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f647e-2ef5-499b-9f99-7e532f19e727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bebc1f4-2e1a-4b47-852c-e8ae147cb714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bedc4a-7e05-4fcd-954d-175c5debf638",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ebaa67-1c6c-4bb8-b12e-dd53a4dc0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11be8a22-9167-4172-a7b2-a65fcdfb5d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e36632-e3c6-42a5-90ea-c82f2d162abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4702aca0-db0f-426f-99ed-ca4224e2492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594dc388-1459-4b3e-97ba-c412d80c5e68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37edd3bd-b9cc-4739-80c4-c6b84bcd107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794f2eee-c020-4c02-b71d-19ca2358a446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacbedb8-b111-4b94-b71e-cf521cc21b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "142e1d15-d7c8-455e-9ed5-c0d5c1430394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adac5dc4-8350-4c63-9534-5b1b261dda2a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb1dc36-540d-4061-991c-ac1f877ffada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04e235c-8b10-4b6d-afb0-bd89bf32bfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb32d9d-1230-4a53-a943-365c4cbaedf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3552090-56bc-416e-bf0f-e4cceb06b715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3994ffc-01f1-40b3-85e8-eb88db4a99d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a810506c-183a-425b-a7c4-14ac0b8d9fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c45e25-a4c3-4d55-b210-4ed046346aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe0f64-d808-4dd4-9c32-b5fcf93e0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60daf113-fa93-4e4f-b77b-cdc529e8f3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5050c467-1c91-4152-aabd-7473230199b4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c94df8-3113-432f-aacf-5193b1bccea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f9bf5-aa33-409c-b1c9-683855f905ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b350235-9a6f-49f4-aff7-84007f697630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cab033a-67f3-4441-9798-7ec7b865b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d9834c-5b4e-4b5c-a03b-b110c3e5ae97",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a04a71e-104c-454b-aeb6-dad55850a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1deddc-5cc9-4960-a07f-404a25582eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab32cd86-16ce-4a7d-bfe9-ff9ad6dbb033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a296c243-f9e8-4ac1-b97f-95aa71d942f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f24782-26b3-4fe6-b318-aab6836f0412",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd476b2-081d-41a3-b913-dc61763c8fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e0d1a5-bc33-4b17-8650-6b569f917331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd2c9b-1686-4b85-9936-f4b198202b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a8858b-a3d4-4790-9d39-810450c029ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9654885-a7ed-4bd8-a2fc-f2d04e5340ad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2f5cb7-277d-4940-96e5-476edbc48d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c87aea-5c7c-41a7-95ff-773ca724f228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b4d39a-8ab6-4830-994f-41fca77d0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "775dd5d0-00c2-4094-89e7-818a77c7a874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f03780-bd1a-45a6-bb21-1ad3e1ff687b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47896f5-8ac2-4933-aba0-3cdabce06a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875561f0-710d-41c4-9694-9dcff9e82c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8dd67-fdce-4486-8b34-106b79d007e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59679a2-c53b-4e44-92fd-274cf463249c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de2344a7-3860-4d94-bf6d-2bec076851ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "938999b0-84d6-4558-864e-3471dc190fde",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65980020-f2a5-468a-bcfd-94e17c98594f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6da7bd3-1fc2-4e57-9873-a6943f0b3262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cfe6a6-62e7-4c08-bbd2-a15307ca27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73a94410-b3fc-4c4a-9c2b-ff6f2abbd566"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c730638-5b03-4194-ba5c-0176653046ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2686b22-08ff-496c-90ca-0089374a4f41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b9f491b-ad27-4be7-9085-adc2dc0e4ad1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aaf1071-604b-4a1f-8c5a-78d49d7fa047"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e585775-1106-4274-baf6-eb39ffb234a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a842763e-9362-466d-83c7-940205b91376"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7e0e913-10c3-446e-80f6-178c4106335a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2be369dc-9ff1-446f-9f9d-9a9484af7e70"
            }
          }
        ]
      },
      {
        "id": "b61cbf20-f24d-4cc6-be42-379d6f7380de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "696308b9-a64b-49fb-b987-25c3434d97a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6735b76c-0f58-443f-b7ae-e3e9ab79c09b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69ee816e-33cd-49a9-9e26-f89855ad3bb3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106de6fc-5dc5-4945-8476-e8783497d9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff036fb-07f4-42a6-8122-271c2c7bf299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfaa6d6-0eec-4388-8571-8c2d3db61f52",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a5956-e72b-4f51-aa38-5ec6b3389801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae2273e-e45d-4a7a-8bf4-f3e4246f135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35051dc-2c8a-46d8-8999-bf074450f0aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d7da46-0dfb-4dc5-b38e-6ab5f08d15d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b743f46b-b905-400b-8398-49e6fb963feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66c8a01-9d31-4178-b322-497ac24e6e1e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d2b9ba-d24a-4596-a407-5ba351d8dfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6e1e72-23b2-4ae2-94bb-e01893e376f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe71e58-2029-4a44-a8dd-5f692dd367f9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53ca6b0-b608-49b0-9ada-39ef8fc5d497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505eacc4-6a16-40de-a9de-0c0fff471dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed53b11-8b06-483d-bc7f-fced8f39845b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1679cb-94c7-4c8e-8364-3a5ab7d88b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730a6a26-5c21-43b8-b965-34e488e3f8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fda60b9-2a36-4153-9132-202c4ab02b5b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d24d27-474e-4673-b835-1afc466f1ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89d4a7c-4624-4e45-a844-ef86dfebbdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33df4590-f8fe-4141-a299-79737b9419b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d44bcf-8bf3-471c-802b-00d3231a07ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc27bb-874f-4e3c-8e32-c4f2294db041",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb5d2b1-835e-4b6e-b19a-6ef29cce40a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d97c340-cb28-4fd5-9057-4df56714372d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b9859-c9df-4e76-9137-b432ae39f516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ed07f0-b80f-4394-b6ff-a3321b98c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b16e36d-f90b-4e8a-ad6a-d02f4b8193f1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87eace8-ffaa-4725-a41c-d7a066833183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dd36b8-e6e4-4370-8158-1a7016450567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9d4d05-d73c-4c36-989f-3925ebee1abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806f7ae0-1b35-4783-a735-2752076e34aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccf3506-68f5-4352-a3ee-15d19893315a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5b7d12-41bd-4b5e-988f-43e00dfd8eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63512dac-1bf3-43c1-996b-e6c5654bd9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d328adb2-211c-47a9-a7f4-c31b29d23a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faccf473-2808-4a24-87e8-496d39e0b4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc7cbac-8b1e-48c3-aac0-33f1e299b69d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bf4905-7684-4dcd-8abc-5f9ef04feb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4912df-a8ce-4393-99cb-1b09bae93634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a6ecd0-22d2-4198-88e8-07c39d6e1438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c962f7-c81f-46bd-b57b-27f7d423192a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facd83c3-794f-432b-ab2e-f90559a97823",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43a49f-56f5-4ff1-b486-34de6f1ea43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0e31a6-c036-4238-8cfa-5d4cf353697d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3aee71-3a52-4bd7-9ce0-1b699b761662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d73d5f-b4a8-44d9-b64c-9e7a1d89810c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109cd244-5af3-4425-a1b7-2c6e3ec95299",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8901c4-06d6-45b7-8081-2c06680b670d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4b486e-7a11-4e55-9e8e-c3a45b8e3e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fdd64e-023f-4502-94c6-994ad56ddba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43570113-b6f3-4847-8b90-b972715e895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec70bd8-067b-46c1-8d7c-31edcf3bb0c3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3d34d-576c-4676-99dd-9f5ee89b0f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96c4d17-d226-4542-be5e-79bc174c7b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1286934f-4e2f-4383-848c-24e551b97572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8a8820-00a8-47c8-b5f3-bc05b2d33fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6727c1c7-86ee-4b7e-b0aa-a0844121c8ed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bbbd86-e352-4847-ba47-4c181307c22d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df42ede6-eab7-4d26-ab17-55391af15fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb48f2-10ec-43d4-922e-c4da540ce27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa150763-4116-4893-b010-9cf7659a69ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1998f7e-ad28-4b1c-a555-62edadb9cdce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65526ad-4fdc-40f9-9a3a-4bd82569b054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a9a0f3-a69a-441d-a7aa-a7b75b34284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7ef889-6777-4fa5-b44a-bbc78245815d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fed2a8-6005-4852-b0d5-7aaed9b01abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2cc9fa-c790-48ab-80d6-804f0127fc55",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985b19d-c32e-4e43-b5a2-439abe0ee711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab7b1fb-cae3-4f90-8ea5-8ac3dd1ff41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb5b57-a7d5-4cfc-a48d-ae8d6048159a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f187242-09d1-4124-8698-17b568a73744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7273b3d5-8ae2-4a79-a7df-6dda11905dcd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352eda80-7adb-4d3e-9701-47df617710dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535a25c5-9b3a-4376-a0ef-5f5a4b30ab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3579c867-f4f6-4f2e-9bc6-ad28a30def31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7792b790-1065-42c5-917a-dffe7a6f2962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3989daef-4dcb-4796-92cb-c65d08f1e4c0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f592fd2b-5e5c-489f-8daa-9253e591e0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1cf1d4-3a8a-40f8-bc1f-237c3a19aef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad2399b-9de4-48f7-9382-ae3534282acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7bcf20-1c57-465c-80d0-aadc1530559c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2692e3b7-1c8c-460f-8149-a0a5adad3ec0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea6abf0-37ad-4c9a-af7b-07a78a02b4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56db82ae-7d4c-4fb8-9fd8-3bc9f3255f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c574acdc-7755-4479-b438-6e722614720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f07f71-a74d-4b86-a447-54003385f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c35172-a8ef-43fd-ab1d-b16ea2f42497",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0f38c7-083e-426a-a329-1e4dbf2ecccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49aa1535-710a-469a-a53d-bdd65dadf42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926d5375-d3d5-4647-a288-381efe3e8e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04292dd3-a609-417b-a896-0d8b15f39abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faf1575-d6c0-456e-8026-9d41bb95cb82",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73ad05d-22fa-4e52-b2e3-80bcd048f65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af40f745-e1b9-4142-84c6-86b21c993b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a33bb3-dca1-46fb-9d1c-f458394a03c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df4c31-77b2-4d89-9afe-21a8cf458bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f74793-5dda-41e7-84cf-6acf83d872c7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b03976-7a61-49e7-b2cc-36995aeef7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a63aef0-a73b-444a-a170-4ad8d2dc4f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73635daa-fbdc-4bd3-a082-318dbea72145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7e4e7f-27b9-4232-8ed4-ac0d5dc09273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe96f3b-f2b7-43bb-bdeb-d1175d2d7a0d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08335c7-7421-43da-93d2-6b0c5c6b96d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d7de86-d0aa-44c6-a84c-6f9e63ad2ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b5efee-6ea2-4326-afa9-ad127c232ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b9bb06-6856-4861-b98d-268ced4d289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83961f2-f5f3-47a4-adae-f10c41f3cb60",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd840ff6-adff-4ff2-88e5-69a07a691879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ab8c14-faf0-40d3-b33e-85a1e9be04f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79752233-7d1d-4928-be6d-42303256c2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b174095f-00a9-4626-a00b-11d093e3e423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69f8fb3-5b3b-4061-b55f-8634a73285d1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e5ea9b-f132-419b-bab4-3555de1261a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e04e429-cff2-49f3-88b7-9b3cba1125a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a30356e-6d73-4e12-becb-d34d7b6c88b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fa1403-d1bf-4cf6-89c6-722d52d5dbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ac2b61-2045-4670-ba38-cfa49e9cb078",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d64c2b5-2c77-4690-bfad-90cf7fa65afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2797e94d-b0e9-4095-be38-3e1f28be08a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1841a40e-4ce7-4ee5-a1e3-14b779ffae73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc848b93-c552-4975-b0e2-fa3cf72b5a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa62460-9492-4d19-9920-5878ac9965a3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee10b00d-1520-448d-9754-7c62fd593a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c0f45d-47e3-4976-ade3-d61025ab7eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be29bcbc-c9a2-4333-a457-abd0401758e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300353ee-f26b-49eb-8f59-28324b5b734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c5909-9261-46ff-ae60-a4cf227628a5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664e953-7e27-486e-a550-f8f0880c511e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa68f117-26c1-4dea-aa54-729609d9df10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5132d8c3-1ae7-4f6a-8be9-70810dc81fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1764281-2b95-4250-a005-516e5161bb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b52e167-777f-4cf0-a94a-9440fa6dbb87",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43568bfc-8f62-411d-a7ac-fdc7f9159ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78405af-6b5a-4654-ade9-130d14bb8e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f255e0c8-6bd5-4d80-8fc8-c4e42504235b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43f1069-bac7-4f54-bbfd-c55ea0f61bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a5c656-de4a-42d7-ba95-bdbbf168504c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d84c60-4851-47d9-9a4a-b2d6d9068599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5196518f-899e-443e-ae70-60b8e202904e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b9344a-8d42-4538-b61d-eb028d737de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b025fc7-0a70-4b02-9a95-abc055e5c08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57453f0c-5514-427d-98c8-a5eaf21e00c7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37995762-d945-4c71-8809-4206d9fe1f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab3b4d0-1c27-4071-8796-5c7181b6e7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f789c2-7b74-41d6-a7b1-bd6e34ff3876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c25ad50-0c2d-4518-8f9d-070f24148970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4549ce72-0a95-4020-9856-d9b7ebfcccb2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752dbf3a-a103-47af-8136-47bcd6d70049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d40cb4-d70b-4e47-9f05-8040d5de89ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40710bf5-8163-4941-9d52-016df28e93e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef91c70-a957-44d3-ba3c-7dd49a88f3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fa9644-7cc8-444e-9969-7c0502eae91d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b655af90-efed-47c9-9de1-99e4086e88eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353a9812-e52b-4c5e-b4a5-0144d358f52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a16855c-30ba-44f1-aa7f-7dce92a0cacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c752e162-5429-4300-b224-489c0fa21493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cdc49e-a110-4ee6-8398-052789e19c44",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc848eb3-dec5-427f-9cf6-9fc5b6bece68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68fec39-a1ec-4bbe-a673-dae9acdd483f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a294d6c9-2d89-4257-94ea-8fdae62a5061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69aa0e01-a2fe-4c23-beb8-b8dd80f76491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bdbd3d-6c64-459b-b15f-14ee78ae82e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e04bfbe-1acc-4ecd-941d-d1807d06a4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7459ede3-e49e-4743-b0cc-61be3eec20fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f74ae66-cada-4261-8c0a-c01206c624bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd06f4ff-bd44-4cd5-be6e-6f7a67a98cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c22497a-26e8-474b-b882-d1b6e2e58f30",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdce6ad-2de0-416f-af47-d8ca05d2899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c09b47-219a-403f-afa7-4737c98dad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc20d28-9c18-435a-aa8c-0f17c32af8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae5bd98-65c7-42ec-b88c-e06b8f55fab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06defda8-1434-4f5c-816a-2766c458c1d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ecf988-04f4-4bb1-9024-72a4d9ab1fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45c95bb-9963-4774-95c2-c2322988a817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f3f8a4-e32b-49ff-afcb-b5702b8db6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f64be71-a57b-460e-9e10-26264637ebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315022fe-d86d-4a90-95a3-323d6860d873",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf922886-796c-4833-bee9-a36e2855247d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8d0bee-c8d3-4906-98b1-07ad21449d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8546c4-1b1f-45cd-a47e-20a4ca9409b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ce00aa-8aa7-4c93-b7f9-b7d40e4f2391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabfc9c3-6909-4225-906d-cdc66cbe4b54",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9ca8d-d96e-43f1-8672-fe839a54f032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079cab34-b451-498d-b1dd-e6ed8afdd35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a95d2d0-edd0-4aa7-9c49-b8df9e4ff656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a736d52e-cf15-4697-83ac-001b9b25467d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878938c5-f598-48d2-ace9-2193c1d1f4a2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26c8bf1-64e1-4878-9901-781724bcfd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9c8f8-ce4b-4eff-b740-db9e7ee187b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc8c3f7-f811-4372-8986-6e6ddfd5c15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbfa9e1-a432-4fff-8299-f92780858d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf409fdb-eaa5-4c84-a28e-0f2415e4bbfc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2641d2a-cd30-4673-84aa-8cd417ef3408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaa6bf7-b001-4d63-993c-48fee28ba1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2705c771-ea0d-430b-b406-b4c1dc086f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191af89b-2c31-4e21-a97d-2dc91fd90dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c516a237-5f27-4329-b944-70e3b1b7ce88",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b16eb3-f12b-4b9e-99d5-df7ee535575c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89debf55-ca21-42a0-ab81-f64a5129af40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774168c-3645-4312-8f09-0ad52927aed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c21c81-16ff-4ea5-b566-590a9ce1f6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02554a9-1787-474b-99c2-b5e743fbbf4f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d82e51-35ce-424d-981b-1cd78b277eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146e6d46-c184-491c-9b5f-9d09a58c69e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af9a481-904a-4861-b7d4-f1f525885329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1a3b53-456d-40d9-829b-13b18a4caf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd30174-45ca-4092-a30f-040f863f9740",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce527f1c-a70d-4453-a497-757eb42ea321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc0c740-a14b-43e9-8e4b-e51ca74bee6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3645d3-4e6b-416e-8189-899943beac40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32604f36-9c28-450a-b978-191926eb2cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d50d4d1-8c59-4a2a-b845-ccbac063d1e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4406694-b3dc-424e-867a-69826acb38bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fb6871-1a8a-4c48-ada6-ec5bc689925e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa99dcb4-562e-45cf-9c3c-e24d74909287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a06c0c5-55cd-4743-bc40-9afe0291f1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f15d569-c37e-4a58-bd16-62056e0fd974",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedf3d9a-461b-44e9-9499-6ef8a637df04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd307403-4607-4850-aa02-decb01bba25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19434aa-48d0-4e53-9d0e-33d969279647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d707607-a96b-4319-86a1-093f21c193ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50943421-8d25-484b-abcd-8b9436175529",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6363f878-6728-453c-8e6e-a13cef9298e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e6acc7-1948-4ca0-a85c-9838f9989bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd06c6ef-bc30-4b8b-8f4f-afc37d294cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d11e1f-5e20-4389-9708-a85980f9c871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb55cc-721a-4dbc-8f0f-45b490ba95b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9fe4c-5ff4-49d0-94f4-cdf4d19498ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c1fc14-6b96-4014-be2b-b2db90e308e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492c5c2-fc74-4b03-a9a0-47a1d21585f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12161b5-33e7-4e38-a78f-e977fed417c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d229ba-8f8f-4211-a853-e74bc7894738",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be7c67e-c0a8-4c5e-a246-967793cd2ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9219fb4b-1718-45c2-9c54-5bcd2c4681f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94befc47-847a-420b-9f07-d992bc5342c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4577f1-5a35-4ded-9745-0ed626afcbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ad58a-7b56-456f-9c37-8fc1f7f8d253",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aea32c-0e17-4d65-a176-d204289a40f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec53e34-af51-4a88-9480-a9e362f789da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c78ccc8-d337-483c-b3bd-2be8a963e428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaab0a2-9396-4dda-b9a7-78149baa9295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61051648-2d2c-48d3-a32c-dbe1b3f49911",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c512b-62c4-48e2-8f46-984841017f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92728cc6-29ef-42ad-a63b-123f7988805c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418d9dd9-b034-499d-8af8-37b8224debcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabda688-0d66-4e4c-bec1-865480cca8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be73c5d-5cdd-493d-ba57-73556d803afd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c174f734-eaf3-4dd7-bcfe-34eea2ce01e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c631a2-7789-4cb7-bfac-722bd5d60e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ece288-268d-4fb8-92e2-170460d27fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceba5d1-92d4-4fcb-a89c-96e4eda16cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dae3bd9-e81c-4c5a-bae4-8b45135ca440",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d04deb-8a4f-4db0-b0f3-bb40b853813e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75051d-8d1a-4948-8427-4767216e6949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb900e2-4221-491f-884c-ba5339a313a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a6187d-dac3-4b0a-b949-423aef7920db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df88598d-0cfb-472a-87e8-eaa08aebcddd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0993b76-d70f-4631-a171-62a236138d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fe4b71-e4b8-4615-9706-582cee65e954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054743b4-2293-474b-a254-aa371fb077cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b701393-ee2d-4aba-b952-c6e84ba94c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e8026-6c60-4b77-9157-27f6f7da3167",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf6070-188d-40a6-85cb-f7033a0500fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6605aa17-6c66-4916-b0e5-4659e60df931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5053a0d-79f3-490a-a6a6-28663fa8a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8133869-0006-4392-a33c-da6b1fcd4fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41786661-865d-4b78-afcc-e7b3417ee513",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f512a2e-3ebb-459a-9a36-ffa52ec81f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca07f931-56c3-4925-9d34-4f0545683f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458eaa10-278b-4598-b7c7-8da900c5a9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c77729-379e-40d8-a322-7c462ff9220d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6254dac9-da9f-44d4-9eb1-d2f33fcef81e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d63f4e9-661e-4df2-9861-252db3c987a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013ad3f2-dc7b-4ccc-b682-fc69a1d44f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f190214-ceb2-4c2d-b2b0-167ef130f5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b4a703-39b1-4de8-bbb1-559a4893bf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e61dff-12a7-45d4-a8e1-7a08db2d3195",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6ab53-7dc0-48be-a649-8bb1d4ce6b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c346aa-3368-4fc6-97c7-e655812b95e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08f0ad-5e76-47e6-abbf-8d05ba20d13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959a2913-0984-4eb4-af7f-d7276badfcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aca497-5445-4d53-8827-5054fc91f03d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da76da3c-2bcf-45bb-ae8b-7b8a79c5eb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73622bfe-591b-47b4-8ab4-4095bd365513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66846389-b91a-4a33-8c5c-cfbbfb36fb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dacf29-65d1-46d5-9fd6-630efd5015fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6a2c57-1e58-40ed-90c5-2500d6f65079",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2daee3b-b1a8-42c1-82af-ef1d979c97e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42850877-9a19-42fa-a4b3-d646ae7139ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c5b271-389e-4b20-a3a2-7668e0b8e396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e63cf72-a48b-4d9a-ad81-bc8880914a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198afbbe-93e7-49fd-8462-f441da2d9d5a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ebd0e3-5894-49e0-8d3a-2a03669985ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e51df3b-8653-4893-bc8d-a63fed70479d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48fb077-1cc5-472d-b226-4bf1ff8a05c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ae4b3f-51c5-4805-893e-b964bff05385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04b11d8-8e76-4b9d-a07b-a337e78ecf8b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddb8757-2b99-414d-8655-9937b408500d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fea0e5e-c002-4151-bc77-c42a27a0a0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c680a4ab-ad20-400c-a135-e7791a0a6f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e58df4-531a-40d6-a458-2a69b09a84a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05564338-3cfb-42ae-ae95-d4e4670e38a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dab947-09ca-4977-96a6-a8fe1649be86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6f80e1-6e55-4d71-992a-c445f5532dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0361d-94ae-4ad0-a835-8062cfbe7c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fe012d-8126-46ad-bbf1-d790ecb4f739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1bd29f-9df7-4812-9dec-36de58cdbcdc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d663253f-1136-4987-9995-9f1e80785ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f560e0eb-8161-4fb9-ad5a-be100d9e5f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8f7b17-56d7-45c5-b1d0-b5651e6e41c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7496c2-93d2-4e1b-969c-96d39533c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6494f9ee-dcef-4d69-8736-1c11abcb6e87",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8bde9c-959b-4cfe-87a7-280eca2ab0b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fafd687-7405-47f1-a3ef-5ea012b2ef0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e51fac-d584-4b47-b245-c786bd1f924c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852f0271-68fc-49b9-8ab7-5efcdb41b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0349898-6515-4a76-b39b-2b0abc1b25d8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046cbd54-ccd7-4f5f-9249-2b05c2925d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e888dbd8-9f87-49d0-8bce-0b4805607bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385d3a17-c8f5-4f94-8228-2ee6a26aa204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271a6ff5-4a84-4207-80f3-7e0c83cad663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d446dd-5a29-495c-9434-e6c8d61e1e3a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ed3eb4-84f4-4412-86f5-90fb8cdddbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ad38af-6f4d-4788-92c1-f42a6d21deb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de21e0a-8c52-475c-9233-d2688e6a0ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743529a5-f511-4319-a5fb-b8db73f15386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a35b14-13ab-4bed-aa6b-d21769841e5c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0debff34-4ead-40d0-a7a0-be533c398e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557a0d3d-1dd5-4837-aed0-7a48a70b0d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f8093a-3b77-4a4f-ae5c-444420261600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800696fe-6520-44a5-934c-33eaedb50f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e913fa-43a6-4f71-b38f-53014836afdd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870be031-219f-4c4a-82b0-34355f63e743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b35979c-4eda-46fc-94c4-5bada8f2de82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e52ef5f-8da1-4c43-9123-155cf04f7216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cd4e2c-c01c-4860-8e8a-8337bd74bdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9d20cb-8e54-46b1-9f08-1168cebd5389",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1d0b5-7d8b-415c-a36e-a350c1848dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b2f287-4ca3-42fd-82a9-14edb23d62e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c419311-8ce2-4d63-8fba-cecf6561aaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf1ea2d-76e5-4d1e-a475-b97512db1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75807dd5-b96f-4478-be6c-71ab1cf3cf89",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1d90f-74c2-4d90-9c2e-fa065e2bc6c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04506337-486d-4d69-9c36-e32c687187a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3edc1e5-26f6-4741-a841-3e616bff7d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb7ac5-7f20-4881-bba2-39a269b5c213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d46d37-b466-4380-985e-100069b8a741",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b972b3-545e-4e81-bdbb-325ed5e63bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1ee5ba-1cb0-4d43-b7ce-dfb3492fd3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8338239c-a74e-4a7b-9e09-2cf6db38f391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b918bacc-44f0-4910-984c-204e564376f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1089211-e8eb-4992-a4e5-a9e1d75ea348",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ac2cc3-be80-4d47-91c3-8eca37fb373f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eff964a-3bb6-42a6-a6e0-ca836b39ae93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a30d25-a68a-45dc-b244-8685e0d949d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60626c64-4c20-4d39-b081-5a6aee9d2df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8155492d-5ad1-4fa9-b745-a23a26d8e8c1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5a4a02-9922-456d-af05-fe79167dfd3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f43710-2e66-4740-ba17-9364cff2b82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aad195-d718-4525-9bd8-aa6e660ad7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f709e33-801b-4c84-b008-09795533d23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713f66c4-57e5-4822-9048-4d0f21a20dcd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb257234-b697-49e6-a6e9-4cd8edfa5cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e31676-0455-4bd1-9bac-649ef44cf177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50446cb9-6937-4b77-8d15-f4c946ac50e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8139c667-e9fb-4bd7-8fb0-d862242aa122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde079e7-977e-4dee-a2ca-aede0ed3d090",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2badca0e-1c59-4dd3-91ac-e18ced6da206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c772d4-c8fd-4b17-9399-f4d12e0308db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6211d9-c4bf-414a-86b3-87eb6c80a988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e867a6-9e4b-4bc2-a565-8c5b809ad6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357b93f-4955-4a62-b6f5-9f3775037e9c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe76b4b0-d1ef-45b1-ac7d-05bda33335ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48223f4f-3370-4782-99fb-f89145125e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a409169-b5b5-4fbd-879f-b2879df98c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a356195-a243-4613-ac5e-f3821f563e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f4b89-93b9-459f-ae84-3c8e055e69b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25caf9c-4eb9-4500-9b27-4e1517f50413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d99a47aa-3059-47f5-bbe4-fb0bf03ed677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f444ea7a-14f7-4fac-af61-0c3c71d438f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7810f96-2bc0-46a3-9896-e670f32d695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68d4db9-1a20-43e7-a80f-b0ea47f91f2a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6688a0d7-c386-43b9-80b6-ce7af6718af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a2e600-1079-4268-bd0f-e6fb67acfc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac963587-1070-4b00-aaaf-33a7a65b4c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1738540-0ef1-48e9-b01f-ebb5b4d901a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7e197d-fe3d-427c-88d0-e3c0e8759599",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f362e3-622c-4add-afbc-3f00c1bb2642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c36082-34a3-464e-af06-799529f6b05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05571c8f-a347-4591-ba84-d8c9f9dd5bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a1870e-1386-472c-a170-1f52c814f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5a54f3-7199-4909-8c36-3c62c6e5a8e8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e15dd57-e473-4f84-8335-4b0f96c04be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbdecec-a06c-4972-a638-6b7fd31a19b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb342ada-234c-412b-8ad1-29b74e5871c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b35666-7291-474e-823d-973c9c16bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2828d583-e3a8-46ba-8544-db9e7934e35d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513e3115-8f95-4217-98f3-ef61f8b10d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf7e01b-269d-432a-a227-8a8f1ce392a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b24b6c9-4ed8-4d07-98b9-7c00aa9d7782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03f3327-d462-48e7-a7a8-94f047a28d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a9b8d-2158-44ec-b36e-549fc6e36b1b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c403ba3-64eb-404c-82b8-3d6e6b7e2eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9899ab16-bbdf-4912-9ddf-dfd58cdf8379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d0fc71-e7ee-40af-b99f-14c07c72994f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b28d8e5-14e3-4cb2-bea3-6d309897ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0065f4d-3431-4e69-9284-a592fb22335a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73e199c-e9fe-469f-9e6a-440e1b6aaa61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f13d666-c27e-4b23-b0a6-72a629265dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f48d703-131d-4ad0-8fab-58119368439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761d2253-422e-4487-8a6c-61f60700af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312bc400-40a4-41a5-9957-41ce1fd2b099",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe735a2c-4b65-42b4-9a29-e106c765fb20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b18c7e43-f5e7-4a68-acce-f6363fbb1a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177a37d3-f349-4759-a7fd-42c2bec822b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8283da-72c4-44be-925a-65ffd15700eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b1938-44ce-4fcf-909e-a227163bb300",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9814f136-f255-4719-a5a9-00c617e408db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a6891f-83ec-4805-b9a5-af0bbe7904d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b9f9a5-3cbc-43df-a56b-02ffde9a740f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6216a1e-5ce9-46f6-82a1-b83e647cc735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397c2e94-625e-421d-ac52-aae791c3e7ad",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777f8462-66cc-4d0d-967a-46b78c23a3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76aa43f5-5603-4021-abcb-9eaa8a275d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb0e63c-63cd-4062-a788-c959ea13d17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733f7944-b845-41b1-a714-ec3a7302062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d0cc6-a9d0-4c8e-b305-5d55261adca9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabedc94-3132-4f6c-8ae0-85ff8fda97be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13af7b8d-871a-4f51-af3c-20ba5efa48c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0d7e62-be53-4b37-9dd8-25c9d685bb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec4f32f-d515-46de-8175-5d8599a7f01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84afc0b8-77b6-4db3-ab03-343eb0db01eb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdda11f-f60d-4a9a-9a14-51bf7aad2307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978edb4f-d36f-4ff9-a77c-50a62742a123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a293d5e-6f73-46ae-aec9-a1ac7b85724e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24382572-3f08-4240-bc9e-fc88efd2eee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737325a-d601-4f6a-9654-0798df4a5695",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd64de7-3b92-456d-ac7f-7b86805280c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d6e2e6-a0ee-4747-931f-49d6b7f3b67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cde2d2-a8d0-4200-99c6-e15446f00867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00688bbd-2d62-49f6-9a79-a48da06f5930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b04b63c-99ee-4b26-9f6e-8d2ebd078afa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59305d-cf68-42ae-8781-7e8e30c9582c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d478f0d1-f6a9-4591-a667-768b277e8fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b9108e-2279-4494-aadc-f105df69682c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1869072-3109-4b1b-aa35-2c8a8adacca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c3781e-ee5d-47c1-915a-0fc31a8b7abc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd187a-c3f7-4d9f-b8cf-fd37c6c27f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9f5be6-9794-4622-b157-4afe5da8f2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d91619b-b4c9-4483-96e6-ac4d564dc155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b6477c-3012-4a5a-9e1c-f79e74ad395e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e322b02-17f5-433e-8016-83f96c4d33c9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d99a104-91fd-48b5-8472-b43f1ea8b839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ecea56b-cce5-43c8-8f9c-58e810f5020b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a12db-de10-4b76-9463-d216aa65f0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b48405-e018-4246-8622-990db5482bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ebf81d-cd52-48b0-ae05-10118562968d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4197fb06-66e3-4524-9763-304d9547944d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5656420-ad83-483d-aaab-3c3c54998895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba8c76f-19c0-4808-b87b-917d740ea5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc410404-d584-4509-85eb-176571c569f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086eb5ff-151e-4608-b47f-aba31e6d8306",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3682069-7e1e-494a-8601-7d9c50da8029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a1c36c-123d-4cf4-8f7c-62c6b85473cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a8edbc-83c3-455e-9e5b-401c8d1f6694",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69800667-c928-4eed-9a5f-bf5da47e70fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c811871f-4840-410a-a689-26a307220911",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fc5bf8-1e04-44b6-9c69-eebbbd4a3fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0740c2e4-6529-4a33-be87-a32e4db9b036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400afd38-f2e1-45c9-bc1f-d9c3c8e682a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d934480d-3e23-47c6-8939-a937feb33733"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc941721-731d-4c49-8430-4ec625e6ba80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78533501-8416-419c-94dc-c1cb300aa4c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b9ad40-216f-4657-b429-b267948c562a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b1bfd4f-9b93-4127-8ea6-057fbf9a4316"
                    }
                  }
                ]
              },
              {
                "id": "746dd25a-cdc0-42b8-8a98-a7c7151f9c81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c38aa068-750d-4c66-adf6-a2d084d6d81b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e4df17-5553-4ae1-8a87-119ae101730b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1dfd690-b106-4886-a2a7-2a77174615f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad28d433-abfc-4d85-bd9b-56399cb6494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a048faa-5ea6-471c-99ec-fbb3513844b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eadcaf8-d959-4314-99a9-52871f6275e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c45db95-fe45-42e4-aea2-77e850fa200f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65fa0568-3c09-475d-92df-5df31d139939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad4e36a7-8891-4e6a-99a3-d870ce8a074e"
                    }
                  }
                ]
              },
              {
                "id": "1013256b-293f-42d3-a83c-613a4379e7b7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5c2d3997-175a-4cf5-9f70-29b0b62f9d87",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f942f46-bfe2-4bc0-9b3e-5da02ff31bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e1d53f0b-9f50-44e8-a87c-16961f4094b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83575cca-a135-45a0-8b64-ac3d4ec8bf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b155d7b9-c2f4-40a1-912a-4c579e3c5acb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80230444-7bf9-42ee-bd5e-16886261cf86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7142a24-9e18-4ae9-b6ec-fd66d5dcca83",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "431d1cca-dbc1-42ff-813e-8341b7630c16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a333af0-baa9-4515-bab9-0a6b435b15c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d56ebdb7-57a6-4ca9-8b8f-a82087b7c676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7db9ba32-1c91-444a-bedb-091f246db5ff"
                    }
                  }
                ]
              },
              {
                "id": "9b2fa077-c709-4ccd-8700-769e5871ad6d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f8172e8-ca7f-4684-be18-1dd2a5530693",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83d5eb36-bd10-4f5c-a443-77732971de78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e537a4b-c638-4a2b-993b-089f752e7a2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c17b2563-ea39-4090-93b5-d81f62b999ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93641af7-f248-4e3b-be3a-186466b065f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eaad2a29-cbf0-4fc7-8f34-17ed00a9f17e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "514cf5e2-cfbd-4fd7-b0f2-130458c00eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1843578-bcec-47b3-88aa-d8da6e2ccdd5"
            }
          }
        ]
      },
      {
        "id": "27815dde-84ad-45c3-8952-802c532fe0e1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9b5193c-9d32-4c58-bbe2-bd92e3e72596",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db136140-0e50-4c94-8cc5-a7785e238268",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ad60bb2-7c51-468d-ba14-5923b75d94d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783628bf-740a-46df-a34f-3f7a8e22e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c955e05-5187-4055-bd45-ce2fe15fbe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11529dd1-285e-46be-8954-5d814a538700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f13ecdd-5ad8-4370-a6e5-454a846645b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d30ac3-2efa-4e40-bcb7-2b0ec1568432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "090bcf59-36b7-4153-8762-a58006d78d07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e0159e9-d168-4dac-8526-2bf7339a7ea8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8055e3a4-7a3d-443b-b486-02694c71ee71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90953961-35a7-4609-915b-7a9b18e3d096",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "054d335f-2d15-4b81-9094-b0b95ea3d897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef610ffd-ad1e-497d-937f-4b22e33b883a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f4a0c99-3671-412e-a45a-bd72b4cf967f"
            }
          }
        ]
      },
      {
        "id": "fba666ac-5bc1-49bd-8f15-1273aee75b6f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "227731cc-8c2a-4b88-abf9-61b45d30535f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bbbe90b-255c-4427-bf71-160ea822b293",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30986e51-659a-4d8e-bae3-78858d7deb94",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ba549-b0b2-4bd8-8652-86a6ee41c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38325536-e288-4044-aad8-4c272c8bab20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3c3ba7-3e32-4452-aa52-d0954e102da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "974ccc00-bf4e-4c39-8c72-ee4ff951d2a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d6edbd4-e2f6-4c43-89f1-eb32f7095bc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f05702f-95c7-464f-bf4d-ef8aa854a85e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75c8cfa9-1535-494d-8470-afd2994c6b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6123513a-b90b-4705-87c9-5bc801eb463b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f31a0ce3-8976-4385-a55f-baa5e1631b71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb819758-9987-4460-be32-77024cdbf880"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0767931d-4461-4a12-9819-ff35792ce6a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05c0d02c-3e12-4e28-a9fe-55693a4395f4"
            }
          }
        ]
      },
      {
        "id": "6ac429c9-6b90-47be-b5fb-b6e3cb3d48ea",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "08f85b9d-3d39-47a3-8dcf-a095565f059f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "471f6ead-f68f-498c-8ff1-4e620fd1f3ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36e9d4d4-df83-48e3-8ceb-6e76dc6167ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affba4d3-0c1c-4134-920f-81d1ef0397b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e8004cc-8df2-44b3-aaff-ee497ad9226d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390fe66c-b073-4786-87a3-886a2f91677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "191d7e8d-872c-4b79-9b13-d9ba8b5358b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1658c876-2bcc-4777-8cfd-d24997609b13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f429959-6923-498c-addf-13eb9d2d182a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb51976e-631e-4e35-8e01-0c9156ba379a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7d67c3-087f-4b5d-862b-b5459e1f9a5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "683c61fe-1f2f-4f66-b107-3cf649c70954",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80d6d414-9afd-475f-a5b8-5aec03229091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8666cbdf-bf27-4e47-af10-e6c6ce334635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87e18901-e1f4-4b8a-ab8f-cae619419c56"
            }
          }
        ]
      },
      {
        "id": "33a57f8f-e84f-4e76-8022-6c6a6a6d826c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d74c779e-a594-4e29-b3d8-7f8b704aec23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "561b40fb-b808-4500-b433-473907a276e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "735e3e55-3107-4c02-a91a-7610b33ec813",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a31d485e-5373-49c8-885b-0fc94b2c4fb2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeffe214-a5bc-4bcc-861b-f2f175e8baf3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 120.00793650793648,
      "responseMin": 9,
      "responseMax": 9840,
      "responseSd": 699.5528503359858,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717807081937,
      "completed": 1717807120318
    },
    "executions": [
      {
        "id": "7c6535be-1c32-4985-96a4-b6bc87ea8c40",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "45f1b5a8-37bc-4aa0-9d90-e7874fb56363",
          "httpRequestId": "599f0703-11c2-4c81-8ce9-773645af0d80"
        },
        "item": {
          "id": "7c6535be-1c32-4985-96a4-b6bc87ea8c40",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c91cf6d4-71d5-4c15-b93c-a96048e8551a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "2de04770-cd9b-4b53-9315-f4092c427c32",
        "cursor": {
          "ref": "0e54a115-5b48-4cd3-85db-7566d706370a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dca12cc9-ddde-4afe-b344-21bde4a3210d"
        },
        "item": {
          "id": "2de04770-cd9b-4b53-9315-f4092c427c32",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ea026d3-348d-4d59-90dd-1f070142628b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a897435a-451f-4ed7-a9df-31ff659833d6",
        "cursor": {
          "ref": "b3a108bc-c43f-4a66-88d3-a3f429ac1756",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a8ddedd9-947f-4e04-be5f-298df995436f"
        },
        "item": {
          "id": "a897435a-451f-4ed7-a9df-31ff659833d6",
          "name": "did_json"
        },
        "response": {
          "id": "201a48d2-e0ca-4ff4-94a9-6a135a8aa484",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc985f1b-0bf7-4be6-a313-27c5c43d088e",
        "cursor": {
          "ref": "fea2093c-0bc1-4ac7-92c4-d23130769417",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aef30a9a-12ea-4bfb-9c70-25be4df35486"
        },
        "item": {
          "id": "fc985f1b-0bf7-4be6-a313-27c5c43d088e",
          "name": "did:invalid"
        },
        "response": {
          "id": "88a1f4f8-d58c-47f3-bac9-429ef048d90b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 449,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc985f1b-0bf7-4be6-a313-27c5c43d088e",
        "cursor": {
          "ref": "fea2093c-0bc1-4ac7-92c4-d23130769417",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aef30a9a-12ea-4bfb-9c70-25be4df35486"
        },
        "item": {
          "id": "fc985f1b-0bf7-4be6-a313-27c5c43d088e",
          "name": "did:invalid"
        },
        "response": {
          "id": "88a1f4f8-d58c-47f3-bac9-429ef048d90b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 449,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1602a81-70ac-4a1e-bb61-98c6c12a10c2",
        "cursor": {
          "ref": "3b1e2c78-20fa-476b-8e01-c97e9fea108b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d5ac75af-0d33-48df-9374-2f2b8e4d7c5e"
        },
        "item": {
          "id": "b1602a81-70ac-4a1e-bb61-98c6c12a10c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f203552e-33b0-41be-9d15-27d7da7c7e9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96361ee2-e007-472c-a907-9e323725a4b9",
        "cursor": {
          "ref": "6b44d92f-20c3-4ce9-8037-5c22cd0add13",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e53242d8-64eb-42fd-80b6-fa0409f08991"
        },
        "item": {
          "id": "96361ee2-e007-472c-a907-9e323725a4b9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "927dea82-e1eb-4193-abbd-95fbc4246a90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3fe425-62b1-4171-afd5-f1aeaa40e1fa",
        "cursor": {
          "ref": "e4def6f5-cd08-46c9-aa97-8f003105fe9b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "415cc2ac-1b2d-4e7b-a7be-fb3bc4e8db93"
        },
        "item": {
          "id": "bf3fe425-62b1-4171-afd5-f1aeaa40e1fa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b20c3a1b-577e-45c2-808e-47db1cf56653",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f472e9-b1d7-427c-89b3-00b34f5806ff",
        "cursor": {
          "ref": "153632da-dcec-4cd0-b34b-75f4059e0b6b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4f30104b-8845-4816-8832-f0f579660b3d"
        },
        "item": {
          "id": "26f472e9-b1d7-427c-89b3-00b34f5806ff",
          "name": "identifiers"
        },
        "response": {
          "id": "c42f9e00-e0a8-4e65-9e04-91d4167a6fb9",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a2ac30-1e21-428e-91f8-0e67c3829d10",
        "cursor": {
          "ref": "b63533e0-189c-4fa5-8129-eb538879e772",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "581ba20f-d939-4bb6-9d91-1c6b70b4c8aa"
        },
        "item": {
          "id": "79a2ac30-1e21-428e-91f8-0e67c3829d10",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3dbaf982-aa83-45cc-8135-cd1d3dadba81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4829eef-2321-4781-9f0e-cc517bdf9813",
        "cursor": {
          "ref": "7083f3b9-3cae-4749-b111-d4d0867b1aec",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "880ebc89-ea84-45e4-9842-143fb1b91cd5"
        },
        "item": {
          "id": "c4829eef-2321-4781-9f0e-cc517bdf9813",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "82a0355b-e440-4e23-b4a2-bb970bcca56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b288d4-471a-474d-84e7-5742f351a898",
        "cursor": {
          "ref": "c8a6f666-63cf-4812-a735-675aebe6fcf3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9fc02c07-ba34-4d0f-b6ca-0ef041d5cc56"
        },
        "item": {
          "id": "08b288d4-471a-474d-84e7-5742f351a898",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1e709ef1-27c4-4d88-86a0-2dbd3f6f3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d91bf0-e983-4142-a3f0-18197a4c8706",
        "cursor": {
          "ref": "9b4a3762-deeb-4835-a445-dfcb3a87652c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dd29f6fd-8066-4021-b94f-3304a84a099d"
        },
        "item": {
          "id": "72d91bf0-e983-4142-a3f0-18197a4c8706",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f17abda6-6ddf-4446-802f-a0ace03524f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebfea30-7a23-4c06-972c-15bac00ba6e4",
        "cursor": {
          "ref": "acc607da-01a0-4d34-bb8e-43033bcccb64",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b56b388f-6ff3-46de-86f2-8564ffbac8c1"
        },
        "item": {
          "id": "cebfea30-7a23-4c06-972c-15bac00ba6e4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "21a04bca-09d8-4774-b8bd-b4310e7a8788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0b42f8-ea51-466c-abd5-e92a33bc11ef",
        "cursor": {
          "ref": "00c6db2a-a19a-4e79-9507-8b17918c5145",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b33a065-9e9c-4325-ba2c-91b006509424"
        },
        "item": {
          "id": "ad0b42f8-ea51-466c-abd5-e92a33bc11ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "50e33606-322a-49e6-bdd6-d7e61d6232c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005003d0-03a6-494d-b083-f1c4e9980f47",
        "cursor": {
          "ref": "98852a2f-1876-4f1d-8b29-9ae7abda34e4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ccd49c09-68dc-4781-b6c5-3c0be19d6584"
        },
        "item": {
          "id": "005003d0-03a6-494d-b083-f1c4e9980f47",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5280c182-d83e-43df-84e4-b2a890de165d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab61065-653d-4663-b9ee-03f7a122bdb6",
        "cursor": {
          "ref": "d8d26ba2-3931-4df9-a96d-ecb800205b77",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bdcc0c8-79c1-4ae6-b151-8ed95057cdf7"
        },
        "item": {
          "id": "dab61065-653d-4663-b9ee-03f7a122bdb6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "822467db-f1db-4388-a696-bc08b110b2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371f2715-edec-4368-8889-27527dab56ad",
        "cursor": {
          "ref": "e28162f2-a5a1-41c5-86c5-536ec4303af2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c61c504-8893-47bd-aa8f-4f3822755162"
        },
        "item": {
          "id": "371f2715-edec-4368-8889-27527dab56ad",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a5a3852f-f349-4102-bccf-76c983846b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7941f7-afd8-4b4e-aa26-e98dbe65d48d",
        "cursor": {
          "ref": "2cf77611-d236-4aea-ab44-106c5daaa1c7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b77d074a-4fff-4fc9-8cb3-8fc66ae3748f"
        },
        "item": {
          "id": "2f7941f7-afd8-4b4e-aa26-e98dbe65d48d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "410d858f-10bb-45c6-8c45-7245096f29d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4788bee-9bf5-43be-b594-07f0d7f323d7",
        "cursor": {
          "ref": "c441c678-4408-4c7d-95f7-febf80911d3c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "23c454e9-c3bb-42a9-9463-c9c9f29d9b7d"
        },
        "item": {
          "id": "a4788bee-9bf5-43be-b594-07f0d7f323d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "53fe9113-97f4-4a60-9c8e-612750245ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586d4d12-94b6-4cda-8eeb-c3da1deab9ad",
        "cursor": {
          "ref": "1548d8ed-2f42-42ff-9f18-62ed3e6d1151",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8561499-6b4c-490f-8e06-ae49dbc9e61f"
        },
        "item": {
          "id": "586d4d12-94b6-4cda-8eeb-c3da1deab9ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b31db1af-6c8f-4db8-85e2-95e75149fb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07fa06f-7d30-4f61-a66d-e89b22c67abf",
        "cursor": {
          "ref": "35ba5c05-7b0f-4061-9015-9311cf8c0f09",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d1ebe887-c871-4b5a-8687-815179cb1d20"
        },
        "item": {
          "id": "d07fa06f-7d30-4f61-a66d-e89b22c67abf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38312574-dfab-452f-871d-bbea3bc35501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905d44d2-cb81-4ba6-bc82-32e9713e1c24",
        "cursor": {
          "ref": "32381529-0d9d-4008-b1f1-b305ce67b390",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c6137dcd-75b7-4366-bcec-830476c0b5ed"
        },
        "item": {
          "id": "905d44d2-cb81-4ba6-bc82-32e9713e1c24",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c0a2282d-4fbf-49b0-80f1-602246a154c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6d4752-0b28-4cf9-a9d1-b0bb735e3043",
        "cursor": {
          "ref": "862c3166-fe1c-4ea9-90a1-cb46bcf1740f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "11eb64a1-539a-4db7-b24f-a29c464b5b5a"
        },
        "item": {
          "id": "9f6d4752-0b28-4cf9-a9d1-b0bb735e3043",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "092d1ebd-0dc2-4ecd-ad2c-d6768a58e49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4730dd5d-2f79-41b1-b48f-8935104da9ac",
        "cursor": {
          "ref": "bbec403d-7543-4eaf-9643-5c523901abe1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "259f7e41-7bd6-463e-899a-e8d1c19d18ad"
        },
        "item": {
          "id": "4730dd5d-2f79-41b1-b48f-8935104da9ac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e2dbdb5-3066-4863-b7bd-cf030005ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a93b5a0-ec07-432c-84e9-f352e818fe5f",
        "cursor": {
          "ref": "d4a7d80b-c87e-4d76-abb1-a8ddb0bf5fc8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f597d45-1e59-463f-aebe-5d7a6c7ab6d5"
        },
        "item": {
          "id": "6a93b5a0-ec07-432c-84e9-f352e818fe5f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4568d40c-7464-49e4-aefa-38192d669292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0688a-ab0d-4149-8f73-a87685a80bcd",
        "cursor": {
          "ref": "0a204b70-67f7-47fe-a985-3caaa46a566b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d04d3951-2465-4660-a2a3-e9eed3357978"
        },
        "item": {
          "id": "b9e0688a-ab0d-4149-8f73-a87685a80bcd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a3ef13bf-4a08-4487-bf38-e49f056f5bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c607c084-1733-4109-84f9-6f1b59d6c065",
        "cursor": {
          "ref": "7fd56495-a3c4-4dd8-a566-917171d13ef5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "666aae01-5a65-4c3e-a216-a567da16be22"
        },
        "item": {
          "id": "c607c084-1733-4109-84f9-6f1b59d6c065",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9f3f4758-00fc-49ee-8156-351d99c906b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eae3b9-44e5-4ef3-9d6c-a4a0c77e8d0e",
        "cursor": {
          "ref": "d5397419-8093-496b-b861-4c55afe39de2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8c02fce6-cc51-4fc2-b55e-7727061930d1"
        },
        "item": {
          "id": "73eae3b9-44e5-4ef3-9d6c-a4a0c77e8d0e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a76a8fa0-cf12-421a-9a82-6b55b50f7ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0c05c3-dcf2-4860-b2cd-25bde2afe472",
        "cursor": {
          "ref": "3fecf941-2cdb-493c-a343-31a27c1d8a72",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "886d18e0-6e6b-47c7-a1eb-24c2f30df202"
        },
        "item": {
          "id": "ff0c05c3-dcf2-4860-b2cd-25bde2afe472",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98a138f9-88b5-4f8e-b199-16bc8b03a696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca40b9f7-e3f7-4329-9f63-714ed6995682",
        "cursor": {
          "ref": "1ccc9766-3fc1-49b3-8c74-4c46fcb1df3a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "412c40d1-b95b-40eb-ada3-9f233af21e3c"
        },
        "item": {
          "id": "ca40b9f7-e3f7-4329-9f63-714ed6995682",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f4d2649e-ea95-4bac-b6d7-561b277f175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa6744-067b-448e-ab1f-8b88726bdc40",
        "cursor": {
          "ref": "314d3a06-548b-4556-b045-41db69b22d91",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d2a24d6-62df-4a69-8ad2-53de5aacb242"
        },
        "item": {
          "id": "f8fa6744-067b-448e-ab1f-8b88726bdc40",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de30abd0-ad8e-4a16-ac13-dd9d795e5949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a428f20f-4672-4e46-b5a4-a7ae4b8ce28f",
        "cursor": {
          "ref": "894a971a-0e23-49f7-976c-4b0ec66c0e58",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bb1ff5f8-1cbf-401e-a0ee-b22e13a29c31"
        },
        "item": {
          "id": "a428f20f-4672-4e46-b5a4-a7ae4b8ce28f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0fdde6f5-824d-41b4-9a6e-2fcf3030ca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51f4585-5931-4904-8bd7-0fabd2f81ed3",
        "cursor": {
          "ref": "43d8f15c-f2c0-41ac-bdce-593e13c95d61",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c4d3844b-5cf0-4e0a-b40a-533132b68a4e"
        },
        "item": {
          "id": "e51f4585-5931-4904-8bd7-0fabd2f81ed3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "006646ea-f26b-4704-99e0-80a71e3b2cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877a6e9c-7981-4406-816a-b64a45a424db",
        "cursor": {
          "ref": "deb6ce29-159f-426d-b6e1-c17bd6dce3e0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae20f86e-ecca-4632-b9b7-36f1bebae368"
        },
        "item": {
          "id": "877a6e9c-7981-4406-816a-b64a45a424db",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c043d437-ae80-4136-8b3b-0d902889f3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf9bfea-e7be-46d3-85e9-c559559b9933",
        "cursor": {
          "ref": "3da0edc8-6381-486e-b500-e44b02e3f36f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3daff5ca-379e-4995-967a-30dfe4443d4d"
        },
        "item": {
          "id": "ecf9bfea-e7be-46d3-85e9-c559559b9933",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cd52dd41-04a5-4bb7-911e-14d27f234f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc39af7-55bf-4d4d-867b-742d73cc26c4",
        "cursor": {
          "ref": "b3817185-6d24-4ba3-b05c-08f686705909",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7485072b-e1fe-41c0-983c-76530a7ad84f"
        },
        "item": {
          "id": "6cc39af7-55bf-4d4d-867b-742d73cc26c4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "95947cce-4e4f-4d9f-bd9a-9684d8f124ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e6d07f-24a5-4b34-a97f-83e8b6c63017",
        "cursor": {
          "ref": "c805d33b-96ff-4c50-9865-8a235c368bbe",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5e1aefad-a76d-44b3-93b5-56343a0c37f9"
        },
        "item": {
          "id": "19e6d07f-24a5-4b34-a97f-83e8b6c63017",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca248c24-334c-48b9-9403-671e4941d964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff2bf07-50a5-4428-8591-c05736540a7d",
        "cursor": {
          "ref": "317a641a-f76f-493b-87a1-3aa2ce568c6f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ec95c26b-d8a7-4889-b077-6574928825b0"
        },
        "item": {
          "id": "eff2bf07-50a5-4428-8591-c05736540a7d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "657d540e-43bd-4f95-84e3-ea519dc57b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72375fe7-e47b-42dd-a69c-ad38af6489fc",
        "cursor": {
          "ref": "9dd2102b-fd64-4df2-83f6-4abf89792723",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6bd5a0c9-172b-4245-9120-10be80e7878b"
        },
        "item": {
          "id": "72375fe7-e47b-42dd-a69c-ad38af6489fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "76e5a6b5-eebf-48d4-b6e6-c1de024c5e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79956192-13c2-4ca9-ad95-fbc5a94ce6f9",
        "cursor": {
          "ref": "53e7373e-0888-413c-80c1-0dbb1a93b346",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "70aa04e1-f2a2-49fc-8e4f-1037f7183d3c"
        },
        "item": {
          "id": "79956192-13c2-4ca9-ad95-fbc5a94ce6f9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "707df0e2-76f7-45fd-a551-e9008802040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e2c86-6492-47d8-ba9f-a1a1e66d30ee",
        "cursor": {
          "ref": "4ae029be-4ec4-474b-b024-7b40cf4cc0ed",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "55b608c4-4e0b-4fbf-9864-2929920b214c"
        },
        "item": {
          "id": "cc3e2c86-6492-47d8-ba9f-a1a1e66d30ee",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eff98825-47a2-4d09-b562-0ed7075fcbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b838d3-d02f-469c-afa1-cf71724aebef",
        "cursor": {
          "ref": "4a2d1eaa-133e-4d79-9641-a5b962250ff7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "730c55f7-59b7-4167-a1a7-74c7ab5e10dd"
        },
        "item": {
          "id": "67b838d3-d02f-469c-afa1-cf71724aebef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bdb963bc-c466-4b07-80a8-2cd1358025f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a47ad1-bb02-44a6-a96c-7842c55d5946",
        "cursor": {
          "ref": "2242711a-35f8-4db4-b902-94753d6858e7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0bc482a4-8eb3-406a-8eee-9c5f06331596"
        },
        "item": {
          "id": "d1a47ad1-bb02-44a6-a96c-7842c55d5946",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b006d83-1f49-49db-a782-fb71558a5c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f979b6a-1cee-43e1-b94f-f39413572d60",
        "cursor": {
          "ref": "ddd08486-c757-4078-85e6-a5c5e69f5f48",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3e36e2a7-f2b4-47e9-8610-d3ebaed4a44c"
        },
        "item": {
          "id": "9f979b6a-1cee-43e1-b94f-f39413572d60",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "65604e82-93f6-430e-931c-2cff116fed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f83070-ee92-46d1-83f2-bc07c9dcf67b",
        "cursor": {
          "ref": "528e97dc-9cf6-4b2c-95fa-67f3087b7ab6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c263b8c1-3a84-4a79-9ce6-9d2e4622c4d0"
        },
        "item": {
          "id": "05f83070-ee92-46d1-83f2-bc07c9dcf67b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "955a98ce-986f-499b-b9b9-bdf6f6114141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b306747-f53e-40e8-a56f-e2fbe045a2ed",
        "cursor": {
          "ref": "17630a44-f005-4a9e-9e38-d930f134153f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7bc7d24a-a08a-4df6-8217-f3a27c69f145"
        },
        "item": {
          "id": "1b306747-f53e-40e8-a56f-e2fbe045a2ed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97b663c6-5937-4495-91c2-0cbbc6bd865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4985032-84ef-4d9d-ad28-45d6b05ea69d",
        "cursor": {
          "ref": "f4870b35-0f9c-48c6-84a0-65e7bacbe2fa",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "764c77d2-6d13-4a0b-8a54-a4dd3967a016"
        },
        "item": {
          "id": "a4985032-84ef-4d9d-ad28-45d6b05ea69d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ddae90d-e8cd-44d2-9c04-1820f817c4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc783ff-ae49-49d6-863a-8786a1f5c203",
        "cursor": {
          "ref": "698ce739-846c-4922-b008-281fe92d1f4f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eef97220-189b-4cd1-a99d-3b322876c370"
        },
        "item": {
          "id": "8dc783ff-ae49-49d6-863a-8786a1f5c203",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3220423-2588-413d-bb7e-0cd838e355e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bc873-78e2-4c96-80ec-ce57210c4072",
        "cursor": {
          "ref": "7d6c3f8f-339e-4bac-942b-df988d844ea8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8bca6ac5-bdcf-4839-8ec6-1b0951958ea3"
        },
        "item": {
          "id": "4c0bc873-78e2-4c96-80ec-ce57210c4072",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4dce5b09-a277-4474-89e3-1319231c89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9cd7cf-b482-4987-b1a0-6e5818e734ff",
        "cursor": {
          "ref": "721f1d48-bb43-4d5f-844b-bf1c120a9ac0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ec16fa80-ff72-4880-9f0d-4c5fde460901"
        },
        "item": {
          "id": "6f9cd7cf-b482-4987-b1a0-6e5818e734ff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7d38cd7f-6cc8-4fe2-b5dc-cb3def3fe5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c1424d-98eb-4363-a70a-888c3a97544a",
        "cursor": {
          "ref": "47d19412-e533-427d-b6fe-ef27d2b0eb96",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3a17eeef-8881-4bc3-8a88-d0b84826c7d4"
        },
        "item": {
          "id": "35c1424d-98eb-4363-a70a-888c3a97544a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9395687-57a3-4c4c-8bd8-621cfb5951f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8431b1aa-03ea-4dbb-a151-2c4437c810c0",
        "cursor": {
          "ref": "266fa570-023b-4e53-8d75-5b48fe799e47",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3b1b9e88-0365-400c-b9e3-1642d51c0d6b"
        },
        "item": {
          "id": "8431b1aa-03ea-4dbb-a151-2c4437c810c0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b8860fa6-74a9-4d5a-8c91-d7ac4600a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5232cb93-ee76-4aeb-aaf3-4a5d43914670",
        "cursor": {
          "ref": "98224c1f-d55c-4f9d-8bcc-0311a7ac4056",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f584257-8ae6-44b0-9b71-9adcab91799f"
        },
        "item": {
          "id": "5232cb93-ee76-4aeb-aaf3-4a5d43914670",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d2147ef-b6d6-4754-99f9-9bcd9afe4816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8b1be-a771-496b-b4b9-5463d6a63ecb",
        "cursor": {
          "ref": "7c42f08c-f9a8-4d39-bed0-15fe147a1a92",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f52fb5a6-1735-4904-9836-e54b978a7fae"
        },
        "item": {
          "id": "42d8b1be-a771-496b-b4b9-5463d6a63ecb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b85590c3-622f-43dc-98ed-ad5d3142ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea378dfd-2d6e-4e12-a73d-69d89aac8fc0",
        "cursor": {
          "ref": "d28cf459-3f8f-4c28-a55f-19c4974c02c5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bbadbdd2-8543-4468-a45b-30cbf91a9dc5"
        },
        "item": {
          "id": "ea378dfd-2d6e-4e12-a73d-69d89aac8fc0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e1c14b00-dad6-43bb-beeb-7af6dd01afbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90615358-80a0-4128-921f-b7316079922b",
        "cursor": {
          "ref": "f8b36742-b61a-454a-8a9a-fd1853d05223",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a20c6f22-a4d0-4ecc-82e3-f2ac7c265588"
        },
        "item": {
          "id": "90615358-80a0-4128-921f-b7316079922b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c3421f0e-4175-4347-9826-dbbd97106e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c31ad1-0e0e-45ec-ab9b-98b3954a37a9",
        "cursor": {
          "ref": "ce193519-a203-4005-9a45-1a300128bfa4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5cd7a967-bd9f-45f8-a1c2-a41189bb1431"
        },
        "item": {
          "id": "01c31ad1-0e0e-45ec-ab9b-98b3954a37a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f994b1ce-51ea-413e-94d3-18ee06fc7505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a896f2e-dc1e-4ef7-9b29-16816c2356dc",
        "cursor": {
          "ref": "b4c4ea90-d7fe-49e8-a9b3-ba431b180c5c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0de0bc43-c28c-4393-a044-925b5c90454c"
        },
        "item": {
          "id": "3a896f2e-dc1e-4ef7-9b29-16816c2356dc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47a2f70a-b69f-423b-a306-2906d4d7ce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bf0d4e-bb62-482a-a556-0f1e370211fc",
        "cursor": {
          "ref": "ab8aef40-f3fe-4327-bbd3-7260a9b0d4b1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ed7b6a6e-8707-4b2f-aa5c-3fddefe47b37"
        },
        "item": {
          "id": "d0bf0d4e-bb62-482a-a556-0f1e370211fc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d1c05b5-60fe-4317-9d59-e2ff1e6819dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82249091-f52c-4c75-a1c0-24fd44349c0f",
        "cursor": {
          "ref": "5a0e1a12-6788-4a5a-b549-226cee997fbf",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1f0be80b-98a2-42f9-ad63-cbd5add6ddd0"
        },
        "item": {
          "id": "82249091-f52c-4c75-a1c0-24fd44349c0f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "26a1568f-2aa8-4749-89ad-29ade25ade4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe3adb5-5559-4b8d-9a3a-a2401c7f604f",
        "cursor": {
          "ref": "64883c0e-9b84-461e-8c10-eb2a763fc348",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0c9d8efa-3259-41ec-b0c3-f8e396cfe23b"
        },
        "item": {
          "id": "0fe3adb5-5559-4b8d-9a3a-a2401c7f604f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e5c9981e-8816-42f3-9f94-69a3c66b467b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c0e10f-ae7a-4489-9b0d-472b73249dd3",
        "cursor": {
          "ref": "748dfdab-75d9-420e-b61f-eca6db18adc9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc5680c9-e17e-4f43-b0ce-95c8f044e7cb"
        },
        "item": {
          "id": "f6c0e10f-ae7a-4489-9b0d-472b73249dd3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4b603556-a444-4793-a329-3020c5726c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523f346-a1df-4cd4-9ff6-87eac489a074",
        "cursor": {
          "ref": "33334507-91f5-4fa2-ad63-07c69dcaf2cd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "520fa544-f309-49cf-b4f1-67a8c0cfefa7"
        },
        "item": {
          "id": "2523f346-a1df-4cd4-9ff6-87eac489a074",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "13073b26-bdff-4194-ac9d-232d4443727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a1e42-61a0-4f26-b0d2-302c55502a2d",
        "cursor": {
          "ref": "3c891cff-f4fb-40bc-98fe-03845d8dfc75",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4c60fab8-2489-4d38-bd21-dead942e5414"
        },
        "item": {
          "id": "926a1e42-61a0-4f26-b0d2-302c55502a2d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4f312328-6813-4570-bac0-87867de0f2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2e98a-aaed-4db5-ad74-712d9942d457",
        "cursor": {
          "ref": "e293064c-80e8-4a86-b3f1-da3cbab5fdff",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a430245c-2b59-41f6-88c7-73d2172480bd"
        },
        "item": {
          "id": "b0a2e98a-aaed-4db5-ad74-712d9942d457",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ce94350-9951-4797-92f7-337e17666eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdc9559-4b60-491c-a3de-c89ed90172a0",
        "cursor": {
          "ref": "80764226-3b72-4fbf-a597-1cf8cd5d4e0d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d8d763d7-f75e-410a-9939-d5e63c0fd1fe"
        },
        "item": {
          "id": "0cdc9559-4b60-491c-a3de-c89ed90172a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "87a6f564-9190-4904-a3e5-6c744830893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e35df0-4353-4b85-bbe2-467fa420a8ad",
        "cursor": {
          "ref": "a5be5d6c-da89-4619-865f-f9cad1fe387f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9f72fd1e-1b9e-4567-8e0f-e0c2028b6e56"
        },
        "item": {
          "id": "44e35df0-4353-4b85-bbe2-467fa420a8ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7530bd7c-7ab1-4b70-9ec8-148b8767577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546fb0ac-ea22-4bb4-8312-75dbf55639ca",
        "cursor": {
          "ref": "e2826fd9-21df-488f-81e5-2ec34d075192",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2eeb5be-a324-4cfe-9fa2-af5a6e413492"
        },
        "item": {
          "id": "546fb0ac-ea22-4bb4-8312-75dbf55639ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8ba9e79-e159-45bc-b7d9-e00a7bd8f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d99e80-710b-4d79-855c-18f404fce387",
        "cursor": {
          "ref": "0b188e42-a70a-4b46-bbb7-159005c13c9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd567b2e-bacf-45be-9a3e-b84ba56b4b26"
        },
        "item": {
          "id": "85d99e80-710b-4d79-855c-18f404fce387",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "90ba9126-2eb2-4c58-9779-eaf05e6b3a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053a0281-d0c0-4cb3-8236-179911b7eab9",
        "cursor": {
          "ref": "2e5cf8df-d3a8-4dd6-98cb-7acbff42f070",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "36af3df1-f802-461f-9b4b-e3fe351ca463"
        },
        "item": {
          "id": "053a0281-d0c0-4cb3-8236-179911b7eab9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5b0b7255-64c4-4e58-aefe-6cba284812a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3a1c4-5cfd-4b0d-8787-4fe63d4c410c",
        "cursor": {
          "ref": "3d64d2ee-73ad-4e1e-a2ed-464900e6b9c0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34c773b1-9dd5-4381-a9ec-35771352621e"
        },
        "item": {
          "id": "78b3a1c4-5cfd-4b0d-8787-4fe63d4c410c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3d3eebcb-08df-498e-a673-c8b3b43bb082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a63da-53e5-4992-b433-091cde7c1cdf",
        "cursor": {
          "ref": "c87b40f4-a705-4569-b9fd-37b2b46bba28",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "98749597-f8e6-4059-acd5-c6e32dc4f069"
        },
        "item": {
          "id": "a06a63da-53e5-4992-b433-091cde7c1cdf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8f3ff53f-0dfa-4a8c-a0ce-72e40eaee205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b636e04f-26a2-488d-adef-a1a8001365c9",
        "cursor": {
          "ref": "0c8d8a57-a102-4891-b087-56fe346567b0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "56656b85-169f-4d9a-8c08-f71214b76827"
        },
        "item": {
          "id": "b636e04f-26a2-488d-adef-a1a8001365c9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fbbda3fc-9606-4c2f-9dcc-fe36d83ee578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d28462-47a0-40c5-8ed4-88df2fd93429",
        "cursor": {
          "ref": "07f7522c-8c4e-46b7-80f2-e5de1c7cbcc1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dba6da45-7fb5-42f6-b519-28597a960d50"
        },
        "item": {
          "id": "95d28462-47a0-40c5-8ed4-88df2fd93429",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2c0c809-b4d3-4b8f-bb89-5a8185e7c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125c37bd-8801-438d-826f-a72de9ecebb3",
        "cursor": {
          "ref": "d214fea7-e51f-4667-9c94-fe5b2ebe5f89",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2ea01fd-7550-4f5a-911d-eb4ed939c291"
        },
        "item": {
          "id": "125c37bd-8801-438d-826f-a72de9ecebb3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cde106a9-8ef9-4117-8025-28c72021d997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8c36f-f3a7-44ed-96d6-f1e6bfe7a17d",
        "cursor": {
          "ref": "feae808d-289f-482b-b880-34b3cfad4ae8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "79f3d132-7fd7-45a6-89a3-965a8bac6713"
        },
        "item": {
          "id": "54d8c36f-f3a7-44ed-96d6-f1e6bfe7a17d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "95d29a2c-a0a6-4e9e-9f64-bacc470b14fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225db2d1-a9fe-4bd5-9a11-34557c9bf5c3",
        "cursor": {
          "ref": "9664ad78-6c70-4e8f-8a92-1769dbcb6044",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "af7f2b84-314e-417c-a91a-05b45cb5c06e"
        },
        "item": {
          "id": "225db2d1-a9fe-4bd5-9a11-34557c9bf5c3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5e49831b-8fb4-4d98-b88c-882337203f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0422508e-4290-4d41-93b0-848541ed56f8",
        "cursor": {
          "ref": "44014064-3a25-4a10-9a6e-39ab38f4c661",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6b4ab572-11c7-4e54-ac96-e43f85903654"
        },
        "item": {
          "id": "0422508e-4290-4d41-93b0-848541ed56f8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "846c7b42-482b-41e9-9d81-5e57f7a57758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cfd59e-ad45-46ba-a524-4a872795fbd0",
        "cursor": {
          "ref": "a6814ab0-6fd6-42a2-a4d1-3402a19c2244",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eef2207f-ba4e-474f-924e-6de7a1a9bac2"
        },
        "item": {
          "id": "c4cfd59e-ad45-46ba-a524-4a872795fbd0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0779d17d-cb17-4495-a76b-6b498f1006d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139e79da-c14e-4090-9c16-cea257475a3f",
        "cursor": {
          "ref": "f009351c-8ff2-4e53-a06c-ebd3e6b7858d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d520c8ed-318f-4019-81e9-3b6f4081c186"
        },
        "item": {
          "id": "139e79da-c14e-4090-9c16-cea257475a3f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "811ad6a3-7493-4e9a-b3dd-b8bf0eb90f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d3cda-3c5d-4ec9-bd44-82599022c6e3",
        "cursor": {
          "ref": "daab4a26-2663-4924-abc4-c2a1750caa62",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d72d4b9-05f2-47ce-9018-9202943c62c2"
        },
        "item": {
          "id": "3a0d3cda-3c5d-4ec9-bd44-82599022c6e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3e09c326-b131-41df-9cd0-b7d97ce1ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561a5bdf-c20d-4ecd-8468-fec1159427b5",
        "cursor": {
          "ref": "d044a6aa-a32d-4040-bffa-1c5ff4845c13",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a9545a69-8d16-4f72-8512-87ac1fa531dd"
        },
        "item": {
          "id": "561a5bdf-c20d-4ecd-8468-fec1159427b5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "452d3e49-a3ec-475b-a61c-bce19fa4f004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8412d-79c3-4eae-99b0-5216ee7e1555",
        "cursor": {
          "ref": "7b5d7f99-ef74-4065-b6df-aa21d0ae4427",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9748c500-11f9-4e2c-8163-1a0a5e3de307"
        },
        "item": {
          "id": "9fd8412d-79c3-4eae-99b0-5216ee7e1555",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "597a3098-e248-425f-b8d0-f30abc13b1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c7c3a5-9e14-482e-8502-a269e91c6722",
        "cursor": {
          "ref": "3d57520b-6f00-4d1b-a07b-bd0161421612",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "21c74ca4-2e96-487d-9980-ea4e97c03800"
        },
        "item": {
          "id": "64c7c3a5-9e14-482e-8502-a269e91c6722",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b5686762-fc27-4e8b-a50b-7d8400cb6f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97db4e4e-a595-4b35-b611-7bd55eea8a2f",
        "cursor": {
          "ref": "ea1523de-8208-41ce-8d13-0f9e9bc153ab",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aed4f25b-839a-47b5-aa59-776cb1aaf5ff"
        },
        "item": {
          "id": "97db4e4e-a595-4b35-b611-7bd55eea8a2f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "45fdccf6-8be7-45d2-ac8d-bebc103fde16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aa7981-a467-48ca-9425-19dce9a329e9",
        "cursor": {
          "ref": "2e745ba5-a835-4a72-b99d-79dae6f7b6b6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b7087c87-1c55-416f-9a78-a4a157edd3eb"
        },
        "item": {
          "id": "d3aa7981-a467-48ca-9425-19dce9a329e9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0d552b6-1b5c-40e5-ae69-beb638e8c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c3dcf2-a12c-4d60-87cc-842b300a1999",
        "cursor": {
          "ref": "f182eaab-d1b5-4fae-b034-05819ef56652",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "73aeceb6-de8c-47df-ada9-f6240a5c3e83"
        },
        "item": {
          "id": "b3c3dcf2-a12c-4d60-87cc-842b300a1999",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "69af618b-7e7a-4951-a454-7a3b46e29de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c41d96-60c3-488f-a412-f7cb2a252109",
        "cursor": {
          "ref": "830f1208-0bfa-4e06-8dab-edaa67c19d43",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f15c401c-de42-4ac8-8139-33ca94b1da32"
        },
        "item": {
          "id": "22c41d96-60c3-488f-a412-f7cb2a252109",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d35e2b40-e024-4f3e-a9e1-07240faa8d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617de4da-536b-4a2a-b464-1e07edda0b12",
        "cursor": {
          "ref": "683bf52c-5744-492f-a256-8814418e014f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c6c55018-6400-4d9d-bcaf-b813b9627e2e"
        },
        "item": {
          "id": "617de4da-536b-4a2a-b464-1e07edda0b12",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81d14b4b-05fc-4dfc-b9e3-cd8d1793495d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e21d36-8b5f-4dbc-a589-a1f3fdadfac6",
        "cursor": {
          "ref": "510c2feb-0d29-4144-b2b6-12b6d139f7c9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8ca5a0e3-4e75-42ca-8e8f-602b7c0d250a"
        },
        "item": {
          "id": "23e21d36-8b5f-4dbc-a589-a1f3fdadfac6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d49c50c0-b727-48c3-a37b-a6b482e97de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c0cec-32d8-47ec-bc71-492716ff1f73",
        "cursor": {
          "ref": "2fa9ca82-191f-4d97-83c0-615682c46b64",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "10c5f244-97f3-4c6c-a1b4-e5a6709c4f69"
        },
        "item": {
          "id": "e95c0cec-32d8-47ec-bc71-492716ff1f73",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36735956-7c62-4069-976f-3a9ec9284fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920be9d6-01f1-4b73-8f1b-523702de79f0",
        "cursor": {
          "ref": "7ccc2a39-65b9-4430-aaa5-d641018fe328",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fc2e31dc-640c-475f-98eb-06c602c78845"
        },
        "item": {
          "id": "920be9d6-01f1-4b73-8f1b-523702de79f0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1c64c089-6a0f-464f-99f5-02e4fb1b37b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dfd707-86f4-410f-b264-1826bac19b91",
        "cursor": {
          "ref": "8fa8d1e0-ae97-4c58-99f7-9583207681b4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fce863b8-cbcf-40e1-a05b-30a702af742c"
        },
        "item": {
          "id": "40dfd707-86f4-410f-b264-1826bac19b91",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b38bb967-5adb-4e2e-9f3b-477108c1bf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e0545-8af5-47d8-908f-168fa22c0b85",
        "cursor": {
          "ref": "67b64422-7b6d-410d-a82e-9489480ebea6",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12156a2c-b487-4429-a3bc-38d51be1dbe0"
        },
        "item": {
          "id": "907e0545-8af5-47d8-908f-168fa22c0b85",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d033787f-d752-4a65-aebe-163aa661a733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b32e02-4b31-4638-b831-181313bb5abf",
        "cursor": {
          "ref": "38e79318-b9e0-4ceb-8fef-5cb17bac7588",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0c8f23cc-c16c-4b20-ade9-6cbe683555eb"
        },
        "item": {
          "id": "c6b32e02-4b31-4638-b831-181313bb5abf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "58e2a529-bb1f-43d8-b760-c161e00ae1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea89efa1-db13-4c81-a912-7d3fc8f84f3f",
        "cursor": {
          "ref": "d9f8cf43-faa2-4fbb-9a93-b8e8727d8f2d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "15016ddd-c6f5-4e76-b396-43c12f0d424a"
        },
        "item": {
          "id": "ea89efa1-db13-4c81-a912-7d3fc8f84f3f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6ff8818f-b3a4-47fa-874a-5314dc0ad6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332ee65-9c80-49ff-904d-4743aa98e98e",
        "cursor": {
          "ref": "85f4b060-1a72-4409-beb3-6937be13eb77",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a1ca485b-9dab-495c-84df-b0dac1d1223c"
        },
        "item": {
          "id": "3332ee65-9c80-49ff-904d-4743aa98e98e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6d12ce36-554f-480e-aea3-fb6ec3571736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555a6c7d-e3c9-43a4-aa25-7ca0244e9ebb",
        "cursor": {
          "ref": "e0dd237f-a27c-463d-84fc-e10e020d37d9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77d92a05-b089-4ca4-aa72-564f0add4056"
        },
        "item": {
          "id": "555a6c7d-e3c9-43a4-aa25-7ca0244e9ebb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3a41d4a-5001-4cea-98d3-07592e56135f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2662cb-4b1c-4b74-8f20-bc4d47d1d692",
        "cursor": {
          "ref": "9f2ea27e-9269-4ae6-9c25-38d2b1fd343a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d162fe6d-4ddc-4680-ba94-e1d6ea4bcb1e"
        },
        "item": {
          "id": "9f2662cb-4b1c-4b74-8f20-bc4d47d1d692",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd442d37-fac9-4062-b8ce-142f71552163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73ae68-7975-41f9-ae35-bc6049cced7d",
        "cursor": {
          "ref": "17f5628f-0e88-4318-8844-8555f9e83897",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ca69b6af-0c40-4032-b5bf-f496a07ffff4"
        },
        "item": {
          "id": "0f73ae68-7975-41f9-ae35-bc6049cced7d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "358b2b48-ea9b-4d8f-9488-2f114af8ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c174b-ecf1-49fb-8b4b-86d3565cb35d",
        "cursor": {
          "ref": "d828c2ab-db53-4455-9961-2ccb34bcb85c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "edb6ac99-e7d9-46f8-8a55-2016d93fa89f"
        },
        "item": {
          "id": "a72c174b-ecf1-49fb-8b4b-86d3565cb35d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9eeb44d8-7e52-4d81-94dc-74df4c0ce3cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c44fcf-07ed-4824-83d7-de8fbde582a7",
        "cursor": {
          "ref": "5f0a4f0e-b3f3-49be-baf2-4e9d5346fb39",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f8d74621-ea6e-4e48-9cc3-d6dda7136647"
        },
        "item": {
          "id": "73c44fcf-07ed-4824-83d7-de8fbde582a7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d46f673a-3505-44fe-ad1a-fc65fccb38a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f347c149-12fd-4847-b5d3-7f6a6e8d168d",
        "cursor": {
          "ref": "053bae88-4339-4009-b462-ba29afdef6bf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db8dd89d-cb8a-4c9d-9611-da185f5684fa"
        },
        "item": {
          "id": "f347c149-12fd-4847-b5d3-7f6a6e8d168d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6455bf73-c596-47a0-81e0-1daa93164a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0c11469f-8d4c-4e66-b8af-a26c62e1b179",
        "cursor": {
          "ref": "f635a2ee-708f-4c8b-9aa1-5c3ac346c90a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7c064c02-2452-4869-b86d-a8665c3ff3c3"
        },
        "item": {
          "id": "0c11469f-8d4c-4e66-b8af-a26c62e1b179",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "042cbf57-7f1f-4114-8a76-742bf0b9a531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "60b69bdf-2600-4e54-8e23-09d4f4bb2a56",
        "cursor": {
          "ref": "444d6f48-4df4-48cd-959e-f7d8725e6aad",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d01a9222-8f46-4d7c-8511-c312a3d7f762"
        },
        "item": {
          "id": "60b69bdf-2600-4e54-8e23-09d4f4bb2a56",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cfcc0d45-2604-4434-a509-049f996900bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "275462a5-9143-4b94-ba2f-5a58431dbbd1",
        "cursor": {
          "ref": "23604e5d-7864-4338-8ada-fcd49c64d769",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "595620f6-496d-4130-b322-0e940aeca6a4"
        },
        "item": {
          "id": "275462a5-9143-4b94-ba2f-5a58431dbbd1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "71fcb97e-d8ee-41f4-90c1-73f9d588e930",
          "status": "Created",
          "code": 201,
          "responseTime": 9840,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea13ba1-3840-41cc-9095-0ea33d905a45",
        "cursor": {
          "ref": "21fb808a-5bc0-485e-b9a4-b267f0be9970",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "16468691-f719-4d0c-b5a5-488bd5134965"
        },
        "item": {
          "id": "dea13ba1-3840-41cc-9095-0ea33d905a45",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c77938b2-318c-4baf-8851-08e61ed44336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "97c16a56-b2aa-4017-805f-2e3b494cef2d",
        "cursor": {
          "ref": "6ed0fb05-08be-488d-9826-035c21b4932f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7a55e068-63db-4b86-bca9-8adfaad33873"
        },
        "item": {
          "id": "97c16a56-b2aa-4017-805f-2e3b494cef2d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c5a5d62a-c395-4331-b333-0300b18cb38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9b327983-a30d-4ab5-be02-dc929a444e75",
        "cursor": {
          "ref": "4697e3d0-d9e6-4431-918b-9f50d4398e20",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "df77c9a4-5e19-4f69-a1df-1ac5409c46b9"
        },
        "item": {
          "id": "9b327983-a30d-4ab5-be02-dc929a444e75",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c737977e-c9e0-4591-b4a8-b1c876fba4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7151f98-b553-47ab-b4c2-9039a8cb7b30",
        "cursor": {
          "ref": "c1d8669f-f51f-42b3-b478-7e628bbd7f3d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "71ff0e69-6eec-4c62-972f-97bfd73c3b1a"
        },
        "item": {
          "id": "c7151f98-b553-47ab-b4c2-9039a8cb7b30",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfb13e45-35e6-48a4-9260-3c5f3d516c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da18937d-ab38-4d21-aff2-94dfa621585c",
        "cursor": {
          "ref": "e4b5f2b7-eec4-4db1-8eea-0b7114630c1c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02ade629-9926-4a28-aecc-f85eef6a0871"
        },
        "item": {
          "id": "da18937d-ab38-4d21-aff2-94dfa621585c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f5fa58f0-4a24-4715-85cc-7627b3fbcd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc88864-2409-4f51-8f25-7107053b2fb8",
        "cursor": {
          "ref": "91b5e4a5-bfbb-4903-a635-2960d323ab3f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53a8f528-7693-4c18-8428-169a166b0830"
        },
        "item": {
          "id": "4bc88864-2409-4f51-8f25-7107053b2fb8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41e15a27-4e62-4de8-8697-079d11fff20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb808b32-f692-45f8-a5b5-4470ed071b1f",
        "cursor": {
          "ref": "44ef2273-c965-4bbf-ba94-e921ca145bee",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3017ac82-cb75-43d9-a71a-a86c3600a29a"
        },
        "item": {
          "id": "bb808b32-f692-45f8-a5b5-4470ed071b1f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "be629d14-6360-4efe-bba3-cd916f866fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bbeb51-df64-4ef9-837e-e096381caec1",
        "cursor": {
          "ref": "da4ae5ed-c9a7-4f4e-9278-0904a18ae35e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0feed60-ac91-4bb5-9cf3-9a40cebea7f7"
        },
        "item": {
          "id": "b6bbeb51-df64-4ef9-837e-e096381caec1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d4db25fb-1e0a-4eb8-9f8b-da686cb08bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44833dc1-82f9-4c3f-931e-f990a21f0dcb",
        "cursor": {
          "ref": "4e53c76e-0e98-417b-b6d7-f9861f237933",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70e22f83-c251-4f99-8b75-18aaf280e652"
        },
        "item": {
          "id": "44833dc1-82f9-4c3f-931e-f990a21f0dcb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e090dea-76a0-4a4a-a868-88a027a15db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092fb6fc-6e87-4c22-a187-1528805fad1b",
        "cursor": {
          "ref": "a87b66e3-d902-4c4c-b646-abbce6561156",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d0271ef7-9d67-4325-9652-1bea7aa1a0e3"
        },
        "item": {
          "id": "092fb6fc-6e87-4c22-a187-1528805fad1b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5afe067-7fc8-42ce-89fe-da978d1e4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c13b86-871b-4888-ac7d-c54939580112",
        "cursor": {
          "ref": "3188295e-8eb1-4235-b249-203b4a6ea41e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "07757fbd-1bdf-45c4-9e3c-b6fd3fd834c8"
        },
        "item": {
          "id": "55c13b86-871b-4888-ac7d-c54939580112",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1ca05d12-a04c-4615-a64e-d65ae421d535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7be41a-d44b-4685-90c3-922b20e8d832",
        "cursor": {
          "ref": "677c2b1b-ce10-4540-b454-7f2dd6e55b9e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e357a05c-d203-4299-ac56-f04d9f3ff299"
        },
        "item": {
          "id": "bd7be41a-d44b-4685-90c3-922b20e8d832",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8afa45ea-4f7c-4a9f-9350-0655483e7218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a5edd-edde-40e3-8d25-b89ff7b5a9ff",
        "cursor": {
          "ref": "a01ddd07-6e1f-4f19-a77c-c2b1611397b4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f5b074c-d21d-4425-be70-abbf9d93173e"
        },
        "item": {
          "id": "f68a5edd-edde-40e3-8d25-b89ff7b5a9ff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb6fecf9-3e5d-4369-8ded-a81e20b6782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dea1e11-a76b-4aeb-90e0-816782ce423e",
        "cursor": {
          "ref": "cf6017c7-559b-4b53-821d-73e91a6c9624",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c9d3d117-b1cb-4d0d-a50f-782e21424656"
        },
        "item": {
          "id": "7dea1e11-a76b-4aeb-90e0-816782ce423e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "337d36c1-70a7-4d77-ba3e-a1f9eb598165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9c7541-236f-4c8f-8258-a5ce032996fd",
        "cursor": {
          "ref": "4d3bf287-472e-4561-9b26-6d5ebab0d253",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cc8f8d2e-7331-4058-a52f-56c09cd60866"
        },
        "item": {
          "id": "4b9c7541-236f-4c8f-8258-a5ce032996fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7fcfbe7f-d025-4395-a623-bbc8a2c72966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce5ff26-5bca-4541-988b-ba3325ff69bd",
        "cursor": {
          "ref": "0c9c8781-392d-40cd-b95f-ba35e48b370e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d439b2ac-ecab-4fbe-a77e-5ee0421c41ad"
        },
        "item": {
          "id": "2ce5ff26-5bca-4541-988b-ba3325ff69bd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22d0d95b-b706-4a9d-ba74-2daf09e008f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8e71b1-84bd-4ab2-9183-24e821efae67",
        "cursor": {
          "ref": "730535f1-63fa-4530-9096-fb187110b379",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4733074c-39a4-4e3b-9760-7db1c4980a14"
        },
        "item": {
          "id": "5c8e71b1-84bd-4ab2-9183-24e821efae67",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ceeff9fa-b3ca-4963-80b9-159fa7044be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4674b328-b7af-4c11-bf19-7730b63ff3e3",
        "cursor": {
          "ref": "5f11ea06-15ff-4013-a38d-58e0b5386a6e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3b4857eb-0773-4ba1-8441-274f4d8ddecb"
        },
        "item": {
          "id": "4674b328-b7af-4c11-bf19-7730b63ff3e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11af4e11-b421-4516-9ccb-b6c2f1224739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c2984a-c5be-4014-8269-f5e2cef4b482",
        "cursor": {
          "ref": "c2407dfd-b2a3-43e7-8eba-0fd412c378c6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "16db6a8c-b06d-4b1f-b737-f53bbe859008"
        },
        "item": {
          "id": "20c2984a-c5be-4014-8269-f5e2cef4b482",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9e428a07-dd09-4a27-a511-3c16bf0eeae4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "91448854-93cf-4cb0-b9fa-af9775a5e678",
        "cursor": {
          "ref": "297b4d03-2c59-406f-aca8-b447154aec4e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7f545400-cf71-4c11-bec4-136f4561ed85"
        },
        "item": {
          "id": "91448854-93cf-4cb0-b9fa-af9775a5e678",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55f18298-eb3d-471e-8c75-2837d9cb52c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b620b45-c44b-4093-932f-967e8bfd835f",
        "cursor": {
          "ref": "b35e9f97-5d28-46fc-9ef5-3f85eecaaf20",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "917872ab-d7c3-480d-8a25-80712bf9d09a"
        },
        "item": {
          "id": "1b620b45-c44b-4093-932f-967e8bfd835f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b0a7ef20-7984-4e65-a0b3-29a6140ddbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c7ddc4-6fd5-4c37-b09c-d5b14a279d07",
        "cursor": {
          "ref": "d8517c5b-56ec-47c5-b5a2-94dcef887428",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56842b9c-a760-4f11-a446-fc5250b79474"
        },
        "item": {
          "id": "38c7ddc4-6fd5-4c37-b09c-d5b14a279d07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9ab84361-a87d-4651-bf96-c6f73c487e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcada31-5757-4f34-9622-ab96c05a4bc2",
        "cursor": {
          "ref": "b0f672f4-e6e4-4305-af67-3cafb0e5c82e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8f0ddd0c-8ff6-48ff-a575-1b04aa14aea3"
        },
        "item": {
          "id": "bbcada31-5757-4f34-9622-ab96c05a4bc2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "628ee48a-221a-42c0-9157-3e4ba36eec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4015f606-f136-477b-a9a5-76f24712ef70",
        "cursor": {
          "ref": "7c96180b-3bc8-4962-a20e-73a33a15a969",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e0c94d23-4f07-4e7a-8f1d-d7f2a7180ba3"
        },
        "item": {
          "id": "4015f606-f136-477b-a9a5-76f24712ef70",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8d8fe2a-92d2-4b62-92f0-5bc3afae5380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c29fb2-f4df-4b5d-a4b1-b654750e591d",
        "cursor": {
          "ref": "ee285ddc-c961-4f73-9737-1deab2959dc3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "955bb687-fc09-4a40-afbe-882c43150f65"
        },
        "item": {
          "id": "94c29fb2-f4df-4b5d-a4b1-b654750e591d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9890b0ff-3441-4049-9802-dbdbd79e2f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237e67a-0fa1-43e4-aee9-4eaf3c745b4d",
        "cursor": {
          "ref": "6846dbd1-f901-49a7-af9c-13923b324098",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7a5968ce-f304-489d-97c7-2b3ce870f3d4"
        },
        "item": {
          "id": "7237e67a-0fa1-43e4-aee9-4eaf3c745b4d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed3e00f4-1b10-4324-a9f0-b635278fbbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c231e4d-cda2-4d32-b0e9-3bcb8e17b746",
        "cursor": {
          "ref": "74aa25c6-cee4-45f3-8afd-5dd24971e639",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5fc7829-846d-4b49-a026-e77f8b3d1596"
        },
        "item": {
          "id": "5c231e4d-cda2-4d32-b0e9-3bcb8e17b746",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5542da3d-e2ad-4fe8-9900-7423be4dbe8b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1b8adfa3-7a58-411d-ac59-26051403a695",
        "cursor": {
          "ref": "5b3d335b-83dd-48a9-93e5-b29cdc048519",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dd97b288-d811-4935-a878-8a7707e242ce"
        },
        "item": {
          "id": "1b8adfa3-7a58-411d-ac59-26051403a695",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37c412f6-e87a-4222-a89e-4898af56ec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cbd95f-2b9b-4962-9107-b814b39da95f",
        "cursor": {
          "ref": "8cd00ff4-9588-4607-af46-05996ef9b472",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8ee481be-a0c0-4b4a-94d2-650a1238539b"
        },
        "item": {
          "id": "d6cbd95f-2b9b-4962-9107-b814b39da95f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2874dcdb-f23a-4281-b052-3203bdfebe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dbc4e1-2f1d-4998-9056-e03e2a047844",
        "cursor": {
          "ref": "2101655c-5706-48e1-bced-92b80fdea3ed",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5dcf9ffb-cf57-48f6-a3a4-0ab0fb5121d2"
        },
        "item": {
          "id": "53dbc4e1-2f1d-4998-9056-e03e2a047844",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d1b6b6d-5372-4e5a-8429-8ef95638241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bedc4a-7e05-4fcd-954d-175c5debf638",
        "cursor": {
          "ref": "b754cba4-5168-4547-b646-89cf05dfaefc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4985a0ea-a3fb-4907-b453-7afe52527ebe"
        },
        "item": {
          "id": "28bedc4a-7e05-4fcd-954d-175c5debf638",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9f496904-b6d0-4882-95e6-fc7573b384d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594dc388-1459-4b3e-97ba-c412d80c5e68",
        "cursor": {
          "ref": "3353052d-a4a0-4595-9449-25fe68a43818",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "38d4e26e-644e-44fd-8912-b3757c8c924e"
        },
        "item": {
          "id": "594dc388-1459-4b3e-97ba-c412d80c5e68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7143db4c-f327-4903-b08d-fff4a5f51595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adac5dc4-8350-4c63-9534-5b1b261dda2a",
        "cursor": {
          "ref": "924eee0e-8868-4848-b9cb-703840557ba8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5d0ed226-798b-464e-bffc-2dfa3619a49f"
        },
        "item": {
          "id": "adac5dc4-8350-4c63-9534-5b1b261dda2a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfbac95a-566c-4e8d-ae4e-415ccc56398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3994ffc-01f1-40b3-85e8-eb88db4a99d5",
        "cursor": {
          "ref": "315115c9-5e59-417b-93d8-8b663b1f60c1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8d4bb714-4edb-4cb1-aac1-18dbc6c5cce7"
        },
        "item": {
          "id": "e3994ffc-01f1-40b3-85e8-eb88db4a99d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "178ae817-2a60-4475-b602-f43b34ba2a14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5050c467-1c91-4152-aabd-7473230199b4",
        "cursor": {
          "ref": "a92ee979-9197-4ce1-b7cf-8cfdb1f67c05",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c84da73c-79ba-4e89-9650-55348c7b1ad4"
        },
        "item": {
          "id": "5050c467-1c91-4152-aabd-7473230199b4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f31651b6-008c-44cf-9986-b7b623ec3005",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "15d9834c-5b4e-4b5c-a03b-b110c3e5ae97",
        "cursor": {
          "ref": "368f017f-6886-4f65-901c-8f42f9cfeb16",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c6288f3-aee8-4d5c-9050-a6d71f35f71f"
        },
        "item": {
          "id": "15d9834c-5b4e-4b5c-a03b-b110c3e5ae97",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "02fac033-a082-45df-a5a8-c95d3ea7a8fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "73f24782-26b3-4fe6-b318-aab6836f0412",
        "cursor": {
          "ref": "0841c6d4-2cc5-4fa9-bfdb-f0a827b6bb06",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9799d0bc-264e-4a43-ab18-e0295b4bd777"
        },
        "item": {
          "id": "73f24782-26b3-4fe6-b318-aab6836f0412",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e0171068-38ef-4aef-b69e-3b1a7fddab5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b9654885-a7ed-4bd8-a2fc-f2d04e5340ad",
        "cursor": {
          "ref": "39c9cf65-115e-4e7c-8e0b-db0210db0434",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e076d75b-637d-4e3b-99fc-f086dba6eb03"
        },
        "item": {
          "id": "b9654885-a7ed-4bd8-a2fc-f2d04e5340ad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "94ad5034-65ff-4ad5-8a71-55cb350824cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "15f03780-bd1a-45a6-bb21-1ad3e1ff687b",
        "cursor": {
          "ref": "640d9f45-6aa3-4789-8e57-b3d0e1032338",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d47cba43-e945-4936-9a39-70f6a275c9e4"
        },
        "item": {
          "id": "15f03780-bd1a-45a6-bb21-1ad3e1ff687b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2d564a5b-d9f5-45cb-8adc-dba94b50d9d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "938999b0-84d6-4558-864e-3471dc190fde",
        "cursor": {
          "ref": "09148dc2-e67c-4d92-9590-e8c64c48c06a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9fa12eb1-6156-40f9-8e06-d79f95c8ed67"
        },
        "item": {
          "id": "938999b0-84d6-4558-864e-3471dc190fde",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0924ce0a-dace-4ef6-a343-69f56115154a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ee816e-33cd-49a9-9e26-f89855ad3bb3",
        "cursor": {
          "ref": "69cf5fe9-6a36-4e98-acf3-4a15d0340553",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c661af41-bcc8-444e-9af9-065b540f4789"
        },
        "item": {
          "id": "69ee816e-33cd-49a9-9e26-f89855ad3bb3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a06e328-5468-4b12-806b-2143d7e9757e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfaa6d6-0eec-4388-8571-8c2d3db61f52",
        "cursor": {
          "ref": "a4165383-eb55-47ff-bd42-5d10d5cd3d00",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "923a3e44-9613-4bf4-8e09-befa93c72823"
        },
        "item": {
          "id": "bbfaa6d6-0eec-4388-8571-8c2d3db61f52",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c07cef50-177a-4fc3-84e0-2d2993d17db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35051dc-2c8a-46d8-8999-bf074450f0aa",
        "cursor": {
          "ref": "344429d3-f0f7-452d-b89d-ae79c64759fc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4b935218-2a9f-4542-88c0-26c50bc6507d"
        },
        "item": {
          "id": "e35051dc-2c8a-46d8-8999-bf074450f0aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "933186aa-34bc-46e4-85b3-28883832961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66c8a01-9d31-4178-b322-497ac24e6e1e",
        "cursor": {
          "ref": "8de63e02-c965-4e22-b480-1ee1b4aadb13",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "83f61b22-51ac-4cf5-a54e-5ea3ad5ac8ac"
        },
        "item": {
          "id": "c66c8a01-9d31-4178-b322-497ac24e6e1e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "437174ae-4c20-48ab-8055-c85bf77c25a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe71e58-2029-4a44-a8dd-5f692dd367f9",
        "cursor": {
          "ref": "a3079296-de35-446e-addd-bd4e23d8cce5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1d02487e-feef-4145-a3d1-7d8fef6e326c"
        },
        "item": {
          "id": "efe71e58-2029-4a44-a8dd-5f692dd367f9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee86efcd-7442-4c30-895b-35e84cdb1a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed53b11-8b06-483d-bc7f-fced8f39845b",
        "cursor": {
          "ref": "2558d8de-9912-4fe8-869a-f5ef1ed558ba",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ed061d86-c6bd-4bb3-9a1b-fefa945c039d"
        },
        "item": {
          "id": "aed53b11-8b06-483d-bc7f-fced8f39845b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4ff46c32-1c90-4f80-83ec-887863184bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fda60b9-2a36-4153-9132-202c4ab02b5b",
        "cursor": {
          "ref": "ae60da47-7c00-45d4-bbd8-4c0b444d703e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b7c2dab9-b1a8-4627-9e5f-5985ae07a798"
        },
        "item": {
          "id": "6fda60b9-2a36-4153-9132-202c4ab02b5b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3781dd15-6af8-4f20-99d5-a941ec5ff51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc27bb-874f-4e3c-8e32-c4f2294db041",
        "cursor": {
          "ref": "a9c3875b-5b4b-4efa-a595-89d2234b5144",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bafcfe27-16b3-4f67-8248-478aed959bcd"
        },
        "item": {
          "id": "2dfc27bb-874f-4e3c-8e32-c4f2294db041",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d8bc1708-a4a7-43f4-89c0-f1c7aa32a209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b16e36d-f90b-4e8a-ad6a-d02f4b8193f1",
        "cursor": {
          "ref": "e77006c2-2cd8-4221-8040-c2e2b276b0f6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cb677b21-aa74-4d81-aed8-e022dae202fb"
        },
        "item": {
          "id": "7b16e36d-f90b-4e8a-ad6a-d02f4b8193f1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c60b3d42-0c35-4f44-b969-da4e5ddbf333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccf3506-68f5-4352-a3ee-15d19893315a",
        "cursor": {
          "ref": "d414e890-0467-49be-8d3c-f88c31c1ae14",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "503a04c9-8e9b-4b7d-bc2e-c91c28e54573"
        },
        "item": {
          "id": "fccf3506-68f5-4352-a3ee-15d19893315a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1968dfcf-22d7-415f-872b-eaaf1036271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc7cbac-8b1e-48c3-aac0-33f1e299b69d",
        "cursor": {
          "ref": "21a1b6bd-d1e1-4ad0-a989-eed9e838ec0f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b67a115-bbb4-45d5-9ae8-f5999d9b705c"
        },
        "item": {
          "id": "0cc7cbac-8b1e-48c3-aac0-33f1e299b69d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "493cbd3b-ffa8-461e-a812-d513da3735ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facd83c3-794f-432b-ab2e-f90559a97823",
        "cursor": {
          "ref": "ff2819af-8031-4f98-911d-d92e65282caa",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7e0fb817-5ffc-4beb-b1b3-403675de6a26"
        },
        "item": {
          "id": "facd83c3-794f-432b-ab2e-f90559a97823",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2d4a6f67-fc83-41e1-b591-e28ee3a62b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109cd244-5af3-4425-a1b7-2c6e3ec95299",
        "cursor": {
          "ref": "af7bf48f-9083-4f96-9dcb-d79a0a194094",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0afc762e-c2f4-4897-be1b-7d3f5a2487bd"
        },
        "item": {
          "id": "109cd244-5af3-4425-a1b7-2c6e3ec95299",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fa6de557-0e7d-4deb-8984-a2dd0b559130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec70bd8-067b-46c1-8d7c-31edcf3bb0c3",
        "cursor": {
          "ref": "247b8f2d-923d-4350-b752-559c186f087d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6e39f14-493b-408e-bca7-6409ba640887"
        },
        "item": {
          "id": "5ec70bd8-067b-46c1-8d7c-31edcf3bb0c3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff67fe9f-5d2e-47b0-a1cf-e2c9512add30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727c1c7-86ee-4b7e-b0aa-a0844121c8ed",
        "cursor": {
          "ref": "32118e1b-e62f-4e08-bdb1-bd6cadb294f6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1719f43-9533-40a4-a8c6-e333ed16fef4"
        },
        "item": {
          "id": "6727c1c7-86ee-4b7e-b0aa-a0844121c8ed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e44637e9-94d2-4b96-ae9f-6df07964d295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1998f7e-ad28-4b1c-a555-62edadb9cdce",
        "cursor": {
          "ref": "d2090aff-4d0e-4a89-b7ec-2f46c18c1d42",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "108961f8-d096-4719-91ff-f429436eac56"
        },
        "item": {
          "id": "e1998f7e-ad28-4b1c-a555-62edadb9cdce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f3f07742-abd2-47ad-8ac0-71a797fa268c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2cc9fa-c790-48ab-80d6-804f0127fc55",
        "cursor": {
          "ref": "a5aed61e-6366-4954-8fe7-4596524fb1fb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2a51f2f6-0a91-411d-a691-1f74184cda32"
        },
        "item": {
          "id": "6e2cc9fa-c790-48ab-80d6-804f0127fc55",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d2e0c9c3-73c7-4b3b-ba85-b5fa1bb8f28e",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "7273b3d5-8ae2-4a79-a7df-6dda11905dcd",
        "cursor": {
          "ref": "113178ab-569b-4aaa-9562-b7692ef0997b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3d3273cf-dc94-4159-a9ef-77a21278b86d"
        },
        "item": {
          "id": "7273b3d5-8ae2-4a79-a7df-6dda11905dcd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b98205b1-0698-4462-92ed-f0d142985daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3989daef-4dcb-4796-92cb-c65d08f1e4c0",
        "cursor": {
          "ref": "b3f594b3-c572-48da-ace2-8af65dde160a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3065225a-bfc4-4e2b-99d8-582808c8b499"
        },
        "item": {
          "id": "3989daef-4dcb-4796-92cb-c65d08f1e4c0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70cfef95-fe71-4a9b-a808-e280b97a9abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2692e3b7-1c8c-460f-8149-a0a5adad3ec0",
        "cursor": {
          "ref": "624f78de-49ef-4076-8419-875e588f6ce6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7500284c-9464-4025-b5d0-ad55c3e25f37"
        },
        "item": {
          "id": "2692e3b7-1c8c-460f-8149-a0a5adad3ec0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "805accef-cbbe-4d60-9f79-69a3ade0400b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c35172-a8ef-43fd-ab1d-b16ea2f42497",
        "cursor": {
          "ref": "76f050a5-a0e6-4890-a664-341c6d365410",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9926fa98-5f31-45d6-9028-8bc7fe242713"
        },
        "item": {
          "id": "81c35172-a8ef-43fd-ab1d-b16ea2f42497",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "54eebed1-6c99-4142-adb6-e02c003c17cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faf1575-d6c0-456e-8026-9d41bb95cb82",
        "cursor": {
          "ref": "a48ef3b7-07fa-460e-b4f3-44c8cb8b1073",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e662bb63-01e6-4b92-87ce-95eab5fd0894"
        },
        "item": {
          "id": "9faf1575-d6c0-456e-8026-9d41bb95cb82",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "df46a446-c0b6-48d2-adaf-0e6907da0d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f74793-5dda-41e7-84cf-6acf83d872c7",
        "cursor": {
          "ref": "9df86b29-f82d-4d13-8e37-c867b1c4ba5a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c471f0bb-fb68-48ff-bd7f-3999d97b9094"
        },
        "item": {
          "id": "36f74793-5dda-41e7-84cf-6acf83d872c7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0b824b62-0a66-436f-b178-7cf5ddeba689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe96f3b-f2b7-43bb-bdeb-d1175d2d7a0d",
        "cursor": {
          "ref": "7aae86b6-4529-4ba7-9a02-7a89dfe7e6d2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f1dd4a9-ba79-47d1-af50-0f92fa0719fe"
        },
        "item": {
          "id": "5fe96f3b-f2b7-43bb-bdeb-d1175d2d7a0d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "32ed4079-f661-4b67-820c-49b9db8fd3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83961f2-f5f3-47a4-adae-f10c41f3cb60",
        "cursor": {
          "ref": "c94fe8c6-da0c-4fb8-83ad-6a331990b1f6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2749a309-b4c0-4f38-9219-f58d25a5993b"
        },
        "item": {
          "id": "d83961f2-f5f3-47a4-adae-f10c41f3cb60",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2df12046-6114-4c74-a1de-b4cb3037c04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69f8fb3-5b3b-4061-b55f-8634a73285d1",
        "cursor": {
          "ref": "3bb7c024-bd3d-42fc-96d2-130dce960b48",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "569cbd15-c593-4792-8711-7ba93dba7ffa"
        },
        "item": {
          "id": "b69f8fb3-5b3b-4061-b55f-8634a73285d1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d44d7d60-adb1-4747-8552-72c7610c5470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ac2b61-2045-4670-ba38-cfa49e9cb078",
        "cursor": {
          "ref": "32bc13dd-09fc-4666-ad61-6c70c535c245",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "830497bb-f5af-48d1-96a7-fc5fe8fb24d3"
        },
        "item": {
          "id": "57ac2b61-2045-4670-ba38-cfa49e9cb078",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f9770ca5-4143-4d0d-a022-c025729565aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa62460-9492-4d19-9920-5878ac9965a3",
        "cursor": {
          "ref": "c9e016e1-4eba-4f36-b197-391f073119a1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "83b51809-6433-425d-bce3-28db3984db86"
        },
        "item": {
          "id": "7aa62460-9492-4d19-9920-5878ac9965a3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "60e78571-7d85-4627-af84-1566e17b8283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c5909-9261-46ff-ae60-a4cf227628a5",
        "cursor": {
          "ref": "24ca1da3-b9c3-4e61-a7a6-15c66ea23e0c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "46e0da15-903d-413c-93b6-71aa521e0c1e"
        },
        "item": {
          "id": "964c5909-9261-46ff-ae60-a4cf227628a5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "62b9cf51-22fe-4724-9a78-b6785c588f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b52e167-777f-4cf0-a94a-9440fa6dbb87",
        "cursor": {
          "ref": "7b05b244-8128-4d3c-92b1-1cb85a006c1e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f37d3e10-d087-4fc2-b6d5-1b26fe400b57"
        },
        "item": {
          "id": "5b52e167-777f-4cf0-a94a-9440fa6dbb87",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f3d9da5-6321-4ba1-b8c6-757a29b96eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a5c656-de4a-42d7-ba95-bdbbf168504c",
        "cursor": {
          "ref": "e41bbcfd-680a-40f0-9959-18d3ec429e0f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5c1c8318-268b-40d9-85b3-4418b36ebf6e"
        },
        "item": {
          "id": "46a5c656-de4a-42d7-ba95-bdbbf168504c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "337d3f95-9d97-48dc-ad2c-31096b1b9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57453f0c-5514-427d-98c8-a5eaf21e00c7",
        "cursor": {
          "ref": "559d271f-4dd2-4347-80c2-40aca9915961",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed65c2e0-b062-49e8-9aca-6969187c6a12"
        },
        "item": {
          "id": "57453f0c-5514-427d-98c8-a5eaf21e00c7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d86dd3a7-8b1f-4457-b97e-85fac332fe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4549ce72-0a95-4020-9856-d9b7ebfcccb2",
        "cursor": {
          "ref": "c60b27fe-ba9c-41a2-aa4b-6dd9320644b5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "78b5dd76-b24b-4733-9822-4e5474f86fba"
        },
        "item": {
          "id": "4549ce72-0a95-4020-9856-d9b7ebfcccb2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "73c7b0e9-dd13-46f9-bd38-1f631cd5c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fa9644-7cc8-444e-9969-7c0502eae91d",
        "cursor": {
          "ref": "3e79ed95-3313-47bf-982a-da6f88cc3426",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "94f4021a-5e5a-48d8-876e-bf91695dbd6e"
        },
        "item": {
          "id": "72fa9644-7cc8-444e-9969-7c0502eae91d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7e59e78e-330d-414f-8f8a-24c6a9695973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cdc49e-a110-4ee6-8398-052789e19c44",
        "cursor": {
          "ref": "1713ad83-8b80-454d-a677-3a1d00182570",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b66d7ffd-4584-4073-8942-cd66c5e36b4d"
        },
        "item": {
          "id": "65cdc49e-a110-4ee6-8398-052789e19c44",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60722bd8-dd5d-452d-b838-b80aa32b7b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bdbd3d-6c64-459b-b15f-14ee78ae82e5",
        "cursor": {
          "ref": "d770977f-9cb0-40ba-b855-eb541f600826",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cf95ec83-db99-4245-a5bf-253a7a33baa0"
        },
        "item": {
          "id": "b0bdbd3d-6c64-459b-b15f-14ee78ae82e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "489f446f-649c-4697-8dd1-dc724beb4814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c22497a-26e8-474b-b882-d1b6e2e58f30",
        "cursor": {
          "ref": "5ed417be-aff3-4477-948d-5dbd8cdffb48",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9fc0d274-83ef-46dc-843e-32644caf705f"
        },
        "item": {
          "id": "3c22497a-26e8-474b-b882-d1b6e2e58f30",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "55943f91-018e-4bdf-a947-0691463747c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06defda8-1434-4f5c-816a-2766c458c1d3",
        "cursor": {
          "ref": "bf0ec10d-22b2-4308-a7ed-9d11cc9f255b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6f4cbe30-dae8-43b9-b490-ac3c9592b66a"
        },
        "item": {
          "id": "06defda8-1434-4f5c-816a-2766c458c1d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "76094a37-e3e9-4d99-a2f9-a4a70894bd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315022fe-d86d-4a90-95a3-323d6860d873",
        "cursor": {
          "ref": "d6bdc566-40d8-4e53-bf7b-77dde9afdc76",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d3e95266-ecf1-4777-b85b-39c3a42f9834"
        },
        "item": {
          "id": "315022fe-d86d-4a90-95a3-323d6860d873",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b0f1046c-ce7e-4481-964f-6fd4ebb5ead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabfc9c3-6909-4225-906d-cdc66cbe4b54",
        "cursor": {
          "ref": "40b04b88-796c-4ed8-bfe8-831de7bf545f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c2f6204c-7f16-441d-87d0-a445873a97e9"
        },
        "item": {
          "id": "eabfc9c3-6909-4225-906d-cdc66cbe4b54",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "691b3b2b-dac9-4e26-b7ea-7c47becc0db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878938c5-f598-48d2-ace9-2193c1d1f4a2",
        "cursor": {
          "ref": "122d5ea7-ef94-41f9-850c-62c702ba7f28",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0b4ec59f-5f5d-4706-9457-1e5d81ef62aa"
        },
        "item": {
          "id": "878938c5-f598-48d2-ace9-2193c1d1f4a2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a5fed637-d7f6-4e0e-a2b1-69a011bb0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf409fdb-eaa5-4c84-a28e-0f2415e4bbfc",
        "cursor": {
          "ref": "8ef8476c-5d61-49ba-80d9-1aab18fad2ed",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "051cbd61-f08b-46e5-a572-5f05b1867e04"
        },
        "item": {
          "id": "cf409fdb-eaa5-4c84-a28e-0f2415e4bbfc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "db609836-bb02-424c-91c0-240d2471d9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c516a237-5f27-4329-b944-70e3b1b7ce88",
        "cursor": {
          "ref": "b102fa0a-7822-47cd-a2f0-6287be3a1260",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5bf7c3c7-8661-4e63-9524-2c92e0eb71d6"
        },
        "item": {
          "id": "c516a237-5f27-4329-b944-70e3b1b7ce88",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "18766cbd-6394-4dd6-85ae-2ef5308e50a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02554a9-1787-474b-99c2-b5e743fbbf4f",
        "cursor": {
          "ref": "4cfd3edb-077a-49ae-a52b-b4b1cacbf4ec",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "933676de-bf68-43b3-9199-b953e9cab582"
        },
        "item": {
          "id": "a02554a9-1787-474b-99c2-b5e743fbbf4f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "77e73e46-300f-4313-b9b9-f9a5474f7b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd30174-45ca-4092-a30f-040f863f9740",
        "cursor": {
          "ref": "7032e373-58be-4686-8f61-9e64b0b986bf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b79589b-73b7-47ed-a5d6-49514ccb9375"
        },
        "item": {
          "id": "8cd30174-45ca-4092-a30f-040f863f9740",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f8e71bdb-7d8b-4a30-93d5-6cbec6c29fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d50d4d1-8c59-4a2a-b845-ccbac063d1e8",
        "cursor": {
          "ref": "ef08679a-e2b7-4ffa-86a6-5d0d22356781",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "912ec8d2-f39c-4579-9745-f6cb8dfa40ef"
        },
        "item": {
          "id": "3d50d4d1-8c59-4a2a-b845-ccbac063d1e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bf649ac1-67df-4134-84ff-1e646a061a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f15d569-c37e-4a58-bd16-62056e0fd974",
        "cursor": {
          "ref": "8fc2b922-d9f3-468f-9334-1c8ad484a939",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bdccb541-6735-42ce-8594-fe5886c90c6a"
        },
        "item": {
          "id": "9f15d569-c37e-4a58-bd16-62056e0fd974",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "213482bf-a3c6-46c2-9563-c879c22c51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50943421-8d25-484b-abcd-8b9436175529",
        "cursor": {
          "ref": "f864999b-f663-4e4a-8118-7828e44f66dc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "feb7a949-2e6c-4eea-a277-2812eb278ed2"
        },
        "item": {
          "id": "50943421-8d25-484b-abcd-8b9436175529",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bc21a1ae-d872-4385-a379-d6cf2ffae608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb55cc-721a-4dbc-8f0f-45b490ba95b1",
        "cursor": {
          "ref": "571d2f93-d4b6-4503-87e6-f8ad2e642c24",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a45dd62-4d30-494c-8a05-d60f62caeac8"
        },
        "item": {
          "id": "13cb55cc-721a-4dbc-8f0f-45b490ba95b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "32e742dc-e000-42a1-bf5b-9a24c63f0d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d229ba-8f8f-4211-a853-e74bc7894738",
        "cursor": {
          "ref": "3caf35b9-6103-4313-9e51-a535d4550abe",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "64a1adfb-f4fc-4208-ba49-2754cb2d1702"
        },
        "item": {
          "id": "c4d229ba-8f8f-4211-a853-e74bc7894738",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "203e6572-65fb-4352-931e-e18c6ef4edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ad58a-7b56-456f-9c37-8fc1f7f8d253",
        "cursor": {
          "ref": "7346cd0c-86de-4198-a9f2-20155e206ea4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d5e6689-7397-4fcd-923a-7c2c875b1c82"
        },
        "item": {
          "id": "ca1ad58a-7b56-456f-9c37-8fc1f7f8d253",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2458023d-202b-4508-8e74-89a8669eda1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61051648-2d2c-48d3-a32c-dbe1b3f49911",
        "cursor": {
          "ref": "21ce474d-4167-4d88-b175-d01ded5cf5ac",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "986e1cf7-5ceb-4276-b4a5-8e488b2fedb1"
        },
        "item": {
          "id": "61051648-2d2c-48d3-a32c-dbe1b3f49911",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fbd449d3-df68-4378-812d-7765942c3ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be73c5d-5cdd-493d-ba57-73556d803afd",
        "cursor": {
          "ref": "42a479ec-6707-4884-bbd4-190ce59b1959",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "539e27fa-37ce-430d-8066-8ed24bbf3ed6"
        },
        "item": {
          "id": "4be73c5d-5cdd-493d-ba57-73556d803afd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4272b2c2-b8b4-47e9-9523-69845edade5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dae3bd9-e81c-4c5a-bae4-8b45135ca440",
        "cursor": {
          "ref": "1fc0596b-e63e-48cf-862d-6afe16ed123c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0c7c8a98-9916-4cad-ab26-478a0e2b4fd2"
        },
        "item": {
          "id": "1dae3bd9-e81c-4c5a-bae4-8b45135ca440",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8112b383-fc1e-4701-8b95-5c10938a0745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df88598d-0cfb-472a-87e8-eaa08aebcddd",
        "cursor": {
          "ref": "0e129058-1ed4-4838-aff8-5ca3b3ba585a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d15d8e07-9fb5-40ae-a416-58c4ec80e6b9"
        },
        "item": {
          "id": "df88598d-0cfb-472a-87e8-eaa08aebcddd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c032ce30-d0dc-4501-b478-d1aa9fe7e9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e8026-6c60-4b77-9157-27f6f7da3167",
        "cursor": {
          "ref": "f9bcd6df-91a8-4299-a4ae-93cd20ce933c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c77a27ac-3448-4c87-9806-ff9c98635d06"
        },
        "item": {
          "id": "f81e8026-6c60-4b77-9157-27f6f7da3167",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8144d41e-3424-4173-952c-1457f758e797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41786661-865d-4b78-afcc-e7b3417ee513",
        "cursor": {
          "ref": "e240c0aa-634c-44e9-8818-5f590f425db0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "591527df-8617-4879-b11a-9cec43ae71e9"
        },
        "item": {
          "id": "41786661-865d-4b78-afcc-e7b3417ee513",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3cf3a99a-922b-4f0a-a00d-944e360e42a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6254dac9-da9f-44d4-9eb1-d2f33fcef81e",
        "cursor": {
          "ref": "6b291cd6-7b31-4895-b67d-d0089bc42788",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8fadaec5-8808-4cc9-a859-580b3cfec797"
        },
        "item": {
          "id": "6254dac9-da9f-44d4-9eb1-d2f33fcef81e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bebb52e7-c60e-4bd3-b056-16ae7be68f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e61dff-12a7-45d4-a8e1-7a08db2d3195",
        "cursor": {
          "ref": "560a6ef0-32f1-41e1-96c3-4c4c756dea9d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a862093-d637-41c1-a918-21eb9a18acab"
        },
        "item": {
          "id": "f4e61dff-12a7-45d4-a8e1-7a08db2d3195",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0c4150b6-c0d0-4cef-b5b7-471bbf61d10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aca497-5445-4d53-8827-5054fc91f03d",
        "cursor": {
          "ref": "3e266fd5-3ea5-4cf9-ba61-99e3c381b9c6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "454985c3-0128-40ac-a33b-40307a5f6dfa"
        },
        "item": {
          "id": "28aca497-5445-4d53-8827-5054fc91f03d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "289a69d1-4423-4c92-bc34-d1d7287d932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6a2c57-1e58-40ed-90c5-2500d6f65079",
        "cursor": {
          "ref": "a44eb708-e3ac-4d8c-adc5-76908d8aa250",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "02124ae2-8076-4286-a5c0-05d325df608a"
        },
        "item": {
          "id": "ac6a2c57-1e58-40ed-90c5-2500d6f65079",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e3995312-f4be-40ad-a0b8-aefdf7a3329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198afbbe-93e7-49fd-8462-f441da2d9d5a",
        "cursor": {
          "ref": "dd9b623c-26ea-4afe-a64f-e209bb68caa3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dac1658d-3ccd-404e-8f7e-7487763d72f4"
        },
        "item": {
          "id": "198afbbe-93e7-49fd-8462-f441da2d9d5a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3dacb6bf-4bc4-4a4a-aad7-8c601c3875bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04b11d8-8e76-4b9d-a07b-a337e78ecf8b",
        "cursor": {
          "ref": "1686f511-b445-496b-b592-aa0971df025d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "45cf2913-be4f-4df0-81e4-f7119b9c5368"
        },
        "item": {
          "id": "d04b11d8-8e76-4b9d-a07b-a337e78ecf8b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2e891ed5-f7c5-436d-b0b3-80fb2cc16654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05564338-3cfb-42ae-ae95-d4e4670e38a4",
        "cursor": {
          "ref": "965179f9-b168-4419-beca-5b22dc58e662",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8f2198c-b193-41b1-9893-a45a97c852a7"
        },
        "item": {
          "id": "05564338-3cfb-42ae-ae95-d4e4670e38a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b7e51f2e-761a-4fff-83e4-4d8eac511f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1bd29f-9df7-4812-9dec-36de58cdbcdc",
        "cursor": {
          "ref": "b8f30338-9e13-4604-9a55-89ca09059594",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f57a415d-d824-4cf5-af97-e663944743c4"
        },
        "item": {
          "id": "fe1bd29f-9df7-4812-9dec-36de58cdbcdc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "82b5beff-d658-4c21-94c0-97d7b3d15bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6494f9ee-dcef-4d69-8736-1c11abcb6e87",
        "cursor": {
          "ref": "ff16eeb9-e4e7-4b50-ab4f-5dab310b7b06",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "291f75f7-e307-4b7d-bf9a-4d1b288feae5"
        },
        "item": {
          "id": "6494f9ee-dcef-4d69-8736-1c11abcb6e87",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "40debb92-b7ea-4cd1-9493-4c1ff478c689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0349898-6515-4a76-b39b-2b0abc1b25d8",
        "cursor": {
          "ref": "0528dd90-b033-4ac1-80ce-c46669e6f6a5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4c1da5aa-af96-4450-b08e-560033cca8d1"
        },
        "item": {
          "id": "c0349898-6515-4a76-b39b-2b0abc1b25d8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6b4d365e-c65d-49ac-8a26-afd853be253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d446dd-5a29-495c-9434-e6c8d61e1e3a",
        "cursor": {
          "ref": "123cbbf3-cef0-43cf-b2ff-5ace505bb388",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "76947a79-91c3-40e7-95b9-abd4072ff2b2"
        },
        "item": {
          "id": "51d446dd-5a29-495c-9434-e6c8d61e1e3a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e3fc437e-5a70-4ecc-bf5a-d60273477115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a35b14-13ab-4bed-aa6b-d21769841e5c",
        "cursor": {
          "ref": "4e549383-5ed5-43b5-abcb-2cab475ef56a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3c097802-6943-4f41-974a-e81a6b8435a4"
        },
        "item": {
          "id": "d5a35b14-13ab-4bed-aa6b-d21769841e5c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2bd96ff7-3f32-42c0-83e5-71a29fd96465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e913fa-43a6-4f71-b38f-53014836afdd",
        "cursor": {
          "ref": "29bf7652-1272-4334-871e-8cd73ab6b3de",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6fb2f543-8f47-4289-9160-813deec83b99"
        },
        "item": {
          "id": "a4e913fa-43a6-4f71-b38f-53014836afdd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "30cf9f70-496a-4a4e-b637-db0cd93928ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9d20cb-8e54-46b1-9f08-1168cebd5389",
        "cursor": {
          "ref": "4ae6ff9c-cc79-4926-aaf7-099eae02e8fb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "52d3cd88-025d-433b-bb38-c94a2c4180ed"
        },
        "item": {
          "id": "6f9d20cb-8e54-46b1-9f08-1168cebd5389",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ab1a0563-9682-4bb2-9012-0d17e84c0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75807dd5-b96f-4478-be6c-71ab1cf3cf89",
        "cursor": {
          "ref": "4307ac99-e76b-4ecd-bbd7-a4b8950523c2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4582cb65-02ff-4579-9052-96a23cd8ad93"
        },
        "item": {
          "id": "75807dd5-b96f-4478-be6c-71ab1cf3cf89",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "432f598b-ed1e-4f31-8590-94ca5231126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d46d37-b466-4380-985e-100069b8a741",
        "cursor": {
          "ref": "1854641d-938a-441d-a972-8ef1238e2426",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "07b87279-4d45-4b2a-853c-37465cb4331b"
        },
        "item": {
          "id": "c8d46d37-b466-4380-985e-100069b8a741",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3b6e8f4d-5cf7-4f29-9ac1-f71daf5b44a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1089211-e8eb-4992-a4e5-a9e1d75ea348",
        "cursor": {
          "ref": "a700d3e4-61fe-4b73-bce7-b7142a65c617",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "04053d35-54a3-4977-89a2-2a5fa9615f81"
        },
        "item": {
          "id": "e1089211-e8eb-4992-a4e5-a9e1d75ea348",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ec5176d1-3612-4a4d-b045-2129dfd33675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8155492d-5ad1-4fa9-b745-a23a26d8e8c1",
        "cursor": {
          "ref": "c74feb98-4d36-49ec-90a5-b6d942d30515",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e25746c-e559-4de0-9fdb-d5ecd27e1991"
        },
        "item": {
          "id": "8155492d-5ad1-4fa9-b745-a23a26d8e8c1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "20359656-3717-42a6-a2d8-1555ea3399f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713f66c4-57e5-4822-9048-4d0f21a20dcd",
        "cursor": {
          "ref": "4499b74e-a3ee-4ee8-9333-f36a90527763",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c97ae0e3-4cf9-4769-94e8-a61efa3c2ef6"
        },
        "item": {
          "id": "713f66c4-57e5-4822-9048-4d0f21a20dcd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1ca4b69c-9e04-4ec3-bebf-91c6bf85fa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde079e7-977e-4dee-a2ca-aede0ed3d090",
        "cursor": {
          "ref": "7afa7d5c-66ff-40df-b24d-b459a9d7fa94",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c3dec505-e588-4b2d-84e6-6a5412ddd9cd"
        },
        "item": {
          "id": "dde079e7-977e-4dee-a2ca-aede0ed3d090",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "482350ea-4c79-4f29-92e7-e0e6719d2118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357b93f-4955-4a62-b6f5-9f3775037e9c",
        "cursor": {
          "ref": "c7ef272c-0bdb-42bf-9bad-069c09a7075b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cc4d8392-a76b-41da-b107-42c4d497db5c"
        },
        "item": {
          "id": "a357b93f-4955-4a62-b6f5-9f3775037e9c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4270aac4-c2b9-4133-a896-c17e8cfd66ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f4b89-93b9-459f-ae84-3c8e055e69b6",
        "cursor": {
          "ref": "9c3c4c9a-edd3-4193-8a18-0d6f07c61152",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bb92d1d6-88cf-45b2-948b-80b7275c445c"
        },
        "item": {
          "id": "6f5f4b89-93b9-459f-ae84-3c8e055e69b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d9b65780-2f22-47c4-98ff-2c8de1a3862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68d4db9-1a20-43e7-a80f-b0ea47f91f2a",
        "cursor": {
          "ref": "41253046-4bb8-45b5-833c-08f9b682aecb",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2d41abaa-70a5-453c-bf8e-72f3464000d4"
        },
        "item": {
          "id": "b68d4db9-1a20-43e7-a80f-b0ea47f91f2a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ebc12ff1-b133-4370-8cba-ae7b0592f256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7e197d-fe3d-427c-88d0-e3c0e8759599",
        "cursor": {
          "ref": "642057c8-14b7-4c99-a374-b4e16f58d6fb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "47e45678-d90b-446e-826d-ab90b057c6db"
        },
        "item": {
          "id": "ac7e197d-fe3d-427c-88d0-e3c0e8759599",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c378cd9b-0934-4434-a374-888c86f2ddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5a54f3-7199-4909-8c36-3c62c6e5a8e8",
        "cursor": {
          "ref": "c49169f0-48f6-471c-83af-e496be2b998a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f18f6c26-cad4-469c-9ed0-f7a23aa3479b"
        },
        "item": {
          "id": "2f5a54f3-7199-4909-8c36-3c62c6e5a8e8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a46ccf95-0a5c-4496-a7d0-29db9913bf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2828d583-e3a8-46ba-8544-db9e7934e35d",
        "cursor": {
          "ref": "7dc6663e-c0e2-41cc-8515-c6bde4bc9dbc",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bd2f3f6e-54f8-4abf-843b-7bba4f790aca"
        },
        "item": {
          "id": "2828d583-e3a8-46ba-8544-db9e7934e35d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf208774-ebb6-4f0b-859d-1343643dca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a9b8d-2158-44ec-b36e-549fc6e36b1b",
        "cursor": {
          "ref": "6aa10cf3-3896-4676-91f3-ce23abfd5105",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bdcad563-afae-484f-8be0-728924e63ddd"
        },
        "item": {
          "id": "7c1a9b8d-2158-44ec-b36e-549fc6e36b1b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "add47dcd-90a8-4155-97e4-4473c40f1f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0065f4d-3431-4e69-9284-a592fb22335a",
        "cursor": {
          "ref": "4bf6ae65-f5a3-4106-bea5-cf4b913452b0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4314a65a-472b-40be-90b8-e21f4f0b6b21"
        },
        "item": {
          "id": "a0065f4d-3431-4e69-9284-a592fb22335a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b6719dc-47b9-425e-bbfb-52ab6ed0d55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312bc400-40a4-41a5-9957-41ce1fd2b099",
        "cursor": {
          "ref": "243f5bd0-2151-47d0-971a-b164a62445d0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16de6988-4571-4c90-b669-6e5d7e41b637"
        },
        "item": {
          "id": "312bc400-40a4-41a5-9957-41ce1fd2b099",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8f48e85d-8ce0-4af5-8271-fd864de77d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b1938-44ce-4fcf-909e-a227163bb300",
        "cursor": {
          "ref": "7a3019cb-2934-420f-adca-cc6753d3b72d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cdceefab-e37c-4ad1-9d57-c721f2240aa8"
        },
        "item": {
          "id": "902b1938-44ce-4fcf-909e-a227163bb300",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "be8651c7-5371-49c4-8d70-e9369e88f3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397c2e94-625e-421d-ac52-aae791c3e7ad",
        "cursor": {
          "ref": "aed9a0db-f992-4bd8-a667-1bcac880ca0e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c3d7354f-d8f8-419a-a85f-f7bf7dbce2d9"
        },
        "item": {
          "id": "397c2e94-625e-421d-ac52-aae791c3e7ad",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f1319a11-53f0-4811-a6ee-c7f87d8f9332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d0cc6-a9d0-4c8e-b305-5d55261adca9",
        "cursor": {
          "ref": "7f7231da-8428-4b10-9c07-c681c1bbeb85",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fbd1e69d-cbdd-4d9b-8e85-f9db10d8dda0"
        },
        "item": {
          "id": "294d0cc6-a9d0-4c8e-b305-5d55261adca9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c9c78e77-6ac1-489d-ad2e-ba1f6aa9f764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84afc0b8-77b6-4db3-ab03-343eb0db01eb",
        "cursor": {
          "ref": "813e05e1-57ef-463b-a3ea-2de51ed8194e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5258e92-f087-40e4-920b-8ec4bf6db1c1"
        },
        "item": {
          "id": "84afc0b8-77b6-4db3-ab03-343eb0db01eb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2231a93b-0efc-4dc4-8f9b-fda84cea7e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737325a-d601-4f6a-9654-0798df4a5695",
        "cursor": {
          "ref": "d9a1c505-053a-4379-8cd3-4033ad796861",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "18dd1e30-c177-4cb4-b51b-f7de53b35b1a"
        },
        "item": {
          "id": "5737325a-d601-4f6a-9654-0798df4a5695",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "83c10a40-9b96-4517-a51b-8530b488f1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b04b63c-99ee-4b26-9f6e-8d2ebd078afa",
        "cursor": {
          "ref": "b4d799be-9599-48dc-9410-4b480f4d4189",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc11bf08-7cf4-441c-a4cd-ad210e690d7f"
        },
        "item": {
          "id": "4b04b63c-99ee-4b26-9f6e-8d2ebd078afa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "00295fcb-8f9d-44f5-9074-db0a6a664ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c3781e-ee5d-47c1-915a-0fc31a8b7abc",
        "cursor": {
          "ref": "6c799a34-c44f-4cf9-995b-e61b7c44987c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ff6335f7-d940-4b65-a413-a44685184dae"
        },
        "item": {
          "id": "69c3781e-ee5d-47c1-915a-0fc31a8b7abc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6fefe2d8-c22b-467e-8965-25c7ea0f7c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e322b02-17f5-433e-8016-83f96c4d33c9",
        "cursor": {
          "ref": "65be333d-e68f-41b4-bf40-6eaf0a46fd81",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3cb9d26-c999-4eea-adb6-0328a6a38091"
        },
        "item": {
          "id": "5e322b02-17f5-433e-8016-83f96c4d33c9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "42543486-9ec7-427a-b243-2b74202182f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ebf81d-cd52-48b0-ae05-10118562968d",
        "cursor": {
          "ref": "c43d3a6e-623e-4349-af18-303b8f6e7319",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f660b78f-4960-40a8-b437-01a4f59ef1fa"
        },
        "item": {
          "id": "37ebf81d-cd52-48b0-ae05-10118562968d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c06429c-6bce-4851-84a7-45e0ef834e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086eb5ff-151e-4608-b47f-aba31e6d8306",
        "cursor": {
          "ref": "bf4c3b90-52af-4d86-8cf1-ae1de7490f8f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6a129ca6-16c5-41b6-a487-a6fe29da2760"
        },
        "item": {
          "id": "086eb5ff-151e-4608-b47f-aba31e6d8306",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0b0415ec-9ac0-4e32-be8d-f859e614639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811871f-4840-410a-a689-26a307220911",
        "cursor": {
          "ref": "a794bdfc-61d1-4238-95d2-ae71901db4eb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "73871e9f-500e-46ad-b964-c928e1ff8874"
        },
        "item": {
          "id": "c811871f-4840-410a-a689-26a307220911",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f468cf7-2f98-4b0b-b24f-39a73939d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38aa068-750d-4c66-adf6-a2d084d6d81b",
        "cursor": {
          "ref": "56cc6d70-4d3f-42c9-b33b-773a0c878b42",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a2471e2e-6a49-475c-817b-2ba7d42a3bb6"
        },
        "item": {
          "id": "c38aa068-750d-4c66-adf6-a2d084d6d81b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "74806c55-c0c7-4bc6-baa4-454b1d90a859",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2d3997-175a-4cf5-9f70-29b0b62f9d87",
        "cursor": {
          "ref": "5adcfd3c-606e-4c59-9989-00e5e08e7d99",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc8451ae-f88b-438a-98dd-af6a03b39135"
        },
        "item": {
          "id": "5c2d3997-175a-4cf5-9f70-29b0b62f9d87",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96db7430-e5c7-489e-babf-340fb220e624",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7142a24-9e18-4ae9-b6ec-fd66d5dcca83",
        "cursor": {
          "ref": "728dce07-ac1e-42f1-9802-b0b6cb9adbc0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9ed5323c-92fa-4f1b-806a-136c8399a07a"
        },
        "item": {
          "id": "d7142a24-9e18-4ae9-b6ec-fd66d5dcca83",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3565875-f399-41ac-ac8b-a86029404a72",
          "status": "OK",
          "code": 200,
          "responseTime": 4072,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2fa077-c709-4ccd-8700-769e5871ad6d",
        "cursor": {
          "ref": "813fcd6a-3ace-483e-b627-2bc298f7631f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fa334b92-f171-4f40-bb86-cbc00e85643f"
        },
        "item": {
          "id": "9b2fa077-c709-4ccd-8700-769e5871ad6d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c9ec45e7-d976-4d08-b3ae-36a937141c5d",
          "status": "OK",
          "code": 200,
          "responseTime": 3120,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad60bb2-7c51-468d-ba14-5923b75d94d0",
        "cursor": {
          "ref": "b4e92dff-4848-42bf-a57b-913587ff92b8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "035b1676-ab6a-4869-a3fe-a35d48fd3614"
        },
        "item": {
          "id": "7ad60bb2-7c51-468d-ba14-5923b75d94d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a787170-dd83-464d-9374-3a5b94a4d4cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad60bb2-7c51-468d-ba14-5923b75d94d0",
        "cursor": {
          "ref": "b4e92dff-4848-42bf-a57b-913587ff92b8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "035b1676-ab6a-4869-a3fe-a35d48fd3614"
        },
        "item": {
          "id": "7ad60bb2-7c51-468d-ba14-5923b75d94d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a787170-dd83-464d-9374-3a5b94a4d4cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30986e51-659a-4d8e-bae3-78858d7deb94",
        "cursor": {
          "ref": "da72972d-1096-4767-9e30-1e964950ff56",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9e08a7e9-2c10-441e-87e0-6c199aff967c"
        },
        "item": {
          "id": "30986e51-659a-4d8e-bae3-78858d7deb94",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1fe8006-7b58-4060-9ff0-737aed950a84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e9d4d4-df83-48e3-8ceb-6e76dc6167ca",
        "cursor": {
          "ref": "4ff2dcbb-22b8-4a96-9a45-3caf6ba1238b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3cf05088-4c9f-44a5-a302-bb8761ffc905"
        },
        "item": {
          "id": "36e9d4d4-df83-48e3-8ceb-6e76dc6167ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2f8504f2-c134-4596-acfb-f75e31d19a39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}