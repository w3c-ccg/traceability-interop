{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6b908077-b0c5-4f3b-9507-5a499db965e8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "242cf227-d9e2-47d3-9f7e-21639eedd414",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19d296e3-1260-4c64-99e0-973d5208f58f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "71c7a8f0-2b83-4fbe-9568-f753de3982f5"
                }
              }
            ]
          },
          {
            "id": "c7647827-2534-49aa-8996-a9300ee95eb6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22ccec1d-2dba-4707-9903-dacc4faeb051",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40263022-a22a-4eef-82b7-b8b0cfe56cb4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "53d80358-1438-4482-afdd-d1a0d8348a1a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d978e9fb-32ee-466f-b17f-f5d643014a19",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b44c9392-c07b-4d70-97c8-bffbb7c2ed78",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f935792-76ff-4e07-a582-abf73b1ca020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5fe8dbf-b131-4c90-99c3-37145b599119"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3191ba9-4d1c-4587-b8b6-21dacf498991",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4728094-2fe4-4bae-9e5f-a0bac8c00747"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe2a0a1c-da18-46e5-8335-9821e0994f32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b1a1333-68b3-4b69-80c5-7c0f70268192"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec12cb0e-ea4f-4002-965d-77133b9a706b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c9cf1ab9-9c3c-4a06-8ccf-0e87c920e4c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7ea8dae-6720-4ec3-a95b-da577d505022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0700af60-034c-4c4e-8b53-83cbcaa83960"
            }
          }
        ]
      },
      {
        "id": "cd10a2c5-5557-469c-9eca-4d426288b6ca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "78874d8c-1192-4e54-a183-cdb1acc0e08c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d371fd61-ae5c-4114-94ef-b41500dfb949",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19967073-d053-48b2-bb91-bad6cbdb9e6b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2d16b0-3d58-4094-8269-a3f69fc113c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11158664-19d3-46c4-ac93-c9f08fa8c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c96119-2a9a-4e17-9a78-fbfca5154e8a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae890827-2861-478a-8bdd-d2eed2091ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c819f26-ad92-491a-b806-7c7917116198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384851f0-c205-444d-af06-7354e3a88192",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100d728f-e2a1-4d83-bb82-b758348f948f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d5aa888-7b7d-4ed1-a38f-6f85d3d5b62b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76ea425c-1cad-4c48-a0ad-89cac5a61bd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "997a6796-d0a5-4205-8e97-fd4e2116af0f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451f1b4d-f6c2-485b-bf03-0d7514c73eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc26459b-eb10-4e84-89ea-902c313530e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2280da3b-be8f-48c1-976b-0da8cb591bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48367513-8a8f-40e0-a654-78d88430e783"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "364a1c25-07bc-4d9d-92b4-51c6d0b759e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f6a38d5-b669-4f0f-95c8-1d7008ab6c83",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84cfaef4-9caa-41b5-b20c-39d571fb012d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "87b8c0a7-855e-4a84-a533-48c53f5afa69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff81941-f24a-4f90-b382-4b52a7078645",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e95e4cdb-4e00-4452-8b18-0938afb46d92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73407698-6eb5-48d2-b8cd-f20b321a689f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12390dc4-dbff-48cb-bc74-a892507142bc"
            }
          }
        ]
      },
      {
        "id": "67781fa1-fb88-4947-a0dc-07e55af2b82c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "623b7c76-dd28-4974-a9dc-b44ea15e5c74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17c98c9d-9490-423f-a575-7b20f8b9d2c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c510a6e-9689-4eee-a7a8-b6e7d644f192",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143f45d-30c8-4290-925a-3e68a4fdabd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02a59e0-26e3-42aa-8652-8402ff6c768e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44431f38-0ca8-4163-9fe3-2029ee32e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32dfa9d3-d0d7-4e91-8af9-ea86c3a62bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1fca0e-c7c7-436d-9e19-b7e05c2fb877",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a34f2b2-df14-4c5b-abfa-66f347d57d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42105e47-d75d-45bf-98cc-3cf607c66c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c71fadb-58d3-4e5c-a77c-1f537e195037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f615b9-a3d5-4b9e-9cc8-c75cc07268da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3460f20-c9bd-4846-97a5-91cc1840c443",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50be3ff3-d5fc-412f-85b7-4c71585ccad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885f4308-8e79-4577-b2d9-b573d01ce1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b101b6-e02a-4e59-b44d-3754563b9433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6df0727-893c-4e4d-9b0a-fc2a1b8204ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c315ffb4-c93c-4560-87bb-3343593e4d98",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79e2550-8de9-4a64-91b9-f2f1d2a04420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cdf06f-56a5-418b-a97b-477e1ae9e7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96032c69-00b8-4e1f-b2a1-a821a8a85854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f9978ae-a739-444d-ab5f-80472460549d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f58edfb-7b91-48b9-b6ac-6aaa5789c3d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eaf6c7-7a86-42ee-a84c-3db9f19d8dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31db4847-871d-441e-a91b-8f91aaeb70e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bebc994-64e6-4297-bf4e-11003b8907b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0011a5d-536e-449c-bab7-df77b8278604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb532ac9-4f5b-42f0-9ebc-14c2d3472f65",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f606d44-7bb1-4095-b855-c1dd4f037ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a40798b-d194-4dc3-a4d8-ee2af776b699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72980b4-7cc1-49f4-befe-85e09dd75ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40809cae-6669-4765-9059-5bbaf4a087a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f00d1-f559-4823-b39c-b40e2b31564f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e81e1e6-4396-48ab-905a-f800db5d0ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b55884-be46-4aa6-b137-6f05df279afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567df953-0c70-4dba-be92-d9e1d79ac72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "429c73c2-9870-4fd5-9fbf-f442edf73de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa3a337-1858-41aa-8627-813f03ab7768",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d836c91-beab-49b5-98e5-4bb6353734d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8245d84c-adec-443e-83ca-1bd5269d6c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67db021f-5340-43be-a487-16c969ecf3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011e43ff-d127-49b0-9710-fa6b3fb1fb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec9ca16-85e9-4342-a598-da237ff0b27b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181e38e3-9fef-42ab-a086-6515d9d0c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73749a7-ec27-418d-b2a8-60e485f662fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a72597d-057d-47c8-9cb3-04cd7ea6c029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db4b83d-dbd2-4fcf-a9ba-0fdd6350dcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622ff8d8-f67a-4ef3-be5a-27fd87ebea96",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baab471-2dea-48af-a886-4a4de42095c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b29edb-e78b-4e89-a67e-03f17e3afa98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7d67ed-3683-4b9f-a87e-2a49cceb6a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "335d5ae2-969c-42df-b5e0-a0304fdd1cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1916486-39b5-4399-bdd4-82ddf2dcb2fe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a80572-b4c3-4b73-a066-f2b7e936bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07c973d-0f7f-4e63-89cb-acfac27566cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960e5239-4031-4cdb-8428-55c37a99cadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36ef29ab-8594-43b9-b6d0-74210cdba87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7decc1-29b0-4745-93f5-b8a943ced19b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317d825-2fa3-458c-85e0-391c484f5db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84938ef3-cda3-41f7-b771-f42f50646d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d91463-531c-406c-96ab-14eb67431b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7aad769-d557-406f-b481-8361a44b10a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e078a109-4c1f-4d01-83e6-7609f95a1289",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d677a9e-9e61-4d57-8f23-db41f0f463ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efc53e1-2426-467d-bce3-27bcb4350fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f15cefc-da6c-4103-b146-d518b6a2a8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d920ff-3ed9-438d-901c-3468126fb606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe510c-6747-4a0c-aea9-931024ad2aa3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc70dba7-6850-402b-a598-2ddd9dd7feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8450a024-d834-4ed6-8456-d25ab80bd3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83da2322-d11f-4bb7-9e14-18223923b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97d689e5-7680-496e-ad5b-1753ba2b2211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b21d4c-20c9-4482-b909-41b1310dc123",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6996b3a-90d8-411c-8eb9-e4fda5335218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40238a4-4592-423a-9c88-3d3204d1c0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dea1d0-1b05-470d-9ce1-5943049f6a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37819859-9c25-41b2-b34d-6d71e02dee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4855347-78e3-4502-bd3e-0156c7cd6dd0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05955840-5dd6-4904-bcd9-cd4c810e0313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f0870a-9d40-4250-8f41-cc4e5c4b1d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d164e4-6fc0-4bf5-b8e1-801a16611bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e9c04bc-a945-458f-8bd9-c12044c70830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada9a1c7-f5da-40cb-b271-208c77dce05b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851aa47a-e66c-43b7-ba83-d0d404ebc74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d48e241-04ac-44e1-bb75-277bb439e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96b0d1-b00d-4e76-86a0-65fd599c4763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a458e147-ca5f-40f7-a75b-d2557e0b6791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839aefa8-4171-4514-a888-c5f9fd377c1c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d770072d-2175-411d-88cf-55669a2498e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62f9f05-fbf2-4364-bce5-37ab1ec45c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2750ab8c-860b-4230-abcc-ae1d3041f706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca32b141-5dcd-4c14-b5e7-af2e175f8c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b75ee9-32df-4beb-a206-cffc1afdf324",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d28249-8981-4325-b4ab-d1f0b6ce59a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096126a1-9c34-478c-a980-88056e02ef61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3ff7e9-9bbc-41e6-b2a0-c3cab76b3acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a18c0d3-95fd-4c70-a95e-ff43a19d30e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e89cfe-86d6-46e0-b4c2-553a71edf167",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5e59d3-fd4f-4cec-87a8-bf71b0ed2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d1d9cf-1b73-49d1-aa32-735386f9c4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155adac6-7a0a-41ba-ad42-d7f128fe0cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5e6b7f-e14c-4f4a-b829-8828cf7a8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9b9566-824b-4469-a63b-af673ae82aff",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6c9a5b-9288-41fc-999f-959969f2aaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daef1ce1-034f-41b6-8765-0e541633ff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141b28a6-46b1-4729-96ad-b565daa17b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7da1b07-a6fc-47f2-bcdd-9cce5f9ed94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fad309d-bfc1-4fd8-965d-690953474ee3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d85bdc-247d-4a06-ac2e-3a6b7cff6b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20859e45-8458-4964-bcb3-b12a47246cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420b2da3-e10a-429b-b155-f987b2f5b3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea12100-3b21-4b2c-a62c-304a83305a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056df636-c41d-4b45-9c68-f423c829231c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a32607-7ace-41bb-a7d6-1caf72bd411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef7f82b-8981-4d40-a248-2853264ff045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48711a28-8ff3-444c-8ec4-687264bc899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c539af6d-acf5-4bab-8132-e28695530439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b16232-3b80-4cb9-8a9e-db128a552c58",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07614230-e76b-41ca-b3a9-5cf1b0604c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e855089-8f26-435b-9833-b53c0f7a667d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992dd35a-3e45-4264-bb63-e32e585e27f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c779c54-0e8e-43b7-acc4-73c06cd3b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed4b825-987a-409d-ac5c-c4358c66f8dc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74037dd-7481-48db-9f3b-ffb1f1575218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288318ef-51b0-445a-a007-14d62a0a4b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aed303-888d-4199-94c7-e8a3ab9241fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75adb70-e56c-414d-a2a4-fa7a148211c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547ce11d-5eb9-4575-915f-c863dcaea104",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3ad381-eae1-4eb3-84ba-b79af13f69a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7936f2-061b-496b-82ea-b904b5444f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9aa9cd-1a51-4509-9b02-50aeaa2f3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f01168b-9742-4abb-8ea9-b25669e7d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3070cc-0f41-4c67-9651-0bce581fd489",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c4a790-cf95-4686-8c3f-4ccec241ef32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d8eba2-372d-4922-840c-8180b311a3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7718db37-248e-4bc2-837f-6dabb953e621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e4185b-4895-4589-8281-9739b1663d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35df0fb-b9ca-409a-8cf9-b6c9bc97b46a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b8d9f4-b4ca-4696-a2dd-d30f944274a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e07d9c-b216-4891-8075-45d688a8588d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327ffbdf-98fd-46ef-9e6e-e87ba0fd4cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46629730-964b-4fab-8120-134de1d126f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96aa3e7-cb7d-4aab-9ba8-c50dc6611ec7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66366e4-df71-44de-86b4-1e02070babd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a6d834-792e-4087-bb12-774cea4100fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc68208-7a5c-462a-83e1-17d89c8b56d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfee39d-45e0-4679-bd67-f795d1f05e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8459e66-b29d-4543-ab4d-d041e3d859c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656b5df-a13d-4fdf-a86a-815a6755ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd053e67-5a74-4630-a895-2e82aed51cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea7ce43-cbd6-4657-8e03-f81a2dac9515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "806f7c3a-acdf-45a3-8a96-340dcb1c0398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9df46f-4971-4994-9f6f-f430bbb89015",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c36847d-b3a7-4a77-b9fb-88beea9d1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282457f6-c660-488a-96af-9577bf133e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeaa5c6-2618-4e46-a56d-0af6e2845303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e89cff32-5136-4aad-9b52-f6c792cc71fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84472e17-d7c5-4f40-ac97-08f7005821d6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d33bb61-0fb3-4d7d-89c3-966f76ffc2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca02b0e-2ef7-41ee-aefd-c0b9e407768e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d1e5d-8552-4524-9ce2-1168f9c2b830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "318e59e3-ea25-41d8-8491-5d435655770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca97436-5491-4f0b-a38d-956214b90270",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a16afae-4134-4440-871a-81d8208ca22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9cc819-ec23-4126-acaf-02c3c4c9570c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adad0123-9b67-48bc-9397-dd0dc80242be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8156cd-676b-4810-bb28-df2b31c9c211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db662b-0e0a-443d-a24d-3b26b1f1099e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4e928e-3b93-4db3-b32b-4c86e210f024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83081385-baf1-409c-b2df-f4fa83d999a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673a9750-f9c4-483c-9c96-cbc1fb8b27f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3c49c0-1f62-4ece-a87c-c1a32ffe7f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980dfbe8-a370-4c99-b87d-d8a548d27e46",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90823c62-cd24-4426-a948-e30601120667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147b0967-aee4-4620-91a6-b36389b02cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4da3b5-21c0-4655-bc95-a81794335c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5449c7-bfb3-4288-8b09-7502c3769673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7b78b-b05a-4fa7-aefe-68fb0b36f3da",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e169d0-bd8b-4fe0-b461-ac8bbca89081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f9f0e22-2f38-40ac-8e15-27981c1800ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ec78fc-ecc5-4acb-b299-599d067d506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6e22ee-3770-49a8-a401-812e7fbb020a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbf53ee-bf28-40b9-a405-16748f51f952",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebe2d5-7f0a-4218-acae-3f0daa6c693b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c947d3-ed2f-41c9-8ad0-644304af2f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b0659b-1876-4746-826e-4e3121f5e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1187e20-89be-44ea-baca-a8690c64c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7f79ea-76a4-4349-a70d-a842a61d9f70",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba9d5ac-a9c4-4a1d-991f-37e3fbd0a0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d2fe02-debd-48f3-94e6-a75a26848bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ff1e4d-03fc-4c0a-87b3-a1e41d5a8456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7960ac38-1cfd-4b11-bbf0-60ef0d21c258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ead6903-d40f-4995-9947-484d042fa84d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe20e6d-47cc-4037-a6c6-c2f899b7becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849c2156-86eb-4a54-a796-58af3a43df70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6570f5f-b742-4d08-a9cf-2a7d6476d202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e7776e-eb1c-4784-8fe6-2e01cd8a1fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1b5b00-7061-4338-b756-971c69cd63c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98012f15-56df-4df8-935c-49d564a79602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983c7add-e424-4aa8-a6a2-4bf7bc60a074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933568f6-a822-42f0-9411-22b12d25c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "587a23d3-dca3-4cf1-909d-54363afbebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e541e10-2860-4b64-8cb9-011f1a99687b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3571c29-4c24-42a0-8cc9-a783b2bb9e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c128bb-45d6-460f-ac0a-1cb53b98cfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19571f58-19d2-40ac-af5a-6f81f821bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "435de90f-a010-4e3f-a143-9590699c05f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8006c684-46bc-44ef-a8a8-2d7287db0c1d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97dd77e-6de9-4b81-a1a4-19eff1043e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217db305-c387-4d96-9a46-9bb3783bb1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a91c5a6-f2b2-4100-aae9-9c7e1500c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccb4b7e-44c7-4c5d-82e1-3507cb681a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e59f053-386b-44ad-937f-6b7969b4e1d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece2604-a979-4ba7-86c3-5286188a5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26885f56-ef10-4995-b519-d52d5955bec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e4c75-8337-4df5-b175-ef786d840160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b967a37-bd72-423a-a501-837860897890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b0fabe-1f43-4dda-89ec-aee544cdc9db",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24a3ed3-5227-4c28-97e5-f6835739514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76fd6b3-aae1-4e73-b497-08429f277edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0be10a-f1a4-4035-af22-dfb00789d1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bd4ad8-006a-4d47-9ce2-df7ada1790a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508cc96d-873d-4b21-977b-efb2905fd871",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb5a12-ebf8-4dfb-b358-cf17ff7ace20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0114c56-f634-425e-99a1-1af2891f6126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6a791e-579f-4b24-b440-879155d3ed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2602d063-9639-463b-bec6-539c0fc0d2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f24ab0-38ea-408b-926c-951026168d6f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562e9eef-56aa-4acc-a9bf-0b3699d3ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cd7589-5441-4002-afc1-72cc93b9032a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d221e1e4-1b33-4e74-97f7-4e9352f146b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1299d8a9-b013-4dd5-bb27-ea8748daac88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c11f31-318a-4f48-8f06-c07f7b2ec56f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f058ef83-f2d5-4998-88c5-8ef2bd31ceec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a16b2cd-989c-4dce-8a3d-a30fada68b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792c312e-8620-44c2-b2cf-84ed96e73638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf5d0d0-5b94-4b5f-9781-ee2663472386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39ef34b-7d62-4234-9592-58ddf73be93c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c9a937-1518-4da4-ae86-1cd7f143dc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93487f80-6c77-414b-8718-1c81209ed964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aa5c1f-fbf7-4f31-a715-2eef8e24edc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2f15c7-cc16-453d-8803-e2df6e660962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ed72e-5520-4a24-8238-0d9f90d14d33",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5fd4b7-29df-4697-a66e-ce177f6476af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d06ef95-629a-45e7-9460-52114a807138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c17f64-b5ef-4d61-be37-984f94192a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "645d9a05-fce2-488e-856d-9c80b509c2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f08a9bb-e6a6-4ecc-a2a2-4f5b726dc9c1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8837f52e-48d2-4ff6-b3c0-ab409c13e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db04a505-80d1-4408-a828-a6a1ecbcdb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a0a5a-0c1f-4926-889c-981a4573a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1e3443-a7e5-4b00-be85-e116020c9e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9a1e65-0f50-4f66-9e7b-fe17fb334087",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dc3211-3406-4bd5-8f2c-5388a895f548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3f34b4-ff13-4b81-80d9-eb1459fc5780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0222a8cd-7f1e-4d82-9b3d-c6170de2f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "abff8f4e-71e8-4d53-9fff-3c890d83bf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f6aa6-639f-4679-8c90-10b7fcb930fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b1049c-775b-41b5-b6ae-1cbf9a50d204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a4e157-3087-402e-b66f-dc99ee0ca40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf188108-2191-4d20-b475-ed5cff63f943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71427e8c-9641-4c95-8a15-7b4cd3f4e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d4852-3eca-4450-b6bc-810c460f9202",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6faf406-fdae-47cf-ab08-3762ce69bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66d5d4e-353f-43b5-891e-41deb913fd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cedede-2e98-4cec-a821-3fd49e1f3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f78df5-c999-4ecd-81b8-98fb420fc877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c39a3c-a845-44f9-aa10-34b8a74b18c7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2481169d-46b0-48ad-bd22-6f500881f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052ca9f5-b8d2-4a58-97c3-df4d5f30102d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94606347-9434-4043-ae21-b67023e48de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b55569-2629-4c96-8d2f-7ad53e746030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569e2e40-fcd1-498b-b70b-0d8d573c75e2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955daf90-af17-4711-8254-7ca9a51a7391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facfb0ca-fbbf-4867-bcde-05bdc8888ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df34cc0a-acce-4b64-b891-7e62feab74e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadea9c6-b97c-4860-a515-ab2a4a22ad97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f77f5f-16ab-49af-b2f5-8c6243900ac2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8be6ad5-256a-409d-a1f4-dd1318575e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5669a130-fc90-48bb-ad24-da072593dba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b48738-00f1-4c11-b5b6-ed26df456b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cd85ec58-be9b-4610-b520-da50bee50df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be892ae-6296-4842-9c8b-4d7dcfcf1c3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d8d88d-c2e9-46c5-9126-4a9bf53fcd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3322d24-1663-4de6-8feb-d394fe67e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ede46-b115-481b-ad51-56b4acab165b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb36f9fc-5c03-4ead-8fe1-39c63cea3636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd7ebd6-691f-4ab5-a147-7775467cfa86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de5f8a9-1074-420f-a7d6-1c7804c958a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e06819d-1fb6-47f8-aa27-80ac3cb9f61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc30b898-c6e3-4b9d-b0af-93f72562301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "726b2d01-ddb7-4729-8521-34f434012e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0323f7f2-506f-4d0c-a783-18f0f1ed1b02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5912e48-ee14-479c-a41e-02daf31367c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa37c597-0607-4820-b37a-5a94fb4c374e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b1831-18d5-4930-b6c1-1aa751dfffab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f123115-8810-472a-b3b9-9b10ecd746fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d340ada-2d7e-4b51-9e9b-b126ae34e991",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c3b25f-4f83-4e59-8495-e26a0da89881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd4bbff-9828-4dbd-9827-23d30a25f548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ea450-011e-4fe9-b1e0-6ecc93dbafbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "635c51fa-4c26-44aa-899d-4ef35bcd263a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dc211a-8ab4-48ba-ac18-a8de0b9ffdc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b177a2a7-45b6-4767-b61c-df1c71801ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbde982d-d986-4be7-be6b-2ef3109fe798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49ca0c2-02fd-4179-84cc-e2784d8e096a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a327cd-a747-459d-90da-87e66af61aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8009bb1-a01d-4451-86e5-e74861c0708f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8202a30-960a-43a4-9789-926055a7a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7372e7f9-5649-425d-ac88-06ecb105872a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599ce1d2-1f4c-4c25-a449-66d24826fe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea211ed9-84fa-4890-8ac6-4a2b1f7c941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd0800e-0ffe-4064-94f2-022fdf4b33a3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc0aaec-0c97-43eb-b4f9-9786920721d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17452d-21ac-46f7-b248-7f70b009b602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9f856b-4645-4ab6-98a6-8deea8f84690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d254070e-0a63-488d-ab24-486ceab76dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d022358-8df7-4c0a-a57a-43b338f1a378",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29126db-cbbb-4776-b0aa-5d780960b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaeddd2-4e2d-42b7-a695-1d83a4b9f0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e791ea18-cf96-46a6-b7a2-010d350e524a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6c38e6-0d38-4b86-8bd2-08d5d424efd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e907aa-c7e1-452b-9f80-b4c2967e4ed8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f589e3-88d5-4ba0-87e9-5b0c65f6f886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b79ef4-ec02-4dc1-ab00-aa0994f41509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66f3528-d460-41f3-84d3-743b7fb49d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9d19fd-e105-4bec-9163-3df5a2468f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caab247e-f107-4d8a-8620-68101e50726c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16e5503-6349-4227-85d6-a2955072ec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd58c5d-e857-49f7-890c-6169b7239f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba62281d-cc82-4517-9f4d-d03e20023f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8f242a-acd7-4f2e-a2ca-01333909cd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b6379-058b-44cc-9b04-d359394292b0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d85f0d5-8564-4351-8da3-e1d819c5b3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bef047-04c1-47d7-beef-6b6bfa3d9989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab6d69c-6891-48f6-9b54-ec41e458549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55b87396-90af-4198-9413-e78af8b36c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92544df4-66b4-482b-9682-8b113729a5dc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb55dd-1c8c-4070-8120-7f3d135c1651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e0ccf1-43a1-407d-bf90-d4e62d46f809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c61ca46-a091-4635-a6d8-644c685ef2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15dd3cf1-4250-476c-bcd3-05c49902f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed22c1e-2cca-46ec-a305-52a78d16f544",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602aa3fa-4e7a-4f10-8dee-ae991a1fb73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccaa67c-b9c1-4c56-b4ba-14c98db49636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e484b6b7-56e2-4ce1-a592-6f7746ee67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b42311-2bd8-4cf0-b4d4-f6b2cc54a6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052425c8-bc63-444a-8644-919dbeb5ac97",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd23fd0-a39b-4967-850d-d74eefba5620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2a25bb-4ced-46f1-aef6-92b0d9318401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184fd354-a842-4771-9e32-82ce543dc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdadfe4c-b85c-4b1c-85c9-b2ca641e9f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13383fe6-33af-4c28-82e5-e8111bd376de",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b38a02b-d8e5-4eb3-b0d3-4fb950379fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50672773-3b16-4c15-8ac8-1aa40c384834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead5936-5dbc-4275-a623-a07ab6d32749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "692c979d-bad5-4686-b146-5e8eecfee4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a956d2-812d-4357-ad61-06fde86559ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f5e104-6117-4630-92f9-895f2dfd6565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7208d4-a3b9-4edd-8896-5544ad6748a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c38c40-b904-48fc-949e-0a15a3242ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "676fc7ae-03ab-4af8-99fc-590b7f24a2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957eb415-dcd4-45ab-be6f-3fab19f071a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2a91e1-79ef-4179-882d-84317e5f1c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d31a86e-4bb6-4ffe-99d4-2919290dc27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b3bf37-0ee8-4528-b48f-09e8ca62e7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bd9405-7249-47da-9b5e-81910ac97654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5bde42-1510-4d40-bc7a-abc9530480af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397b2f3a-06ff-4266-afa1-392b1f94c7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1f9d4c-37aa-4d1d-b779-ef11e8754bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ad8b80-5273-4a27-8619-3946b3466528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45481319-d382-406e-b58f-46e3f4696a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff93ff1-8441-4fd0-ba70-2b6c9647c6c2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f667d6bb-f512-4df6-8e08-d195ceac0fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda5555b-7308-4087-bed9-01b6b30daf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e16411-3d6e-49ed-93ba-f0f87c1feb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e77f89f-fa50-4159-b28a-eabee72ce2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e5ce6b-25cd-44b5-b534-e111c17e59ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d464cc-c137-454d-8e2f-e319893d799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2dfdd8-a915-4c1a-947f-b5b4daacd1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd2773e-cbbf-4ee2-8497-2d862deb27dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea3cfb3-5c70-407c-9667-f61b3a0754ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df23fe-86da-4e30-bcb3-a5ebe14485c3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eaeaf4-a478-498c-83e5-aafceb98de06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40be8564-beda-4eb6-9792-b72f48cca1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ce648-8e9d-4c4c-8bec-af054211338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39d3c38-c4cf-4432-8291-38a435a780d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d368b98b-24fa-4f24-a5d7-75dc085c21a4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541bb17-e02a-4552-bc44-8143969a57d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0f44e5-1d6c-4c73-a7bf-aff9455c0928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b92020e-5a53-42c6-baea-439aaae562f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "680700a6-a872-4712-bace-291e884ea4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24b1ec1-fb92-4204-9bec-2a75caac96cc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e707d021-2660-4218-b4f7-8ef80040bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edbd7bf-fc53-44a4-a3ae-fe53c37b24bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c8fd2-4191-4bd6-9959-2a6291fa687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86547470-241e-4440-bf60-d367d78f62c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051726db-87d4-4a12-8cb3-67a61ea9bc18",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dd993e-7211-486d-b825-4f07ff5fb9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f50aeb9-309d-43ad-beff-daa37319e445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bbaef2-4adc-45e9-a2e6-ad1ab1e4ea86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f60caac-a561-448a-857b-661f0be63a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83bc73f-db24-47d4-92f6-0695c01defc3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe5643-247d-4f00-94f8-1f3c73a756b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e130a7-c04d-4bae-897f-d4cd29277aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec28b6-b248-4ad5-af36-c4ffae738f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67fe0abf-ff69-4745-b76c-d47ef25deb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892b3708-3ffc-4012-9d04-72048aade18d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21017e6-0820-4c6a-b828-d8a9703a9d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36d6d9a-b63d-4624-bb8f-b7fc6b8d0b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfed688b-a290-465c-84c7-fa94295b92eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de99a3d-1cb8-4716-a347-0291818c7b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b215d610-19bc-4201-a6e2-b2a413fb6a69",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e039efbd-e5d3-4678-9140-eed2081ff1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3bc7a3-ae27-4c26-8e43-399f6476832f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a0f9a-d120-40cb-b9ba-2f50d429d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebb0688-fddd-4fe0-9067-6783d20daeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ca9c27-f96d-43eb-b368-bf9cbfd2fd68",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca58e75d-3fa4-4480-8b77-519e05490a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ffa345-41a7-412f-9f53-0ccd0257fe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d548388f-2ae2-41b4-bd8a-4be7cfca64e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daafa4c9-e4fd-42c0-8b22-6287076f8ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13e257f-fbda-4dfc-9d2d-abd6dd34d78b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdd3b84-ede1-4e8c-8493-7cd5ff870909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b14754-1eca-4c00-80e5-08509886b403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f7f3f6-b5d2-4652-9719-4bdbfb7abd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "840b60d3-5dbd-43b9-aadf-da2f0511099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e36d23b-83ca-43eb-bddc-d7870443c4dd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fa8909-9359-4aa2-aab7-285f161535ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d57440-ff44-49fc-b431-0e385bad0833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0f2cf0-796a-48fa-bb88-2e8601af6840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d61ed13-32ea-46e2-9f1c-beb6f63b20ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e0afa5-0eaf-4e48-a343-879abf7b3621",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccca64f3-a706-4094-91d3-1381f9e8639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491e0c60-d954-427d-a48f-d062550b93d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d8f63e-ed5f-46d7-8150-31ad866b3535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43b85a7-b3db-4333-b7f0-d24dc6d9826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d12f72-63ee-4117-9b78-8359325a6de1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849e7a5-68bb-4f52-b463-4ac5351791a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad53f1c7-1342-4a17-aa3c-dcecbcca2810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbdcd40-18c2-4f82-8777-e58bf32641e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed28bf0-051b-47bf-b6b5-fab750cc13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b11b5a-dee7-43df-83da-ac242ab8863b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b3f6bb-7428-4b5f-8a8e-c30206671d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3d887a-f293-4c9f-93b5-252c49c7a68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8b4370-6cbd-443e-9cfe-4acc76b9044c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d55a14f-1daf-4b79-8e38-bf73b2104eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ddf516-cc29-4464-be7c-e5219e5c7b74",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42e299c-8909-4ef2-8cc3-54f805effa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d5f357-c152-4687-b073-90065022f76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b338d8-1640-4804-b9c9-250e45f2dfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96004909-f368-4f41-b12a-d04ad064fbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa92fac-f786-4192-970c-e4302a0c5e94",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c756002c-d4d6-4cc3-a7f8-c3e341b0734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c014c6-d76e-4c22-8cc9-f6719aa21d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cd30fe-06a8-4168-b08e-a5b7561bf9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5f805c-100d-456b-9568-fff878b39927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a063e-a572-4cfd-bedb-7acdb8ebb231",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23a1b9-1e05-477e-ac31-93e434619472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "72b577f5-a642-4409-8325-1fb5ad2124c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39c8dfa-ff0f-408b-b93a-4bd746a61cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc00fab-162c-4c98-8033-342847ecf4bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "feb41f4e-ec43-4a06-a265-140419519b13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adb937c9-3adf-46c2-9030-925df809c01f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8a6bc4-457f-4443-ade7-9a4f288621fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "080e0787-abb9-48d7-860c-d807ce4de844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaaa460d-944b-4bf1-87bc-4b6bfc8cdf8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b64b4e7a-e398-4356-b6c9-47d1ea2cea96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3055313d-c40d-4f67-8f3c-610992cf3333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aa8a1b5-7bd9-47dc-bfc1-96d0d141c978"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4349a2b1-7823-43be-a004-69b99b1fbaa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f58ccbb3-8105-4cec-a073-41f95f950af5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba6f34be-4024-44a5-bc87-4f335faeab4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba8a1b1f-b5a6-4886-b925-33e02935ffbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63aeaf0e-6def-4ecd-9a02-d14d5f56d9bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9f01cd8-f7fd-4acc-944e-c77570757d69"
                }
              }
            ]
          },
          {
            "id": "4d73aaf8-8efa-4517-bc01-5e19fac6fe58",
            "name": "Positive Testing",
            "item": [
              {
                "id": "073c24ba-3a4a-4759-8fab-da4d181402ee",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "495ef1d1-0580-42d3-bf0c-eeb215f56436",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d69eba-82a5-4efa-b1d6-ff5eb222689a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b8d0bc46-54fb-4eb7-8518-971da659436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71102d9c-992a-4d61-a53b-5ed3cd63bbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4637ba2-760a-4fee-adfb-4f9cbc88625b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "884264fb-10e9-4113-bf75-7d5a780a9bbf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d9b092b-e0b7-451b-97fc-be2adc970107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5517eb21-776e-4525-bec4-76b00d821414"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e3099ea-8e01-4cdd-98af-b949d1ef5160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c265acd8-0a7a-481e-909c-a6313316b3c2"
                    }
                  }
                ]
              },
              {
                "id": "6ce37de0-ee7b-45b5-bf8f-ea9beaabb035",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0af439-7101-4fc8-80bc-1b359f6a9dbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9100623-fdee-46b6-9c86-bf10bbe9a119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a935fd-b314-4c69-a100-bdbb26ecf87f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cff0820-621a-442e-94e4-b3bef9b39421"
                    }
                  }
                ]
              },
              {
                "id": "b44e37e6-56ed-4841-8814-f50641fd20f6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c099dc3-0fbc-4345-91ba-e42dde49ff35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8edd86cf-62c8-4cfa-80e9-556679bca659"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a088c1-d59d-4157-b2e5-58ddaa3c06d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b88fe200-89c5-44c3-ad6a-c8eb622b9412"
                    }
                  }
                ]
              },
              {
                "id": "d4f0debc-4640-4330-a252-9ab1c5167145",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a13b6950-3688-4e75-842c-64babad34b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a700e3e1-44c4-4b21-b815-7cabad13ed5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09825793-8dbb-437b-9010-5ea1d051b6e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1530ccba-a9e5-4a07-832c-7e32a22548cb"
                    }
                  }
                ]
              },
              {
                "id": "9bc17f47-cde8-44c7-96b0-6c49467acd9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aca099b-bd9e-4394-aea5-778e70049d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d678a3c-7638-4445-8a55-c3f12a486ffa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a98664c-54ba-497a-917c-21ddfa6af4d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6cbcb83c-c178-4348-8f51-0da571c8d816"
                    }
                  }
                ]
              },
              {
                "id": "c14ae38f-accc-430f-a6c2-6969a135324b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "880039de-8a83-489f-98f6-9b958482499a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eb458c2-71d4-47fc-8342-b0de2157c5ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a88a538-5a02-460c-9fe7-0c15f4882872",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fc4e456-e632-4fbd-a598-bd5de075e837"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af4d5c19-b14d-4fe2-9eca-7686d8777cde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67533c25-58c2-4621-83f5-1fee1c383b22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e3d2d87-b6d4-4235-9847-1e57855b3c59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f0196f9-c2a0-443e-912e-6f6e9f27e564"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f125b9a1-542d-4211-94d9-3f617a112b11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32e9295c-4347-4c50-9716-d6e9227c9741"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37f9a415-e222-4c5a-abee-d4db22af6409",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18668a87-03b3-4321-a7db-7648ee2794a6"
            }
          }
        ]
      },
      {
        "id": "1ecd8f0d-93c7-4e25-aaac-127998f7bd26",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "174d6453-6fbc-4188-9d55-7c4cac083c27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2b70bdd-bac2-4d0b-acdb-66f5919fac0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2344dbec-7ee6-4fb8-b1dd-b5af61a8b21b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc044a8-77a9-4222-8592-443982fbcd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42fa4e1-83f1-4dce-a510-f8b9db844fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a02fc1-ab71-4498-b070-72cd8be01573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfbea83-64ed-4058-8832-1adb5131df1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd81bad-b2d8-4f0d-a89e-3f3487686a7a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a932ca6a-4624-4e6b-9722-4a59cbdb46a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7525313-488f-49c0-ac66-f0ce8b4bbe9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b089e0-6ce2-4c46-bd20-fe204eef626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6949426-22ea-4ffd-a78f-67abb8a075c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7929b62a-3263-4724-b55c-65ba77516bc0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d1b52-b2db-42f5-9ec5-660cd7b1bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e4f35d-45a0-4685-b755-643e8d8ead59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10a731a-be10-4261-8f52-68e90e645fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea325d1-fb9d-4550-af9d-71518fe91a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ac8e4-3ee6-493b-8c3f-537ba68bc763",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480d781d-76cd-43f8-a918-7c0e72ed454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1459c1-61cc-4889-9245-676b51fc0942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c8c441-6e88-4edb-9dac-7133f4650ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4394de1-7ca9-46e2-a3d1-d83b0fd9b5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aefb2e6-a2fd-4687-a058-5ac8d0fc3b87",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa71ba-1c73-412c-bf9f-0a52a41ee704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8c8bb0-c114-4732-9fff-ff3e6189b2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb91075-4a8f-45bb-bfd6-53452d4bbfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0815e3c-1fdd-477f-9bc0-6f3df23fbd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f618bf5c-5bd5-4078-94f7-f264cdd2a4d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ababcdab-51ef-412e-8241-cef485e69151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1173cae6-fe78-4057-b1ff-c6c068a92817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6b0106-d173-449e-8793-6c417aa8c60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f5dbcf-e89b-497c-a484-783e87e8e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22cb33f-e4db-4bc4-8503-9fc4dbdcf7c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85496afd-03a0-4c4a-b17c-aa1347f00a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8e4fc-6b31-44a5-bcfb-d84ba0117984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896e648b-6e92-4b0b-830e-f6884e5a08fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8122d8-42ba-499c-86d3-838784db155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeedd1a2-87b8-4d19-9e0a-77086605f1fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4d1539-84fd-4dca-ab45-3eb0f1aeef9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75ff73d-3b14-4100-8e22-b46515b219cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee44bc1-74b3-4b92-bef6-e5f6dfa648ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb8d55a-5135-40d4-945d-78a819a79f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37b14c1-21ab-44a8-8f20-5abedb42522f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b12fe0-5ec9-4241-ab11-e2b3fea50d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38ff87d-8abd-412c-adf5-7ba4bc18e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90b683-823d-4e28-8e62-202786847b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8af51f-6e90-4dda-86a0-9f8714728acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abce7c1-aee4-4a13-8366-918b6391a445",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fecdf5-0d17-4206-8b27-c8e4baaa1b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee44a673-f648-4f43-9819-0b3e802e0578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed6a8e5-cd8a-445b-8963-323b5ba484f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d27a024-94c2-4825-ba94-2f94296ee616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16014109-1375-46a4-b3c0-668465d3df9f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823b2d30-380b-4b1a-b02e-d459b4c650b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccb9aff-0018-4b3b-899f-cc373715fbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f18dd7-5827-4b21-a901-3a7c914643e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7b76b5-b3e7-43fe-a1cc-9f7bb15a8ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7a8759-ce65-4ef7-ac3d-9479d172ad9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9033b23-c37e-4093-ac5f-486552bcd98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b19291b-bdf5-41ec-b66b-cfe37b6e100a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7bf9e8-af84-4c24-acdc-0e03ce57c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0301ce-4980-4bef-a656-91dcf4a81a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523ad89f-c1db-4e8d-9c05-d6c589b8134d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9a01d5-fb14-49da-a26f-8f30f1b6bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bd02c8-33b5-4a9d-b09e-ed7421329f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4888e-6910-4675-a2fb-875069d4d46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c8b78d-bfa9-4dfa-b1e0-397cdc1ad811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e1c95-05c4-4ab1-8c8d-0bc44906e6c0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c330e34-80e6-4848-9614-2743d6f3e891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c33e71-f04a-49a9-9b71-9331f878d24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a1d703-0689-4753-854d-387ea6cdeae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cafdb824-55eb-4420-8a32-2c4610d5cab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0fe564-7e9e-4d45-8cd7-de360bfcbe00",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a548bb-7124-4449-94c1-aec852c8d456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c053c0-e498-4b08-9caa-3c20387c28c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca78323-1c10-4b48-9927-25c070570a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "25eb957d-efd7-4783-9df3-f9a7271b5993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bba3fca-8c1c-403f-a3af-ab5a816f33de",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a5949a-da67-4845-845c-b78ce050ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ae5668-cca6-4de1-bd4e-1e40bdae5642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e89ac6-5caf-4265-843d-5c08c309af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d4c421-349a-4071-8ded-db30048299c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb340d4-dcbf-4152-8e24-c36f5f5ce6ec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f76bf2-1504-44c4-8409-7f31a7585c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cca0a7-3143-4dd5-b164-01697e2b50e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf6f417-4220-462c-84d3-bcd28ad05c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "42eb6ade-2266-4fff-9b94-3e9bc1cb0017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66af3b9e-3649-4a64-bd60-36af334b66f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a25d933-c312-4549-8705-26a881975140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f665ae5c-a8e1-4cd7-888c-5c49a1aee315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d305a0d3-696a-49c7-8f85-07e045159f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4ef7f1-f4fe-441e-afb5-d2707bfb9334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c202e256-cb01-4ffa-a6b8-3908c6505ce9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e68167-2c09-4307-8e1e-6b28477554bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b085571f-63a3-4887-89e1-1eb8a359bc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99261972-afb9-405a-a12a-8b6b5f3e8b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a582626c-26ca-484f-95a7-6cbb42f5e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b45d7b6-fa3b-4d40-879d-4a92acd84159",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112ddde4-c53f-4748-9b7b-65efafce28c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17ea027-7b78-4bdf-b712-d94003b6ba8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65017446-f580-4864-a53d-eac975a1fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b65c141-4dec-438d-bc0c-4c21d8a9d65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01209630-6693-4089-9974-7b959f1b2ae1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b51bd23-34f7-4a35-8b04-76d9949285fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510f15d8-1001-48d9-8e31-f1b88e98cb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa19bba0-f9cd-45dd-af6a-59130d7c8938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7ee3bc-82b9-4c62-a15d-cee0a6295f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c31736-5232-4ddc-872b-293ab6018fce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8b49fb-7525-409b-9358-79b73677e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc57a400-529d-427e-907d-17ce26dc3ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f31e32a-6007-4a12-8baa-2024c2a4d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa089d5-0b18-45f4-afa9-e9f23d34a792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e325825-8236-441f-8c43-d5328c042e5e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077d3c5a-53ef-4371-9d6b-3a558aad874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d1ce1a-f186-401c-86a1-577b87ac0b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07791951-ecbd-4a4e-84cd-60cb0df92821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ea7eb2-be72-4995-8349-06e8d39a7255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51e7fac-cdf3-4cfb-a52b-486c81bde3c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448880a2-9b55-440a-b597-ac085ba6ca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358c2f95-cb09-44ea-9bbf-84b06abea7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26277139-d4d2-4866-bdd1-4429cab2459f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ced2de9-e560-4648-8680-0761ce41f8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8514495c-ee6e-40a0-a0bd-9d388f8de3d1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf429a-a67a-4e09-b69c-04fd1ed94e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c5451b-5e8b-4b82-9e26-587c2fbe8137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0a6c55-1676-4857-a506-daa98559edaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "174a3e61-5a4e-44d1-92c4-11ba712bcdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0553ad-cd59-40f5-ab3a-b352d3ee9d9f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd004fc-ad2f-4c32-886a-e4ff19969ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18f157-2402-42aa-bd39-7057505e2621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f043f5b5-aac5-4add-94d3-8ab7d6e0f7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3288e92-2c25-42cd-975a-23e42cf3ac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbea327b-4528-4430-aca5-bb55ac143889",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0549a807-82f9-4eea-b155-99ca49e7b7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da27dda-f377-422d-be85-8ac4c9d3485c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ef2481-ad78-475f-9246-a9c792de75fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60d547a-4c93-44e1-9753-0bb5546d36eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df4457c-e5b2-4c7d-a91e-dfa5793959b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6592497-6992-4be6-8927-4d2cd9e55758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7045ebf8-149b-40c5-84a9-18731abbfcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c615ab-2889-49ca-ae2c-3d4a12c685a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5f5d69-dd5f-43df-88ae-436fd94cc2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f0313-25f6-42c6-9f9d-8f21d26f06f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eabddc0-f087-4110-96a8-a4cfca4a3631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520b547c-31ef-42a2-9fb9-3ede6d6857ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412dee5-ccfc-4e8b-a3ef-ea5100f49dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6917fd-fc80-48b6-830d-d108d5e86cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dd8eba-aea2-4c3f-8cec-48d01804c524",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce69f2a-aa00-4d17-bf78-3e810137db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e67c14-2015-4e52-949b-34940c2327d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71223b58-820d-4bf4-ba58-7e5428025cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed54dbe-ac3c-42ae-9147-c7eecd0302d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b956c295-6b0f-4353-8652-7abb309b2e58",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d6f60c-ee41-49a3-880e-ebc583b664fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321fe61f-7fd1-4aca-8f7c-2f331eccdaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fa9cb4-c27a-4be8-be24-dec4aa936848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a330d-e178-44b3-844e-7142d134b713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef044e-6114-4f83-b689-2fba1697bdc3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f18803-3415-498e-a462-f572a259291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bedadb-8acc-4c16-ad04-f97cf27726f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed425f3a-2e28-49c1-bef6-f3bffb89c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc0a5af-1fae-4236-bf66-6220db9c1ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a5d4a1-f901-4297-b75a-007d86a0df35",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd1dae-b9d9-4b1a-bf17-33f844529eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e723a3bf-3336-4c1d-a546-80cd07d7b37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dae113f-569a-449b-9f3e-0cce71c79314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16b36d9-f6b6-4fd6-9cef-34c40fd4b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d773c3b0-67d4-468a-b24c-de8856290056",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c3fdc7-7f17-4050-b785-664d758b12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c593ae-a260-447c-9894-14a6474fab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbb9b3f-4f11-4f5d-bfc4-39f69c430a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063d1a8b-3ea1-439e-90d4-692d33973828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4acf8db-485c-42ab-809b-9690a2cd4f42",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4877e8fc-f8a7-490c-9963-d31308aaa3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651c8db5-dca8-40c2-9451-f9a6a980bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5b9f69-4e21-4ac4-ae44-130c565bb6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f283bc-3e69-4517-971f-895e635114a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e599600e-ddaf-42c6-a62b-919007fe7db5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b630f2-89bc-4cd7-b9a9-750098b8f1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e49de1d-4cec-43be-b2e0-0466450ce419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51aea28f-0853-4783-9ff9-cb2beeb23104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433fe222-f471-41f4-9e52-8dcade9bc321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5e9f89-8872-4194-ac27-7f020f8ad6e0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de882a6c-615b-4e96-90a7-7119be8c8c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c988875-4334-4d86-b92d-ba885d945028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f4c1c9-7ddb-4aaf-aff8-28646c763e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c2102d-ce3f-47fc-bbb9-e200b58feefc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f841c1ca-c78b-4659-a9d0-980eb1e7ae3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e162f5b6-5e32-494a-8a2f-c56d125778f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51348554-080f-4a23-96e1-fa84e1aa3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b050dda-62ca-4c62-a574-7c0d7ecaedac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e56691-5fb7-4567-943c-b932e4bc0114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7435f9d-a654-48ed-84b7-9de34f4b1554"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b99888-3a7f-422e-ae0c-d979affe66a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "497e6a45-4b6d-40d6-90ff-887e2f08481b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9504b892-bfb5-47aa-aaf3-724c50393896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "582092ff-15b0-4999-b5c1-bcacf47b3b46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13d2638f-85b6-4175-a4ab-e49e3b9ee332",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9bb4a46-57e9-41ed-be1e-822bc4874390"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "718cf2e2-3410-4d42-86f3-42d1993522de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "641f86d8-eda5-4115-becb-7ff24b549842"
            }
          }
        ]
      },
      {
        "id": "4509428b-0e57-4ec9-8848-205c65556d6a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19e63b6d-2b94-476e-915b-59e8a3e62149",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb5bf22d-b1be-494e-a403-4ad9ce5ea851",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "975a14cf-3d3f-47d4-8041-f830861e4520",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca5e681-c755-44e3-8828-0b074f4af850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0d1ae9-4e15-4aee-8047-5547260bc53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eab325-feed-4665-bfc7-36dad0a23c0e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29138816-77e7-4597-a349-e4f964f2eac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b26c822-2087-4f9b-a262-dfbc6627edcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310b3f56-dcff-44e4-b00f-261ab0b1bf18",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dc7732-908c-4be8-ad65-34c26dabe75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f04d23-0a4d-4fc8-b24c-43c865ed597b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25610d1-d032-4868-9d61-2da19eb2bed4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27da4c-0114-4af7-868e-de7ecb8c3771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3309111a-1542-4656-8ace-5ef45bc441cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab6d8c2-be06-4360-9a5f-504d3bec112b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf4fbe-be50-4d77-869f-f15b582838c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450cbf2d-8173-454c-818a-d6daafb4beb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0315b1b5-f357-4b55-a8e2-29ef1f6d309c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9dc1bd-79cf-4a7e-a591-b7ac35160b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8310834-aafd-4bfe-a16b-c8681620847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a1ce5b-ca60-4179-927e-de3976d72790",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a212ab0-cea9-4689-a84e-25ce7f7fdd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ae2b3e-f7bb-47d1-b62b-5967b4fa1421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049deea-df55-4946-a4d1-f6633465723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d9448a-4b20-48e8-84a4-088c78ae0956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136cfadf-7d45-4857-a61b-b89d95c67673",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae2176f-ae24-4a89-ba1b-5cfe19588359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cc2f45-a242-4c34-bdaa-1665d94120f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11aeac-0158-4121-ba36-2c3f9a47d13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d8688e-4552-4557-8c58-c00539cd71f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d7b9d-6841-4109-886b-0e2d66f187de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd41405-dfb0-44e4-a09f-5bbbfd69c184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf8d6f3c-36a2-4c8c-a4b6-7ed192f3e989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16db97-b778-47eb-a7d4-6767434749e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449fdd07-ef9d-4528-b24a-3f471aebf36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeddac18-9f5b-4701-b2a5-ab43b6b81cbb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f0cea6-88d8-4f1e-b454-3bb641009267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2663055-61f6-47c7-9746-1f58487b9f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5bfe3e-c7d5-4d5c-a4c6-340569405d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5838894e-7aa8-4c9a-a74d-9dc7ccad6c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d25d237-ec45-4a48-bb07-aeb6356a2990",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930c5bac-10b4-4e02-af3f-a265e1169199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc76d4e4-b659-4216-8759-e95e4a114279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e17326e-4542-4151-9aa8-821acb2ee13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74461cdf-ac15-4797-acb3-3f483c38f071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f350aff-18b2-46f2-ac0a-9721ec1f4c30",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328fe43b-754a-426b-be1d-edfc0c76baf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28aa44a5-f378-4719-9dfe-2574f2de2b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff7cb3-37f7-4375-9539-b4a0e4e37086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4798bb-bc5a-49cb-ad4c-0ade7f2a84bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2834f47f-32a4-4f5e-8af1-d2b7a7a5328f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a7f845-02c7-46d5-885d-0309c1a2403c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8859ccdd-16de-4875-b4be-8e1b108a9651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a39db8b-f18d-4003-80b6-fed98a977188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dd35e7-183a-4d78-85b2-c72bb9f0e3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657546b5-0b33-4f39-b21d-07fea2366086",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a83440-a947-4cc8-ad7b-cbcce9c5b960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e8c243-d846-4612-8b95-338b97a28116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ac0675-d47c-429a-8b1f-d40edf02095c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287ac480-dad0-476f-ba03-4567d81df263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e99e4dd-0fab-401d-b040-dd69a947371a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4ef301-ccc4-4330-848c-17e2d7bfae38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb4d24e-691a-4d20-8a35-b63ddfd349ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcb6b16-33e8-4675-9061-c5de66bafde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeb6ff4-33b3-4b1d-a691-a4b8726e933a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc3aba-cf9d-4d64-83d2-83ad027910f8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9891d0d-3255-4fb4-86a1-e785d3d7033c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87ad621-1aea-4fa3-abd1-5ba36bd048d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e1cc3-7dc8-4a65-b4db-f4c5b45b3581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2899af-c877-4c90-a131-1f3184c0e092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088eb581-0762-4904-a15b-6466bebedfc6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b697cbc-bb4d-4368-9659-1f8cdae367be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504529e5-7c31-418d-a532-523c52144c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4f96c6-900d-4f54-83c2-6653e096f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f454f9-8063-463d-b010-ebbe0f642d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcba7d3-f667-498e-bdfa-b81dcc397f00",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578d537-826e-4a2e-96d3-627094ce0f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c4949b-199d-4fbe-96ee-685efc0a4317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c0f509-a659-40ca-b9fe-316e9dac805b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fc66d8-c122-4d71-aa8a-9efe86044ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e03c0-8832-405e-98ed-50a865aed645",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395c92ee-34b7-4174-9db2-e8eae70af73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05f89c0-ebd5-4928-9d6b-80f989dc71f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d31fc0-1e0c-40db-a924-a46c84933571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c4ad26-ae53-4aea-94fc-1b886cb53da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a74b427-a0a1-41b2-bb03-05f900ee4b00",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861c0406-98e0-4373-90de-884e73feb467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c304ae5d-204c-4a9c-9b90-cdbc48090c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc563aa9-493a-434c-b990-7c267e0d68ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d478d7-f1b5-403d-9fcd-8c7104eec7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b6aae-8c8a-4c65-93f6-0833d9f3f57c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148c41e1-ae32-40f9-aabb-b2b419f73782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b5b09f-7339-4237-8a24-a1511876268c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa96e145-dd04-479e-94de-7a7a9d25a23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62332d03-2dab-4fd0-a01f-bb701183f16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c640fe2a-acfb-468c-8b58-f0733a78a944",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e037a8a6-d6da-465d-9426-67be7ff1bddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902e3b6a-0336-4de0-824e-a55a132f0f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5994a7eb-baa5-4acb-a3e7-91ef7ca1f84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fee3cf5-b875-4305-84fa-5787aa818baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162ddead-1fa9-4bce-8184-635365ceae4e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e19b5c9-5ae6-407a-b2e5-9809f34fb3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98888354-82fe-44a7-ae6b-0018f784070c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77093f3-f3e0-4aa1-8351-297eddd24e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e790d8d8-051f-41af-92ae-a8a99fcbea83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1607edc-7da7-447e-970b-f7efa105af9b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77077651-a744-455f-a5aa-bb24d81ed66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068e0b33-8e78-4ada-837d-fb9e93721cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59734b18-3bb4-4fa3-8d4b-c48aa2903143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792a1482-21f3-4d08-8520-057d286dab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad10c84-d648-49bc-976b-68eb4bf70d41",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0063bfa2-7a05-49a6-89b9-bd2424637dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4290da75-71b4-4ee2-8ddd-a45d87922461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b2928-9a34-4581-9ec4-54910b743dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f776342d-8d6c-43de-8714-04847f937459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e84b43-6cda-4710-aa1f-b69ac0102bec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df276c32-1147-450e-a44b-217b3ccd2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e42593-bad4-49f6-bb8e-200f40b27d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc53a50-400b-4ff3-ab1a-22051d037161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d01d8e3-ceb5-4447-a67a-6e4d8b060965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0e2c86-1da1-48f1-adce-413a6b1a45a2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544ee663-58e8-4227-82af-55ac93f231cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8234a8-f852-4745-8b0d-45b94893961c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e04ab-7ddd-4b95-ae35-f6769f3bc8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25402caa-5fc8-40c9-b6d8-4ec0bdc2046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e68011d-dcc4-4d91-896d-3bc7f616e4f6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461f60f5-a6ef-4c2b-8a4b-5e68263ac21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605002d7-f036-4844-9e3c-5648ce6803f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c822dd9-936a-4571-9400-23368cc8ece7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eb14e3-ea68-47fe-8550-9c8931518693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf898b2-7f5c-43f6-95e3-c30e8c92449d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1896500a-1b0b-4794-a19e-f97ce5526f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ce2efc-1844-47f5-a38b-0b0cc1de785c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef44a18a-19d2-4dc6-8d7a-81afd43ddb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7aa1f-cae3-4b0e-9c0a-ceb114da1c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cffecca-5f36-48d0-98fd-a88c6bd2d1c5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e9e37-b2d2-465c-bb13-34583348235d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fa8300-ffb3-4e5c-a594-106bc4af53f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991159da-8719-4afe-9275-3b16db93208f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114dae6d-e623-4928-a766-03022556c68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28596232-0033-4517-8144-fd439c9c6d7c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf326e-75c3-4b9d-bdd4-ef40d2d788e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a350ba2-b2b2-45cf-90cc-dd21499cd2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4445ae00-70ea-4e22-bf54-7f8323938494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63881121-682c-4c14-a36b-a31620bbea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a6392-e3e9-4dfd-94d6-8add7cba2d40",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14548275-46e9-4715-8d56-cdeac5712a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef55b116-3984-4790-8d1a-e809556fbda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a293be8-2ba0-4582-8121-f77b3b7b2462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33388657-3f0c-46f1-93ff-0f2199c4458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d688a2-7337-4461-aca9-c1c992ca9565",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fe7210-e20d-442e-a507-ebb36d81ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc3f2391-6388-4298-8a12-c463b0e7b84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8115ff67-5f4c-4438-82a4-3284f339e75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806fc907-b173-4760-b688-00678ac5f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d2868a-d7be-4950-9375-192ffacb58a4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd607d6-0060-4bd8-ba65-e573db5e1704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b458f4a1-3786-4251-a025-a59829bf88bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe02fa57-0e20-4d62-b65a-3e8e3b410f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b54dc9-fd17-4d6b-9775-9ed0d576a4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1217eb66-8511-494e-830d-c6d06a96fb77",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ceb08-b571-495f-ae7c-93f8af7bf630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bbb352-87d7-4456-91c2-8396a8b45617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db34f4c-0df6-4185-8497-1e5f6bdb946e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93113692-f3e5-451e-8aee-2a0682e22476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2adf379-b7a7-4952-b052-e2a1a93ac6f1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c3e7c8-8d20-4c26-8fdf-ec8edf2351c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4248e988-24fd-4cb5-81e8-4ec146c71773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eefdc9-31f5-420c-b651-9f57f0a4c91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87112df6-1d72-4b99-923e-968fb40147f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20998c-c52c-40b9-8474-22eac3c271dc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3f875e-9b89-4295-ab43-5be7c4a91acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a5af18-c5f4-4f66-9268-40b5fd6e5195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3322b0cb-8a94-4cbf-98f0-bc64e56e4476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4667f9a6-9ae7-46e9-b378-d2faad41dc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6277c29c-6abb-441f-9017-192ea377f3c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0047a368-f323-4268-b090-14ea48fc1ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ae8d64-7608-4758-8511-4989f4253fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59be71bc-8b61-431d-b640-c92c5d6e8910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559d3b52-fdbd-4d6c-881d-6b39e6fda0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decaeb57-1a4a-4020-aa54-42ab8c51f0e9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2127704d-507d-4636-901b-a3c2ceabe247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ca66aa-6011-4af5-adb8-cd03143033e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75acd66e-16f4-42d1-a8c7-49b2a2240121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c380f30f-9eb1-4ba6-815d-d44e056f0f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713c7b63-188e-468f-b974-514db5b93df1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa10b2e1-bc10-476b-8821-c97f5fbfed61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338be8f1-ad3d-40db-ba34-09095f31f39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca67dd-2bd0-486d-9345-f70dbd1d66af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a3aea6-e71a-498c-9e96-de6c315e9738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3dc820-59ba-41c5-927a-bc12ee0bf820",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e59da6b-cae8-4d5f-a7e1-34e4d9c66c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a99c864-0f9c-4580-a324-3da7dcce2535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ffd205-749f-4a55-8f4d-058ee8b814d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5633def4-7eaa-496d-bd61-82289ef6ebdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3699516d-1c59-46d8-8aa1-e1140635032d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932b1016-3f7f-4b12-9ded-eaabc9aa36e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd674688-8108-4e2e-b6bd-3ba58b3a8ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a59a9-3322-47cc-8392-aba90c07d92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043230fd-99b3-4d6c-8f85-f0a3778f3f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21889b1a-2997-4f2d-9f0b-35da59f87e6c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecef2b57-b2e1-4eef-a9fe-07dacd28663f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5962d371-cf01-4418-b59d-6a2e391e64c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904429eb-405e-4db3-b3a6-310d0c63eee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37339e5-5d00-43ac-a141-b96a84aad9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbbfd43-6081-4b66-8af5-51933ce67f52",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346025c3-3dd8-4c98-a3ec-2d2dfb471656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f272bb1-79b8-4312-90a9-7fa98fb57f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09473c1b-e4ac-499a-9e0b-a4ccc4078cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d8868e-cb4d-449a-bd98-00cd0e6a02b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de51e1-fd6f-4b38-8d6d-09f72037b9b6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7592240e-042b-403e-a8b5-95238ed158b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae56a20-8d3d-42ed-a535-b6200be40a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e32fcc4-ae15-42d5-85cd-657f7f226bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35288437-5afe-48a9-9361-d0567ad7fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c803e2b1-fcd8-4a7f-9a42-426049c55755",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09693d9-10fe-4ad2-8392-8d5d54dd93f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b9b376-9fac-453b-ae94-cab085d3f0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dfa2d6-89c2-4858-8684-3d0bd909e0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1474159d-2cb6-4756-ba3a-7985a396c8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf31403-a58d-430b-810d-11bdc9ea6899",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99ccb3d-bce5-407e-ba20-a2da22b26b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a01c36-6b7c-4d49-bffb-573b64cdda9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd1a2c5-e558-4306-9d76-4ef0680540f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9926e09-2531-4030-8a9d-c280caf7c979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5d1336-c8e4-4a00-b795-637814455b7e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cfa0fb-a6b2-4cbe-a41e-d173ab7eb160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e715b504-9d7a-4411-b79c-a61522cac28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334d5e66-2a70-42e6-adda-a5288471894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3be82a-e96c-4d0c-b027-8b744ed23aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81de5838-4852-4045-ad1f-0f777f53a095",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3dd48-4ab2-4666-98b3-aea597760f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4441b655-1675-46d0-bb0f-7b6186c243c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac18e630-57da-4224-98b9-046769ba8fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a86373-99e2-45ea-a9ea-6e9f9e158d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0894fb-f4ae-455d-a1b6-5bf71037657a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0316e5b-b6c4-4d99-bb9c-917299049863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea294114-db90-42b8-a70e-a7aa1cb9762a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a13c1c-f8c9-430b-be0a-3ef515c4ccad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0277d6d-38ce-4faf-9050-dff6e1d509bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a075434f-7618-4df2-a61a-07dc10b7eee3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3c298-d837-4ef5-b279-c0c03e0a6a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df7340e-0227-4b57-be73-865f45d57848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62b6492-3a8f-48f5-908f-cca1bfdf549b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6e94e2-5e7c-4f47-9a97-30069e01f2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c631821-a7d4-4a63-b7f5-730124fb78a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e04e3-1d93-4066-8daa-eb03d4f8ad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f189cad8-e1da-4d83-8052-f85d4bd3f770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0d0734-5f5d-4a76-b042-ce4582697b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad19435-0000-41d4-830e-ae0dd0094349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be0d2ef-76d1-48fe-836a-8c47419d0be4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586a52bc-d8e6-4892-aa70-50b3f6691950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1ebbec-4a7e-4eaa-b4a7-d94dc60e548b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e88d6-db5e-4d0a-a24b-55a1c3c2dd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30787bb3-5d3b-46ec-8625-695e09ff4543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972cccad-7199-4c0b-8a30-220f18c02113",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0accd9-bfbe-4620-82ed-67cf4768ffda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a1b0de-16d6-4872-8487-d423ca511909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf143da0-a6a2-40c7-83f6-826e1c8e85ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf34fb5c-29af-40d5-aa33-097e43d5e34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febc5d26-ba0d-49db-981f-20b987ef8d10",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e607864a-ce92-4e33-b777-6129cc979f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e51cec-bc45-44a0-9133-e2a83805c8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39218184-896b-4793-a85a-82eb8c35e6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5119d40-0141-4d43-808d-edc0aa224d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40865440-1dba-415d-92e2-185a5072138d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96f007-b355-40fd-ad0b-3c2646904177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6ec8ff-4842-4cb0-b54c-acedac565fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6024bb-1acf-4433-9f20-9c0af9895132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd12043-442c-407b-823e-d73052c000c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c056d6c0-49e0-45f3-b7d0-af9532ec1f20",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eab230d-a777-4063-bdc6-5bcf4835d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572f557c-35d8-42ad-8bad-2f9679978282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563a90c5-8307-47c9-98e7-816f1bb85c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81d0217-464c-4c77-a893-e8057ca3255b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b877ac8e-a35d-4a10-9ae1-017cb48cafdb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427f451a-24db-46db-bfa7-78608e63f9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366915d5-c018-4df1-b901-171ea09733f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e804f18e-75ab-468f-8b79-06473afb61d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c036f04e-2a8e-450e-b553-665ca2d2d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27f966b-00cd-46e0-8642-e376085d4857",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d1e44-6489-498b-acc8-3503daf2548b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c2646b-c136-4226-b981-43e92cd8faf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bef65-c55c-4708-bd3b-2a754a850f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99894686-3527-4882-ba14-0e200324138d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ce402d-792c-4ee8-9abe-6ebf9e02b123",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b25d053-28f1-408f-a99f-9db85217b97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51fc437-37e1-42b9-a2ca-77c29619c36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a923b20-82e4-4597-8730-b918688be28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c2ca08-0351-48b7-906f-0060c1ecb561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d287016f-253f-4c34-b63d-993f0298d83e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1012ce4-1a68-4130-b311-f17e86de954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf74cee-c960-4f73-ae27-250237ee8bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f477138-72e7-4d9c-8ed0-79d9ba578f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb4ca2b-eabb-424d-846f-c358d00cb71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d437b3-2212-462f-851a-43b645ff5e7c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4147a5-f92c-44c4-88eb-82a1d6ef6970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f43af33-792d-4cbe-b09b-3eb47c9a42e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c048e291-d8a7-4957-8b97-702ea262c6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77729f2b-9f2e-460a-b346-8d7a130fed70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66098ecb-c38c-4e05-9379-bac1f5f4fad0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be14661-ed7f-4434-a58f-9fd985df0647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3d524f-abe4-44e0-9576-5b58c52f576f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f7d26f-c526-420b-9077-16f1ab8530d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d7ec9f-951f-41a8-901b-4365568f7926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a45a4a-0cfa-4e0a-8845-e088f8e4daac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2177d7e2-9dd7-47bf-8fe8-1d7188413575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d19ff0e-4409-458a-95af-35422fb264fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c10e62-21af-4cc0-b709-7c902c8bdec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7828aa37-482c-4af0-a764-a66d32315aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cacb726-0f25-4f1a-a171-2a82ee694b0a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58110d09-5c27-44d7-9040-98394c553fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3326dc73-4036-46e4-be4f-bfb24e7fa6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ccb03b-16e0-4b32-862d-732e07f08872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7874e4a-30c5-4c00-931a-c6320152f68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebbcd6e-2918-4e01-bd0f-55e72e9d4568",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf1112-6471-4396-8a8a-a0b29f7da76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "275e1f48-5519-45fd-826c-81ff78c8b6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d22fbe8-1c77-472e-9996-9c7181eef47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced12ec7-de32-48ba-a3c5-ac6d1e22e55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dc3919-f8de-422e-95d7-0ca4375c567d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f23c9ca-8031-443a-b05b-d429584e26fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d30e92b-a387-4e80-a880-3e30f6d3fc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864e389a-4286-4e42-ae6b-426e383c3cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6021b6f-90bf-4fee-a3a2-17d3de40c657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2915b182-ab3a-4e57-bd76-d8a145e8495d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8705cb4b-d39f-4566-819e-33e002bd9b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c2bfcd-3672-4cab-8943-786fa24d1acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa2e89e-bdd2-468b-83f4-b5c9217a1073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fc1025-b01b-4eea-8b6c-5b226d709f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8f2f80-e3b1-4b75-a826-189acfc52b83",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0711e9-085a-43ea-9919-266861f84df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125c95a1-fe01-442d-8823-0cd5ac87fff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c5edc-94d3-4ea2-a7b5-ed3c027f0923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fcce9a-4f80-4217-9025-4469021b1f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a511611d-5ce0-4f68-aa50-7111ae942220",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea03152-9a1e-44cf-a50b-4cb32f91507a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5f55f6-d7bc-4974-922d-5e2bca02030c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4b150d-b7dc-43d2-bfb7-be9f39da739d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb17bf-496f-4b7a-96e8-54b727a767c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5285caf-83f6-4ec9-b550-feb26413e250",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438dc9b3-f3b5-4cde-8352-f0d540188cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7d482f-87c8-4304-971a-a579a3cf9e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6514c634-8a57-4adc-a4cd-e4b2b74501c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc03d21f-ca8b-496f-a306-501a5a0d7820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b97c89-1975-4bbd-aabd-0fb7dd64ab8a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f1597f-c5ed-4acf-92a7-8947ccd4136f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93327d95-4943-4dc1-9037-175b1136ba96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26115dc-7089-4938-8bac-e16066e50d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f44c12f-11c1-4408-a3a6-8e09acb10a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450b202-c5d9-4c5b-8dbc-f1d7c4f54b05",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d419794d-ce80-43c8-982d-c8d5a1696cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a090fb5-63bf-45db-9ce3-8e71ea3c999c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34e7e5-c3a2-4cd3-a834-2844bbf42036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20378d13-1d27-4093-ab27-044e872072da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b1a6f4-81d2-435c-ad67-a77572bbdb5b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d96c99-423b-49c3-83b9-3ca35d827ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0b082f-ebd0-4718-be63-6d9998123ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563ae6fc-119a-44ee-b114-3b647133a659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2e9e72-8fb8-4735-9a74-6ba2c11698a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306dd58f-ccc5-46b2-b570-753235163d40",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838df179-aad2-49e9-b197-5619807c5037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8e44b7-ae54-42c4-9878-28312e5fb5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b79c042-f6ae-4965-9c1b-0c02ffdf2104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe831a9-760c-4f72-9b20-215a8039eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4709a5-adf7-43b7-b4ae-e8040ede627a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73bfef1-b840-43e3-8490-3bbf8157a707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb0af051-db84-4e01-93bf-dc7cdae26992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9dbb1b-0230-4510-bedd-dd42ca60a0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b41141-2ebe-4027-ac5e-175ddf23a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9a5c02-30a7-43bf-8ab8-a96824eaad91",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140fc5c7-163f-445e-ac11-e994e1736d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d62d5c-d0b5-4831-837a-c74806d90363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e16d92-a6da-4e94-87d3-2c7d43381733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d0b082-65c2-44ce-8a0f-3560cac97c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b1df6a-ad36-4a76-9333-13a86d6ff53a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f53d13-11f0-4dca-8baa-6081ca17ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e85d2c-9f55-4f13-9064-9884de8feb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c46acb-5490-4bbf-94e4-20aa32726e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccf92ee-8ab9-4839-98c4-24958f89dc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe738694-8474-4f50-abdc-713797545198",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1bfc9-b29a-4884-8e44-e0de16920c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b306088f-86ce-46c1-a21c-1ef5eab82dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffddbd23-9a43-4b70-a846-3985d5244334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca5e721-383e-4a42-8561-8570873653c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2766c454-6017-4038-844a-6df3b03dcb5a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb08f88-e2ab-4718-97cb-6091f1692289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f182cfac-dde0-4903-b7d3-2f9871c215f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a0a38-3380-42be-a162-1e19ef7f4c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f800a97-e9ea-401a-a60b-7fb77ee2f75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c78b0-c6e9-43a2-89ef-97cb4bd11dec",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1587cc11-b09b-4974-bed2-d18684200b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8126bfb5-a6ca-4119-afd6-32f50c9e1d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0a0f8-b612-41c7-88af-a8c01f43467a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1997007-d400-41b4-b8b1-76bc20419c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea936f13-e99f-45c6-84ce-eed33d174600",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d83b4-f8de-44b1-991c-ed69843f4be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d6df8d-f347-4098-9828-ab1a8ce93248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd455f0-92b6-482f-ab09-bffeb94101fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0fdf2-87f1-46fd-b229-46fecec0409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f7f57e-7f09-4b76-afcd-4836bc7a1ee1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc5f2c9-35ae-49c8-a04e-37c52b9e929c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd135fd-cd0f-4008-9ac2-13a1058f3b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a35d22-45e4-4883-bb8d-828a50862db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b73f472-2b20-4067-93fe-80aeb8675702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e58687-40c7-4da5-92a0-59440b34d557",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f3e608-0cea-4eb3-a56e-8ed3ab1018ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd767426-d416-4ccc-94c1-f68853c7b0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8f8fb6-5bdb-4332-8877-18183d4913ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9369eff6-b3d9-4e4c-8c3d-ceee3cfe985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd955659-8e4a-4155-b99f-109138240d43",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396774f3-d2cc-41bc-a25a-f9cc36e9f007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e50727-eacb-40d5-8f0d-7ba97dd408e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c5865b-3190-4d73-b880-b10b3ebd8051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c60107-d448-4320-b6ca-1f0b443dcafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80bc80c-94af-4c07-8e25-3b0339ddac64",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53922ebe-eabb-4e8a-bf9c-7ce0a52d779d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5cb2d2-a819-4147-ae24-6a2788243c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e967e3-d2f6-486d-bad2-1b0c59f1d6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751d38fb-7b94-4e81-8231-284170529e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531a525d-9ea1-4d93-a93f-00f05b747afc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa5bec7-a982-4333-8e92-1615612cb001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461bb38c-ae8f-460f-916c-2c5cf5aa8368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb7025-9d68-420f-ac0e-2e11ae1eda8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad68619-9823-47e0-87b0-6247d8c280a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bda697-8e5b-49dd-81e2-2fa9278242ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08431d35-b66d-4eb4-b4e7-4d6991e75bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79af362e-27a0-4422-b9cf-4b7b9be811eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a52717-ef14-47cd-a13b-ffdcee7d3aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd46896-92e8-408d-ba26-a367d87a9832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd101a5-4c09-4ae9-bbb2-047f1751b53a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b0a0e2-3bf5-472b-a300-46f678e28235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a26b717-5189-4e66-b395-bc266a44505c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd605a0-f082-41e9-bbe9-e9db5259430b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fafefb-feb8-4da6-a3d5-0339dfa7e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49257dae-b971-42e0-ae51-95500c683610",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c9502-95dd-43d9-9bef-2d1f337b9b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5733c16-b350-49f2-86ab-28197bba8d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00507af-adfa-44ce-9dcb-b42dbc05ad54",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955e36f5-df04-4b82-8af1-02b248a57963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b27cc1f-8e74-4939-bd85-d6f64e4adbd9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfe06d9-4a9f-47b7-9c1f-1053ebcae3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b191de0d-5e1b-42cc-a092-7cb3cceda73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c382429c-5830-4691-a103-5987cd6f9254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e06e518-8de7-41d5-8d0f-336ca7cfb35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f7c8d-6fa1-4853-963c-6cf41a41f171",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0431578b-33d4-4a5e-b617-7c1a5f888ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9341168-91d4-4275-8092-bb9a54f90ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9060630-f68a-4692-8245-865bee8a7165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8920466b-ef9b-47b2-ab6d-2a1c0b1a256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11d1ba-089e-4523-91a1-93597ce188a8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350e417-ccd1-46ff-9b20-9b848af9257a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d8712f-853a-4946-8819-47ba8c3c56ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4f7496-6551-4134-bcdc-aca96b45c18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf795001-072d-433e-b95c-6eb880bed6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c81c53-3a59-432f-aea6-71e3aa13af38",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac65c7e9-f30b-4067-8ee0-7d861759750d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5c24c6-dd63-4dc5-8a12-1cc54a46f279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72e6e0a-5b0d-4d70-b62a-6e4652441b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c213b9d-dfb8-4756-8e5e-206c22fa13e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21b3d0e-5288-41dd-80bb-53135efd265d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd979ab-6260-4a15-b5fe-50f97b055e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f44f01-574c-4040-83e1-17e45d35f5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9eae27-dbf9-4bf0-8a29-3a4276c40a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679f19c2-afdc-4675-930a-bb45d1139bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebde7032-a01c-4a1f-aef8-0baca5de7209",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f0cbe-1f0d-46c7-adcb-aad30c8d8741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05cc22c4-1883-4f10-aad3-46675b0bb7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1573bf3d-668e-4c3f-aff9-bdb45354535a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb261f31-95c0-4a99-b618-d5480b8aa7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db57c51-b2b4-48b5-ab90-01d77181dc17",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2fdb6-7c0d-4c5e-94cf-cccfd1242e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548bebe8-82fb-4ffa-aee1-5e74dc8ecabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb80d8e8-2aa2-4c61-9518-07bf50a22dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5249bdbc-fbe6-4d6c-a2ff-67ce37152a48"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7be35fc-70fa-473f-bf6c-44746305c499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1fe4379-e262-4c30-88b2-eb36cceae4cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "624c126c-f2a9-4aec-bc97-474ffd5bd9a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65b3274b-f5ea-434f-a5f9-7e25be366dbd"
                    }
                  }
                ]
              },
              {
                "id": "ef2e2cc1-c585-4c12-b9ea-cc921628b4b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47e2d5c3-03ff-47f6-9bc6-8c152395d4d2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862a36a0-5d1b-41df-9298-fc2a9d8bebfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0f9ca65c-539c-4f2b-8ba9-fdca3cd3dc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f23b380-3c1c-422c-8a75-1037092ab73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2a79726-97c1-45b7-9418-e12d79c259da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f3a9372-aeeb-46f5-8796-239e46b113bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ece7001b-3d70-4a8b-a00f-0882d4886f60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0649c54d-10eb-4d80-815c-dd87f873ae07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d22bb6e-0cb6-4ed0-9daf-f5ade4406e5b"
                    }
                  }
                ]
              },
              {
                "id": "9e338be1-f007-4987-8b15-95727fbdb98e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3edeeea7-9c82-4168-8e3a-f1113371c15e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733a5c50-37c8-4b6a-9333-ed80a43b59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd7eeed2-4421-4a2a-92ea-fb4bb6c3a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38195642-a1db-4172-ac6d-2850e20cc65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8011a7ca-b3fd-4d93-89c3-539382388ac6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5127ae18-6cba-4fc2-ba14-3d3b25c27283",
            "name": "Positive Testing",
            "item": [
              {
                "id": "296cf77e-bf57-472b-8c71-e5ac20a04b2e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89d54b47-49ed-4d05-9995-fdcfc43ddd4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "64e74503-abef-4061-913b-8a195ad781e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7383cd2-5868-43ff-b022-ff9c4fdd6874",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb48c114-dc11-4123-ac85-01559e25597f"
                    }
                  }
                ]
              },
              {
                "id": "00b6086c-b616-4bb7-aec0-a578beb01953",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01c72021-0148-4289-a273-7e6c6c243eda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e346eea-20b6-4cf0-b872-fa0c1c2c438f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d597c572-1a11-4827-8f9e-91aa26ab8d14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90ad1980-e862-4b73-9562-76bb25961dcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8e2b1c7-efbf-43f0-b67b-fe4595bae1d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4745a163-dcd3-457d-a255-62d29a71264e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5575676c-d4ab-4465-8762-c50e578ac758",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c169d2-d273-49b1-bce4-2737a5c530c2"
            }
          }
        ]
      },
      {
        "id": "3492b1ae-4a0b-42de-b922-31ffce73b29b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ae8ab8c4-7d53-4042-9305-4dc7a84a0bcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e368932b-6f67-4865-a9eb-f691f09685c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc6de4c8-267c-48f3-87d8-cf9b959d670f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314bfc91-06a3-4633-baac-19e94940038a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c453b1c-6e3b-4851-8e34-cf12f1c2ce51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa73741-013c-4c6b-9292-46d323da25fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8853a20f-4315-4127-9341-5fd814cc2c75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aef6e50d-c823-4d4f-a8b8-a1ec5c6f58bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1938e7b-48a7-4117-83c0-f68262c19857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0956f1b0-34dd-4fd7-8190-c40d5647d12c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7fae614-59af-4519-b068-c951c5183c90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9828f5b5-0d43-4fcb-8768-0f6361325c34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b7f8e08-05c0-4099-99ac-19b8b33366b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6868fd26-4501-482b-8738-ffb02d2d3dd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3adc7064-6c52-4294-b594-e9f864e89476"
            }
          }
        ]
      },
      {
        "id": "e1c3e879-bf6d-4cbc-8d05-c6a02db1ac37",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7453f049-921a-4f8b-af73-c5eb0e7efbba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f88d6a3-2a70-42bc-aab3-f662cea1f3e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5a295c9-0125-4001-a914-a4599c6fd622",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a905e94-6f9b-40af-99a9-187fbd4a5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd9363d-f17d-4348-9a8e-1e5180a060b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935677bc-afeb-4139-b825-671266ec5427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1316f4e6-44b8-43e3-be25-3cad11c3fde9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c693d2f-f744-45ea-9f32-d0db04a38fe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3af5a4f3-5b8c-4c0e-bea3-c63e521ee1c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93892709-c7b9-4b58-8cd3-e7770406b986",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc2aded2-901c-481b-90e4-cc6a7ada487f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65f9b0d5-afd4-4542-8ffa-20fdfef9b8a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7919a64-daab-4ff9-82d6-77693dc1f5f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f27b2bc-648a-42f7-a7c3-5d48c5a66d5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b181a501-6d1b-4866-8cd1-2601681090fc"
            }
          }
        ]
      },
      {
        "id": "3c2d9e34-e3df-4663-872a-c5f6e44d1f57",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "35a4836b-b5ef-4aee-a104-35788cd25189",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dc63720-27dc-4fbf-8b7e-abca5a2df51d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1735f04c-6e35-44af-96dc-97893e1ec829",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bca303-b0c1-4a58-9dea-13dab195daf8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bfc8857-fe98-47a7-a33e-6ec8ac1c5579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f885de9-7fa8-4cb5-986d-1785276125a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82e41579-f61c-4317-affc-97ad6fed01e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92961afa-514b-4841-8bb8-be8a29ef0678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27be9ff4-9599-4e25-8468-78ef576b98b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0424a01-8d4f-40d9-b210-167e467eed5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f96f1aa4-7876-4338-bbe4-eaf40d43d91f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6690e1f-82b8-455a-b78a-7a62487a5d0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f757b32-58de-4e41-b95c-b10bd0eaa138"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d80025cc-70dc-4b45-a4a8-3ac4f25f8078",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82f34c85-9013-4b96-8f52-2f727c372a5c"
            }
          }
        ]
      },
      {
        "id": "d4c06822-a1a0-46f9-a243-fe3735254aa0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5ac4682-a5e8-450e-ab33-4dc2447aeb44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d30f1f22-1495-4556-9cf0-9d9c4d17403d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "357ed984-8f20-4724-93ee-c09c7780ef35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9085801-1a65-46cb-948f-c8ee90d8a2aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fedfb47a-5c25-4426-87e4-d38c1db1cc24",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.4960317460317,
      "responseMin": 6,
      "responseMax": 9097,
      "responseSd": 609.9764339581095,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712536567076,
      "completed": 1712536608530
    },
    "executions": [
      {
        "id": "242cf227-d9e2-47d3-9f7e-21639eedd414",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96a05040-3d13-40c6-b90b-e56f03903ab0",
          "httpRequestId": "fc518d06-f8f8-4962-bcff-15628b19a7e5"
        },
        "item": {
          "id": "242cf227-d9e2-47d3-9f7e-21639eedd414",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec91545b-9350-4595-be02-626bbe7bac40",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "c7647827-2534-49aa-8996-a9300ee95eb6",
        "cursor": {
          "ref": "f86aba9d-5186-4f05-a814-96249283bc56",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d16afb10-4a63-473a-b7d9-59b83528edbc"
        },
        "item": {
          "id": "c7647827-2534-49aa-8996-a9300ee95eb6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "529928ab-88ac-47bf-903c-c83fed6e9846",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b44c9392-c07b-4d70-97c8-bffbb7c2ed78",
        "cursor": {
          "ref": "63d576c0-33cd-47da-9316-60b984d7eee4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "160541b7-4146-4b05-b103-157545eb3863"
        },
        "item": {
          "id": "b44c9392-c07b-4d70-97c8-bffbb7c2ed78",
          "name": "did_json"
        },
        "response": {
          "id": "f712d6e0-71f2-4a19-bbed-16669d0a3dca",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19967073-d053-48b2-bb91-bad6cbdb9e6b",
        "cursor": {
          "ref": "e29b2c0b-d113-4afe-a273-b67739462494",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba7a9211-9f27-4cc3-b628-fa76680bf7da"
        },
        "item": {
          "id": "19967073-d053-48b2-bb91-bad6cbdb9e6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0cda07f-3460-4b7e-8074-681ca3f5e689",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1093,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19967073-d053-48b2-bb91-bad6cbdb9e6b",
        "cursor": {
          "ref": "e29b2c0b-d113-4afe-a273-b67739462494",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba7a9211-9f27-4cc3-b628-fa76680bf7da"
        },
        "item": {
          "id": "19967073-d053-48b2-bb91-bad6cbdb9e6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0cda07f-3460-4b7e-8074-681ca3f5e689",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1093,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c96119-2a9a-4e17-9a78-fbfca5154e8a",
        "cursor": {
          "ref": "0a1170ea-aa70-4002-86b5-dfcf3d104a52",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2714728d-72c0-4bec-97fd-2ebc3423b2fa"
        },
        "item": {
          "id": "10c96119-2a9a-4e17-9a78-fbfca5154e8a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da5389f2-a235-46b6-b456-f953fa8a569c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384851f0-c205-444d-af06-7354e3a88192",
        "cursor": {
          "ref": "277b4173-d897-429a-a23f-9a7ba99cf955",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3d6b8452-bdc4-43a3-8ad2-fc3507ca37be"
        },
        "item": {
          "id": "384851f0-c205-444d-af06-7354e3a88192",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "00d44771-a229-46f3-9162-6a3528daa6e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997a6796-d0a5-4205-8e97-fd4e2116af0f",
        "cursor": {
          "ref": "39919b71-7f69-4a54-88e1-05b038fe5a61",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "17dd659a-40c8-453f-831c-b3dae77bf544"
        },
        "item": {
          "id": "997a6796-d0a5-4205-8e97-fd4e2116af0f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5772a9fb-55fd-47dd-81f2-e142bb338b15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6a38d5-b669-4f0f-95c8-1d7008ab6c83",
        "cursor": {
          "ref": "0cd7acd5-dfb7-4e9c-b508-be541d4ed063",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b3382b3-d87f-4cf3-bc02-8c4f964ba732"
        },
        "item": {
          "id": "1f6a38d5-b669-4f0f-95c8-1d7008ab6c83",
          "name": "identifiers"
        },
        "response": {
          "id": "7d64bf0d-a009-445e-a1aa-0ec13f40dfbd",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c510a6e-9689-4eee-a7a8-b6e7d644f192",
        "cursor": {
          "ref": "33a608f9-7ab1-4f69-a89e-b770e9006aea",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f92081c1-4b4d-4044-94d8-cc7363b8c6f5"
        },
        "item": {
          "id": "7c510a6e-9689-4eee-a7a8-b6e7d644f192",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c45d57e5-59fd-43ef-8694-9df82224343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1fca0e-c7c7-436d-9e19-b7e05c2fb877",
        "cursor": {
          "ref": "a3ed1907-e961-44f8-b312-1b1e7597a5ed",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "be9361ae-09ce-4b26-b471-3019279a207b"
        },
        "item": {
          "id": "fa1fca0e-c7c7-436d-9e19-b7e05c2fb877",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78cc1a6f-350a-4b4e-a5d2-bfb4502c05f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3460f20-c9bd-4846-97a5-91cc1840c443",
        "cursor": {
          "ref": "1ce46050-b186-4ca4-a46c-ab231e5cc7ef",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7f0256ef-2546-4114-89d2-f60f390ce553"
        },
        "item": {
          "id": "f3460f20-c9bd-4846-97a5-91cc1840c443",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c5f4b7ff-e980-495e-ab2f-b79e2fd3602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c315ffb4-c93c-4560-87bb-3343593e4d98",
        "cursor": {
          "ref": "91e2698c-918e-4caa-b922-e145d22a8255",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa7365dc-cddd-4931-b66b-f9e3b7b079c9"
        },
        "item": {
          "id": "c315ffb4-c93c-4560-87bb-3343593e4d98",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f284456a-daed-4ad4-8e69-ba1cf09590e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f58edfb-7b91-48b9-b6ac-6aaa5789c3d7",
        "cursor": {
          "ref": "2a0e262f-efd2-4d24-acc3-3bea51ae2437",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2fe9f116-8c4f-4c9a-a61d-bb098122e9e1"
        },
        "item": {
          "id": "1f58edfb-7b91-48b9-b6ac-6aaa5789c3d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a1fb200e-01fd-4e45-865f-feab6cb8ebef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb532ac9-4f5b-42f0-9ebc-14c2d3472f65",
        "cursor": {
          "ref": "bfbd48e7-9ce9-4af1-a014-5c478bdc3da0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "15db243e-36f7-4249-9753-c3e323c245f8"
        },
        "item": {
          "id": "cb532ac9-4f5b-42f0-9ebc-14c2d3472f65",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "836ed1e5-cea4-47ee-9afe-deec1f1a9b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f00d1-f559-4823-b39c-b40e2b31564f",
        "cursor": {
          "ref": "46093437-0181-4621-97b1-bc8b608d5a20",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0973ac5a-a901-42b6-b366-1dfa31d4f076"
        },
        "item": {
          "id": "ef4f00d1-f559-4823-b39c-b40e2b31564f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5fafd19f-d3de-4f52-830b-dd40b1f2b568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa3a337-1858-41aa-8627-813f03ab7768",
        "cursor": {
          "ref": "acabb4db-3be0-4ab4-8659-573ae2278558",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1495f966-3740-4cd1-9fff-5a273088e5b5"
        },
        "item": {
          "id": "bfa3a337-1858-41aa-8627-813f03ab7768",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fcdbbba4-2bea-4623-8e37-d215d4c4cc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec9ca16-85e9-4342-a598-da237ff0b27b",
        "cursor": {
          "ref": "3b6c2049-f84f-4870-9832-f30279813792",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76350d16-4a94-47fb-a3ce-7f467960e3b7"
        },
        "item": {
          "id": "0ec9ca16-85e9-4342-a598-da237ff0b27b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2fd9f3ae-437a-4435-baca-cbc17ca22b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622ff8d8-f67a-4ef3-be5a-27fd87ebea96",
        "cursor": {
          "ref": "ad35c4a8-bb71-4b52-b8bc-f3ef759a32c3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8d9228d5-226e-48b7-9bfc-9bb51606d93d"
        },
        "item": {
          "id": "622ff8d8-f67a-4ef3-be5a-27fd87ebea96",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e9cc5745-da8d-4741-8e84-26c65cc728f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1916486-39b5-4399-bdd4-82ddf2dcb2fe",
        "cursor": {
          "ref": "d032ea3e-dca6-4de7-8b7c-e2569f07bb68",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "239fb8f2-cf30-4d6b-8d0b-b1b24be15dad"
        },
        "item": {
          "id": "c1916486-39b5-4399-bdd4-82ddf2dcb2fe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6a8b21cd-fa3f-4e80-9196-390506b73d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7decc1-29b0-4745-93f5-b8a943ced19b",
        "cursor": {
          "ref": "4cec4fe2-a271-4335-9d5a-e22a82f4b6d4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7ce04cb5-73c5-451b-9a50-d8e901a3f421"
        },
        "item": {
          "id": "6d7decc1-29b0-4745-93f5-b8a943ced19b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ee8ef80b-52fc-4e93-b5bc-265ece95d5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e078a109-4c1f-4d01-83e6-7609f95a1289",
        "cursor": {
          "ref": "36afa87e-ed46-4d8d-bf1e-27799b23931e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4eb8670c-23a9-48ca-967d-28fd215c89d1"
        },
        "item": {
          "id": "e078a109-4c1f-4d01-83e6-7609f95a1289",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "efb59f49-da1b-429f-b021-4d23018aeff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe510c-6747-4a0c-aea9-931024ad2aa3",
        "cursor": {
          "ref": "5ea9806b-2119-420a-b647-afcc8b0313d4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67f04071-ba6c-4b68-a8a7-7641cac4d569"
        },
        "item": {
          "id": "ccbe510c-6747-4a0c-aea9-931024ad2aa3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eef68feb-88d1-418c-aaba-b0b43089e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b21d4c-20c9-4482-b909-41b1310dc123",
        "cursor": {
          "ref": "c9f0e71f-54cd-40ec-b5f2-4254ebd64c24",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "01a05d64-e5ac-4d54-9172-62fec57c1b29"
        },
        "item": {
          "id": "78b21d4c-20c9-4482-b909-41b1310dc123",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fbb260c4-d2d4-464a-bc74-ea433ac96753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4855347-78e3-4502-bd3e-0156c7cd6dd0",
        "cursor": {
          "ref": "082d1974-5459-492d-9640-d9721b933cc4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "73209785-90d1-4596-b96d-213fe5b342fa"
        },
        "item": {
          "id": "b4855347-78e3-4502-bd3e-0156c7cd6dd0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2f1888c1-c836-4f95-a93f-dab346c5bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada9a1c7-f5da-40cb-b271-208c77dce05b",
        "cursor": {
          "ref": "7141d6fc-a90f-4be8-b18e-d85a52e19c61",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e2c03836-3919-4eee-be44-15d660da70b5"
        },
        "item": {
          "id": "ada9a1c7-f5da-40cb-b271-208c77dce05b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f6b09411-eac5-4195-b732-9a0868df640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839aefa8-4171-4514-a888-c5f9fd377c1c",
        "cursor": {
          "ref": "b7350dde-22fc-4156-8962-e64edf9cf60e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "95efef91-9fee-49cb-b3db-08ba65631ed4"
        },
        "item": {
          "id": "839aefa8-4171-4514-a888-c5f9fd377c1c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "48fbd756-6498-4a79-a224-0ceb973551c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b75ee9-32df-4beb-a206-cffc1afdf324",
        "cursor": {
          "ref": "0e1ca242-210c-4287-b0be-142c248c351a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "09979f42-c7b1-4968-8e28-cb999fad2c6b"
        },
        "item": {
          "id": "e2b75ee9-32df-4beb-a206-cffc1afdf324",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "443a0b10-636d-4f1c-9bf0-908864f1b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e89cfe-86d6-46e0-b4c2-553a71edf167",
        "cursor": {
          "ref": "8756859e-0ebf-4ca7-bdbb-745157213930",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "966cfe8c-8503-4fb3-ab7d-5c0be290e8bc"
        },
        "item": {
          "id": "02e89cfe-86d6-46e0-b4c2-553a71edf167",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d76153f0-842e-4d72-8a26-4e748bb12bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9b9566-824b-4469-a63b-af673ae82aff",
        "cursor": {
          "ref": "3b985ba3-d272-4f41-adc1-c98d0b2a4c27",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dac252d4-3bd5-4141-8f02-c4b4e6bada3f"
        },
        "item": {
          "id": "9b9b9566-824b-4469-a63b-af673ae82aff",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d6be1303-2c09-45cf-b933-8a45dd889465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fad309d-bfc1-4fd8-965d-690953474ee3",
        "cursor": {
          "ref": "16a22bb5-c2d8-4836-8f9f-ff26d0b50794",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f8f02c3d-9aca-4f38-ad29-441016fc00b8"
        },
        "item": {
          "id": "0fad309d-bfc1-4fd8-965d-690953474ee3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "291e8544-f6a9-420b-9cc1-c68aa83f7b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056df636-c41d-4b45-9c68-f423c829231c",
        "cursor": {
          "ref": "6aebd59c-6132-4588-a75f-93e450171f9a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2c66da67-aaaf-460d-adaa-72362301440b"
        },
        "item": {
          "id": "056df636-c41d-4b45-9c68-f423c829231c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6cdb5b13-04ad-4dc8-a390-b051cac9e0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b16232-3b80-4cb9-8a9e-db128a552c58",
        "cursor": {
          "ref": "603baa75-2a1c-40b5-bff1-44e056235a48",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "57fa6c9a-2b63-4aed-8368-16233346fbbb"
        },
        "item": {
          "id": "78b16232-3b80-4cb9-8a9e-db128a552c58",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "91d7480d-de8e-4664-8b96-8a1567792005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed4b825-987a-409d-ac5c-c4358c66f8dc",
        "cursor": {
          "ref": "53f4e84c-23aa-4c7c-9533-d0fbfc76345b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1709b834-d565-4fbb-aae7-a74ede5fd1f7"
        },
        "item": {
          "id": "5ed4b825-987a-409d-ac5c-c4358c66f8dc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a46ce98c-f474-4a00-b89d-67250edfa3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547ce11d-5eb9-4575-915f-c863dcaea104",
        "cursor": {
          "ref": "3c87b7aa-127c-4153-9ec4-69c7e1c9e0ca",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b9d56f7d-a74d-4bc7-bb03-b97aca8078b2"
        },
        "item": {
          "id": "547ce11d-5eb9-4575-915f-c863dcaea104",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "68c31972-b871-40a8-9bc5-8675daff53f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3070cc-0f41-4c67-9651-0bce581fd489",
        "cursor": {
          "ref": "3ebe55b4-87f2-4338-9566-ab61b7cb4e8d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2dae2462-371e-473f-88d0-2872d066a5b5"
        },
        "item": {
          "id": "7d3070cc-0f41-4c67-9651-0bce581fd489",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ed5b628-4eaa-477d-a208-1d8456be750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35df0fb-b9ca-409a-8cf9-b6c9bc97b46a",
        "cursor": {
          "ref": "bba5436b-622e-4ca7-97a2-dff02522a2e7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1be1b95f-70fe-45a2-bc37-9a44dfe6b22a"
        },
        "item": {
          "id": "f35df0fb-b9ca-409a-8cf9-b6c9bc97b46a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e16a8a5f-0048-4dbc-bb07-ddda24cc4678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96aa3e7-cb7d-4aab-9ba8-c50dc6611ec7",
        "cursor": {
          "ref": "51d5b7df-68f1-4ee4-9586-8e074c3cedf6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef1474a2-df0e-46d8-b77e-94ab79e15b9b"
        },
        "item": {
          "id": "d96aa3e7-cb7d-4aab-9ba8-c50dc6611ec7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf50c7a6-7661-43a9-88df-c1d71489c87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8459e66-b29d-4543-ab4d-d041e3d859c8",
        "cursor": {
          "ref": "b70016ec-1fb5-46c9-b2d2-836de366cd63",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1240fa6f-239a-40c8-9f97-8c52ce1c5ed5"
        },
        "item": {
          "id": "f8459e66-b29d-4543-ab4d-d041e3d859c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e2f9b0b3-7de6-4c6f-bbd6-ffb7ab123bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9df46f-4971-4994-9f6f-f430bbb89015",
        "cursor": {
          "ref": "e64247f2-4ee9-40a3-9c50-8b9b242f3c0a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8044c601-68f9-4e34-b243-3a04a2d2644a"
        },
        "item": {
          "id": "1f9df46f-4971-4994-9f6f-f430bbb89015",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "eaa41854-9636-4e75-9448-caa5bfd9fa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84472e17-d7c5-4f40-ac97-08f7005821d6",
        "cursor": {
          "ref": "475a6ffc-0051-4966-8f54-bac421e8bb3c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3f1b81a7-fcdf-4154-ad14-e296472e0667"
        },
        "item": {
          "id": "84472e17-d7c5-4f40-ac97-08f7005821d6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ed66166b-2ad4-4f78-af09-07bfbe376d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca97436-5491-4f0b-a38d-956214b90270",
        "cursor": {
          "ref": "24ad51a8-ef54-4615-aaa5-38c3db8d9152",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "118252d2-b1c0-4f56-8750-11df83dd4186"
        },
        "item": {
          "id": "8ca97436-5491-4f0b-a38d-956214b90270",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9c923a5f-b0a4-444a-b7b6-3411cafe0214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db662b-0e0a-443d-a24d-3b26b1f1099e",
        "cursor": {
          "ref": "700268a6-b669-4184-80e8-78f58f979866",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9700eb72-8608-43a4-940f-ca2ce100242e"
        },
        "item": {
          "id": "66db662b-0e0a-443d-a24d-3b26b1f1099e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1de3ccd6-7727-45ad-b721-72a5d7952434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980dfbe8-a370-4c99-b87d-d8a548d27e46",
        "cursor": {
          "ref": "9bead79b-410a-4360-bdff-7a12f81b5082",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ae880026-e624-4a6e-930d-008b8a04d975"
        },
        "item": {
          "id": "980dfbe8-a370-4c99-b87d-d8a548d27e46",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6f35ce52-18a6-4cf9-8879-c2c18728cdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7b78b-b05a-4fa7-aefe-68fb0b36f3da",
        "cursor": {
          "ref": "0aafda1d-38d3-4c52-834b-cb7a988a37cd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1c0b7833-e990-4d5f-a843-1044f978be86"
        },
        "item": {
          "id": "c6e7b78b-b05a-4fa7-aefe-68fb0b36f3da",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7b0efe72-359a-4875-946c-dcf4338fde40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbf53ee-bf28-40b9-a405-16748f51f952",
        "cursor": {
          "ref": "a533090f-d55d-4621-9c89-e956103ec7c6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5105872d-264d-4c4a-9c74-6e3e6fa4fa20"
        },
        "item": {
          "id": "2dbf53ee-bf28-40b9-a405-16748f51f952",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a3814f33-de33-4f48-91a4-2d6f672f463f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7f79ea-76a4-4349-a70d-a842a61d9f70",
        "cursor": {
          "ref": "f08134e0-147d-402a-bee2-979cd3d7ccd1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e4560791-b8b5-4e31-8d70-bda3409ba79f"
        },
        "item": {
          "id": "1a7f79ea-76a4-4349-a70d-a842a61d9f70",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2613464f-5947-448b-94b7-0f1cd1cbac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ead6903-d40f-4995-9947-484d042fa84d",
        "cursor": {
          "ref": "32475bb2-6385-438c-848e-dc7bbc5c853e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8dfc45c6-598b-40b1-ae6e-b27c7a347126"
        },
        "item": {
          "id": "1ead6903-d40f-4995-9947-484d042fa84d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bfe9f1f8-5224-49ef-920b-ee92bfffee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1b5b00-7061-4338-b756-971c69cd63c4",
        "cursor": {
          "ref": "49687dec-8a47-4afd-8ba4-d7c1ed6caa13",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e70efeba-7e6a-4210-a8af-07f70556bf33"
        },
        "item": {
          "id": "0d1b5b00-7061-4338-b756-971c69cd63c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3c2cc8f5-e845-4f87-8a7e-4eff9b6f9dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e541e10-2860-4b64-8cb9-011f1a99687b",
        "cursor": {
          "ref": "ef0acaa5-9faf-4b3a-bc17-e811066e71c1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c3a5701e-2415-46f5-90fb-97b8003f9f24"
        },
        "item": {
          "id": "0e541e10-2860-4b64-8cb9-011f1a99687b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5ea23fbc-05d5-46ad-ba45-4ce99dcfb5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8006c684-46bc-44ef-a8a8-2d7287db0c1d",
        "cursor": {
          "ref": "ea06dfb0-db49-4148-b2de-3c84db14f0c7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b66aa7e8-d68a-4e5b-807e-6283abb1ff0e"
        },
        "item": {
          "id": "8006c684-46bc-44ef-a8a8-2d7287db0c1d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8912ffcf-84a4-443e-b6e1-dcca96135995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e59f053-386b-44ad-937f-6b7969b4e1d3",
        "cursor": {
          "ref": "3f71d713-dc00-41eb-b6d8-8d706d3a188b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8e8ff8a0-74cb-4a8b-915f-a98f162dfb55"
        },
        "item": {
          "id": "9e59f053-386b-44ad-937f-6b7969b4e1d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3b1debd8-a01f-4268-95a2-1de7cae87023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b0fabe-1f43-4dda-89ec-aee544cdc9db",
        "cursor": {
          "ref": "d8b67b99-1020-4575-aa24-84ddd3e08983",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca33d9b5-9c5e-4b85-9319-d8482b0a8b71"
        },
        "item": {
          "id": "21b0fabe-1f43-4dda-89ec-aee544cdc9db",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cedc3a14-541f-470c-a992-013ec4fbd13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508cc96d-873d-4b21-977b-efb2905fd871",
        "cursor": {
          "ref": "27fee3a4-075d-4609-ae2a-79ba76527ccc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ea00c6ed-4632-4b73-b61a-4b137a014744"
        },
        "item": {
          "id": "508cc96d-873d-4b21-977b-efb2905fd871",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70215fdb-d615-4d54-acb0-c884d5d77b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f24ab0-38ea-408b-926c-951026168d6f",
        "cursor": {
          "ref": "591ed486-4d88-4370-9390-66483375ceb5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6fed849b-c7f7-4f76-8d55-364f667a2eec"
        },
        "item": {
          "id": "b4f24ab0-38ea-408b-926c-951026168d6f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4a12a0ef-03fb-4a06-ac71-a8a88e33a30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c11f31-318a-4f48-8f06-c07f7b2ec56f",
        "cursor": {
          "ref": "bd5db765-5ccc-49ef-b5f6-302a940cf892",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a11e69e0-83d5-4257-8fa3-7e5bf02be3e0"
        },
        "item": {
          "id": "76c11f31-318a-4f48-8f06-c07f7b2ec56f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d5d7cdfb-7858-495e-ad85-4bc7d4a51331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39ef34b-7d62-4234-9592-58ddf73be93c",
        "cursor": {
          "ref": "76045af8-7b28-4d3d-ab42-8a499aeab2d4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b0f8a1fe-60c2-4c6c-a2eb-02050eed3bb4"
        },
        "item": {
          "id": "c39ef34b-7d62-4234-9592-58ddf73be93c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc16b456-d857-4ca9-8907-fcb255dc5e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ed72e-5520-4a24-8238-0d9f90d14d33",
        "cursor": {
          "ref": "2f1ee936-90fc-41dd-9675-3af5d90051ee",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c034b2ca-d9e9-47be-825b-d1a1944b62f8"
        },
        "item": {
          "id": "e73ed72e-5520-4a24-8238-0d9f90d14d33",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bee724cc-6926-4501-a409-b48602f1e2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f08a9bb-e6a6-4ecc-a2a2-4f5b726dc9c1",
        "cursor": {
          "ref": "efb804a3-5ea9-4226-9a68-73ba055f0d5d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ca96b1a-27b3-42f4-ac5c-00efa1ac7ff9"
        },
        "item": {
          "id": "5f08a9bb-e6a6-4ecc-a2a2-4f5b726dc9c1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "075ccf31-e386-4597-9f7a-7423ee5e2834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9a1e65-0f50-4f66-9e7b-fe17fb334087",
        "cursor": {
          "ref": "7ed6d611-6f17-4ae5-be7f-7c1cd54db02d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f194ef5-7dbd-468e-8e18-92d37a97653c"
        },
        "item": {
          "id": "fb9a1e65-0f50-4f66-9e7b-fe17fb334087",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "979965dc-5d0b-4456-a576-9d42b5da6786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f6aa6-639f-4679-8c90-10b7fcb930fb",
        "cursor": {
          "ref": "8672fac9-ccd4-4b5f-a380-e5246b0a82f2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8bb4e164-146d-48e0-b214-09ee2f3cfc5c"
        },
        "item": {
          "id": "d64f6aa6-639f-4679-8c90-10b7fcb930fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "986b48d2-bf87-453d-9b3e-d3988d40bad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d4852-3eca-4450-b6bc-810c460f9202",
        "cursor": {
          "ref": "a8c1ac70-8f59-49de-a741-27910fe1a2f9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a657ec13-711a-4312-95c4-1fcc9aea450b"
        },
        "item": {
          "id": "b59d4852-3eca-4450-b6bc-810c460f9202",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "48909e42-db36-41c1-9c00-321135c6c663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c39a3c-a845-44f9-aa10-34b8a74b18c7",
        "cursor": {
          "ref": "b384e0c0-bebc-4348-a46c-299cfc49132e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7ba010c7-0005-4719-8855-7284389e98cf"
        },
        "item": {
          "id": "74c39a3c-a845-44f9-aa10-34b8a74b18c7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bde083c6-41c6-4290-b842-7060d66ae1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569e2e40-fcd1-498b-b70b-0d8d573c75e2",
        "cursor": {
          "ref": "96b3d979-a4b3-4490-a739-a46546c8b762",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a4dfc61e-f2f2-4b29-9673-e05909c220bf"
        },
        "item": {
          "id": "569e2e40-fcd1-498b-b70b-0d8d573c75e2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cdc329b4-9c7a-421f-b404-1efb1e3be11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f77f5f-16ab-49af-b2f5-8c6243900ac2",
        "cursor": {
          "ref": "7c757c83-d7f8-4202-8a9f-bc3119047526",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8034284e-b264-4399-92fd-16c8e2a15149"
        },
        "item": {
          "id": "68f77f5f-16ab-49af-b2f5-8c6243900ac2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a486070-6528-4ad4-a249-683a288dee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be892ae-6296-4842-9c8b-4d7dcfcf1c3c",
        "cursor": {
          "ref": "6709087e-f9e4-4c14-99b7-5ab919220684",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff3aa0be-d83b-4703-829d-4e4b644a1f8d"
        },
        "item": {
          "id": "9be892ae-6296-4842-9c8b-4d7dcfcf1c3c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "deb7cc01-1cfe-489b-afe4-fdf8570ba87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd7ebd6-691f-4ab5-a147-7775467cfa86",
        "cursor": {
          "ref": "40ecb239-3de7-41c7-81a3-d755b13c29e7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9b0fca7c-f4a1-4088-88ef-156053acc7f3"
        },
        "item": {
          "id": "ddd7ebd6-691f-4ab5-a147-7775467cfa86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4b687440-2c57-48e7-920f-be40c1d84f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0323f7f2-506f-4d0c-a783-18f0f1ed1b02",
        "cursor": {
          "ref": "d05daa4e-b763-4bed-86e9-8d33585de17f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9bd000bb-54f6-4473-904e-2a274c1b33f6"
        },
        "item": {
          "id": "0323f7f2-506f-4d0c-a783-18f0f1ed1b02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cdbcf80e-e953-4920-b295-d584d973df19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d340ada-2d7e-4b51-9e9b-b126ae34e991",
        "cursor": {
          "ref": "29de54ad-fce9-42f9-83a2-b0a38181cde8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3750be32-39b8-4bbe-b908-32bead29ccd9"
        },
        "item": {
          "id": "2d340ada-2d7e-4b51-9e9b-b126ae34e991",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9efbe7b3-05e1-4e8b-b939-e6ca6b9aeaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dc211a-8ab4-48ba-ac18-a8de0b9ffdc5",
        "cursor": {
          "ref": "d23a9cad-ffd3-415d-aa98-ed028c3c296c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1756e8e3-e996-482d-a78f-8125e30a8ef8"
        },
        "item": {
          "id": "13dc211a-8ab4-48ba-ac18-a8de0b9ffdc5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a4736962-cd61-4c23-8961-88e3af6ae7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8009bb1-a01d-4451-86e5-e74861c0708f",
        "cursor": {
          "ref": "f638cc25-9d52-465e-80c6-8e8498afd7f6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "15d558f4-aff2-4d1f-8825-4bf7d2f31c03"
        },
        "item": {
          "id": "b8009bb1-a01d-4451-86e5-e74861c0708f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e2ac17ef-bc0c-47ec-a4e4-d98d7cb8d3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd0800e-0ffe-4064-94f2-022fdf4b33a3",
        "cursor": {
          "ref": "ecf5aab2-b204-47f7-bed7-3d27eb1c3b60",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b73e136b-9426-4f82-81d7-3a4014302588"
        },
        "item": {
          "id": "6bd0800e-0ffe-4064-94f2-022fdf4b33a3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f09b23cd-e321-44d6-ab11-0966a8426cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d022358-8df7-4c0a-a57a-43b338f1a378",
        "cursor": {
          "ref": "3548d80c-8161-40a4-9f51-a7120815d142",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1b7622a-bb53-42e4-b1e8-8c676ac212d9"
        },
        "item": {
          "id": "0d022358-8df7-4c0a-a57a-43b338f1a378",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e431de48-8f3a-4182-ba3b-bb74a4e1b2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e907aa-c7e1-452b-9f80-b4c2967e4ed8",
        "cursor": {
          "ref": "b1e24e51-1d5a-4de2-acc5-71938cb1bef5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2a5272dc-bd9f-431c-be25-6aefba8e5761"
        },
        "item": {
          "id": "43e907aa-c7e1-452b-9f80-b4c2967e4ed8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "03220f4f-b4f8-41da-947e-350c803a3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caab247e-f107-4d8a-8620-68101e50726c",
        "cursor": {
          "ref": "1e446d94-8db5-4e36-98e9-851631beed5e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "89e09014-ffee-433b-b8f3-f251634a185a"
        },
        "item": {
          "id": "caab247e-f107-4d8a-8620-68101e50726c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "186df9b3-6f79-46f0-9e88-2646700c3670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b6379-058b-44cc-9b04-d359394292b0",
        "cursor": {
          "ref": "49f9ac9c-670f-4e05-b5f6-690c7a630acc",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1ce6e6fd-bd71-4642-8404-d1954e195fa3"
        },
        "item": {
          "id": "700b6379-058b-44cc-9b04-d359394292b0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cfa234c0-5bba-4dd8-9bfe-13f589058ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92544df4-66b4-482b-9682-8b113729a5dc",
        "cursor": {
          "ref": "25604ee4-0bcb-4071-856c-76598bdf38fd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "25b76df7-710b-46b1-8bc2-e4635403888f"
        },
        "item": {
          "id": "92544df4-66b4-482b-9682-8b113729a5dc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1be12ccf-9f29-48d5-a72e-985ab50f2d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed22c1e-2cca-46ec-a305-52a78d16f544",
        "cursor": {
          "ref": "70c1fc7e-387f-4c62-9666-c93d059d1f02",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5e31bdaa-834d-410a-b716-7473b58b7764"
        },
        "item": {
          "id": "aed22c1e-2cca-46ec-a305-52a78d16f544",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fcc9b6a3-6d0f-4cd1-a748-415e2c79131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052425c8-bc63-444a-8644-919dbeb5ac97",
        "cursor": {
          "ref": "dac670b2-f945-43a2-b977-b7ca6af97899",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2a6c46c-8960-4720-b035-efb364465ae7"
        },
        "item": {
          "id": "052425c8-bc63-444a-8644-919dbeb5ac97",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "284f0666-e09c-44d7-bd39-b483a0a9807e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13383fe6-33af-4c28-82e5-e8111bd376de",
        "cursor": {
          "ref": "733565ad-a1f6-4a01-89a2-7652346363dc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "987a5a45-e6bd-472e-811a-05c86c846bd9"
        },
        "item": {
          "id": "13383fe6-33af-4c28-82e5-e8111bd376de",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c5401eba-d160-4325-a57e-ef51242aac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a956d2-812d-4357-ad61-06fde86559ae",
        "cursor": {
          "ref": "2506e89c-4430-47ce-9ebf-05413288f5ff",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3adedd39-4814-49f0-ad19-bfbe06ee890a"
        },
        "item": {
          "id": "29a956d2-812d-4357-ad61-06fde86559ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b2a62fdd-fd3f-4aa9-b76d-a02b9142ac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957eb415-dcd4-45ab-be6f-3fab19f071a2",
        "cursor": {
          "ref": "8aee5a14-735f-44d1-904d-c14a1560131c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da61eb9d-8150-4c9a-beea-416238ef4b33"
        },
        "item": {
          "id": "957eb415-dcd4-45ab-be6f-3fab19f071a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3d08c265-6a53-4ce0-93ea-f89ea9bd3ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5bde42-1510-4d40-bc7a-abc9530480af",
        "cursor": {
          "ref": "2eea0d6b-2231-489c-9c7c-11ff9a17d6cd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66b32851-615d-4c96-9953-3b06de4a7557"
        },
        "item": {
          "id": "6c5bde42-1510-4d40-bc7a-abc9530480af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a6f1fd3-1651-4040-88a6-1b2f0b89a33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff93ff1-8441-4fd0-ba70-2b6c9647c6c2",
        "cursor": {
          "ref": "0f4f7bc9-0bc9-4630-bd6a-d2725b8315b1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eb067441-8cfc-480b-bfdf-834290d1033b"
        },
        "item": {
          "id": "dff93ff1-8441-4fd0-ba70-2b6c9647c6c2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "325a5f62-f083-43eb-823d-fe3aa6f86bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e5ce6b-25cd-44b5-b534-e111c17e59ab",
        "cursor": {
          "ref": "8955b039-74c9-43d2-9c3c-d1c9d26a2618",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4ee35079-be44-43a5-8cf1-eff2046ba853"
        },
        "item": {
          "id": "f8e5ce6b-25cd-44b5-b534-e111c17e59ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f7959a9-bde9-461a-b2ae-c7edaada49f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df23fe-86da-4e30-bcb3-a5ebe14485c3",
        "cursor": {
          "ref": "9da112d4-1ab2-4557-bad4-8b68be01a40d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aae3661b-54b1-4c6e-9879-f1a013da4b81"
        },
        "item": {
          "id": "31df23fe-86da-4e30-bcb3-a5ebe14485c3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a5a35dda-a7af-43ce-a978-f526df0c0e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d368b98b-24fa-4f24-a5d7-75dc085c21a4",
        "cursor": {
          "ref": "01f8f624-3c78-4452-b940-108dcf28f565",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6e8f95c5-1d54-45c1-b3e3-898614ebd423"
        },
        "item": {
          "id": "d368b98b-24fa-4f24-a5d7-75dc085c21a4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "da9f442b-b669-4fc3-9033-c8dff987babe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24b1ec1-fb92-4204-9bec-2a75caac96cc",
        "cursor": {
          "ref": "4fdede6c-e28c-4e20-bbed-9d96da38e236",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4ee6ad0e-eb36-4e0a-a84f-b9594e021891"
        },
        "item": {
          "id": "a24b1ec1-fb92-4204-9bec-2a75caac96cc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "86e6445c-2177-4bef-97f4-acc2b5a7aa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051726db-87d4-4a12-8cb3-67a61ea9bc18",
        "cursor": {
          "ref": "5c1b91b4-e26a-49b7-9a0f-57bc7a88b530",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77c9aba9-ede8-47e7-863c-c11140341b69"
        },
        "item": {
          "id": "051726db-87d4-4a12-8cb3-67a61ea9bc18",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f8891aee-7c82-4a2b-9621-b2e503591760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83bc73f-db24-47d4-92f6-0695c01defc3",
        "cursor": {
          "ref": "b8d8432f-c047-4326-97c9-a031bcb66cc4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6b321441-8ff9-4e1a-8982-952b69bd76ab"
        },
        "item": {
          "id": "f83bc73f-db24-47d4-92f6-0695c01defc3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "416752a3-b2a0-4287-b34b-942096a8a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892b3708-3ffc-4012-9d04-72048aade18d",
        "cursor": {
          "ref": "a4a6be9d-f97f-45e7-b4af-af12b316393e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c00d806b-cc37-4d95-afcf-cdc0caa7b856"
        },
        "item": {
          "id": "892b3708-3ffc-4012-9d04-72048aade18d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e3bbe93b-1d0f-4bc2-842c-1f479b33eee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b215d610-19bc-4201-a6e2-b2a413fb6a69",
        "cursor": {
          "ref": "ce1d1bd8-9d56-4565-b0b5-53d37c174a53",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ed60533b-281d-44af-b337-2ff352d00f84"
        },
        "item": {
          "id": "b215d610-19bc-4201-a6e2-b2a413fb6a69",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8ab09b6e-0f63-4f82-b588-9f9a9c3e8af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ca9c27-f96d-43eb-b368-bf9cbfd2fd68",
        "cursor": {
          "ref": "4c558629-97dc-4447-858b-6f64439c6408",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e0ff82e3-a63d-4e63-b21b-acf6b3d70834"
        },
        "item": {
          "id": "81ca9c27-f96d-43eb-b368-bf9cbfd2fd68",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bdd980c7-8ea5-4d43-ad75-171d339cff5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13e257f-fbda-4dfc-9d2d-abd6dd34d78b",
        "cursor": {
          "ref": "94a63dc5-b087-4c9b-a807-9e18638ec4b4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8904a584-7f01-4a4a-9514-ac948fbf49d2"
        },
        "item": {
          "id": "e13e257f-fbda-4dfc-9d2d-abd6dd34d78b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "67546a11-5482-4fb1-b50d-da1a5cc1c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e36d23b-83ca-43eb-bddc-d7870443c4dd",
        "cursor": {
          "ref": "da95ebb6-66e9-4325-9b72-8447747c93f9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6c9437f8-ff81-4f22-8dc8-1e413b3caa7e"
        },
        "item": {
          "id": "3e36d23b-83ca-43eb-bddc-d7870443c4dd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "265432ee-e37b-4ebd-9ab7-c6de985a008b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e0afa5-0eaf-4e48-a343-879abf7b3621",
        "cursor": {
          "ref": "67a6005f-058a-4b47-96a2-1f0246a483b5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e2443b6a-5a9f-4a98-bfb3-4bc0a91acbf1"
        },
        "item": {
          "id": "69e0afa5-0eaf-4e48-a343-879abf7b3621",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2728d156-ddfe-470e-927d-4be168d39525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d12f72-63ee-4117-9b78-8359325a6de1",
        "cursor": {
          "ref": "45bdbe4b-3a00-455b-a310-555973494ae6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5ce99a1b-262f-4932-90a2-81ddfcaa47ce"
        },
        "item": {
          "id": "48d12f72-63ee-4117-9b78-8359325a6de1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9feca49a-36fa-473a-bb7e-4c1b71a7899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b11b5a-dee7-43df-83da-ac242ab8863b",
        "cursor": {
          "ref": "b2cbedef-a843-430c-b705-6f8501dc333c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "210ba64b-f9f9-4b68-9ae7-0d9bb4a6b739"
        },
        "item": {
          "id": "96b11b5a-dee7-43df-83da-ac242ab8863b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8d951ec5-be92-47f7-9ebc-f1b2d90f896e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ddf516-cc29-4464-be7c-e5219e5c7b74",
        "cursor": {
          "ref": "9a3f9a71-a28f-4034-a0cc-2bb592ac5c60",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "40f83734-d5a9-483a-87f7-b9af956fe1ed"
        },
        "item": {
          "id": "86ddf516-cc29-4464-be7c-e5219e5c7b74",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d6d02e76-cdcb-4205-b27b-b24b6ad1a53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa92fac-f786-4192-970c-e4302a0c5e94",
        "cursor": {
          "ref": "76657106-fff5-4a00-b99e-1293f7f3bbbe",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77b5e69f-c5d7-4325-bc10-a19fdca95c1e"
        },
        "item": {
          "id": "bfa92fac-f786-4192-970c-e4302a0c5e94",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7508a660-db50-4726-a0b2-aeb3a3e010cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a063e-a572-4cfd-bedb-7acdb8ebb231",
        "cursor": {
          "ref": "b25e5ffc-111b-44a7-b057-a91d80ef481b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e3f2d0e9-23a7-455a-b4a9-8038cf99dc74"
        },
        "item": {
          "id": "767a063e-a572-4cfd-bedb-7acdb8ebb231",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a75bdf6e-ecd9-4b3a-8c2f-f396bd28ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb937c9-3adf-46c2-9030-925df809c01f",
        "cursor": {
          "ref": "8acd07cf-8a9d-4040-bac0-aaa3028dd34d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bd0f3325-b204-42bc-a76b-ae525c9b4a32"
        },
        "item": {
          "id": "adb937c9-3adf-46c2-9030-925df809c01f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f6436f94-349d-4ae6-9491-e566784819d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495ef1d1-0580-42d3-bf0c-eeb215f56436",
        "cursor": {
          "ref": "a1fe1b2a-1d7f-4c9d-af34-0275ebf5ab03",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "923530dc-0308-48b8-9ee7-5ad5e7c8f5a1"
        },
        "item": {
          "id": "495ef1d1-0580-42d3-bf0c-eeb215f56436",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f8a842dc-7750-4342-b431-0919cfc7850d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "884264fb-10e9-4113-bf75-7d5a780a9bbf",
        "cursor": {
          "ref": "c651a3a8-b028-497a-b9bb-aa47fa78fe77",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f9528e05-d39c-4b17-aae2-2f7876d37df1"
        },
        "item": {
          "id": "884264fb-10e9-4113-bf75-7d5a780a9bbf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2c1befbc-01dc-4988-b2c8-1c770b4e55f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6ce37de0-ee7b-45b5-bf8f-ea9beaabb035",
        "cursor": {
          "ref": "a4863883-118c-4b00-9f1d-9c799b00c040",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d03d3b84-e141-4fd8-9277-7e91656fc4ba"
        },
        "item": {
          "id": "6ce37de0-ee7b-45b5-bf8f-ea9beaabb035",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "17acff52-690b-4a1b-bf8e-5bf6e7298e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b44e37e6-56ed-4841-8814-f50641fd20f6",
        "cursor": {
          "ref": "146e2163-324e-4a5a-aa89-409415ddc5cb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ae78894-711a-4797-be2f-fbc6d026b2c4"
        },
        "item": {
          "id": "b44e37e6-56ed-4841-8814-f50641fd20f6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "af6ab07a-2cc6-4ef0-9631-d2e348e0bbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d4f0debc-4640-4330-a252-9ab1c5167145",
        "cursor": {
          "ref": "cea97101-7101-4368-84ab-5d678e74045c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2410887a-7782-4ce6-aa07-d247a00bfcd1"
        },
        "item": {
          "id": "d4f0debc-4640-4330-a252-9ab1c5167145",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7a532183-0eda-45e8-9eb1-1b7d0e3ff027",
          "status": "Created",
          "code": 201,
          "responseTime": 9097,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc17f47-cde8-44c7-96b0-6c49467acd9e",
        "cursor": {
          "ref": "65c09529-b063-4a6f-8a72-61a08379e4aa",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8110100-60cb-4303-93da-20b1a08b3473"
        },
        "item": {
          "id": "9bc17f47-cde8-44c7-96b0-6c49467acd9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "12788ca1-6989-4c2f-b370-2679e6d4d04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c14ae38f-accc-430f-a6c2-6969a135324b",
        "cursor": {
          "ref": "d914166a-333a-420d-bb65-8b454d03bed5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c624efbe-7fd2-4339-87f3-c6832113a0b0"
        },
        "item": {
          "id": "c14ae38f-accc-430f-a6c2-6969a135324b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dc57d391-fd27-48d5-ad79-7e5a8c486f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2344dbec-7ee6-4fb8-b1dd-b5af61a8b21b",
        "cursor": {
          "ref": "8f1d69ae-a9de-482b-94f3-d17c46d0562d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7e20ba05-1934-412b-9677-41250f6a964a"
        },
        "item": {
          "id": "2344dbec-7ee6-4fb8-b1dd-b5af61a8b21b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5e48e5d7-a3bf-4f49-b6dc-ec67adaaa329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd81bad-b2d8-4f0d-a89e-3f3487686a7a",
        "cursor": {
          "ref": "ee33a728-a6fe-4315-9c52-2b322d3bfb62",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d62b5c3b-c4f6-45e6-95eb-b29deec85e5f"
        },
        "item": {
          "id": "4cd81bad-b2d8-4f0d-a89e-3f3487686a7a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1cb3c001-b1b0-4f01-84cd-5c6188b7e82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929b62a-3263-4724-b55c-65ba77516bc0",
        "cursor": {
          "ref": "58e01460-0adc-4f76-9be9-f87e0347e850",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7e7415d-382b-4e2e-920c-b9bc854ad827"
        },
        "item": {
          "id": "7929b62a-3263-4724-b55c-65ba77516bc0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb4fda6f-cb6b-49fb-8c04-cbcd95616d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ac8e4-3ee6-493b-8c3f-537ba68bc763",
        "cursor": {
          "ref": "cb4bd575-648c-4f2a-9a01-2afa135d77a3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9aed85e6-4457-487b-a90c-576386d8d0e8"
        },
        "item": {
          "id": "fc4ac8e4-3ee6-493b-8c3f-537ba68bc763",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ccd0c226-2330-43f7-a3f9-8a2921e668f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aefb2e6-a2fd-4687-a058-5ac8d0fc3b87",
        "cursor": {
          "ref": "d529fd7d-e62c-48e6-a50a-56fa4f6ee997",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f57500ff-d0ad-4a0b-ad92-c15b0459fcc3"
        },
        "item": {
          "id": "2aefb2e6-a2fd-4687-a058-5ac8d0fc3b87",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63c398d4-d3e3-4f9f-9371-2845f5d08779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f618bf5c-5bd5-4078-94f7-f264cdd2a4d3",
        "cursor": {
          "ref": "947bf6bb-9766-432e-9f1c-a0a1df27adcf",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e4ed2600-2eea-404e-bec1-873724524ba8"
        },
        "item": {
          "id": "f618bf5c-5bd5-4078-94f7-f264cdd2a4d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3c29d52c-1522-4f5f-8e7f-3add5568452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22cb33f-e4db-4bc4-8503-9fc4dbdcf7c5",
        "cursor": {
          "ref": "10d9caff-ad19-4fda-8f9b-42a84e9bbddc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ebbf816-2ee7-42ae-8510-f38decdfd48b"
        },
        "item": {
          "id": "c22cb33f-e4db-4bc4-8503-9fc4dbdcf7c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36ae7421-d3b4-4d80-9275-624b0bc7b349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeedd1a2-87b8-4d19-9e0a-77086605f1fe",
        "cursor": {
          "ref": "064aed2c-d9f1-4115-88d7-8a6fc544a58f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eb1f77b8-4b22-48dd-9760-2437208c26f3"
        },
        "item": {
          "id": "aeedd1a2-87b8-4d19-9e0a-77086605f1fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9be63bc4-6698-4105-9962-e6bd0b511b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37b14c1-21ab-44a8-8f20-5abedb42522f",
        "cursor": {
          "ref": "b17a6093-9306-4695-b943-161cfef02984",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9da974b9-ac23-49e7-806a-db77836a6e40"
        },
        "item": {
          "id": "a37b14c1-21ab-44a8-8f20-5abedb42522f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5b9185c7-349d-4015-b2b7-34acb703b88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abce7c1-aee4-4a13-8366-918b6391a445",
        "cursor": {
          "ref": "dd45f4c0-c554-4dd0-8446-fa162f06356c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "88dac5bb-a908-4d64-bced-06495168bcd6"
        },
        "item": {
          "id": "2abce7c1-aee4-4a13-8366-918b6391a445",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3664da6c-c43f-41c9-82e2-c35812a8e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16014109-1375-46a4-b3c0-668465d3df9f",
        "cursor": {
          "ref": "d1612270-a418-4fe5-b5c1-43dfcb503230",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6ba57791-18ef-4125-a8d3-c2a0d0b3840a"
        },
        "item": {
          "id": "16014109-1375-46a4-b3c0-668465d3df9f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ab2ac74-f156-4623-8289-e26551754ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7a8759-ce65-4ef7-ac3d-9479d172ad9f",
        "cursor": {
          "ref": "d25c11b2-7631-4b4c-9392-6f909c9527de",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2967a3d-5b17-4924-8246-798dd8ee07e9"
        },
        "item": {
          "id": "ef7a8759-ce65-4ef7-ac3d-9479d172ad9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ae540db-6a34-488a-bf5f-26d1a5894b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523ad89f-c1db-4e8d-9c05-d6c589b8134d",
        "cursor": {
          "ref": "4eab46f5-2e50-4ecf-b7d0-4afa069153c2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c466ea1d-3f7b-42c1-a46c-300ee0da8bb9"
        },
        "item": {
          "id": "523ad89f-c1db-4e8d-9c05-d6c589b8134d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dd6ce890-3e44-4133-90b2-3cb56db3656b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e1c95-05c4-4ab1-8c8d-0bc44906e6c0",
        "cursor": {
          "ref": "a25c3ed6-c069-4327-88b4-c8bc1990264d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea5f01a7-63a1-4816-aabd-da29d3678aa3"
        },
        "item": {
          "id": "145e1c95-05c4-4ab1-8c8d-0bc44906e6c0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ecc5233-09b0-45ec-a6d8-705365092f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0fe564-7e9e-4d45-8cd7-de360bfcbe00",
        "cursor": {
          "ref": "9aaa8e0d-23b7-49d7-84b0-397417ecbcfb",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c12f6d02-bbd5-48fd-8039-ae0941446e13"
        },
        "item": {
          "id": "8f0fe564-7e9e-4d45-8cd7-de360bfcbe00",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0afad910-9651-4a9a-8984-1f10970539c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bba3fca-8c1c-403f-a3af-ab5a816f33de",
        "cursor": {
          "ref": "aad6512e-ff66-4bfe-ac4d-6dd660e396ee",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c382100f-fea2-41c9-80b5-7eab72af81c3"
        },
        "item": {
          "id": "5bba3fca-8c1c-403f-a3af-ab5a816f33de",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b6f7b4e-b281-42a8-a683-decca371aea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb340d4-dcbf-4152-8e24-c36f5f5ce6ec",
        "cursor": {
          "ref": "f9cfd6ea-e4b7-4d38-bcc2-6c213cb800a5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a20dcaf5-d56e-40bd-95e0-73777857f31b"
        },
        "item": {
          "id": "7fb340d4-dcbf-4152-8e24-c36f5f5ce6ec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "251b3087-6903-4dc4-b3d8-23d810b4fc1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "66af3b9e-3649-4a64-bd60-36af334b66f5",
        "cursor": {
          "ref": "d158e6e7-913c-47d9-bb80-309cbfa7b21b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dd7fa997-83b2-474b-845b-bc1941e5d445"
        },
        "item": {
          "id": "66af3b9e-3649-4a64-bd60-36af334b66f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c44a831b-267d-49a9-9f75-de90bbcb5aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c202e256-cb01-4ffa-a6b8-3908c6505ce9",
        "cursor": {
          "ref": "1e37c33c-6722-43c3-be20-f2d4a3ab55a7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2436368b-6ae5-4e9b-a8f8-c59467b6453f"
        },
        "item": {
          "id": "c202e256-cb01-4ffa-a6b8-3908c6505ce9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7380640-9714-43e7-aaec-ad55efd738d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b45d7b6-fa3b-4d40-879d-4a92acd84159",
        "cursor": {
          "ref": "87406d86-589e-491b-b60a-4187df14596b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f83d72ba-9223-4e23-b0be-206d1b3b559d"
        },
        "item": {
          "id": "1b45d7b6-fa3b-4d40-879d-4a92acd84159",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29e8eea5-896f-44aa-9c6d-104f59aa8f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01209630-6693-4089-9974-7b959f1b2ae1",
        "cursor": {
          "ref": "04722c10-6162-4b45-8926-9fa584d6e7ea",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "45dc2f27-2319-47fc-8024-1d38a05286e6"
        },
        "item": {
          "id": "01209630-6693-4089-9974-7b959f1b2ae1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5dd0dafc-3b40-48d0-88e8-9616f1905ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c31736-5232-4ddc-872b-293ab6018fce",
        "cursor": {
          "ref": "46a544d2-6ac7-43ce-ab78-8a81e2687be4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6608270-1ef0-4d5b-a60c-20e75e986aee"
        },
        "item": {
          "id": "44c31736-5232-4ddc-872b-293ab6018fce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ea5f8936-b3bb-4736-94a0-cd11e169faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e325825-8236-441f-8c43-d5328c042e5e",
        "cursor": {
          "ref": "023cfce0-7c60-4b9c-bb24-1c18000fe30b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f46f57c-e8b8-4dc8-bcef-a6304e50ccb2"
        },
        "item": {
          "id": "9e325825-8236-441f-8c43-d5328c042e5e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3d27218a-550f-418e-811c-bb8bfcdb5e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51e7fac-cdf3-4cfb-a52b-486c81bde3c9",
        "cursor": {
          "ref": "3299a1a0-ed56-4313-924b-f66bb55a7dde",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2cc59fe8-91bd-4d5a-b1d4-a30d3f2d602d"
        },
        "item": {
          "id": "a51e7fac-cdf3-4cfb-a52b-486c81bde3c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6407b1a-8c7a-4c14-b482-1e57ab7643a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8514495c-ee6e-40a0-a0bd-9d388f8de3d1",
        "cursor": {
          "ref": "6171a66b-bd02-44e4-8824-3c9e56da2dce",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba8061e6-f60f-4562-a2d7-6b6a125fd0ed"
        },
        "item": {
          "id": "8514495c-ee6e-40a0-a0bd-9d388f8de3d1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "edf74081-3c05-4a24-9272-d19d75018271",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8a0553ad-cd59-40f5-ab3a-b352d3ee9d9f",
        "cursor": {
          "ref": "0459b471-9aef-4062-93dc-de463bd3887a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca7d35cd-df10-4f25-a9f9-525d54255a04"
        },
        "item": {
          "id": "8a0553ad-cd59-40f5-ab3a-b352d3ee9d9f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67ac0715-f8ea-4eb5-a58d-a787aacbcbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbea327b-4528-4430-aca5-bb55ac143889",
        "cursor": {
          "ref": "d3e49dfd-909e-40b4-987b-ea5a83603875",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2faa7754-0179-4cd1-9e0f-dbbf6619eb95"
        },
        "item": {
          "id": "fbea327b-4528-4430-aca5-bb55ac143889",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1d73e3eb-aeec-44a8-9dde-0f11f9fd27e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df4457c-e5b2-4c7d-a91e-dfa5793959b7",
        "cursor": {
          "ref": "8ebfa82d-b65f-4602-810c-5d85592e8285",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "248c431d-966f-4b3c-822c-6a3787a42846"
        },
        "item": {
          "id": "2df4457c-e5b2-4c7d-a91e-dfa5793959b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49ab8f5f-3bc4-4e20-a92e-a246a358bd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f0313-25f6-42c6-9f9d-8f21d26f06f8",
        "cursor": {
          "ref": "ae3fd546-9109-4649-b89f-8c723265942c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ef96bbac-5c93-4fb8-8454-23180edd4c89"
        },
        "item": {
          "id": "a64f0313-25f6-42c6-9f9d-8f21d26f06f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef54e56c-3ddc-46ed-963b-a770e2185c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dd8eba-aea2-4c3f-8cec-48d01804c524",
        "cursor": {
          "ref": "0097ab96-5823-4699-b86a-f8dd111bb08c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75bcb2e1-d416-454c-8d47-ded1605c0260"
        },
        "item": {
          "id": "52dd8eba-aea2-4c3f-8cec-48d01804c524",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a1e0537-f3f3-4bf9-abfc-eba4e5cf1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b956c295-6b0f-4353-8652-7abb309b2e58",
        "cursor": {
          "ref": "4a4b2e7e-492d-482c-9137-1c74e455ab41",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5606e9ad-bb44-49dd-93bc-4e0e708730cd"
        },
        "item": {
          "id": "b956c295-6b0f-4353-8652-7abb309b2e58",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27a6efba-5bf2-4e1d-8c12-0239d40d9aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef044e-6114-4f83-b689-2fba1697bdc3",
        "cursor": {
          "ref": "24424c9e-e1b8-4a9b-a61c-8db9f22708b6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc95d3a2-a968-4826-9358-85c32f875093"
        },
        "item": {
          "id": "2aef044e-6114-4f83-b689-2fba1697bdc3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83326fb3-af2d-4ae1-a354-65d4eac71c54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "61a5d4a1-f901-4297-b75a-007d86a0df35",
        "cursor": {
          "ref": "3d96a0fb-94cf-41c5-90ef-79e8d5e0b619",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cf9bd5fd-f7de-4029-9f8c-abe1393f532b"
        },
        "item": {
          "id": "61a5d4a1-f901-4297-b75a-007d86a0df35",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "73fb0163-5099-4953-b5c0-50c955225d03",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d773c3b0-67d4-468a-b24c-de8856290056",
        "cursor": {
          "ref": "81aa9b30-ada8-467f-b6b6-a05aad998abe",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c7dd09a2-740a-413d-83b0-7b8baf147147"
        },
        "item": {
          "id": "d773c3b0-67d4-468a-b24c-de8856290056",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70818db6-2e33-4f6c-ac98-976de87be197",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a4acf8db-485c-42ab-809b-9690a2cd4f42",
        "cursor": {
          "ref": "8b9ed689-4163-4ecd-9ca2-e5f6bc56eea7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3744598a-876d-436f-9272-f6ba552de4e7"
        },
        "item": {
          "id": "a4acf8db-485c-42ab-809b-9690a2cd4f42",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b38cd92d-81a5-41eb-98dd-ba7ff20b0c87",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e599600e-ddaf-42c6-a62b-919007fe7db5",
        "cursor": {
          "ref": "5fd0af1b-7c2d-4d07-ac58-8941521ce85e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1274e34-6c2a-4fde-b36b-7c23c0ca7986"
        },
        "item": {
          "id": "e599600e-ddaf-42c6-a62b-919007fe7db5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3c6a8956-6244-45ab-b02f-1c7b1156e723",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5d5e9f89-8872-4194-ac27-7f020f8ad6e0",
        "cursor": {
          "ref": "92ceb599-38c9-4e52-96a1-b826814f6821",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2bfd5851-488f-4a46-bde7-e2a32f07bda0"
        },
        "item": {
          "id": "5d5e9f89-8872-4194-ac27-7f020f8ad6e0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cf7e1df9-fb36-415c-8f5e-8c29bc7fae49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e162f5b6-5e32-494a-8a2f-c56d125778f3",
        "cursor": {
          "ref": "b18e60ff-84cd-4d3d-a485-8a74c8a44036",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4bc8ea6b-bd48-4060-a335-2d7286350b91"
        },
        "item": {
          "id": "e162f5b6-5e32-494a-8a2f-c56d125778f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbd68c8d-3d30-411d-a15c-94872923db5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975a14cf-3d3f-47d4-8041-f830861e4520",
        "cursor": {
          "ref": "a07c83ac-5e9b-40c0-adc6-2ec1ab086b09",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bf03d0a4-cd3e-4205-a46f-0084a7d6e30c"
        },
        "item": {
          "id": "975a14cf-3d3f-47d4-8041-f830861e4520",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9c5d357-6987-4f22-bd07-a7d06c2b99fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eab325-feed-4665-bfc7-36dad0a23c0e",
        "cursor": {
          "ref": "300a5a65-a1b4-41e2-96b4-dfb8c9e2f131",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "324b8459-e1b1-47b8-83a3-1b12223237e4"
        },
        "item": {
          "id": "74eab325-feed-4665-bfc7-36dad0a23c0e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d6f674b-e153-4ed0-9e4e-5992e94dfb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b3f56-dcff-44e4-b00f-261ab0b1bf18",
        "cursor": {
          "ref": "2744dc86-146c-4909-89fe-5546ad7eda83",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "081f078d-f22b-4339-8b2a-f698f7f2c8c4"
        },
        "item": {
          "id": "310b3f56-dcff-44e4-b00f-261ab0b1bf18",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bceceb8b-a18a-4883-871f-0403e422dee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25610d1-d032-4868-9d61-2da19eb2bed4",
        "cursor": {
          "ref": "9a4912fc-2a76-4591-8486-226a7f16b2da",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "59f34237-3c66-4ec4-8958-da7063636d94"
        },
        "item": {
          "id": "a25610d1-d032-4868-9d61-2da19eb2bed4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe46a3b9-65be-4353-a17b-1a9c14dc9889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab6d8c2-be06-4360-9a5f-504d3bec112b",
        "cursor": {
          "ref": "853aed1f-57b8-4307-9e5d-805c6ebecebf",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fde9f96d-fe8b-4985-a5e0-d4454f397326"
        },
        "item": {
          "id": "fab6d8c2-be06-4360-9a5f-504d3bec112b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3a84d294-edc1-4e1d-abab-d553bf374bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0315b1b5-f357-4b55-a8e2-29ef1f6d309c",
        "cursor": {
          "ref": "668896da-c81e-4c7e-a7d5-fe275d2054c3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2540073d-38d5-4dba-90c3-286b53e4b6c5"
        },
        "item": {
          "id": "0315b1b5-f357-4b55-a8e2-29ef1f6d309c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8669d818-e9e2-44d4-90ac-9d4bc9765e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a1ce5b-ca60-4179-927e-de3976d72790",
        "cursor": {
          "ref": "0f54b0c4-5e97-4a7d-978e-fd91ec78d969",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7de379e8-4c15-4d9b-b4a1-61d0939bdb0e"
        },
        "item": {
          "id": "76a1ce5b-ca60-4179-927e-de3976d72790",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d7a24170-e6da-411c-ada1-5635e5746f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136cfadf-7d45-4857-a61b-b89d95c67673",
        "cursor": {
          "ref": "fc5c3f6f-9d1e-4d5c-ab1e-3a09d213a6b3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "116f2b94-60be-4e0e-9778-bc5b63507e53"
        },
        "item": {
          "id": "136cfadf-7d45-4857-a61b-b89d95c67673",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "deeb309d-67b8-471d-9a74-d215e48e24ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d7b9d-6841-4109-886b-0e2d66f187de",
        "cursor": {
          "ref": "0f630933-fe47-49e5-b6df-26cc591aec66",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afe22234-25dc-4b00-9f2a-983e18a05f23"
        },
        "item": {
          "id": "b00d7b9d-6841-4109-886b-0e2d66f187de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "001a767a-82fc-4a63-adce-49df1d6b4737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeddac18-9f5b-4701-b2a5-ab43b6b81cbb",
        "cursor": {
          "ref": "6ee3765b-de65-4168-88cb-a859e7296663",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "467fb080-ad30-4393-8bb7-4d68ea23414e"
        },
        "item": {
          "id": "aeddac18-9f5b-4701-b2a5-ab43b6b81cbb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4869ddaf-038c-4b99-9e28-254fb2f70f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d25d237-ec45-4a48-bb07-aeb6356a2990",
        "cursor": {
          "ref": "9c282cf3-b436-4f74-b74d-cd41054215c7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "db2919cd-619b-4707-87fd-2fffbc35ce57"
        },
        "item": {
          "id": "5d25d237-ec45-4a48-bb07-aeb6356a2990",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "495e1100-ee3b-47ea-af28-ae1fd8db6211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f350aff-18b2-46f2-ac0a-9721ec1f4c30",
        "cursor": {
          "ref": "2a92b71d-a25b-4a86-bf59-2d26dd3139d4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "88f77544-a1ca-4cf4-9b6d-a1daeb0dc56d"
        },
        "item": {
          "id": "5f350aff-18b2-46f2-ac0a-9721ec1f4c30",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6831d5fa-a790-46d1-8f1f-b7fe51285f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2834f47f-32a4-4f5e-8af1-d2b7a7a5328f",
        "cursor": {
          "ref": "f72f6026-654c-450e-960d-f6bcf1fa59ed",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0456354c-75e2-4f7b-980b-004b483cec39"
        },
        "item": {
          "id": "2834f47f-32a4-4f5e-8af1-d2b7a7a5328f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "03452c46-4e7a-4401-9d31-7433c4250a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657546b5-0b33-4f39-b21d-07fea2366086",
        "cursor": {
          "ref": "2e4d4d41-a117-4caa-aa77-9fd3b3669e2c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a81c72f-f817-4c12-8992-a6214ef46bf3"
        },
        "item": {
          "id": "657546b5-0b33-4f39-b21d-07fea2366086",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "721742d5-674b-48fa-8ac2-ab44140aeb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99e4dd-0fab-401d-b040-dd69a947371a",
        "cursor": {
          "ref": "e1cf7cac-2527-434f-b8d9-8c8720652576",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5f0507fd-72ac-4ddc-b523-8a2ec9494b1a"
        },
        "item": {
          "id": "6e99e4dd-0fab-401d-b040-dd69a947371a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c1cb9558-d396-439f-9fb9-124f5d02aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc3aba-cf9d-4d64-83d2-83ad027910f8",
        "cursor": {
          "ref": "5499ee80-d7a7-49a7-8615-a21c78558fab",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "317c33a6-977f-4b7f-9cc0-831d2827d2b3"
        },
        "item": {
          "id": "0edc3aba-cf9d-4d64-83d2-83ad027910f8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "804b1221-4c98-4d14-8104-7dd303853858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088eb581-0762-4904-a15b-6466bebedfc6",
        "cursor": {
          "ref": "ba1f18a2-41b3-48be-8cd4-e55453835a4f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9715fa63-ead5-4e5a-886d-da06cff5dfe2"
        },
        "item": {
          "id": "088eb581-0762-4904-a15b-6466bebedfc6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "87104846-9938-405d-9f3b-1bf12a2d3af0",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "fbcba7d3-f667-498e-bdfa-b81dcc397f00",
        "cursor": {
          "ref": "2908ee2d-1d10-44b6-87e2-877922be3c8a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5642fe2e-20d7-4443-9558-d60c594aba5f"
        },
        "item": {
          "id": "fbcba7d3-f667-498e-bdfa-b81dcc397f00",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5724c5b4-a796-459b-a1fd-afefbeffb48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e03c0-8832-405e-98ed-50a865aed645",
        "cursor": {
          "ref": "8de464a0-0e45-4712-a09a-226376a54f06",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5ffd9d4-921c-4ac1-97e0-bc38175a5332"
        },
        "item": {
          "id": "630e03c0-8832-405e-98ed-50a865aed645",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e795918f-bf28-4bc7-b004-a562ddf58d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a74b427-a0a1-41b2-bb03-05f900ee4b00",
        "cursor": {
          "ref": "393f839e-6da2-464d-a9e9-1a3dca3cb0e9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "67d2e45a-adba-4232-95c7-55ecb4e1b969"
        },
        "item": {
          "id": "1a74b427-a0a1-41b2-bb03-05f900ee4b00",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fbdd1983-7e76-4180-b704-01c5059db470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b6aae-8c8a-4c65-93f6-0833d9f3f57c",
        "cursor": {
          "ref": "fc76a0bf-b940-48e5-b398-b6740ea53e84",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a9daf38-9f2a-4be5-91f3-98f1c6d9238e"
        },
        "item": {
          "id": "dd0b6aae-8c8a-4c65-93f6-0833d9f3f57c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "997a7080-943a-4482-81e3-4e5f24cb7446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c640fe2a-acfb-468c-8b58-f0733a78a944",
        "cursor": {
          "ref": "edc27a20-13b9-48c3-b360-527c1bab1b0b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "79eb9514-5086-43c9-8efa-2e7e5e38c1ca"
        },
        "item": {
          "id": "c640fe2a-acfb-468c-8b58-f0733a78a944",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "52c2b39b-a44f-4464-b821-6020c20ea3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162ddead-1fa9-4bce-8184-635365ceae4e",
        "cursor": {
          "ref": "1820705d-3bc0-4645-a4d9-648d69b78c2d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d59679c0-a1f7-4e2a-b92b-82afe2326952"
        },
        "item": {
          "id": "162ddead-1fa9-4bce-8184-635365ceae4e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a861175c-2cf4-4cc1-ae55-15d52debb10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1607edc-7da7-447e-970b-f7efa105af9b",
        "cursor": {
          "ref": "a448327a-7637-4f51-a81a-f401c0e0c70e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "665e0e5a-1757-4869-80b1-18c5fc30b749"
        },
        "item": {
          "id": "c1607edc-7da7-447e-970b-f7efa105af9b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ee94349b-54aa-4fac-96c5-64da7346ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad10c84-d648-49bc-976b-68eb4bf70d41",
        "cursor": {
          "ref": "c5b2005b-269e-4d2e-9866-23864b6d2ed8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dc3555a5-38db-485d-a1ea-e361e465d0d2"
        },
        "item": {
          "id": "1ad10c84-d648-49bc-976b-68eb4bf70d41",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dfd8d453-0bbe-45d3-b1ef-ebac1cc20c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e84b43-6cda-4710-aa1f-b69ac0102bec",
        "cursor": {
          "ref": "5923dd3f-ce37-4009-b999-2971e701d920",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a03fd78-00ae-495e-a6b6-ce135d5a2dd7"
        },
        "item": {
          "id": "61e84b43-6cda-4710-aa1f-b69ac0102bec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b48f9944-cd6d-4043-82c8-e7a615ba6b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0e2c86-1da1-48f1-adce-413a6b1a45a2",
        "cursor": {
          "ref": "42004deb-e74d-4fea-a398-f07c3a9bd378",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "91a0f509-9a35-48d0-b053-286182b46dbe"
        },
        "item": {
          "id": "4a0e2c86-1da1-48f1-adce-413a6b1a45a2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72d31359-30df-4bc7-904c-282bdf5382b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e68011d-dcc4-4d91-896d-3bc7f616e4f6",
        "cursor": {
          "ref": "29174466-51de-40a5-85d5-4aa6bb97b51a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "11aff1e3-32a1-4963-bf31-d7dd0a7c5ce6"
        },
        "item": {
          "id": "3e68011d-dcc4-4d91-896d-3bc7f616e4f6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "388eb735-fdf8-4564-a4f7-bd60571fd492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf898b2-7f5c-43f6-95e3-c30e8c92449d",
        "cursor": {
          "ref": "78e5d823-cdfe-4fb7-a65f-ab461e3a9fcd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0e765200-f2c2-460e-8ce5-90b2ffb339bd"
        },
        "item": {
          "id": "ddf898b2-7f5c-43f6-95e3-c30e8c92449d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7f5e2f26-c84e-4550-b536-e4c71f4229ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cffecca-5f36-48d0-98fd-a88c6bd2d1c5",
        "cursor": {
          "ref": "1106c5d7-f397-4097-b0ba-03de8a4cf609",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c4f20bda-3a11-4d71-bc39-a79648169ea4"
        },
        "item": {
          "id": "4cffecca-5f36-48d0-98fd-a88c6bd2d1c5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5010231f-5708-470f-9041-935c8a3abcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28596232-0033-4517-8144-fd439c9c6d7c",
        "cursor": {
          "ref": "8ff11dc8-578c-431c-90d9-43c0387d693d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3c463dd7-2dba-4fb3-9778-23117acb3f93"
        },
        "item": {
          "id": "28596232-0033-4517-8144-fd439c9c6d7c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ea4143ba-e8a3-442c-baee-ca60f8f24c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a6392-e3e9-4dfd-94d6-8add7cba2d40",
        "cursor": {
          "ref": "6b754354-2ca5-4024-affc-d5c432344519",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9d2aebc5-aa5a-4798-bdaf-90260d29f9f9"
        },
        "item": {
          "id": "ea5a6392-e3e9-4dfd-94d6-8add7cba2d40",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99f3b48c-8588-42fc-9e03-bdd752fcd9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d688a2-7337-4461-aca9-c1c992ca9565",
        "cursor": {
          "ref": "2fd2dbd1-4a76-47b6-8d16-cccf4793d7e4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b4c22708-6181-46d7-ab40-dc5996bff283"
        },
        "item": {
          "id": "02d688a2-7337-4461-aca9-c1c992ca9565",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "39d5504c-6a68-42ae-83f7-558a62985279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d2868a-d7be-4950-9375-192ffacb58a4",
        "cursor": {
          "ref": "810b974b-6f52-4371-9378-44080ea50e1e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cd57f95c-9bf9-43c7-91d5-abf8345662a1"
        },
        "item": {
          "id": "09d2868a-d7be-4950-9375-192ffacb58a4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "66476a92-7fae-4880-bdb4-09442fe025e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1217eb66-8511-494e-830d-c6d06a96fb77",
        "cursor": {
          "ref": "9b3aa446-13da-4f6f-8085-697186d3466a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "860c07e3-05b0-4596-88a3-2e01a6102e3a"
        },
        "item": {
          "id": "1217eb66-8511-494e-830d-c6d06a96fb77",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6b2abc88-ab38-4bde-84b3-e589c46f5053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2adf379-b7a7-4952-b052-e2a1a93ac6f1",
        "cursor": {
          "ref": "d3829e4c-4989-4e70-8cd3-7b23541a5974",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "560baba3-4f18-4a9a-8b99-d52638af23f0"
        },
        "item": {
          "id": "b2adf379-b7a7-4952-b052-e2a1a93ac6f1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fb7af956-7059-4ba9-a3c0-6facd387b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20998c-c52c-40b9-8474-22eac3c271dc",
        "cursor": {
          "ref": "16ac1c22-24f7-4a82-8bb4-0798fc9c9919",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1822ee62-caea-4c6b-82bb-ab6358fee100"
        },
        "item": {
          "id": "9d20998c-c52c-40b9-8474-22eac3c271dc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c4411bde-ef7d-4a81-96b1-1ca0dc6354b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6277c29c-6abb-441f-9017-192ea377f3c6",
        "cursor": {
          "ref": "f4ebd95b-2556-4037-896d-3d63888fa353",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98fb9378-87a9-4dfa-87b2-890f361d4565"
        },
        "item": {
          "id": "6277c29c-6abb-441f-9017-192ea377f3c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1ce26c31-8936-4f63-8213-d50e2d5c0338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decaeb57-1a4a-4020-aa54-42ab8c51f0e9",
        "cursor": {
          "ref": "9ca336f7-9398-4e8f-a76f-ba23bbd47049",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "17ba3e22-45e9-4b36-9512-33aa35554e87"
        },
        "item": {
          "id": "decaeb57-1a4a-4020-aa54-42ab8c51f0e9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fe2e56c7-010b-46fb-adc6-f501e01f6ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713c7b63-188e-468f-b974-514db5b93df1",
        "cursor": {
          "ref": "e7cd2631-6c75-46af-af7d-c1e68d5265c7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "98fe38a4-3d32-4a8b-99a5-bbc0fa5d25f6"
        },
        "item": {
          "id": "713c7b63-188e-468f-b974-514db5b93df1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a0905757-c268-4bb9-845f-f09e1d652235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3dc820-59ba-41c5-927a-bc12ee0bf820",
        "cursor": {
          "ref": "7e8bcd51-f07e-4f3f-9909-44b87977a760",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aa709b05-0476-4c04-8539-315ee34c757a"
        },
        "item": {
          "id": "2f3dc820-59ba-41c5-927a-bc12ee0bf820",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "51a11894-ecb2-42ee-8e39-63727a553fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3699516d-1c59-46d8-8aa1-e1140635032d",
        "cursor": {
          "ref": "140f9131-f859-4900-9095-2d44c1734842",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3b4f91de-7ea4-4763-8e90-f548496def00"
        },
        "item": {
          "id": "3699516d-1c59-46d8-8aa1-e1140635032d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "11642366-f58c-40c1-a813-c88764bdbb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21889b1a-2997-4f2d-9f0b-35da59f87e6c",
        "cursor": {
          "ref": "778b49b2-b595-410c-96ac-71b7dd5fe85a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "114c5dba-1c49-46dc-9f80-a8c238a8beb4"
        },
        "item": {
          "id": "21889b1a-2997-4f2d-9f0b-35da59f87e6c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6500eb6-477c-42e6-85c9-34d47079eb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbbfd43-6081-4b66-8af5-51933ce67f52",
        "cursor": {
          "ref": "5ec9856a-b349-4b9e-9e9c-e59863759071",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a0214f3a-33f4-4753-a6d0-93c5dd8bd720"
        },
        "item": {
          "id": "5bbbfd43-6081-4b66-8af5-51933ce67f52",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8692424a-9822-4bae-84f8-6e3f72451438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de51e1-fd6f-4b38-8d6d-09f72037b9b6",
        "cursor": {
          "ref": "0c970919-6cea-49d5-857d-3d8d771de724",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f67ff381-7023-4749-869a-4cba6b842cbe"
        },
        "item": {
          "id": "a4de51e1-fd6f-4b38-8d6d-09f72037b9b6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a8ab13f-6562-4497-a6a3-7010ffd15798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c803e2b1-fcd8-4a7f-9a42-426049c55755",
        "cursor": {
          "ref": "14942ca8-895d-4b52-a329-de89da286e37",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e0b88e50-9d39-4f1e-87fd-05417f29c27f"
        },
        "item": {
          "id": "c803e2b1-fcd8-4a7f-9a42-426049c55755",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a8366ef6-73e1-4863-85d8-33ce2b731846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf31403-a58d-430b-810d-11bdc9ea6899",
        "cursor": {
          "ref": "74d7050e-ab1e-41c2-9bc8-b4243f101e5b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b8517ea-df56-4e8c-a66b-073e96699f53"
        },
        "item": {
          "id": "3cf31403-a58d-430b-810d-11bdc9ea6899",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a0f4eda9-b2e1-44dd-9ad7-a535ec04ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5d1336-c8e4-4a00-b795-637814455b7e",
        "cursor": {
          "ref": "65e1f0d8-f5bc-442e-a757-682e992b16b6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7f1501ed-d491-4b5e-84dc-963f9a784f35"
        },
        "item": {
          "id": "df5d1336-c8e4-4a00-b795-637814455b7e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fc45b0e1-0ec9-4e9d-8492-c609a702cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81de5838-4852-4045-ad1f-0f777f53a095",
        "cursor": {
          "ref": "908cec86-5a99-410f-a3f1-9e8f68987f14",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64d6493e-f78e-41b3-8969-7957ed4bc42f"
        },
        "item": {
          "id": "81de5838-4852-4045-ad1f-0f777f53a095",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "293f07e9-a232-49af-ae51-875b11461d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0894fb-f4ae-455d-a1b6-5bf71037657a",
        "cursor": {
          "ref": "27c0c50a-c2c2-4202-be7b-33423e53a2bb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c18192ca-77ab-4d2e-ab4f-7810488d2639"
        },
        "item": {
          "id": "2b0894fb-f4ae-455d-a1b6-5bf71037657a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "41d6231c-293b-4d28-ade4-3623e981e8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a075434f-7618-4df2-a61a-07dc10b7eee3",
        "cursor": {
          "ref": "8a8626bb-407c-47eb-a11c-6b411760b0d9",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4515f1e6-a524-4e09-b3f7-a1e29707b01d"
        },
        "item": {
          "id": "a075434f-7618-4df2-a61a-07dc10b7eee3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b508a87a-511c-45fa-8682-f8e7bd085ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c631821-a7d4-4a63-b7f5-730124fb78a1",
        "cursor": {
          "ref": "3920f94b-1a34-4e32-aee6-ece4808355c1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8b2b043f-5269-408a-ac1c-b8b7362cf158"
        },
        "item": {
          "id": "8c631821-a7d4-4a63-b7f5-730124fb78a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eb5328bf-ff05-480f-aed8-466217538aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be0d2ef-76d1-48fe-836a-8c47419d0be4",
        "cursor": {
          "ref": "1fe0103a-0fa8-424f-be24-2c8ee03d7c62",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9a96ce1b-83e9-4481-a6c6-ec3199d8d022"
        },
        "item": {
          "id": "8be0d2ef-76d1-48fe-836a-8c47419d0be4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4783b7ec-52b4-4333-a703-816c7e509674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972cccad-7199-4c0b-8a30-220f18c02113",
        "cursor": {
          "ref": "38a4a479-2398-4fa4-8890-fff9e5a1fd1c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6a552d07-3039-4a7f-920e-a5c14ff4585a"
        },
        "item": {
          "id": "972cccad-7199-4c0b-8a30-220f18c02113",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "18f776c9-854b-448e-b7a1-5d435e99c704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febc5d26-ba0d-49db-981f-20b987ef8d10",
        "cursor": {
          "ref": "8207e16e-b99d-4d33-953e-8a309b138f0b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "850122ac-181f-4996-a236-8e1a77df199d"
        },
        "item": {
          "id": "febc5d26-ba0d-49db-981f-20b987ef8d10",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f9b75cc-842f-42b8-a9ac-8bd5794d32bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40865440-1dba-415d-92e2-185a5072138d",
        "cursor": {
          "ref": "fc888b28-6ea6-411a-922d-489cde1bf019",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1e7fa9d5-6839-47ee-81fb-d88df6c8dec2"
        },
        "item": {
          "id": "40865440-1dba-415d-92e2-185a5072138d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da5572d5-655d-434e-a43a-2a702a81d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c056d6c0-49e0-45f3-b7d0-af9532ec1f20",
        "cursor": {
          "ref": "6cda2839-fb68-4384-9d0c-bb7ca41ca759",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ea14f2eb-3f16-4e5a-9b28-26b70c6429de"
        },
        "item": {
          "id": "c056d6c0-49e0-45f3-b7d0-af9532ec1f20",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "89cdbf3b-3333-4306-bd25-dc1969b9412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b877ac8e-a35d-4a10-9ae1-017cb48cafdb",
        "cursor": {
          "ref": "0f90dacf-3ee0-447a-9031-ade5fb0eed64",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3ad6a5b1-6536-4552-a5d5-ae6198dce873"
        },
        "item": {
          "id": "b877ac8e-a35d-4a10-9ae1-017cb48cafdb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed627c21-f05a-4fe0-8b7d-cae208210591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f966b-00cd-46e0-8642-e376085d4857",
        "cursor": {
          "ref": "599c1c8b-f9ed-408c-95eb-adba1276dbc6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54139ec4-d32e-4799-85c9-f18b1f794afa"
        },
        "item": {
          "id": "e27f966b-00cd-46e0-8642-e376085d4857",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "26da433e-7da9-4120-ae96-df8968251b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ce402d-792c-4ee8-9abe-6ebf9e02b123",
        "cursor": {
          "ref": "b0d4a5c0-8b5b-422d-9c77-9fdf89204785",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ac2c0f47-a5e4-46f8-aac5-690e36d2ce07"
        },
        "item": {
          "id": "19ce402d-792c-4ee8-9abe-6ebf9e02b123",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "888a0a90-5d3c-460f-bde2-ec0370b78f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d287016f-253f-4c34-b63d-993f0298d83e",
        "cursor": {
          "ref": "1a6c460e-bf91-482b-a889-9138bfdc4ab9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "22697d08-024d-4c45-ad32-d86091518e25"
        },
        "item": {
          "id": "d287016f-253f-4c34-b63d-993f0298d83e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "472f883d-3cc5-4ec1-b36d-f091edd3c1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d437b3-2212-462f-851a-43b645ff5e7c",
        "cursor": {
          "ref": "e6d393e4-2f27-4030-8ee3-94117bc45315",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0a1199b8-0c93-4cb5-9995-44e6b3f65b79"
        },
        "item": {
          "id": "b9d437b3-2212-462f-851a-43b645ff5e7c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c12d3bd7-3c36-4286-b00a-8c99cf787eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66098ecb-c38c-4e05-9379-bac1f5f4fad0",
        "cursor": {
          "ref": "ee8c6a14-fb6f-47fa-b291-c6ce5fd18102",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "740f597b-2b64-4272-a281-a84fb3051982"
        },
        "item": {
          "id": "66098ecb-c38c-4e05-9379-bac1f5f4fad0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3709573d-b373-441d-b5cd-771e6420b08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a45a4a-0cfa-4e0a-8845-e088f8e4daac",
        "cursor": {
          "ref": "df1c4a30-f7d4-4b57-9f45-ed31d11128fc",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e8b767a-43db-4f22-95a1-070e6f20bc37"
        },
        "item": {
          "id": "31a45a4a-0cfa-4e0a-8845-e088f8e4daac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8828b970-c6a7-4fa6-a82c-bef444cb6fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cacb726-0f25-4f1a-a171-2a82ee694b0a",
        "cursor": {
          "ref": "431d1376-d3d6-4699-863c-ce49369850a8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "91616a8f-e922-46e4-8cda-38e249467b32"
        },
        "item": {
          "id": "4cacb726-0f25-4f1a-a171-2a82ee694b0a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c3db15a9-6943-4f81-8ef0-679e9698ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebbcd6e-2918-4e01-bd0f-55e72e9d4568",
        "cursor": {
          "ref": "655ac38c-8109-47fe-b0e3-229700fe19eb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d070fe23-dbd1-47b1-8a23-8716dca1994f"
        },
        "item": {
          "id": "aebbcd6e-2918-4e01-bd0f-55e72e9d4568",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ba61822-be19-4695-8e07-7b7f7bb65613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dc3919-f8de-422e-95d7-0ca4375c567d",
        "cursor": {
          "ref": "40b72fe8-e22b-4be6-91ce-abac3ad769f4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6617a766-f5b3-4124-bf3f-d8994fc23c25"
        },
        "item": {
          "id": "b8dc3919-f8de-422e-95d7-0ca4375c567d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9d0cae5c-3c28-4c42-bc59-f33b8d6ce7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2915b182-ab3a-4e57-bd76-d8a145e8495d",
        "cursor": {
          "ref": "9486f9f1-10dc-4a40-bdd5-225f92732962",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "18823432-7131-48e2-b34d-9c5f8dce4355"
        },
        "item": {
          "id": "2915b182-ab3a-4e57-bd76-d8a145e8495d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c03cadb-9bd1-4f83-a856-fce232baacd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8f2f80-e3b1-4b75-a826-189acfc52b83",
        "cursor": {
          "ref": "d3830747-2bf4-49af-a8ba-cf58a5f00e13",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8a388a71-a42c-41d0-ab05-43b550e82189"
        },
        "item": {
          "id": "9e8f2f80-e3b1-4b75-a826-189acfc52b83",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "002451ac-ec2d-416f-8c8d-f9155761e635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a511611d-5ce0-4f68-aa50-7111ae942220",
        "cursor": {
          "ref": "403fcd70-a5c5-4047-af3c-07204c49ec9d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "001065f3-15ab-4f99-a551-e4e6c9fe5f48"
        },
        "item": {
          "id": "a511611d-5ce0-4f68-aa50-7111ae942220",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b684796-c4ae-419e-9399-9097eeb0f9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5285caf-83f6-4ec9-b550-feb26413e250",
        "cursor": {
          "ref": "630b05f8-4667-4edd-b29f-1a7dfedbbbce",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f62c658-5aae-4981-83c5-46a42e680c0b"
        },
        "item": {
          "id": "f5285caf-83f6-4ec9-b550-feb26413e250",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b5f6abb2-0372-49ea-86b1-49e952739908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b97c89-1975-4bbd-aabd-0fb7dd64ab8a",
        "cursor": {
          "ref": "ff0c694b-b342-42eb-a0a4-b1c9b4f2195a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "505c1845-6319-4ea1-87dc-ef6f0097c6ac"
        },
        "item": {
          "id": "04b97c89-1975-4bbd-aabd-0fb7dd64ab8a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a8f9f04c-7ac9-49e0-b962-1557bdfcfd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450b202-c5d9-4c5b-8dbc-f1d7c4f54b05",
        "cursor": {
          "ref": "b11eb93f-e090-410d-bc50-72e91cb3d013",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "23a3798a-2716-4ba2-948a-21b39a60f887"
        },
        "item": {
          "id": "a450b202-c5d9-4c5b-8dbc-f1d7c4f54b05",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "28ab485d-feb5-4715-89a8-40393d1e10d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1a6f4-81d2-435c-ad67-a77572bbdb5b",
        "cursor": {
          "ref": "485de393-6144-47bc-9b3d-8241e6c9bdd7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ec0dc452-d4db-4ac2-9ad8-548d2c118eec"
        },
        "item": {
          "id": "e5b1a6f4-81d2-435c-ad67-a77572bbdb5b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e0ce61cf-7f38-42d8-ae8c-71f9bf3915e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306dd58f-ccc5-46b2-b570-753235163d40",
        "cursor": {
          "ref": "a913c38b-1355-46b9-80b2-5fdbb54255a6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3ed2102-b541-4512-b434-62d4d58188f8"
        },
        "item": {
          "id": "306dd58f-ccc5-46b2-b570-753235163d40",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a5d296f-edf0-4991-8f56-2bc3cd37cde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4709a5-adf7-43b7-b4ae-e8040ede627a",
        "cursor": {
          "ref": "821a1240-ceef-481a-8a23-ea42ab0f10bb",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c8e9bd2-95c1-4c18-be79-351b809af54b"
        },
        "item": {
          "id": "1e4709a5-adf7-43b7-b4ae-e8040ede627a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "385aff0b-aadb-4e1a-9990-c0fb57cd8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9a5c02-30a7-43bf-8ab8-a96824eaad91",
        "cursor": {
          "ref": "67c0823d-4997-4893-aaac-6f113992c05a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c7835dc-2b67-48bc-87af-b06285f5b6b2"
        },
        "item": {
          "id": "1c9a5c02-30a7-43bf-8ab8-a96824eaad91",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "852bce0f-e95c-41c8-91e0-4294992852a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b1df6a-ad36-4a76-9333-13a86d6ff53a",
        "cursor": {
          "ref": "026359fa-68d7-4208-ae4c-a26a1542af6c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6242f745-3aa3-493c-bee4-d5ea343c5cc4"
        },
        "item": {
          "id": "35b1df6a-ad36-4a76-9333-13a86d6ff53a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e44de8c6-aba0-4fe7-99bd-352f1947e297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe738694-8474-4f50-abdc-713797545198",
        "cursor": {
          "ref": "0ab5c8ea-ddef-40a3-af67-a9aaa31ee4ba",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "651e62e6-c0e7-4ef0-8be5-7d6cb8345c5e"
        },
        "item": {
          "id": "fe738694-8474-4f50-abdc-713797545198",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "69da3532-e494-41cd-9bbc-e6aaaa5e2afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2766c454-6017-4038-844a-6df3b03dcb5a",
        "cursor": {
          "ref": "91c00a1f-7258-4c2c-8aea-8069d5afaaa6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8c895f77-f9eb-436c-94c0-841e5ef59631"
        },
        "item": {
          "id": "2766c454-6017-4038-844a-6df3b03dcb5a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "809a9b1f-f923-40fc-9a67-eea1bc92a092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c78b0-c6e9-43a2-89ef-97cb4bd11dec",
        "cursor": {
          "ref": "94665ca6-0bc0-4b0f-ac3d-854b5a0ffea5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "619a3f04-2a23-46ce-8cb0-0ef6485bfa5c"
        },
        "item": {
          "id": "945c78b0-c6e9-43a2-89ef-97cb4bd11dec",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e483fff8-e57c-4035-9252-1b9c936f8610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea936f13-e99f-45c6-84ce-eed33d174600",
        "cursor": {
          "ref": "9c90f44c-d9a0-4b69-977f-fea8abadac69",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0bdc39b7-a681-4b93-b8c8-5a557ef2f692"
        },
        "item": {
          "id": "ea936f13-e99f-45c6-84ce-eed33d174600",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f6cf1f34-13f7-4bc3-ac26-de01d5ef1049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f7f57e-7f09-4b76-afcd-4836bc7a1ee1",
        "cursor": {
          "ref": "d522974b-bacc-4b22-9c20-8a5a7279beec",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3a3f8e4a-8929-4c0a-b330-7cc19726e635"
        },
        "item": {
          "id": "f2f7f57e-7f09-4b76-afcd-4836bc7a1ee1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f19c0621-5e03-4d89-bfc7-f316d6a90405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e58687-40c7-4da5-92a0-59440b34d557",
        "cursor": {
          "ref": "8062d9fb-d11a-44d9-a015-243bdf4f062c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6fb3179f-7e5b-4add-a6f5-01d49a16822d"
        },
        "item": {
          "id": "95e58687-40c7-4da5-92a0-59440b34d557",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e702346c-e87a-461a-97e3-5fff09bc61b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd955659-8e4a-4155-b99f-109138240d43",
        "cursor": {
          "ref": "81daf931-26f0-4537-975f-fbd916e52aea",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d7983311-1eb5-4604-bbc4-51505667ba0e"
        },
        "item": {
          "id": "dd955659-8e4a-4155-b99f-109138240d43",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "14bf0314-caa9-40f7-9892-3506bb9ac46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80bc80c-94af-4c07-8e25-3b0339ddac64",
        "cursor": {
          "ref": "574db072-4f2c-41e2-90ad-2292b7b71d30",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70913924-ff56-4fd7-9eed-801b96181e86"
        },
        "item": {
          "id": "e80bc80c-94af-4c07-8e25-3b0339ddac64",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "79d63e61-2ff2-4d71-b02f-a2b673486d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531a525d-9ea1-4d93-a93f-00f05b747afc",
        "cursor": {
          "ref": "a16b0b08-6e6f-43c4-b730-c55854dd84b2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "139cadc3-6411-4197-a89e-3aa68380ff86"
        },
        "item": {
          "id": "531a525d-9ea1-4d93-a93f-00f05b747afc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "69a3c2bc-5c34-4b4a-be35-187da0228530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bda697-8e5b-49dd-81e2-2fa9278242ef",
        "cursor": {
          "ref": "d3c0adc1-e34e-4914-857f-c63e890b417f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "82199211-849e-4aef-a677-675437c67cef"
        },
        "item": {
          "id": "47bda697-8e5b-49dd-81e2-2fa9278242ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "96e433b3-1121-497f-8108-e598b8e1274a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd101a5-4c09-4ae9-bbb2-047f1751b53a",
        "cursor": {
          "ref": "4703fa6c-4555-4e87-aa89-e3d920f1aaa8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6e625070-f190-4453-9321-4142e35b0b45"
        },
        "item": {
          "id": "cdd101a5-4c09-4ae9-bbb2-047f1751b53a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "307b6e56-0575-4e06-85e6-47a5b3d9b0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49257dae-b971-42e0-ae51-95500c683610",
        "cursor": {
          "ref": "c94a6264-015d-456f-9cb1-46acf8b60ee3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90edfcac-6c56-4a69-ae39-389a638cbba4"
        },
        "item": {
          "id": "49257dae-b971-42e0-ae51-95500c683610",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d6c3d20f-4558-4638-9575-2ba6d7790c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b27cc1f-8e74-4939-bd85-d6f64e4adbd9",
        "cursor": {
          "ref": "876d503b-305c-4202-9d78-2538774b29a1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fa1b1058-a58f-42b4-80f9-51118c308134"
        },
        "item": {
          "id": "4b27cc1f-8e74-4939-bd85-d6f64e4adbd9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73147a91-69ea-4170-9b65-1f2e00dbc114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f7c8d-6fa1-4853-963c-6cf41a41f171",
        "cursor": {
          "ref": "3a1a79a9-9251-453c-875e-d7267c264c76",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23407941-d0a4-4890-b9f5-bd870f5ce9c7"
        },
        "item": {
          "id": "8e7f7c8d-6fa1-4853-963c-6cf41a41f171",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89b94108-13bd-404c-a2da-8e83e43ba49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11d1ba-089e-4523-91a1-93597ce188a8",
        "cursor": {
          "ref": "bcdd4365-1b92-45ae-b229-7461468ca85b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8272db50-1c25-4c48-a4e2-79eb138fa341"
        },
        "item": {
          "id": "9c11d1ba-089e-4523-91a1-93597ce188a8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40943646-bb92-4f22-af2b-58ce6ce36883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c81c53-3a59-432f-aea6-71e3aa13af38",
        "cursor": {
          "ref": "859ccdcb-29c6-4e96-abc3-ce3bc478a246",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "86c98b1a-7397-499d-84a3-80842a1c38d2"
        },
        "item": {
          "id": "20c81c53-3a59-432f-aea6-71e3aa13af38",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b2016702-b23b-43cb-a6e7-b744ffcb4415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21b3d0e-5288-41dd-80bb-53135efd265d",
        "cursor": {
          "ref": "dd1e3047-81a2-4184-8825-e5602ddd3284",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bd2d3bb6-dc25-47f3-a7ea-eae564b71d12"
        },
        "item": {
          "id": "a21b3d0e-5288-41dd-80bb-53135efd265d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "80db7ecc-2606-4329-8b99-a9b198899666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebde7032-a01c-4a1f-aef8-0baca5de7209",
        "cursor": {
          "ref": "443e6a4b-ea3b-4f30-bb23-26bfc31c8ae4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "47f012c4-e81c-4c23-9448-46a9beed6bd5"
        },
        "item": {
          "id": "ebde7032-a01c-4a1f-aef8-0baca5de7209",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b9444712-93ee-4342-b2a3-e7b0833149c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db57c51-b2b4-48b5-ab90-01d77181dc17",
        "cursor": {
          "ref": "412ccc77-436f-4f85-a9be-b90d3fa9f7f1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26ecb0ed-0abe-4b7c-9a53-834ed2f0fc38"
        },
        "item": {
          "id": "3db57c51-b2b4-48b5-ab90-01d77181dc17",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1782f28d-2a08-466c-a3ff-8d82377f14fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e2d5c3-03ff-47f6-9bc6-8c152395d4d2",
        "cursor": {
          "ref": "892ce4c8-7939-4f45-9852-0b869448dd4e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa6348ad-cce1-42e9-a432-d9130bfb0597"
        },
        "item": {
          "id": "47e2d5c3-03ff-47f6-9bc6-8c152395d4d2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d3b422c-cdb0-47b4-bd89-794af621ca33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edeeea7-9c82-4168-8e3a-f1113371c15e",
        "cursor": {
          "ref": "3a6bc7a3-daa7-4dc4-b34a-907aa94690c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6019bfe-e057-4e2c-b68e-31a371c3a81f"
        },
        "item": {
          "id": "3edeeea7-9c82-4168-8e3a-f1113371c15e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c382beb7-acc3-4028-9338-005018a84fe3",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "296cf77e-bf57-472b-8c71-e5ac20a04b2e",
        "cursor": {
          "ref": "9e4cadf6-4fd8-4c7d-99b1-775dafa7e7af",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3ef96709-e3b4-4184-a12d-b984e9f6efc8"
        },
        "item": {
          "id": "296cf77e-bf57-472b-8c71-e5ac20a04b2e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9b5d2d76-54d3-4ec7-b19a-fa51bfd42927",
          "status": "OK",
          "code": 200,
          "responseTime": 2139,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b6086c-b616-4bb7-aec0-a578beb01953",
        "cursor": {
          "ref": "84d5c83b-25ed-434c-8f3a-df9863aea9f7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0cb5ed4a-e8de-4909-94dd-aa01effeec55"
        },
        "item": {
          "id": "00b6086c-b616-4bb7-aec0-a578beb01953",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "83cbaf7b-597b-47a6-8ff2-da71f70278c3",
          "status": "OK",
          "code": 200,
          "responseTime": 2593,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6de4c8-267c-48f3-87d8-cf9b959d670f",
        "cursor": {
          "ref": "5b707d7a-2fe6-4bb9-9dd4-0b1984904e6d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17cddbb9-a754-4719-bbaf-506805f40759"
        },
        "item": {
          "id": "cc6de4c8-267c-48f3-87d8-cf9b959d670f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f83e1d2-b011-47ed-9e4d-7249640a8f64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6de4c8-267c-48f3-87d8-cf9b959d670f",
        "cursor": {
          "ref": "5b707d7a-2fe6-4bb9-9dd4-0b1984904e6d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17cddbb9-a754-4719-bbaf-506805f40759"
        },
        "item": {
          "id": "cc6de4c8-267c-48f3-87d8-cf9b959d670f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f83e1d2-b011-47ed-9e4d-7249640a8f64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a295c9-0125-4001-a914-a4599c6fd622",
        "cursor": {
          "ref": "1a738b9b-d696-4f77-a608-ff23aed93497",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f80d69b7-121f-4a9b-8777-7f6ed8d79174"
        },
        "item": {
          "id": "c5a295c9-0125-4001-a914-a4599c6fd622",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "93d481be-379b-46cf-b285-879dfd5a9450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1735f04c-6e35-44af-96dc-97893e1ec829",
        "cursor": {
          "ref": "10b97667-895c-415a-9f59-e47a0c9a3798",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "55f13dd2-c616-411b-a3ff-529eabd14288"
        },
        "item": {
          "id": "1735f04c-6e35-44af-96dc-97893e1ec829",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1bc693a8-6a00-4950-a1a6-a23a24131a81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}